<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:57:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8304825] MacOS metal pipeline - window isn&apos;t painted if created during display sleep</title>
                <link>https://bugs.openjdk.org/browse/JDK-8304825</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The test program supplied here can be used to demonstrate that with the&lt;br/&gt;
2D metal pipeline a window is created whilst the application is in display sleep&lt;br/&gt;
then the window is never painted, no matter what you do after returning from sleep.&lt;br/&gt;
&lt;br/&gt;
It was reported as a JDK 19 issue on macOS 13 (JDK 19 is&lt;br/&gt;
the release in which metal was turned on by default) but I reproduced&lt;br/&gt;
on macOS 12.6 with JDK 18 by specifying -Dsun.java2d.metal=True&lt;br/&gt;
It passes (repaint happens) if you use OpenGL on both of these releases.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
import java.awt.FlowLayout;&lt;br/&gt;
import java.awt.Toolkit;&lt;br/&gt;
import javax.swing.JFrame;&lt;br/&gt;
import javax.swing.JLabel;&lt;br/&gt;
import javax.swing.SwingUtilities;&lt;br/&gt;
import javax.swing.Timer;&lt;br/&gt;
&lt;br/&gt;
public class TestRenderStop {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MyFrame fr;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public TestRenderStop() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JFrame m = new MyFrame(&amp;quot;Test Render Stop&amp;quot;, &amp;quot;Enter display sleep [control-shift-Eject] now and wait until you hear the beep before typing Enter to resume&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m.setBounds(400, 400, 800, 400);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m.setVisible(true);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Timer t = new Timer(10000, e -&amp;gt; showFrame());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t.setRepeats(false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t.start();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private void showFrame() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fr = new MyFrame(&amp;quot;Test Frame&amp;quot;, &amp;quot;This is a label&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fr.setBounds(500, 550, 400, 70);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fr.setVisible(true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Toolkit.getDefaultToolkit().beep();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;class MyFrame extends JFrame {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MyFrame(String title, String message) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setTitle(title);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setLayout(new FlowLayout());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add(new JLabel(message));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SwingUtilities.invokeLater(TestRenderStop::new);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5097005">JDK-8304825</key>
            <summary>MacOS metal pipeline - window isn&apos;t painted if created during display sleep</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aghaisas">Ajit Ghaisas</assignee>
                                    <reporter username="prr">Philip Race</reporter>
                        <labels>
                            <label>macos</label>
                            <label>metal</label>
                            <label>noreg-hard</label>
                            <label>sn_141</label>
                    </labels>
                <created>Thu, 23 Mar 2023 10:03:51 -0700</created>
                <updated>Mon, 17 Jul 2023 13:39:43 -0700</updated>
                            <resolved>Sun, 9 Apr 2023 21:54:48 -0700</resolved>
                                    <version>17</version>
                    <version>18</version>
                    <version>19</version>
                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14596687" author="kcr" created="Mon, 17 Jul 2023 12:01:13 -0700"  >[~alans] Can you file a new bug, linking as &amp;quot;relates to&amp;quot; this one?</comment>
                            <comment id="14596660" author="alans" created="Mon, 17 Jul 2023 10:27:43 -0700"  >I believe I have discovered a problem with this solution, besides the problem that the code does not check for errors reported by CV functions. The problem is that CVDisplayLinkCreateWithActiveCGDisplays fails if there are no active displays, and there is apparently a race condition between the screen wakeup notification and the update to the list of active displays that can produce this outcome.&lt;br/&gt;
&lt;br/&gt;
The following code has been helpful (although there should be a retry limit):&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CVReturn r = CVDisplayLinkCreateWithActiveCGDisplays(&amp;amp;displayLink);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (r == kCVReturnInvalidArgument) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// There are no active displays&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[self performSelectorOnMainThread:@selector(createDisplayLink) withObject:nil waitUntilDone:NO];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</comment>
                            <comment id="14572643" author="dukebot" created="Sun, 9 Apr 2023 21:54:47 -0700"  >Changeset: 969a6b9f&lt;br/&gt;
Author:    Ajit Ghaisas &amp;lt;&lt;a href=&apos;mailto:aghaisas@openjdk.org&apos;&gt;aghaisas@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-10 04:52:35 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/969a6b9fd7f7afc60250309f3ada205c1473cf8e&quot;&gt;https://git.openjdk.org/jdk/commit/969a6b9fd7f7afc60250309f3ada205c1473cf8e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14572275" author="roboduke" created="Thu, 6 Apr 2023 07:22:25 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13375&quot;&gt;https://git.openjdk.org/jdk/pull/13375&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-06 14:16:46 +0000</comment>
                            <comment id="14570439" author="roboduke" created="Wed, 29 Mar 2023 07:48:57 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13230&quot;&gt;https://git.openjdk.org/jdk/pull/13230&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-29 14:39:12 +0000</comment>
                            <comment id="14570437" author="avu" created="Wed, 29 Mar 2023 07:43:43 -0700"  >[~aghaisas] Here is my solution: &lt;a href=&quot;https://github.com/openjdk/jdk/pull/13230&quot;&gt;https://github.com/openjdk/jdk/pull/13230&lt;/a&gt;</comment>
                            <comment id="14570113" author="avu" created="Tue, 28 Mar 2023 10:22:38 -0700"  >Yes, I&amp;#39;ll send the PR after some adoption to the fresh OpenJDK sources. My approach resolves the issue because it creates CVDisplayLink using another CG API CVDisplayLinkCreateWithCGDisplay it also provides the correct refresh rate in case of two monitors with different frame rates. It does not rely on active displays as it currently happens in the current code that uses CVDisplayLinkCreateWithActiveCGDisplays. Actually, the simple hack to resolve this particular issue is to replace this call with CVDisplayLinkCreateWithCGDisplay(CGMainDisplayID(), &amp;amp;displayLink)</comment>
                            <comment id="14570009" author="aghaisas" created="Tue, 28 Mar 2023 03:34:07 -0700"  >The test program in this bug fails without recreating the CVDisplayLink. It does not help if I try to avoid recreating CVDisplayLink with a stop/start sequence on existing CVDisplayLink.&lt;br/&gt;
I will be interested in knowing how have you addressed this without recreating the CVDisplayLink on screen sleep/wake up events?&lt;br/&gt;
If possible, please send out a PR and we can review/discuss it there.&lt;br/&gt;
</comment>
                            <comment id="14570003" author="avu" created="Tue, 28 Mar 2023 03:11:49 -0700"  >My solution is also related to CVDisplayLink, but I changed our architecture a bit and moved from the approach of one DisplayLink per layer to one DisplayLink per device (MTLContext). So, you don&amp;#39;t need to recreate the link all the time. It helped to resolve some other update problems in fullscreen mode. In the current approach, we use multiple links per layers and they all try to update their windows in parallel. It doesn&amp;#39;t have much sense now because we have only one rendering queue. </comment>
                            <comment id="14569985" author="aghaisas" created="Tue, 28 Mar 2023 02:33:27 -0700"  >[~avu], Thanks for reaching out on this issue.&lt;br/&gt;
I have developed a probable solution that involves recreating the CVDisplayLink instance inside MTLLayer on screen sleep/wakeup notification. It seems to work perfectly. I am currently testing it further. I will send out the PR for review in a day or two.&lt;br/&gt;
&lt;br/&gt;
Do you have a solution that does not involve recreation of CVDisplayLink instance?</comment>
                            <comment id="14569981" author="avu" created="Tue, 28 Mar 2023 02:10:31 -0700"  >@aghaisas I&amp;#39;ve reproduced this issue too with OpenJDK, but it looks like we&amp;#39;ve fixed it in our JBR fork. I can look at it if you&amp;#39;d like.</comment>
                            <comment id="14569293" author="aghaisas" created="Fri, 24 Mar 2023 02:27:15 -0700"  >I am able to reproduce this issue on MacBook Pro 16&amp;quot; (macOS Ventura 13.2.1).&lt;br/&gt;
&lt;br/&gt;
A quick look at the log indicates that the rendering of characters of the test frame is alright - but final blit from back buffer to window is not honoured.&lt;br/&gt;
Need to investigate further. WIP.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5105638">JDK-8312198</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30vcr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="197"><![CDATA[2d]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>