<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:49:19 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8327423] C2 remove_main_post_loops: check if main-loop belongs to pre-loop, not just assert</title>
                <link>https://bugs.openjdk.org/browse/JDK-8327423</link>
                <project id="10100" key="JDK">JDK</project>
                    <description># A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (workspace/open/src/hotspot/share/opto/loopTransform.cpp:3304), pid=58340, tid=40195&lt;br/&gt;
#  assert(locate_pre_from_main(main_head) == cl) failed: bad main loop&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0+13) (fastdebug build 23-ea+13-927)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+13-927, compiled mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, bsd-aarch64)&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00000001200ca410):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=24835, stack(0x000000016f170000,0x000000016f373000) (2060K)]&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:302   73    b        Test::mainTest (540 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000016f170000,0x000000016f373000],  sp=0x000000016f36e970,  free space=2042k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0x112b6bc]  VMError::report_and_die(int, char const*, char const*, char*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x564  (loopTransform.cpp:3304)&lt;br/&gt;
V  [libjvm.dylib+0x112bedc]  VMError::report_and_die(Thread*, unsigned int, unsigned char*, void*, void*)+0x0&lt;br/&gt;
V  [libjvm.dylib+0x55bee4]  print_error_for_unit_test(char const*, char const*, char*)+0x0&lt;br/&gt;
V  [libjvm.dylib+0xc72bb0]  IdealLoopTree::remove_main_post_loops(CountedLoopNode*, PhaseIdealLoop*)+0x120&lt;br/&gt;
V  [libjvm.dylib+0xc7300c]  IdealLoopTree::do_remove_empty_loop(PhaseIdealLoop*)+0x134&lt;br/&gt;
V  [libjvm.dylib+0xc74510]  IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;amp;)+0x84&lt;br/&gt;
V  [libjvm.dylib+0xc74ccc]  IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;amp;)+0xec&lt;br/&gt;
V  [libjvm.dylib+0xc74d98]  IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;amp;)+0x1b8&lt;br/&gt;
V  [libjvm.dylib+0xc74d98]  IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;amp;)+0x1b8&lt;br/&gt;
V  [libjvm.dylib+0xc950e0]  PhaseIdealLoop::build_and_optimize()+0xaa8&lt;br/&gt;
V  [libjvm.dylib+0x4d5158]  PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x184&lt;br/&gt;
V  [libjvm.dylib+0x4c7b30]  PhaseIdealLoop::optimize(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x6c&lt;br/&gt;
V  [libjvm.dylib+0x4c7fa8]  Compile::optimize_loops(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x68&lt;br/&gt;
V  [libjvm.dylib+0x4c13a0]  Compile::Optimize()+0x98c&lt;br/&gt;
V  [libjvm.dylib+0x4bf810]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1234&lt;br/&gt;
V  [libjvm.dylib+0x388fd0]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x1e0&lt;br/&gt;
V  [libjvm.dylib+0x4ddc50]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x854&lt;br/&gt;
V  [libjvm.dylib+0x4dd094]  CompileBroker::compiler_thread_loop()+0x348&lt;br/&gt;
V  [libjvm.dylib+0x8b37d8]  JavaThread::thread_main_inner()+0x1dc&lt;br/&gt;
V  [libjvm.dylib+0x106f57c]  Thread::call_run()+0xf4&lt;br/&gt;
V  [libjvm.dylib+0xe325a0]  thread_native_entry(Thread*)+0x138&lt;br/&gt;
C  [libsystem_pthread.dylib+0x7240]  _pthread_start+0x94&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5123353">JDK-8327423</key>
            <summary>C2 remove_main_post_loops: check if main-loop belongs to pre-loop, not just assert</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>c2</label>
                            <label>javafuzzer</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>tier8</label>
                    </labels>
                <created>Tue, 5 Mar 2024 19:22:53 -0800</created>
                <updated>Thu, 13 Jun 2024 02:54:07 -0700</updated>
                            <resolved>Thu, 14 Mar 2024 00:13:21 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14681292" author="roboduke" created="Thu, 13 Jun 2024 00:58:09 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.25-oracle. It is recognized as clean backport and tier 1-4 have passed.</comment>
                            <comment id="14680869" author="roboduke" created="Wed, 12 Jun 2024 03:53:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/701&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/701&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-12 10:48:06 +0000</comment>
                            <comment id="14657320" author="dukebot" created="Thu, 14 Mar 2024 00:13:19 -0700"  >Changeset: fadc4b19&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-14 07:12:16 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/fadc4b197e927cfa1814fe6cb65ee04b3bd4b0c2&quot;&gt;https://git.openjdk.org/jdk/commit/fadc4b197e927cfa1814fe6cb65ee04b3bd4b0c2&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14656299" author="roboduke" created="Mon, 11 Mar 2024 09:42:15 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18200&quot;&gt;https://git.openjdk.org/jdk/pull/18200&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-11 15:56:38 +0000</comment>
                            <comment id="14655841" author="JIRAUSER19821" created="Fri, 8 Mar 2024 06:25:16 -0800"  >The assert was added in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8085832&quot; title=&quot;Optimize main and post loop out when pre loop is found empty&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8085832&quot;&gt;&lt;strike&gt;JDK-8085832&lt;/strike&gt;&lt;/a&gt;, by [~roland]. And in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297724&quot; title=&quot;Loop strip mining prevents some empty loops from being eliminated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297724&quot;&gt;&lt;strike&gt;JDK-8297724&lt;/strike&gt;&lt;/a&gt;, he made more empty loops be removed, so that probably just enabled this exact case here.&lt;br/&gt;
&lt;br/&gt;
Since the assert is from  &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8085832&quot; title=&quot;Optimize main and post loop out when pre loop is found empty&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8085832&quot;&gt;&lt;strike&gt;JDK-8085832&lt;/strike&gt;&lt;/a&gt;, this could be a JDK9 regression.&lt;br/&gt;
But so far we have only a reproducer that works since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297724&quot; title=&quot;Loop strip mining prevents some empty loops from being eliminated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297724&quot;&gt;&lt;strike&gt;JDK-8297724&lt;/strike&gt;&lt;/a&gt;, i.e. JDK21.</comment>
                            <comment id="14655839" author="JIRAUSER19821" created="Fri, 8 Mar 2024 06:22:17 -0800"  >I further simplified the regression test:&lt;br/&gt;
&lt;br/&gt;
public class Reduced {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int sink;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] strArr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;test(false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static void test(boolean flag) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int x = 8;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int j = 0; j &amp;lt; 100; j++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int k = 0; k &amp;lt; 100; k++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (flag) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x += k;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sink = 42;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (flag) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Analysis:&lt;br/&gt;
Through a series of unswitching, pre-main-post, and empty-loop-removal, we get to the CFG of &amp;quot;image1_CFG_before_assert.png&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
(rr) p _ltree_root-&amp;gt;dump()&lt;br/&gt;
Loop: N0/N0  has_sfpt&lt;br/&gt;
Loop: N425/N431  limit_check profile_predicated predicated counted [0,int),+1 (4 iters)  pre sfpts={ 429 }&lt;br/&gt;
Loop: N298/N301  profile_predicated predicated counted [0,int),+1 (4 iters)  pre&lt;br/&gt;
Loop: N200/N179  counted [int,100),+1 (2147483648 iters)  main sfpts={ 171 }&lt;br/&gt;
Loop: N398/N404  counted [int,100),+1 (4 iters)  post sfpts={ 402 }&lt;br/&gt;
&lt;br/&gt;
This is basically:&lt;br/&gt;
415 pre orange&lt;br/&gt;
298 pre PURPLE&lt;br/&gt;
200 main orange&lt;br/&gt;
398 post orange&lt;br/&gt;
&lt;br/&gt;
Then, we attempt to remove &amp;quot;298&amp;quot;, because it is empty.&lt;br/&gt;
As [~chagedorn] has described above:&lt;br/&gt;
&amp;quot;I&amp;#39;ve had a quick look and it looks like when trying to remove a pre-loop without a main loop, we find an unrelated main loop by using the IdealLoopTree::_next-&amp;gt;_head info. Afterward, we find its pre-loop which is a different pre-loop and the assertion fails.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
It seems that we assume in the code, that we can check the &amp;quot;_next-&amp;gt;_head&amp;quot;, and if:&lt;br/&gt;
1) it is a main-loop and&lt;br/&gt;
2) that main-loop still has a pre-loop&lt;br/&gt;
then the current pre-loop &amp;quot;cl&amp;quot; must be the pre-loop of that found main-loop &amp;quot;locate_pre_from_main(main_head)&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
But I don&amp;#39;t think this is generally guaranteed by &amp;quot;PhaseIdealLoop::build_loop_tree&amp;quot;.&lt;br/&gt;
I think the loop-tree is correct here, and this is how it was arrived at:&lt;br/&gt;
&amp;quot;415 CountedLoop&amp;quot; (pre orange) is visited, and its body traversed. &amp;quot;427 If&amp;quot; is traversed. Now the path splits.&lt;br/&gt;
If we first took the &amp;quot;428 IfFalse&amp;quot; path, then we would visit &amp;quot;200 CountedLoop&amp;quot; (main orange), and &amp;quot;398 CountedLoop&amp;quot; (post orange) first.&lt;br/&gt;
But we instead take &amp;quot;432 IfTrue&amp;quot; first, and hence visit &amp;quot;298 CountedLoop&amp;quot; (pre PURPLE) first.&lt;br/&gt;
&lt;br/&gt;
So depending on what turn we take at this &amp;quot;427 If&amp;quot;, we either get the order:&lt;br/&gt;
&lt;br/&gt;
415 pre orange&lt;br/&gt;
298 pre PURPLE&lt;br/&gt;
200 main orange&lt;br/&gt;
398 post orange&lt;br/&gt;
(the one we get, and assert with)&lt;br/&gt;
&lt;br/&gt;
OR&lt;br/&gt;
&lt;br/&gt;
415 pre orange&lt;br/&gt;
200 main orange&lt;br/&gt;
398 post orange&lt;br/&gt;
298 pre PURPLE&lt;br/&gt;
(assert woud not trigger, since we would have &amp;quot;_next == nullptr&amp;quot; and return)&lt;br/&gt;
&lt;br/&gt;
I think we have to convert the assert into a bailout-condition, i.e. simply return from &amp;quot;remove_main_post_loops&amp;quot; without removing any main/post loops.</comment>
                            <comment id="14655534" author="JIRAUSER19821" created="Thu, 7 Mar 2024 07:47:29 -0800"  >Also fails on my machine:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&apos;mailto:emanuel@emanuel-oracle&apos;&gt;emanuel@emanuel-oracle&lt;/a&gt;:/oracle-work/jdk-fork8/build/linux-x64-slowdebug/jdk/bin$ ../../../linux-x64-debug/jdk/bin/java -Xcomp -XX:CompileOnly=Reduced::* Reduced.java&lt;br/&gt;
CompileCommand: compileonly Reduced.* bool compileonly = true&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/oracle-work/jdk-fork8/open/src/hotspot/share/opto/loopTransform.cpp:3304), pid=193149, tid=193163&lt;br/&gt;
#  assert(locate_pre_from_main(main_head) == cl) failed: bad main loop&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0) (fastdebug build 23-internal-2024-03-05-1531402.emanuel...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-internal-2024-03-05-1531402.emanuel..., compiled mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x12843a8]  IdealLoopTree::remove_main_post_loops(CountedLoopNode*, PhaseIdealLoop*)+0x268&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /oracle-work/jdk-fork8/build/linux-x64-slowdebug/jdk/bin/core.193149)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /oracle-work/jdk-fork8/build/linux-x64-slowdebug/jdk/bin/hs_err_pid193149.log&lt;br/&gt;
#&lt;br/&gt;
# Compiler replay data is saved as:&lt;br/&gt;
# /oracle-work/jdk-fork8/build/linux-x64-slowdebug/jdk/bin/replay_pid193149.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#</comment>
                            <comment id="14655115" author="chagedorn" created="Wed, 6 Mar 2024 03:37:19 -0800"  >ILW = Assertion when trying to remove empty loop, single fuzzer test, possibly disable compilation of affected method = HLM = P3</comment>
                            <comment id="14655112" author="chagedorn" created="Wed, 6 Mar 2024 03:36:48 -0800"  >Attached reduced version Reduced.java:&lt;br/&gt;
$ java  -Xcomp -XX:CompileOnly=Reduced::* Reduced.java</comment>
                            <comment id="14655111" author="chagedorn" created="Wed, 6 Mar 2024 03:34:20 -0800"  >Starts to fail after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297724&quot; title=&quot;Loop strip mining prevents some empty loops from being eliminated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297724&quot;&gt;&lt;strike&gt;JDK-8297724&lt;/strike&gt;&lt;/a&gt; but I think that could have just revealed an existing issue. I&amp;#39;ve had a quick look and it looks like when trying to remove a pre-loop without a main loop, we find an unrelated main loop by using the IdealLoopTree::_next-&amp;gt;_head info. Afterward, we find its pre-loop which is a different pre-loop and the assertion fails.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131635">JDK-8334069</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131787">JDK-8334210</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5088433">JDK-8297724</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4785870">JDK-8085832</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108552" name="FuzzerUtils.java" size="13240" author="chagedorn" created="Wed, 6 Mar 2024 03:34:51 -0800"/>
                            <attachment id="108554" name="Reduced.java" size="497" author="chagedorn" created="Wed, 6 Mar 2024 03:34:58 -0800"/>
                            <attachment id="108553" name="Test.java" size="7471" author="chagedorn" created="Wed, 6 Mar 2024 03:34:55 -0800"/>
                            <attachment id="108555" name="hs_err_pid58340.log" size="89482" author="chagedorn" created="Wed, 6 Mar 2024 03:35:46 -0800"/>
                            <attachment id="108573" name="image1_CFG_before_assert.png" size="115349" author="epeter" created="Fri, 8 Mar 2024 06:07:31 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35axf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17352"><![CDATA[b15]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>