<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:06:55 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8332935] Crash:  assert(*lastPtr != 0) failed: Mismatched JNINativeInterface tables, check for new entries</title>
                <link>https://bugs.openjdk.org/browse/JDK-8332935</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test: serviceability/sa/ClhsdbJhisto.java	&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S14954/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/7a61988f-fa10-4eb7-a361-4e67d3c7fac2/runs/b79ea7ff-61e6-4a2b-8e07-0f9cd848e313/workspace/open/src/hotspot/share/prims/jniCheck.cpp:2300), pid=744529, tid=744531&lt;br/&gt;
#  assert(*lastPtr != 0) failed: Mismatched JNINativeInterface tables, check for new entries&lt;br/&gt;
#&lt;br/&gt;
# JRE version:  (23.0+25) (fastdebug build )&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+25-2026, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xfd365e]  jni_functions_check()+0x6e&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S14959/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/e0f78171-2fce-4be3-b9e0-a5003572c751/runs/7329f10c-4ae2-4b67-bfc0-988ebd7560e2/testoutput/test-support/jtreg_open_test_hotspot_jtreg_tier1/scratch/4/core.744529)&lt;br/&gt;
#&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: -Denv.class.path=/opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S14959/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/e0f78171-2fce-4be3-b9e0-a5003572c751/runs/7329f10c-4ae2-4b67-bfc0-988ebd7560e2/testoutput/test-support/jtreg_open_test_hotspot_jtreg_tier1/classes/1/serviceability/sa/ClhsdbJhisto.d:/opt/mach5/mesos/work_dir/jib-master/install/jdk-23+25-2026/src.full/open/test/hotspot/jtreg/serviceability/sa:/opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S14959/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/e0f78171-2fce-4be3-b9e0-a5003572c751/runs/7329f10c-4ae2-4b67-bfc0-988ebd7560e2/testoutput/test-support/jtreg_open_test_hotspot_jtreg_tier1/classes/1/test/lib:/opt/mach5/mesos/work_dir/jib-master/install/jdk-23+25-2026/src.full/open/test/lib:/opt/mach5/mesos/work_dir/jib-master/install/jtreg/7.3.1/1/bundles/jtreg-7.3.1+1.zip/jtreg/lib/jtreg.jar -Dapplication.home=/opt/mach5/mesos/work_dir/jib-master/install/jdk-23+25-2026/linux-x64-debug.jdk/jdk-23/fastdebug -Xms8m -XX:MaxRAMPercentage=4.16667 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/22/36/bundles/linux-x64/jdk-22_linux-x64_bin.tar.gz/jdk-22 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S14959/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/e0f78171-2fce-4be3-b9e0-a5003572c751/runs/7329f10c-4ae2-4b67-bfc0-988ebd7560e2/testoutput/test-support/jtreg_open_test_hotspot_jtreg_tier1/tmp -Xcheck:jni -Djdk.module.main=jdk.hotspot.agent jdk.hotspot.agent/sun.jvm.hotspot.SALauncher clhsdb --pid=744447&lt;br/&gt;
&lt;br/&gt;
Host: AMD EPYC 7J13 64-Core Processor, 12 cores, 23G, Oracle Linux Server release 8.9&lt;br/&gt;
Time: Fri May 24 22:37:02 2024 UTC elapsed time: 0.005108 seconds (0d 0h 0m 0s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread is native thread&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fc201cad000,0x00007fc201dae000],  sp=0x00007fc201dacbb0,  free space=1022k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xfd365e]  jni_functions_check()+0x6e  (jniCheck.cpp:2300)&lt;br/&gt;
V  [libjvm.so+0xea4500]  JavaThread::JavaThread()+0x2e0  (javaThread.cpp:508)&lt;br/&gt;
V  [libjvm.so+0x17d7e06]  Threads::create_vm(JavaVMInitArgs*, bool*)+0x236  (threads.cpp:527)&lt;br/&gt;
V  [libjvm.so+0xf8a004]  JNI_CreateJavaVM+0x54  (jni.cpp:3581)&lt;br/&gt;
C  [libjli.so+0x3ccf]  JavaMain+0x8f  (java.c:1550)&lt;br/&gt;
C  [libjli.so+0x7cb9]  ThreadJavaMain+0x9  (java_md.c:653)</description>
                <environment></environment>
        <key id="5130326">JDK-8332935</key>
            <summary>Crash:  assert(*lastPtr != 0) failed: Mismatched JNINativeInterface tables, check for new entries</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dholmes">David Holmes</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-request</label>
                            <label>jni</label>
                            <label>noreg-hard</label>
                            <label>tier4</label>
                    </labels>
                <created>Sun, 26 May 2024 18:05:31 -0700</created>
                <updated>Mon, 18 Nov 2024 14:50:01 -0800</updated>
                            <resolved>Sun, 2 Jun 2024 13:11:04 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14722371" author="roboduke" created="Thu, 14 Nov 2024 06:53:50 -0800"  >[jdk17u-fix-request] Approval Request from Antonio Vieiro&lt;br/&gt;
A clean backport that may avoid JVM crashes to somebody doing JNI development in 17 in the future.</comment>
                            <comment id="14722366" author="roboduke" created="Thu, 14 Nov 2024 06:33:55 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3041&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3041&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-14 14:26:11 +0000</comment>
                            <comment id="14680705" author="roboduke" created="Tue, 11 Jun 2024 19:01:26 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/696&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/696&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-12 01:56:20 +0000</comment>
                            <comment id="14680704" author="roboduke" created="Tue, 11 Jun 2024 18:59:04 -0700"  >[jdk21u-fix-request] Approval Request from Liang Mao&lt;br/&gt;
Clean backport of fixing mismatched JNINativeInterface tables. Risk is very low.</comment>
                            <comment id="14680703" author="roboduke" created="Tue, 11 Jun 2024 18:55:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/247&quot;&gt;https://git.openjdk.org/jdk22u/pull/247&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-12 01:50:22 +0000</comment>
                            <comment id="14680702" author="roboduke" created="Tue, 11 Jun 2024 18:53:36 -0700"  >[jdk22u-fix-request] Approval Request from Liang Mao&lt;br/&gt;
Clean backport of fixing mismatched JNINativeInterface tables. Risk is very low.</comment>
                            <comment id="14678020" author="dukebot" created="Sun, 2 Jun 2024 13:11:03 -0700"  >Changeset: 8338946a&lt;br/&gt;
Author:    David Holmes &amp;lt;&lt;a href=&apos;mailto:dholmes@openjdk.org&apos;&gt;dholmes@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-02 20:08:17 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/8338946a6d765eab9cd7a6cbc24c865a9cd355e7&quot;&gt;https://git.openjdk.org/jdk/commit/8338946a6d765eab9cd7a6cbc24c865a9cd355e7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14677645" author="roboduke" created="Thu, 30 May 2024 16:47:59 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19491&quot;&gt;https://git.openjdk.org/jdk/pull/19491&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-30 23:43:00 +0000</comment>
                            <comment id="14677562" author="dcubed" created="Thu, 30 May 2024 09:28:42 -0700"  >[~dholmes] - Very nice bit of sleuthing!</comment>
                            <comment id="14677366" author="dholmes" created="Wed, 29 May 2024 21:16:13 -0700"  >Edit: corrected description as the structs are placed in zero&amp;#39;d memory.&lt;br/&gt;
&lt;br/&gt;
Analysing the core file exposed the problem. We have two JNI function tables: one for the regular functions and one for the checked versions. These are stored as two instances of the same struct type and so have the same size and should have corresponding entries for each function. To try and detect the case where a new JNI function is added and the checked version was overlooked we have this code:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;unchecked_jni_NativeInterface = jni_functions_nocheck();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;int *lastPtr = (int *)((char *)&amp;amp;checked_jni_NativeInterface + \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sizeof(*unchecked_jni_NativeInterface) - sizeof(char *));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(*lastPtr != 0,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;Mismatched JNINativeInterface tables, check for new entries&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
where lastPtr is set to the final function entry in the checked table. As the two tables are the same size, and statically allocated, if we see a zero then it means the last entry was not explicitly initialized - i.e. we forgot to add it when adding the new function.&lt;br/&gt;
&lt;br/&gt;
The problem is we define lastPtr as an int* and we dereference it and check for zero. From the core file here is that last entry:&lt;br/&gt;
&lt;br/&gt;
(gdb) print checked_jni_IsVirtualThread&lt;br/&gt;
$24 = {jboolean (JNIEnv *, jobject)} 0x7fc200000000 &amp;lt;checked_jni_IsVirtualThread(JNIEnv*, jobject)&amp;gt;&lt;br/&gt;
&lt;br/&gt;
So by pure chance the lower 32-bits of the function address are zero and so the fact we access as an int means we only read those 32-bits and so the assertion fails. I was able to reproduce the failure by changing the last entry to:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;(jboolean (*)(JNIEnv*, jobject))(void*)((jlong)checked_jni_IsVirtualThread &amp;amp; 0xFFFFFFFF00000000)&lt;br/&gt;
</comment>
                            <comment id="14676983" author="dholmes" created="Tue, 28 May 2024 19:31:37 -0700"  >I checked the tables that the assertion is checking and they are both the same. So we did not fail the assertion for the obvious reason. If there were a mismatch then all the tests running with -Xcheck:jni would have failed. This seems to be a one-of-a-kind spurious failure. There must have been some kind of corruption.&lt;br/&gt;
&lt;br/&gt;
I note that the assertion failed during VM initialization</comment>
                            <comment id="14676892" author="mseledtsov" created="Tue, 28 May 2024 11:08:17 -0700"  >ILW = HLH = P2</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131887">JDK-8334292</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5144196">JDK-8344463</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139873">JDK-8340842</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36hab:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>