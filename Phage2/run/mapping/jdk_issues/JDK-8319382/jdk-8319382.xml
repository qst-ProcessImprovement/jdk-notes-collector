<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:07:30 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8319382] com/sun/jdi/JdwpAllowTest.java shows failures on AIX if prefixLen of mask is larger than 32 in IPv6 case</title>
                <link>https://bugs.openjdk.org/browse/JDK-8319382</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In parseAllowedMask in socketTransport.c, prefixLen of mask is compared with a maxValue (32 for IPv4, 128 otherwise).  This fails if it is larger than 32, because getaddrinfo seems to detect IPv4 family, if IPv6 address has set only some of the last 32 Bits. So we take the wrong maxValue.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Example:&lt;br/&gt;
images/jdk/bin/java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:0,allow=0:0:0:0:0:0:10:0/106&lt;br/&gt;
Error in allow option: &amp;#39;106&amp;#39;&lt;br/&gt;
ERROR: transport error 103: invalid netmask in allow option&lt;br/&gt;
ERROR: JDWP Transport dt_socket failed to initialize, TRANSPORT_INIT(510)&lt;br/&gt;
&lt;br/&gt;
Here is the final official statement from IBM regarding this issue:&lt;br/&gt;
================================================&lt;br/&gt;
&lt;br/&gt;
The way that our name resolution code determines if an IP address is IPv4 or IPv6 is based on two macros.&lt;br/&gt;
#define IS_IPV4ADDR6(a) \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(((a).s6_addr32[0] == 0) &amp;amp;&amp;amp; \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a).s6_addr32[1] == 0) &amp;amp;&amp;amp; \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a).s6_addr32[2] == 0xffff0000))&lt;br/&gt;
&lt;br/&gt;
#define IS_COMPATADDR6(a) \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(((a).s6_addr32[0] == 0) &amp;amp;&amp;amp; \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a).s6_addr32[1] == 0) &amp;amp;&amp;amp; \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a).s6_addr32[2] == 0) &amp;amp;&amp;amp; \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a).s6_addr32[3] &amp;gt; 1))&lt;br/&gt;
If the first eight bytes are zero and the next four bytes are 0xFFFF0000, it&amp;#39;s considered a mapped IPv4 address. If the first twelve bytes of the address are zero, and the last four bytes are greater than 1, the code considers the IP address to be an IPv4-compatible IPv6 address. In both cases, getaddrinfo returns an h_addrtype of AF_INET.&lt;br/&gt;
&lt;br/&gt;
I did some further research and found that this is the same behavior of the open source BIND code from the Internet Systems Consortium. Their macros are slightly different, but the functionality is the same.&lt;br/&gt;
&lt;br/&gt;
Per &lt;a href=&quot;https://users.isc.org/~each/doxygen/bind9/ipv6_8h-source.html:&quot;&gt;https://users.isc.org/~each/doxygen/bind9/ipv6_8h-source.html:&lt;/a&gt;&lt;br/&gt;
/*%&lt;br/&gt;
&amp;nbsp;* IPv4 compatible&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
#define IN6_IS_ADDR_V4COMPAT(a)         \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(((a)-&amp;gt;s6_addr32[0] == 0) &amp;amp;&amp;amp;    \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a)-&amp;gt;s6_addr32[1] == 0) &amp;amp;&amp;amp;    \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a)-&amp;gt;s6_addr32[2] == 0) &amp;amp;&amp;amp;    \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a)-&amp;gt;s6_addr32[3] != 0) &amp;amp;&amp;amp;    \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a)-&amp;gt;s6_addr32[3] != htonl(1)))&lt;br/&gt;
&lt;br/&gt;
/*%&lt;br/&gt;
&amp;nbsp;* Mapped&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
#define IN6_IS_ADDR_V4MAPPED(a)               \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(((a)-&amp;gt;s6_addr32[0] == 0) &amp;amp;&amp;amp;          \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a)-&amp;gt;s6_addr32[1] == 0) &amp;amp;&amp;amp;          \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((a)-&amp;gt;s6_addr32[2] == htonl(0x0000ffff)))&lt;br/&gt;
&lt;br/&gt;
As bizarre as this seems, AIX&amp;#39;s behavior regarding IPv4/IPv6 determination via getaddrinfo matches up with ISC&amp;#39;s code. (In fact, we get AIX&amp;#39;s name resolution code from ISC.) This means the code is working as designed.&lt;br/&gt;
&lt;br/&gt;
===============================&lt;br/&gt;
End of the official statement from IBM.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5113934">JDK-8319382</key>
            <summary>com/sun/jdi/JdwpAllowTest.java shows failures on AIX if prefixLen of mask is larger than 32 in IPv6 case</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jkern">Joachim Kern</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                    </labels>
                <created>Fri, 3 Nov 2023 06:15:12 -0700</created>
                <updated>Thu, 28 Mar 2024 10:53:34 -0700</updated>
                            <resolved>Wed, 17 Jan 2024 01:35:31 -0800</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>23</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14645277" author="goetz" created="Wed, 31 Jan 2024 00:06:30 -0800"  >[21u] &lt;br/&gt;
I would not rate this as &amp;quot;No risk&amp;quot; as this code goes productive. But the risk seems low.</comment>
                            <comment id="14644789" author="roboduke" created="Tue, 30 Jan 2024 04:25:43 -0800"  >[jdk21u-fix-request] Approval Request from JoKern65&lt;br/&gt;
Backport for AIX. No risk, clean backport.</comment>
                            <comment id="14644788" author="roboduke" created="Tue, 30 Jan 2024 04:23:46 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/228&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/228&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-30 12:19:39 +0000</comment>
                            <comment id="14643729" author="roboduke" created="Thu, 25 Jan 2024 04:29:50 -0800"  >[jdk22u-fix-request] Approval Request from JoKern65&lt;br/&gt;
No risk clean backport</comment>
                            <comment id="14643708" author="roboduke" created="Thu, 25 Jan 2024 02:34:30 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/29&quot;&gt;https://git.openjdk.org/jdk22u/pull/29&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-25 10:27:21 +0000</comment>
                            <comment id="14641070" author="dukebot" created="Wed, 17 Jan 2024 01:35:30 -0800"  >Changeset: 22642ff0&lt;br/&gt;
Author:    Joachim Kern &amp;lt;&lt;a href=&apos;mailto:jkern@openjdk.org&apos;&gt;jkern@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-01-17 09:34:09 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/22642ff0aac71eceb71f6a9eebb2988a9bd5f091&quot;&gt;https://git.openjdk.org/jdk/commit/22642ff0aac71eceb71f6a9eebb2988a9bd5f091&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14639517" author="roboduke" created="Thu, 11 Jan 2024 07:51:37 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17374&quot;&gt;https://git.openjdk.org/jdk/pull/17374&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-11 15:46:59 +0000</comment>
                            <comment id="14636558" author="mbaesken" created="Fri, 29 Dec 2023 03:00:53 -0800"  >It has been proposed to use inet_pton instead, this seems to work well on AIX too.</comment>
                            <comment id="14624918" author="roboduke" created="Wed, 8 Nov 2023 06:43:05 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16561&quot;&gt;https://git.openjdk.org/jdk/pull/16561&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-08 14:37:29 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5120220">JDK-8324852</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120461">JDK-8325048</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17024"><![CDATA[ppc]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="18900"><![CDATA[aix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33qdf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>