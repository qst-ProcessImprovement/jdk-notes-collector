<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:41:57 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8317007] Add bulk removal of dead nmethods during class unloading</title>
                <link>https://bugs.openjdk.org/browse/JDK-8317007</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Currently during class unloading dead nmethods are removed one by one as the nmethods are unloaded.&lt;br/&gt;
Since this unregistering is serial, it would be nice to have this operation done in parallel and in bulk to improve pause time performance.</description>
                <environment></environment>
        <key id="5111148">JDK-8317007</key>
            <summary>Add bulk removal of dead nmethods during class unloading</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tschatzl">Thomas Schatzl</assignee>
                                    <reporter username="tschatzl">Thomas Schatzl</reporter>
                        <labels>
                            <label>gc-g1</label>
                            <label>gc-g1-remset</label>
                            <label>gc-parallel</label>
                            <label>gc-pending-review</label>
                            <label>gc-serial</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>performance</label>
                    </labels>
                <created>Wed, 27 Sep 2023 00:26:46 -0700</created>
                <updated>Tue, 7 May 2024 01:24:08 -0700</updated>
                            <resolved>Mon, 18 Dec 2023 00:46:16 -0800</resolved>
                                    <version>22</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14670913" author="goetz" created="Sun, 5 May 2024 23:25:14 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.4-oracle.&lt;br/&gt;
Medium risk, a larger change in a central component. But well hung and no follow-up bugs. We should backport it nevertheless to close the class unloading performance gap as OracleJDK does.&lt;br/&gt;
Clean backport.&lt;br/&gt;
SAP nighlty testing passed.</comment>
                            <comment id="14670398" author="roboduke" created="Thu, 2 May 2024 04:35:26 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/548&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/548&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-02 11:29:12 +0000</comment>
                            <comment id="14634883" author="dukebot" created="Mon, 18 Dec 2023 00:46:15 -0800"  >Changeset: f5538195&lt;br/&gt;
Author:    Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-12-18 08:44:43 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f55381950266088cc0284754b16663675867ac87&quot;&gt;https://git.openjdk.org/jdk/commit/f55381950266088cc0284754b16663675867ac87&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14632383" author="tschatzl" created="Thu, 7 Dec 2023 05:31:00 -0800"  >Added two graphs showing Remark pause time before/after the change, and a breakdown of Remark Pause time showing Purge Unlinked NMethods and the new Unregister NMethod phases, with the ccstress test from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8315503&quot; title=&quot;G1: Code root scan causes long GC pauses due to imbalanced iteration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8315503&quot;&gt;&lt;strike&gt;JDK-8315503&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14628174" author="roboduke" created="Tue, 21 Nov 2023 08:24:14 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16767&quot;&gt;https://git.openjdk.org/jdk/pull/16767&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-21 16:14:42 +0000</comment>
                            <comment id="14626060" author="tschatzl" created="Tue, 14 Nov 2023 02:06:27 -0800"  >Also, for parallel gc, no parallelization attempt is made: the &amp;quot;scavengable nmethods&amp;quot; is a long linked list currently which is not amenable to parallelization. This needs extra work anyway. Still, doing the bulk operation, i.e. not going through the LL for every element to unregister but only once during class unloading should be much faster than before.</comment>
                            <comment id="14626057" author="tschatzl" created="Tue, 14 Nov 2023 02:03:26 -0800"  >Implementing for the STW collectors: this is not trivial for the concurrent collectors because the change would need to modify the time the CodeCache_lock would need to be held. I.e. the code would need to change from:&lt;br/&gt;
&lt;br/&gt;
for (all nmethods) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;lock CodeCache_lock&lt;br/&gt;
&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;unregister_nmethod&lt;br/&gt;
&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;unlock CodeCache_lock&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
to&lt;br/&gt;
&lt;br/&gt;
lock CodeCache_lock&lt;br/&gt;
for (all nmethods) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
}&lt;br/&gt;
bulk unregister nmethods&lt;br/&gt;
unlock CodeCache_lock&lt;br/&gt;
&lt;br/&gt;
which is different wrt to concurrent mutator/compiler activity.</comment>
                            <comment id="14614874" author="tschatzl" created="Thu, 28 Sep 2023 23:35:17 -0700"  >A reproducer showing fairly long Remark pauses is attached to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8315503&quot; title=&quot;G1: Code root scan causes long GC pauses due to imbalanced iteration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8315503&quot;&gt;&lt;strike&gt;JDK-8315503&lt;/strike&gt;&lt;/a&gt;.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5126120">JDK-8329618</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128843">JDK-8331768</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5114700">JDK-8320067</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="5109442">JDK-8315503</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5112056">JDK-8317809</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5121005">JDK-8326092</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="107608" name="CCStress Purge NMethod Unregistering breakdown 20231207.png" size="119343" author="tschatzl" created="Thu, 7 Dec 2023 05:30:03 -0800"/>
                            <attachment id="107609" name="CCStress Remark Pause time before after 20231207.png" size="77864" author="tschatzl" created="Thu, 7 Dec 2023 05:30:03 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i339m3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>