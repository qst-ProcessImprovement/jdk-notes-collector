<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:24:29 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299684] (bf) JNI direct buffer functions with large capacity behave unexpectedly</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299684</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Tested with JDK 17 and 19 on macOS and Linux.&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
JNI function NewDirectByteBuffer accepts a jlong argument for the capacity of the returned buffer.&lt;br/&gt;
However, If I pass a value larger than Integer.MAX_VALUE, it behaves unexpectedly, and the behavior is undocumented.&lt;br/&gt;
If I pass a value that will cast to a negative int, it will throw an IllegalArgumentException.&lt;br/&gt;
If I pass a value that will cast to a positive int, Both Java method ByteBuffer.capacity() and JNI function GetDirectBufferCapacity return a value that is not equal to the correct capacity.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Set ByteBufferTest.SIZE to 3_000_000_000L, compile and run the code; then set ByteBufferTest.SIZE to 5_000_000_000L, compile and run the code.&lt;br/&gt;
&lt;br/&gt;
ACTUAL -&lt;br/&gt;
If SIZE = 3_000_000_000L, it throws an IllegalArgumentException with the following stack trace:&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.IllegalArgumentException: capacity &amp;lt; 0: (-1294967296 &amp;lt; 0)&lt;br/&gt;
	at java.base/java.nio.Buffer.createCapacityException(Buffer.java:282)&lt;br/&gt;
	at java.base/java.nio.Buffer.&amp;lt;init&amp;gt;(Buffer.java:245)&lt;br/&gt;
	at java.base/java.nio.ByteBuffer.&amp;lt;init&amp;gt;(ByteBuffer.java:298)&lt;br/&gt;
	at java.base/java.nio.ByteBuffer.&amp;lt;init&amp;gt;(ByteBuffer.java:306)&lt;br/&gt;
	at java.base/java.nio.MappedByteBuffer.&amp;lt;init&amp;gt;(MappedByteBuffer.java:113)&lt;br/&gt;
	at java.base/java.nio.DirectByteBuffer.&amp;lt;init&amp;gt;(DirectByteBuffer.java:177)&lt;br/&gt;
	at ByteBufferTest.allocBigBuffer(Native Method)&lt;br/&gt;
	at ByteBufferTest.main(ByteBufferTest.java:11)&lt;br/&gt;
&lt;br/&gt;
If SIZE = 5_000_000_000L, it prints 705032704 twice, which is not expected.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
// --- ByteBufferTest.java ---&lt;br/&gt;
import java.nio.ByteBuffer;&lt;br/&gt;
&lt;br/&gt;
public class ByteBufferTest {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.loadLibrary(&amp;quot;bytebuffertest&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final long SIZE = 3_000_000_000L;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//private static final long SIZE = 5_000_000_000L;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var buf = allocBigBuffer(SIZE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(buf.capacity());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(getLongCapacity(buf));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// See ByteBufferTest.c for implementations.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static native ByteBuffer allocBigBuffer(long size);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static native long getLongCapacity(ByteBuffer buf);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
// --- ByteBufferTest.c ---&lt;br/&gt;
#include &amp;quot;ByteBufferTest.h&amp;quot;&lt;br/&gt;
#include &amp;lt;stdlib.h&amp;gt;&lt;br/&gt;
&lt;br/&gt;
// private static native ByteBuffer allocBigBuffer(long size)&lt;br/&gt;
JNIEXPORT jobject JNICALL Java_ByteBufferTest_allocBigBuffer(JNIEnv *env, jclass cls, jlong size)&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (*env)-&amp;gt;NewDirectByteBuffer(env, malloc(size), size);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
// private static native long getLongCapacity(ByteBuffer buf)&lt;br/&gt;
JNIEXPORT jlong JNICALL Java_ByteBufferTest_getLongCapacity(JNIEnv *env, jclass cls, jobject buf)&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (*env)-&amp;gt;GetDirectBufferCapacity(env, buf);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5090732">JDK-8299684</key>
            <summary>(bf) JNI direct buffer functions with large capacity behave unexpectedly</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bpb">Brian Burkhalter</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>dcsaw</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Wed, 4 Jan 2023 19:00:26 -0800</created>
                <updated>Fri, 21 Jul 2023 07:35:38 -0700</updated>
                            <resolved>Mon, 23 Jan 2023 09:16:47 -0800</resolved>
                                    <version>1.4.0</version>
                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>19</version>
                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14553547" author="dukebot" created="Mon, 23 Jan 2023 09:16:44 -0800"  >Changeset: a56598f5&lt;br/&gt;
Author:    Brian Burkhalter &amp;lt;&lt;a href=&apos;mailto:bpb@openjdk.org&apos;&gt;bpb@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-23 17:12:49 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a56598f5a534cc9223367e7faa8433ea38661db9&quot;&gt;https://git.openjdk.org/jdk/commit/a56598f5a534cc9223367e7faa8433ea38661db9&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14549159" author="tongwan" created="Thu, 5 Jan 2023 22:29:25 -0800"  >The observations on Ubuntu:&lt;br/&gt;
JDK 11: Failed, IllegalArgumentException thrown.&lt;br/&gt;
JDK 17: Failed.&lt;br/&gt;
JDK 19: Failed.&lt;br/&gt;
JDK 20ea+9: Failed.</comment>
                            <comment id="14549158" author="tongwan" created="Thu, 5 Jan 2023 22:10:41 -0800"  >Additional information from the submitter:&lt;br/&gt;
If you are using Linux, try the following commands:&lt;br/&gt;
&lt;br/&gt;
jdk_install_path=   # Set this variable to the installation path of your JDK.&lt;br/&gt;
javac -h . ByteBufferTest.java&lt;br/&gt;
gcc ByteBufferTest.c -I$jdk_install_path/include -I$jdk_install_path/include/linux -shared -o libbytebuffertest.so&lt;br/&gt;
java -Djava.library.path=. ByteBufferTest&lt;br/&gt;
&lt;br/&gt;
If you are using Fedora or RHEL-based Linux (RHEL, CentOS, Rocky, etc.), and OpenJDK 17 was installed by dnf/yum, set jdk_install_path to /usr/lib/jvm/java-17-openjdk&lt;br/&gt;
&lt;br/&gt;
If you are using Debian-based Linux (Debian, Ubuntu, Kali, etc.), and OpenJDK 17 was installed by apt, set jdk_install_path to /usr/lib/jvm/java-17-openjdk-amd64&lt;br/&gt;
&lt;br/&gt;
If you are using macOS, set jdk_install_path to /Library/Java/JavaVirtualMachines/openjdk.jdk/Contents/Home and replace the third line (gcc &#8230;) with:&lt;br/&gt;
clang ByteBufferTest.c -I$jdk_install_path/include -I$jdk_install_path/openjdk.jdk/Contents/Home/include/darwin -shared -o libbytebuffertest.dylib&lt;br/&gt;
&lt;br/&gt;
If gcc or clang cannot find jni.h or jni_md.h, set jdk_install_path to the correct installation path.&lt;br/&gt;
</comment>
                            <comment id="14549110" author="roboduke" created="Thu, 5 Jan 2023 14:34:30 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11873&quot;&gt;https://git.openjdk.org/jdk/pull/11873&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-05 22:25:19 +0000</comment>
                            <comment id="14549076" author="dholmes" created="Thu, 5 Jan 2023 13:04:56 -0800"  >If the Java code only takes an int capacity (why?) then we need to reject anything bigger than Integer.MAX_VALUE and throw OOME. I guess I&amp;#39;d rather see the Java code changed to take a long and have it deal with any inherent limitations.</comment>
                            <comment id="14549002" author="tongwan" created="Thu, 5 Jan 2023 09:05:49 -0800"  >Got Exception in thread &amp;quot;main&amp;quot; java.lang.UnsatisfiedLinkError: no bytebuffertest.so in java.library.path.  Requested more details from the submitter.</comment>
                            <comment id="14548882" author="alanb" created="Wed, 4 Jan 2023 23:24:44 -0800"  >It looks like jni_NewDirectByteBuffer casts/truncates the capacity to a jint before the upcall. It could be checked there, or we could change the private constructor to allow the parameter be a long and do the validation in Java.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5090872">JDK-8299759</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5092712">JDK-8301277</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5094842">JDK-8303073</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102211" name="ByteBufferTest.c" size="510" author="tongwan" created="Thu, 5 Jan 2023 09:16:24 -0800"/>
                            <attachment id="102212" name="ByteBufferTest.h" size="710" author="tongwan" created="Thu, 5 Jan 2023 09:16:24 -0800"/>
                            <attachment id="102213" name="ByteBufferTest.java" size="621" author="tongwan" created="Thu, 5 Jan 2023 09:16:24 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zsn7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17335"><![CDATA[b07]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="228"><![CDATA[java.nio]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>