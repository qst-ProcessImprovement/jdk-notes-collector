<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:34:10 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8316328] Test jdk/jfr/event/oldobject/TestSanityDefault.java times out for some heap sizes</title>
                <link>https://bugs.openjdk.org/browse/JDK-8316328</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Steps to reproduce:&lt;br/&gt;
&lt;br/&gt;
time docker run -m 90000m -v /home/ec2-user/path/:/path amazonlinux /bin/sh -c &amp;#39;cd /path/ws/openjdk/jdk &amp;amp;&amp;amp; /path/soft/jtreg/bin/jtreg -jdk:/path/ws/openjdk/jdk/build/linux-x86_64-server-release/images/jdk/ -vmoptions:&amp;quot;-ea -esa -XX:+UseShenandoahGC&amp;quot; /path/ws/openjdk/jdk/test/jdk/jdk/jfr/event/oldobject/TestSanityDefault.java&amp;#39;&lt;br/&gt;
Test results: error: 1&lt;br/&gt;
Error: Some tests failed or other problems occurred.&lt;br/&gt;
Report written to /path/ws/openjdk/jdk/JTreport/html/report.html&lt;br/&gt;
Results written to /path/ws/openjdk/jdk/JTwork&lt;br/&gt;
&lt;br/&gt;
real    2m7.349s&lt;br/&gt;
user    0m0.024s&lt;br/&gt;
sys     0m0.024s&lt;br/&gt;
&lt;br/&gt;
The test is passed if UseShenandoahGC is not passed:&lt;br/&gt;
time docker run -m 90000m -v /home/ec2-user/path/:/path amazonlinux /bin/sh -c &amp;#39;cd /path/ws/openjdk/jdk &amp;amp;&amp;amp; /path/soft/jtreg/bin/jtreg -jdk:/path/ws/openjdk/jdk/build/linux-x86_64-server-release/images/jdk/ -vmoptions:&amp;quot;-ea -esa&amp;quot; /path/ws/openjdk/jdk/test/jdk/jdk/jfr/event/oldobject/TestSanityDefault.java&amp;#39;&lt;br/&gt;
Test results: passed: 1&lt;br/&gt;
Report written to /path/ws/openjdk/jdk/JTreport/html/report.html&lt;br/&gt;
Results written to /path/ws/openjdk/jdk/JTwork&lt;br/&gt;
&lt;br/&gt;
real    0m7.225s&lt;br/&gt;
user    0m0.039s&lt;br/&gt;
sys     0m0.000s&lt;br/&gt;
&lt;br/&gt;
The test is also passed using UseShenandoahGC  if the memory limit is set to 10000m:&lt;br/&gt;
&lt;br/&gt;
time docker run -m 10000m -v /home/ec2-user/path/:/path amazonlinux /bin/sh -c &amp;#39;cd /path/ws/openjdk/jdk &amp;amp;&amp;amp; /v/soft/jtreg/bin/jtreg -jdk:/path/ws/openjdk/jdk/build/linux-x86_64-server-release/images/jdk/ -vmoptions:&amp;quot;-ea -esa -XX:+UseShenandoahGC&amp;quot; /path/ws/openjdk/jdk/test/jdk/jdk/jfr/event/oldobject/TestSanityDefault.java&amp;#39;&lt;br/&gt;
Test results: passed: 1&lt;br/&gt;
Report written to /path/ws/openjdk/jdk/JTreport/html/report.html&lt;br/&gt;
Results written to /path/ws/openjdk/jdk/JTwork&lt;br/&gt;
&lt;br/&gt;
real    0m7.149s&lt;br/&gt;
user    0m0.012s&lt;br/&gt;
sys     0m0.029s</description>
                <environment></environment>
        <key id="5110374">JDK-8316328</key>
            <summary>Test jdk/jfr/event/oldobject/TestSanityDefault.java times out for some heap sizes</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="serb">Sergey Bylokhov</assignee>
                                    <reporter username="serb">Sergey Bylokhov</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>gc-shenandoah</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>jdk8u-fix-request</label>
                            <label>jdk8u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Thu, 14 Sep 2023 19:46:05 -0700</created>
                <updated>Fri, 27 Jun 2025 14:26:08 -0700</updated>
                            <resolved>Thu, 23 May 2024 16:43:20 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14675862" author="serb" created="Thu, 23 May 2024 21:49:48 -0700"  >Fix request (22u 21u 17u 11u 8u)&lt;br/&gt;
&lt;br/&gt;
Clean backport. testbug, The fix for a possible hang of the test.&lt;br/&gt;
Review 22u: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/222&quot;&gt;https://git.openjdk.org/jdk22u/pull/222&lt;/a&gt;&lt;br/&gt;
Review 21u-dev: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/600&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/600&lt;/a&gt;&lt;br/&gt;
Review 17u-dev: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2492&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2492&lt;/a&gt;&lt;br/&gt;
Review 11u-dev: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2723&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2723&lt;/a&gt;&lt;br/&gt;
Review 8u-dev: &lt;a href=&quot;https://git.openjdk.org/jdk8u-dev/pull/506&quot;&gt;https://git.openjdk.org/jdk8u-dev/pull/506&lt;/a&gt;</comment>
                            <comment id="14675859" author="roboduke" created="Thu, 23 May 2024 21:33:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2723&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2723&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 02:33:59 +0000</comment>
                            <comment id="14675858" author="roboduke" created="Thu, 23 May 2024 21:32:58 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk8u-dev/pull/506&quot;&gt;https://git.openjdk.org/jdk8u-dev/pull/506&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 02:33:55 +0000</comment>
                            <comment id="14675857" author="roboduke" created="Thu, 23 May 2024 21:32:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2492&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2492&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 02:33:52 +0000</comment>
                            <comment id="14675856" author="roboduke" created="Thu, 23 May 2024 21:31:34 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/600&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/600&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 02:33:49 +0000</comment>
                            <comment id="14675855" author="roboduke" created="Thu, 23 May 2024 21:30:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/222&quot;&gt;https://git.openjdk.org/jdk22u/pull/222&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 02:33:46 +0000</comment>
                            <comment id="14675838" author="roboduke" created="Thu, 23 May 2024 18:30:49 -0700"  >[jdk8u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport , which try to limit the memory used by the test, avoid timeout failure with some jvm options or on some specific enviroments. Only change the testcase, no risk.</comment>
                            <comment id="14675837" author="roboduke" created="Thu, 23 May 2024 18:30:41 -0700"  >[jdk21u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport , which try to limit the memory used by the test, avoid timeout failure with some jvm options or on some specific enviroments. Only change the testcase, no risk.</comment>
                            <comment id="14675836" author="roboduke" created="Thu, 23 May 2024 18:30:26 -0700"  >[jdk22u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport , which try to limit the memory used by the test, avoid timeout failure with some jvm options or on some specific enviroments. Only change the testcase, no risk.</comment>
                            <comment id="14675835" author="roboduke" created="Thu, 23 May 2024 18:30:22 -0700"  >[jdk11u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport , which try to limit the memory used by the test, avoid timeout failure with some jvm options or on some specific enviroments. Only change the testcase, no risk.</comment>
                            <comment id="14675834" author="roboduke" created="Thu, 23 May 2024 18:30:20 -0700"  >[jdk17u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport , which try to limit the memory used by the test, avoid timeout failure with some jvm options or on some specific enviroments. Only change the testcase, no risk.</comment>
                            <comment id="14675832" author="JIRAUSER21405" created="Thu, 23 May 2024 18:21:32 -0700"  >On some specific enviroments, this testcase has the same timeout failure with default heap size.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; With default heap size, test run timeouted:&lt;br/&gt;
&amp;gt; rm -rf /tmp/jt-work ; time jtreg -nr -v1 -w /tmp/jt-work -timeoutfactor:0.1 jdk/test/jdk/jfr/event/oldobject/TestSanityDefault.java &lt;br/&gt;
Directory &amp;quot;/tmp/jt-work&amp;quot; not found: creating&lt;br/&gt;
Error:  jdk/jfr/event/oldobject/TestSanityDefault.java&lt;br/&gt;
Test results: error: 1&lt;br/&gt;
Results written to /tmp/jt-work&lt;br/&gt;
Error: Some tests failed or other problems occurred.&lt;br/&gt;
&lt;br/&gt;
real    0m14.060s&lt;br/&gt;
user    4m24.396s&lt;br/&gt;
sys     0m0.834s&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; With -Xmx1G heap size and with the same test jdk on the same machine, test run passed:&lt;br/&gt;
&amp;gt; rm -rf /tmp/jt-work ; time jtreg -Xmx1G -nr -v1 -w /tmp/jt-work -timeoutfactor:0.1 jdk/test/jdk/jfr/event/oldobject/TestSanityDefault.java &lt;br/&gt;
Directory &amp;quot;/tmp/jt-work&amp;quot; not found: creating&lt;br/&gt;
Passed: jdk/jfr/event/oldobject/TestSanityDefault.java&lt;br/&gt;
Test results: passed: 1&lt;br/&gt;
Results written to /tmp/jt-work&lt;br/&gt;
&lt;br/&gt;
real    0m1.810s&lt;br/&gt;
user    0m6.417s&lt;br/&gt;
sys     0m0.732s&lt;br/&gt;
&lt;br/&gt;
&amp;gt; java -version ; java -Xinternalversion&lt;br/&gt;
openjdk version &amp;quot;1.8.0_412&amp;quot;&lt;br/&gt;
OpenJDK Runtime Environment (Temurin)(build 1.8.0_412-b08)&lt;br/&gt;
OpenJDK 64-Bit Server VM (Temurin)(build 25.412-b08, mixed mode)&lt;br/&gt;
OpenJDK 64-Bit Server VM (25.412-b08) for linux-aarch64 JRE (1.8.0_412-b08), built on Apr 17 2024 02:08:37 by &amp;quot;jenkins&amp;quot; with gcc 7.5.0</comment>
                            <comment id="14675828" author="roboduke" created="Thu, 23 May 2024 18:07:37 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/599&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/599&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 01:01:19 +0000</comment>
                            <comment id="14675827" author="roboduke" created="Thu, 23 May 2024 18:06:49 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2722&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2722&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 01:01:13 +0000</comment>
                            <comment id="14675826" author="roboduke" created="Thu, 23 May 2024 18:06:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2491&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2491&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 01:01:16 +0000</comment>
                            <comment id="14675825" author="roboduke" created="Thu, 23 May 2024 18:06:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk8u-dev/pull/505&quot;&gt;https://git.openjdk.org/jdk8u-dev/pull/505&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 01:01:15 +0000</comment>
                            <comment id="14675824" author="roboduke" created="Thu, 23 May 2024 18:05:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/221&quot;&gt;https://git.openjdk.org/jdk22u/pull/221&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-24 01:00:42 +0000</comment>
                            <comment id="14675817" author="dukebot" created="Thu, 23 May 2024 16:43:19 -0700"  >Changeset: 9b1d6d66&lt;br/&gt;
Author:    Sergey Bylokhov &amp;lt;&lt;a href=&apos;mailto:serb@openjdk.org&apos;&gt;serb@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-05-23 23:40:00 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/9b1d6d66b8297d53c6b96b9e2f9bd69af90ab8fb&quot;&gt;https://git.openjdk.org/jdk/commit/9b1d6d66b8297d53c6b96b9e2f9bd69af90ab8fb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14675625" author="shade" created="Thu, 23 May 2024 02:36:01 -0700"  >Agreed, this is not actually a Shenandoah bug, it just reproduces very well with Shenandoah.</comment>
                            <comment id="14675519" author="JIRAUSER21405" created="Wed, 22 May 2024 21:24:18 -0700"  >We also capture the timeout failure by dragonwell8 and temurin8 with default gc(ParallelGC) on some test machine:&lt;br/&gt;
&amp;quot;JFR Recording Scheduler&amp;quot; #27 daemon prio=5 os_prio=0 tid=0x0000fffe0c001800 nid=0x1a5464 in Object.wait() [0x0000ffff50fd7000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
	at java.lang.Object.wait(Native Method)&lt;br/&gt;
	- waiting on &amp;lt;0x00000000802812c0&amp;gt; (a java.util.TaskQueue)&lt;br/&gt;
	at java.lang.Object.wait(Object.java:502)&lt;br/&gt;
	at java.util.TimerThread.mainLoop(Timer.java:526)&lt;br/&gt;
	- locked &amp;lt;0x00000000802812c0&amp;gt; (a java.util.TaskQueue)&lt;br/&gt;
	at java.util.TimerThread.run(Timer.java:505)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;JFR Periodic Tasks&amp;quot; #24 daemon prio=5 os_prio=0 tid=0x0000fffe100d8800 nid=0x1a5462 waiting for monitor entry [0x0000ffff513d7000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: BLOCKED (on object monitor)&lt;br/&gt;
	at jdk.jfr.internal.PlatformRecorder.periodicTask(PlatformRecorder.java:437)&lt;br/&gt;
	- waiting to lock &amp;lt;0x00000000802a3858&amp;gt; (a jdk.jfr.internal.PlatformRecorder)&lt;br/&gt;
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(PlatformRecorder.java:388)&lt;br/&gt;
	at jdk.jfr.internal.PlatformRecorder$$Lambda$32/1404185258.run(Unknown Source)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:855)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;JFR Recorder Thread&amp;quot; #23 daemon prio=5 os_prio=0 tid=0x0000fffe100a1000 nid=0x1a5461 waiting on condition [0x0000000000000000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: RUNNABLE&lt;br/&gt;
&lt;br/&gt;
&amp;quot;MainThread&amp;quot; #22 prio=5 os_prio=0 tid=0x0000ffff801cd800 nid=0x1a5460 waiting on condition [0x0000ffff525f1000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: RUNNABLE&lt;br/&gt;
	at jdk.jfr.internal.JVM.emitOldObjectSamples(Native Method)&lt;br/&gt;
	at jdk.jfr.internal.OldObjectSample.emit(OldObjectSample.java:57)&lt;br/&gt;
	at jdk.jfr.internal.PlatformRecorder.stop(PlatformRecorder.java:281)&lt;br/&gt;
	- locked &amp;lt;0x00000000802a3858&amp;gt; (a jdk.jfr.internal.PlatformRecorder)&lt;br/&gt;
	at jdk.jfr.internal.PlatformRecording.stop(PlatformRecording.java:157)&lt;br/&gt;
	- locked &amp;lt;0x00000000802a3858&amp;gt; (a jdk.jfr.internal.PlatformRecorder)&lt;br/&gt;
	at jdk.jfr.Recording.stop(Recording.java:210)&lt;br/&gt;
	at jdk.jfr.event.oldobject.TestSanityDefault.main(TestSanityDefault.java:68)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:498)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:855)</comment>
                            <comment id="14672595" author="roboduke" created="Fri, 10 May 2024 10:44:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19163&quot;&gt;https://git.openjdk.org/jdk/pull/19163&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-10 00:08:39 +0000</comment>
                            <comment id="14611456" author="shade" created="Fri, 15 Sep 2023 02:35:54 -0700"  >I can reproduce the long run with: &lt;br/&gt;
$ CONF=linux-x86_64-server-release make test TEST=jdk/jfr/event/oldobject/TestSanityDefault.java TEST_VM_OPTS=&amp;quot;-ea -esa -XX:+UseShenandoahGC -Xmx60g&amp;quot;&lt;br/&gt;
&lt;br/&gt;
...and short run with: &lt;br/&gt;
$ CONF=linux-x86_64-server-release make test TEST=jdk/jfr/event/oldobject/TestSanityDefault.java TEST_VM_OPTS=&amp;quot;-ea -esa -XX:+UseShenandoahGC -Xmx1g&amp;quot;&lt;br/&gt;
&lt;br/&gt;
The test effectively allocates supposedly &amp;quot;old&amp;quot; objects and calls System.gc() to promote them, capturing the old object samples. For Shenandoah case, System.gc() calls concurrent GC, due to -XX:+ExplicitGCInvokesConcurrent enabled by default with Shenandoah. That concurrent GC does not promote all objects, it keeps the lightly loaded regions untouched. The larger the heap, the larger are the regions, the more time we need to wait for the region to fill up until GC acts on them. &lt;br/&gt;
&lt;br/&gt;
While this reproduces with Shenandoah, I think this is just a test bug: we need to limit the heap size on this test, so it runs reliably on larger heaps, without expecting System.gc() to promote these object promptly.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5130504">JDK-8333104</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130648">JDK-8333232</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131210">JDK-8333707</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131289">JDK-8333764</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137889">JDK-8339291</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5163118">JDK-8360932</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i334u3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>