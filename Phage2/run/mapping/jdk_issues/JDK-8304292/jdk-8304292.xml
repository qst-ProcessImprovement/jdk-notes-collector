<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:44:51 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8304292] Memory leak related to ClassLoader::update_class_path_entry_list</title>
                <link>https://bugs.openjdk.org/browse/JDK-8304292</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Pretty sure this is related to the duplicate checking. It looks like if its a duplicate, it just drops the object on the floor and doesn&amp;#39;t delete it.&lt;br/&gt;
&lt;br/&gt;
Direct leak of 40 byte(s) in 1 object(s) allocated from:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x7f26620b89cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:69&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x7f265e6988cf in os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&amp;amp;) src/hotspot/share/runtime/os.cpp:654&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x7f265c21cc57 in AllocateHeap(unsigned long, MEMFLAGS, NativeCallStack const&amp;amp;, AllocFailStrategy::AllocFailEnum) src/hotspot/share/memory/allocation.cpp:42&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x7f265c21cc57 in AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum) src/hotspot/share/memory/allocation.cpp:52&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x7f265cae12fc in CHeapObjBase::operator new(unsigned long, MEMFLAGS) src/hotspot/share/memory/allocation.hpp:183&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x7f265cae12fc in CHeapObj&amp;lt;(MEMFLAGS)1&amp;gt;::operator new(unsigned long) src/hotspot/share/memory/allocation.hpp:237&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x7f265cae12fc in ClassLoader::create_class_path_entry(JavaThread*, char const*, stat const*, bool, bool) src/hotspot/share/classfile/classLoader.cpp:742&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x7f265cae1e35 in ClassLoader::create_class_path_entry(JavaThread*, char const*, stat const*, bool, bool) src/hotspot/share/classfile/classLoader.cpp:845&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x7f265cae1e35 in ClassLoader::update_class_path_entry_list(JavaThread*, char const*, bool, bool, bool) src/hotspot/share/classfile/classLoader.cpp:845&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x7f265cb0b09b in ClassLoaderExt::process_jar_manifest(JavaThread*, ClassPathEntry*) src/hotspot/share/classfile/classLoaderExt.cpp:235&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x7f265cad8a76 in ClassLoader::add_to_app_classpath_entries(JavaThread*, ClassPathEntry*, bool) src/hotspot/share/classfile/classLoader.cpp:830&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x7f265cae2386 in ClassLoader::update_class_path_entry_list(JavaThread*, char const*, bool, bool, bool) src/hotspot/share/classfile/classLoader.cpp:855&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x7f265cae2386 in ClassLoader::setup_app_search_path(JavaThread*, char const*) src/hotspot/share/classfile/classLoader.cpp:524&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x7f265cb08e36 in ClassLoaderExt::setup_app_search_path(JavaThread*) src/hotspot/share/classfile/classLoaderExt.cpp:79&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#14 0x7f265f0f64b4 in universe_init() src/hotspot/share/memory/universe.cpp:833&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#15 0x7f265d656c28 in init_globals() src/hotspot/share/runtime/init.cpp:123&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#16 0x7f265f083897 in Threads::create_vm(JavaVMInitArgs*, bool*) src/hotspot/share/runtime/threads.cpp:568&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#17 0x7f265da41163 in JNI_CreateJavaVM_inner src/hotspot/share/prims/jni.cpp:3588&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#18 0x7f265da41163 in JNI_CreateJavaVM src/hotspot/share/prims/jni.cpp:3674&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#19 0x7f2662831e25 in InitializeJVM src/java.base/share/native/libjli/java.c:1459&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#20 0x7f2662831e25 in JavaMain src/java.base/share/native/libjli/java.c:413&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#21 0x7f266283a708 in ThreadJavaMain src/java.base/unix/native/libjli/java_md.c:650&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#22 0x7f2661ea7fd3 in start_thread nptl/pthread_create.c:442&lt;br/&gt;
&lt;br/&gt;
Indirect leak of 81 byte(s) in 1 object(s) allocated from:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x7f26620b89cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:69&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x7f265e6988cf in os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&amp;amp;) src/hotspot/share/runtime/os.cpp:654&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x7f265c21cc57 in AllocateHeap(unsigned long, MEMFLAGS, NativeCallStack const&amp;amp;, AllocFailStrategy::AllocFailEnum) src/hotspot/share/memory/allocation.cpp:42&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x7f265c21cc57 in AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum) src/hotspot/share/memory/allocation.cpp:52&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x7f265cae1381 in ClassPathEntry::copy_path(char const*) src/hotspot/share/classfile/classLoader.cpp:235&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x7f265cae1381 in ClassPathZipEntry::ClassPathZipEntry(void**, char const*, bool, bool) src/hotspot/share/classfile/classLoader.cpp:287&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x7f265cae1381 in ClassLoader::create_class_path_entry(JavaThread*, char const*, stat const*, bool, bool) src/hotspot/share/classfile/classLoader.cpp:742&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x7f265cae1e35 in ClassLoader::create_class_path_entry(JavaThread*, char const*, stat const*, bool, bool) src/hotspot/share/classfile/classLoader.cpp:845&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x7f265cae1e35 in ClassLoader::update_class_path_entry_list(JavaThread*, char const*, bool, bool, bool) src/hotspot/share/classfile/classLoader.cpp:845&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x7f265cb0b09b in ClassLoaderExt::process_jar_manifest(JavaThread*, ClassPathEntry*) src/hotspot/share/classfile/classLoaderExt.cpp:235&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x7f265cad8a76 in ClassLoader::add_to_app_classpath_entries(JavaThread*, ClassPathEntry*, bool) src/hotspot/share/classfile/classLoader.cpp:830&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x7f265cae2386 in ClassLoader::update_class_path_entry_list(JavaThread*, char const*, bool, bool, bool) src/hotspot/share/classfile/classLoader.cpp:855&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x7f265cae2386 in ClassLoader::setup_app_search_path(JavaThread*, char const*) src/hotspot/share/classfile/classLoader.cpp:524&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x7f265cb08e36 in ClassLoaderExt::setup_app_search_path(JavaThread*) src/hotspot/share/classfile/classLoaderExt.cpp:79&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#14 0x7f265f0f64b4 in universe_init() src/hotspot/share/memory/universe.cpp:833&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#15 0x7f265d656c28 in init_globals() src/hotspot/share/runtime/init.cpp:123&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#16 0x7f265f083897 in Threads::create_vm(JavaVMInitArgs*, bool*) src/hotspot/share/runtime/threads.cpp:568&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#17 0x7f265da41163 in JNI_CreateJavaVM_inner src/hotspot/share/prims/jni.cpp:3588&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#18 0x7f265da41163 in JNI_CreateJavaVM src/hotspot/share/prims/jni.cpp:3674&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#19 0x7f2662831e25 in InitializeJVM src/java.base/share/native/libjli/java.c:1459&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#20 0x7f2662831e25 in JavaMain src/java.base/share/native/libjli/java.c:413&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#21 0x7f266283a708 in ThreadJavaMain src/java.base/unix/native/libjli/java_md.c:650&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#22 0x7f2661ea7fd3 in start_thread nptl/pthread_create.c:442</description>
                <environment></environment>
        <key id="5096366">JDK-8304292</key>
            <summary>Memory leak related to ClassLoader::update_class_path_entry_list</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ccheung">Calvin Cheung</assignee>
                                    <reporter username="jcking">Justin King</reporter>
                        <labels>
                            <label>asan</label>
                            <label>classloading</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Wed, 15 Mar 2023 16:16:25 -0700</created>
                <updated>Fri, 29 Dec 2023 06:10:00 -0800</updated>
                            <resolved>Thu, 10 Aug 2023 13:05:07 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14636401" author="roboduke" created="Tue, 26 Dec 2023 04:35:24 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/97&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/97&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-26 12:31:32 +0000</comment>
                            <comment id="14636400" author="goetz" created="Tue, 26 Dec 2023 04:30:09 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.3-oracle.&lt;br/&gt;
Medium risk, simple change to central component.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Tests pass but do so also without the fix. SAP nightly testing passed.</comment>
                            <comment id="14603299" author="dukebot" created="Thu, 10 Aug 2023 13:05:05 -0700"  >Changeset: 88b4e3b8&lt;br/&gt;
Author:    Calvin Cheung &amp;lt;&lt;a href=&apos;mailto:ccheung@openjdk.org&apos;&gt;ccheung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-10 20:02:27 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/88b4e3b8539c2beb29ad92bd74b300002c2ef84b&quot;&gt;https://git.openjdk.org/jdk/commit/88b4e3b8539c2beb29ad92bd74b300002c2ef84b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14601529" author="roboduke" created="Wed, 2 Aug 2023 23:20:04 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15132&quot;&gt;https://git.openjdk.org/jdk/pull/15132&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-03 06:14:37 +0000</comment>
                            <comment id="14579400" author="JIRAUSER20409" created="Fri, 5 May 2023 08:03:10 -0700"  >[~jcking], how the problem can be reproduced? How can I test the potential fix?</comment>
                            <comment id="14568670" author="ccheung" created="Tue, 21 Mar 2023 15:45:03 -0700"  >The bug is probably in ClassLoader::add_to_app_classpath_entries().&lt;br/&gt;
If the function is called with &amp;quot;check_for_duplicates&amp;quot; set to true and the &amp;quot;ClassPathEntry* entry&amp;quot; is a duplicate, the entry should be deleted before return.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5117366">JDK-8322326</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117837">JDK-8322774</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30rer:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>