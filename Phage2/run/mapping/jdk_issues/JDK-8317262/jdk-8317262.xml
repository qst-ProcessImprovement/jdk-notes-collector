<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:28:32 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8317262] LockStack::contains(oop) fails &quot;assert(t-&gt;is_Java_thread()) failed: incorrect cast to JavaThread&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8317262</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
runtime/handshake/MixedHandshakeWalkStackTest.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;MainThread&amp;quot; #20 [3778977] prio=5 os_prio=0 cpu=2797.22ms elapsed=25.96s tid=0x00007fc5ec32f330 nid=3778977 waiting on condition  [0x00007fc5c2e9c000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: RUNNABLE&lt;br/&gt;
Thread: 0x00007fc5ec32f330  [0x39a9a1] State: _running _at_poll_safepoint 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaThread state: _thread_blocked&lt;br/&gt;
	at java.lang.Thread.join(&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/Thread.java:2045)&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S202952/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/7ea1439c-6a8e-4755-9db4-5138d6e04957/runs/54ab28d1-851a-402f-960a-cd3e8bcfc6aa/workspace/open/src/hotspot/share/runtime/javaThread.hpp:980), pid=3778833, tid=3778844&lt;br/&gt;
#  assert(t-&amp;gt;is_Java_thread()) failed: incorrect cast to JavaThread&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0+17) (fastdebug build 22-ea+17-1331)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-ea+17-1331, compiled mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1743fd5]  LockStack::contains(oop) const+0x325&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S200905/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/af57202a-9f78-4b5d-a63b-ece9be24e78a/runs/93c402bc-fad1-4370-a9d0-0ac8b729f0c9/testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/2/core.3778833)&lt;br/&gt;
#&lt;br/&gt;
Unsupported internal testing APIs have been used.&lt;br/&gt;
&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S200905/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/af57202a-9f78-4b5d-a63b-ece9be24e78a/runs/93c402bc-fad1-4370-a9d0-0ac8b729f0c9/testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/2/hs_err_pid3778833.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(46/8741)*----------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007fc5ec2dc530):  VMThread &amp;quot;VM Thread&amp;quot;          [id=3778844, stack(0x00007fc5c3879000,0x00007fc5c3979000) (1024K)] _threads_hazard_ptr=0x00007fc538001630, _nested_threads_hazard_ptr_cnt=0&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fc5c3879000,0x00007fc5c3979000],  sp=0x00007fc5c39761e0,  free space=1012k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1743fd5]  LockStack::contains(oop) const+0x325  (javaThread.hpp:980)&lt;br/&gt;
V  [libjvm.so+0x185b6b5]  javaVFrame::print_lock_info_on(outputStream*, int)+0x9c5  (objectMonitor.inline.hpp:39)&lt;br/&gt;
V  [libjvm.so+0xec281e]  JavaThread::print_stack_on(outputStream*)+0x1de  (javaThread.cpp:1755)&lt;br/&gt;
V  [libjvm.so+0x18bde8f]  WB_HandshakeWalkStack::TraceSelfClosure::do_thread(Thread*)+0x7f  (whitebox.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xda58c6]  HandshakeOperation::do_handshake(JavaThread*)+0x46  (handshake.cpp:326)&lt;br/&gt;
V  [libjvm.so+0xda5e6a]  HandshakeState::try_process(HandshakeOperation*) [clone .part.0]+0xfa  (handshake.cpp:671)&lt;br/&gt;
V  [libjvm.so+0xda8263]  VM_HandshakeAllThreads::doit()+0x443  (handshake.cpp:651)&lt;br/&gt;
V  [libjvm.so+0x1888fc9]  VM_Operation::evaluate()+0x139  (vmOperations.cpp:71)&lt;br/&gt;
V  [libjvm.so+0x18a9c5b]  VMThread::evaluate_operation(VM_Operation*)+0x10b  (vmThread.cpp:281)&lt;br/&gt;
V  [libjvm.so+0x18aa61e]  VMThread::inner_execute(VM_Operation*)+0x20e  (vmThread.cpp:435)&lt;br/&gt;
V  [libjvm.so+0x18aa9b4]  VMThread::loop()+0x84  (vmThread.cpp:502)&lt;br/&gt;
V  [libjvm.so+0x18aaac2]  VMThread::run()+0x92  (vmThread.cpp:175)&lt;br/&gt;
V  [libjvm.so+0x17a338a]  Thread::call_run()+0xba  (thread.cpp:220)&lt;br/&gt;
V  [libjvm.so+0x14a89ca]  thread_native_entry(Thread*)+0x12a  (os_linux.cpp:786)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The test task&amp;#39;s JVM args are:&lt;br/&gt;
-Xcomp -ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -server -XX:+TieredCompilation -XX:-DoEscapeAnalysis</description>
                <environment></environment>
        <key id="5111424">JDK-8317262</key>
            <summary>LockStack::contains(oop) fails &quot;assert(t-&gt;is_Java_thread()) failed: incorrect cast to JavaThread&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dholmes">David Holmes</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>LM_LIGHTWEIGHT</label>
                            <label>amazon-interest</label>
                            <label>intermittent</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>lilliput</label>
                            <label>sync</label>
                            <label>tier7</label>
                    </labels>
                <created>Thu, 28 Sep 2023 10:16:49 -0700</created>
                <updated>Mon, 8 Apr 2024 13:56:49 -0700</updated>
                            <resolved>Sun, 15 Oct 2023 16:37:14 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>repo-lilliput-17</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14663700" author="roboduke" created="Mon, 8 Apr 2024 11:37:35 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/lilliput-jdk17u/pull/75&quot;&gt;https://git.openjdk.org/lilliput-jdk17u/pull/75&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-08 18:32:54 +0000</comment>
                            <comment id="14618761" author="roboduke" created="Tue, 17 Oct 2023 02:11:09 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to fix the trivial bug in new light-weight locking. This code path is disabled by default in JDK 21u, but the bug would manifest if any user experimentally enables it.</comment>
                            <comment id="14618759" author="roboduke" created="Tue, 17 Oct 2023 02:09:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/262&quot;&gt;https://git.openjdk.org/jdk21u/pull/262&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-17 09:02:25 +0000</comment>
                            <comment id="14618210" author="dukebot" created="Sun, 15 Oct 2023 16:37:13 -0700"  >Changeset: 4ea1b99c&lt;br/&gt;
Author:    David Holmes &amp;lt;&lt;a href=&apos;mailto:dholmes@openjdk.org&apos;&gt;dholmes@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-10-15 23:34:16 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4ea1b99c1a6efe144af381ea538f93718e9baf74&quot;&gt;https://git.openjdk.org/jdk/commit/4ea1b99c1a6efe144af381ea538f93718e9baf74&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14615972" author="roboduke" created="Wed, 4 Oct 2023 18:57:12 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16047&quot;&gt;https://git.openjdk.org/jdk/pull/16047&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-05 01:47:03 +0000</comment>
                            <comment id="14615968" author="dholmes" created="Wed, 4 Oct 2023 16:56:34 -0700"  >Thanks [~pchilanomate] - for some reason JBS didn&amp;#39;t show me your comment until after I had rediscovered what you wrote.</comment>
                            <comment id="14615967" author="dholmes" created="Wed, 4 Oct 2023 16:55:16 -0700"  >Unclear exactly why this triggered now but the bug is here:&lt;br/&gt;
&lt;br/&gt;
inline bool LockStack::is_owning_thread() const {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;JavaThread* thread = JavaThread::current();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;bool is_owning = &amp;amp;thread-&amp;gt;lock_stack() == this;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(is_owning == (get_thread() == thread), &amp;quot;is_owning sanity&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return is_owning;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
If the current thread is not a JavaThread we should be returning false. This is called from:&lt;br/&gt;
&lt;br/&gt;
inline bool LockStack::contains(oop o) const {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;verify(&amp;quot;pre-contains&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!SafepointSynchronize::is_at_safepoint() &amp;amp;&amp;amp; !is_owning_thread()) {&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14615896" author="pchilanomate" created="Wed, 4 Oct 2023 10:46:39 -0700"  >I took a look at this issue. The test is just uncovering a bug in LockStack::is_owning_thread(), which assumes the caller is always a JavaThread, that we have probably not seen before because the condition to trigger it is too rare. The VMThread (or any non-JavaThread) needs to call JavaThread::print_stack_on() on a JT which in the top frame owns a monitor that is inflated and the owner is marked as anonymous. This MixedHandshakeWalkStackTest.java test uses a handshake that does call JavaThread::print_stack_on(), so it just happened that we hit some handshake all operation by the VMThread and it took over that other handshake. Now, how we find an inflated monitor marked as anonymous in the top frame I don&amp;#39;t understand, it must be during initialization code, since I don&amp;#39;t see any explicit synchronized in the test.&lt;br/&gt;
&lt;br/&gt;
I attached a simple test that reproduces the issue.</comment>
                            <comment id="14615712" author="dholmes" created="Wed, 4 Oct 2023 00:06:11 -0700"  >Trying to understand what may have changed here. The WB_HandshakeWalkStack method has been around since handshakes were introduced and has always assumed/expected to only be executed by a JavaThread. So what changed to cause it to be executed by the VMThread? And was that always a possibility?&lt;br/&gt;
&lt;br/&gt;
The test itself has not been changed in over a year too.&lt;br/&gt;
&lt;br/&gt;
Correction: &amp;quot;has always assumed/expected to only be executed by a JavaThread&amp;quot; should be &amp;quot;has always assumed/expected to only be applied to a JavaThread&amp;quot;. I misread the code, the current thread is not used whilst executing the actual handshake.</comment>
                            <comment id="14615574" author="mseledtsov" created="Tue, 3 Oct 2023 11:06:23 -0700"  >ILW = HLM = P3</comment>
                            <comment id="14614860" author="dholmes" created="Thu, 28 Sep 2023 18:37:44 -0700"  >Yeah the WB handshake stack walking code is breaking invariants by allowing, in this case, the VMThread to do stuff we only expected JavaThreads to do.</comment>
                            <comment id="14614774" author="dcubed" created="Thu, 28 Sep 2023 10:19:48 -0700"  >There&amp;#39;s a recent different crash with the same test:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316538&quot; title=&quot;runtime/handshake/MixedHandshakeWalkStackTest.java crashes with JFR&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316538&quot;&gt;&lt;strike&gt;JDK-8316538&lt;/strike&gt;&lt;/a&gt; runtime/handshake/MixedHandshakeWalkStackTest.java crashes with JFR</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5112880">JDK-8318545</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5110610">JDK-8316538</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5080595">JDK-8291555</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5109863">JDK-8315880</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="106686" name="Repro8317262.java" size="3613" author="pchilanomate" created="Wed, 4 Oct 2023 10:45:56 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33bbf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>