<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:06:07 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8292914] Lambda proxies have unstable names</title>
                <link>https://bugs.openjdk.org/browse/JDK-8292914</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Lambda-class names in the JDK are unstable, i.e., their names across different VM runs are not the same. The format of the lambda-class name is `&amp;lt;declaring_class&amp;gt;$$Lambda$&amp;lt;counter&amp;gt;/#&amp;lt;hidden_class_reference&amp;gt;`. The instability comes from:  the `&amp;lt;counter&amp;gt;` that is assigned a value from a concurrently incremented `java.lang.invoke.InnerClassLambdaMetafactory#counter`, and the `&amp;lt;hidden_class_reference&amp;gt;` that represents the reference value used for the hidden class. &lt;br/&gt;
&lt;br/&gt;
GraalVM Native Image requires the `&amp;lt;counter&amp;gt;` part of the lambda name to be stable:&lt;br/&gt;
&#8203;&lt;br/&gt;
- *To register lambda classes for serialization*. Native Image uses configuration files to collect class names for the classes that should be registered for serialization. Unstable lambda-class names prevent Native Image from running any code that uses lambda-class serialization.&lt;br/&gt;
&#8203;&lt;br/&gt;
- *For reproducible builds* (&lt;a href=&quot;https://github.com/oracle/graal/issues/291&quot;&gt;https://github.com/oracle/graal/issues/291&lt;/a&gt;). Generated class files for the same lambda are different because of the class names. Therefore, executables generated by the Native Image from the same bytecode can not be the same if they contain lambda classes.&lt;br/&gt;
&#8203;&lt;br/&gt;
- *For incremental reachability analysis*. The goal is to use analysis incrementally by storing the summaries and reusing them in subsequent builds. Therefore, we need stable identifiers for all types, methods, and fields.&lt;br/&gt;
&#8203;&lt;br/&gt;
- *To collect profiles of lambda methods for profile-guided optimizations*. In the instrumented profiling image the lambda classes will not be the same as the ones in the optimized image. Therefore, it is hard to correlate the collected profiles between the two runs. &lt;br/&gt;
&lt;br/&gt;
- *To reflectively access lambdas*. At build time, Native Image registers all the methods that should be called reflectively; the configuration files used for registration use fully qualified class names. Currently, using reflection on lambda classes on Native Image is not possible.&lt;br/&gt;
&#8203;&lt;br/&gt;
To support the abovementioned cases, GraalVM needs a flag that will generate lambda classes with stable names. With the flag enabled, the `&amp;lt;counter&amp;gt;` part of the lambda-class name needs to be replaced with a stable hash. The hash needs to be calculated using a superset of the parameters used for lambda-class data sharing (see `java.lang.invoke.LambdaProxyClassArchive#register`).&lt;br/&gt;
&lt;br/&gt;
The proposed solution for this issue is: &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/openjdk/jdk/pull/10024&quot;&gt;https://github.com/openjdk/jdk/pull/10024&lt;/a&gt;</description>
                <environment></environment>
        <key id="5082256">JDK-8292914</key>
            <summary>Lambda proxies have unstable names</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mchung">Mandy Chung</assignee>
                                    <reporter username="vjovanovic">Vojin Jovanovic</reporter>
                        <labels>
                            <label>graal</label>
                    </labels>
                <created>Thu, 25 Aug 2022 05:17:06 -0700</created>
                <updated>Mon, 29 Jan 2024 11:08:14 -0800</updated>
                            <resolved>Fri, 3 Mar 2023 03:15:53 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                                                                <comments>
                            <comment id="14579560" author="roboduke" created="Sat, 6 May 2023 06:40:17 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/10024&quot;&gt;https://git.openjdk.org/jdk/pull/10024&lt;/a&gt;&lt;br/&gt;
Date: 2022-08-25 14:32:06 +0000</comment>
                            <comment id="14564327" author="thomaswue" created="Fri, 3 Mar 2023 02:55:56 -0800"  >Even though removing the counter altogether provides &amp;quot;stable&amp;quot; names for lambda proxies, it is preferable for debuggability to have a solution where not all lambda class names are the same. See also &lt;a href=&quot;https://github.com/openjdk/jdk/pull/10024#issuecomment-1453346327&quot;&gt;https://github.com/openjdk/jdk/pull/10024#issuecomment-1453346327&lt;/a&gt;.</comment>
                            <comment id="14563098" author="dukebot" created="Mon, 27 Feb 2023 09:19:35 -0800"  >Changeset: b527edd3&lt;br/&gt;
Author:    David M. Lloyd &amp;lt;&lt;a href=&apos;mailto:david.lloyd@redhat.com&apos;&gt;david.lloyd@redhat.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Mandy Chung &amp;lt;&lt;a href=&apos;mailto:mchung@openjdk.org&apos;&gt;mchung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-27 17:18:44 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b527edd3388ad6a0d44a291983b08b2b5c023f8f&quot;&gt;https://git.openjdk.org/jdk/commit/b527edd3388ad6a0d44a291983b08b2b5c023f8f&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14560455" author="roboduke" created="Wed, 15 Feb 2023 09:37:50 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12579&quot;&gt;https://git.openjdk.org/jdk/pull/12579&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-15 17:32:38 +0000</comment>
                            <comment id="14560437" author="JIRAUSER20308" created="Wed, 15 Feb 2023 09:07:37 -0800"  >As I stated on the pull request, in my humble opinion the counter is not needed anymore. See my comments at &lt;a href=&quot;https://github.com/openjdk/jdk/pull/10024#issuecomment-1431696989&quot;&gt;https://github.com/openjdk/jdk/pull/10024#issuecomment-1431696989&lt;/a&gt; for details.</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ydhn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="213"><![CDATA[java.lang.invoke]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>