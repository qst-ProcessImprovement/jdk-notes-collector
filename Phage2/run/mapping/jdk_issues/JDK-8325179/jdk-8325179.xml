<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:45:53 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8325179] Race in BasicDirectoryModel.validateFileCache</title>
                <link>https://bugs.openjdk.org/browse/JDK-8325179</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>BasicDirectoryModel.validateFileCache starts a background thread, a FilesLoader object, to update the list of files in the current directory.&lt;br/&gt;
&lt;br/&gt;
First, the method checks if there&amp;#39;s an existing filesLoader and interrupts it.&lt;br/&gt;
&lt;br/&gt;
Then it creates a new filesLoader.&lt;br/&gt;
&lt;br/&gt;
The above is done without any synchronisation, which means if the method is called concurrently by several threads, several fileLoader threads could be started concurrently. If it happens, only the latest one may be interrupted.&lt;br/&gt;
&lt;br/&gt;
A similar problem exists in invalidateFileCache, access to filesLoader field isn&amp;#39;t protected by a lock.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
BasicDirectoryModel.FilesLoader.cancelRunnables has a data race too. The &amp;#39;runnable&amp;#39; field is a volatile field, but it&amp;#39;s not enough.&lt;br/&gt;
&lt;br/&gt;
It is possible that runnable is not null when the condition is checked but becomes null in the body of the if statement. It could be set a new value too.</description>
                <environment></environment>
        <key id="5120642">JDK-8325179</key>
            <summary>Race in BasicDirectoryModel.validateFileCache</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aivanov">Alexey Ivanov</assignee>
                                    <reporter username="aivanov">Alexey Ivanov</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>cssn23_02_01</label>
                            <label>cssn24_03_01</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>sustaining</label>
                    </labels>
                <created>Fri, 2 Feb 2024 08:20:53 -0800</created>
                <updated>Wed, 26 Jun 2024 05:06:06 -0700</updated>
                            <resolved>Thu, 21 Mar 2024 09:06:22 -0700</resolved>
                                    <version>8u301</version>
                    <version>11.0.10</version>
                    <version>15</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14681627" author="roboduke" created="Fri, 14 Jun 2024 00:41:05 -0700"  >[jdk11u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 11.0.25-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14681386" author="roboduke" created="Thu, 13 Jun 2024 06:00:10 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2768&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2768&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-13 12:53:53 +0000</comment>
                            <comment id="14680382" author="roboduke" created="Mon, 10 Jun 2024 23:29:21 -0700"  >[jdk17u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 17.0.13-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14680110" author="roboduke" created="Mon, 10 Jun 2024 02:31:05 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2558&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2558&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-10 09:25:57 +0000</comment>
                            <comment id="14679192" author="roboduke" created="Wed, 5 Jun 2024 07:11:50 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2539&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2539&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-05 14:06:32 +0000</comment>
                            <comment id="14677967" author="roboduke" created="Sat, 1 Jun 2024 02:02:26 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14677860" author="roboduke" created="Fri, 31 May 2024 08:54:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/633&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/633&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 15:43:11 +0000</comment>
                            <comment id="14676088" author="aivanov" created="Fri, 24 May 2024 11:20:17 -0700"  >Regression test is provided in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8331142&quot; title=&quot;Add test for number of loader threads in BasicDirectoryModel&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8331142&quot;&gt;&lt;strike&gt;JDK-8331142&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14676081" author="aivanov" created="Fri, 24 May 2024 11:10:21 -0700"  >There was another variation of this bug in 8u:&lt;br/&gt;
&lt;br/&gt;
Exception in Thread-2: class java.lang.IllegalThreadStateException&lt;br/&gt;
java.lang.IllegalThreadStateException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Thread.start(Thread.java:710)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.swing.plaf.basic.BasicDirectoryModel.validateFileCache(BasicDirectoryModel.java:148)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.swing.FilePane.rescanCurrentDirectory(FilePane.java:1799)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.swing.plaf.metal.MetalFileChooserUI.rescanCurrentDirectory(MetalFileChooserUI.java:797)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.swing.JFileChooser.rescanCurrentDirectory(JFileChooser.java:625)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at ConcurrentModification$Scanner.run(ConcurrentModification.java:204)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Thread.run(Thread.java:750)&lt;br/&gt;
&lt;br/&gt;
Our analysis concluded that the thread which created the new thread was pre-empted after it had created the thread object but before the start() was called; in this scenario, another thread could interrupt the thread. Thus, when the start method is called, the state of the thread was not 0 and therefore the thread could not be started.</comment>
                            <comment id="14667741" author="roboduke" created="Wed, 24 Apr 2024 08:19:39 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/164&quot;&gt;https://git.openjdk.org/jdk22u/pull/164&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-24 15:12:52 +0000</comment>
                            <comment id="14665917" author="aivanov" created="Wed, 17 Apr 2024 03:59:51 -0700"  >Fix request: 22u&lt;br/&gt;
&lt;br/&gt;
This bug fix resolves a race condition BasicDirectoryModel, it ensures there&amp;#39;s only one Files Loading Thread.&lt;br/&gt;
&lt;br/&gt;
Clean backport (if applied on top of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8323670&quot; title=&quot;A few client tests intermittently throw ConcurrentModificationException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8323670&quot;&gt;&lt;strike&gt;JDK-8323670&lt;/strike&gt;&lt;/a&gt;). Medium risk.</comment>
                            <comment id="14659613" author="aivanov" created="Fri, 22 Mar 2024 05:14:51 -0700"  >Providing a regression test for this bug is hard, the thread is created by BasicDirectoryModel. The only way I can think of is taking a snapshot of live threads, if there are several instances of BasicDirectoryModel.FilesLoader (&amp;quot;Basic L&amp;amp;F File Loading Thread&amp;quot;) in any of the snapshots, the test fails.</comment>
                            <comment id="14659377" author="dukebot" created="Thu, 21 Mar 2024 09:06:21 -0700"  >Changeset: e66788c1&lt;br/&gt;
Author:    Alexey Ivanov &amp;lt;&lt;a href=&apos;mailto:aivanov@openjdk.org&apos;&gt;aivanov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-21 16:03:30 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e66788c16563d343f6cccd2807a251ccc6f9b64a&quot;&gt;https://git.openjdk.org/jdk/commit/e66788c16563d343f6cccd2807a251ccc6f9b64a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14654388" author="roboduke" created="Mon, 4 Mar 2024 12:25:03 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18111&quot;&gt;https://git.openjdk.org/jdk/pull/18111&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-04 20:21:30 +0000</comment>
                            <comment id="14646255" author="aivanov" created="Fri, 2 Feb 2024 09:31:56 -0800"  >The latest version of the test:&lt;br/&gt;
&lt;a href=&quot;https://github.com/aivanov-jdk/jdk/blob/c7f53dedc334c0b12b389c73fdbcc9243e761bc4/test/jdk/javax/swing/JFileChooser/FileSystemView/BasicDirectoryModelConcurrency.java&quot;&gt;https://github.com/aivanov-jdk/jdk/blob/c7f53dedc334c0b12b389c73fdbcc9243e761bc4/test/jdk/javax/swing/JFileChooser/FileSystemView/BasicDirectoryModelConcurrency.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s in the &#8216;8323670-BasicDirectoryModel-concurrency&#8217; branch:&lt;br/&gt;
&lt;a href=&quot;https://github.com/aivanov-jdk/jdk/blob/8323670-BasicDirectoryModel-concurrency/test/jdk/javax/swing/JFileChooser/FileSystemView/BasicDirectoryModelConcurrency.java&quot;&gt;https://github.com/aivanov-jdk/jdk/blob/8323670-BasicDirectoryModel-concurrency/test/jdk/javax/swing/JFileChooser/FileSystemView/BasicDirectoryModelConcurrency.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The latest version of the debug traces:&lt;br/&gt;
&lt;a href=&quot;https://github.com/aivanov-jdk/jdk/blob/09163b638a0e759f260637f3f17c542b5359b65e/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicDirectoryModel.java&quot;&gt;https://github.com/aivanov-jdk/jdk/blob/09163b638a0e759f260637f3f17c542b5359b65e/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicDirectoryModel.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Both the traces and the test are in the &#8216;8323670-BasicDirectoryModel-concurrency-debug&#8217; branch.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The test is not stable enough to contribute it to OpenJDK.&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8323670?focusedId=14644835&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14644835&quot;&gt;https://bugs.openjdk.org/browse/JDK-8323670?focusedId=14644835&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14644835&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/pull/17462#issuecomment-1914844026&quot;&gt;https://github.com/openjdk/jdk/pull/17462#issuecomment-1914844026&lt;/a&gt;</comment>
                            <comment id="14646243" author="aivanov" created="Fri, 2 Feb 2024 08:51:57 -0800"  >I found this issue while I was running a test for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8323670&quot; title=&quot;A few client tests intermittently throw ConcurrentModificationException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8323670&quot;&gt;&lt;strike&gt;JDK-8323670&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
If I call fileChooser.rescanCurrentDirectory from 5 threads concurrently, the following output is possible:&lt;br/&gt;
&lt;br/&gt;
&amp;gt; validateFileCache Thread-0 - null&lt;br/&gt;
&amp;lt; validateFileCache Thread-0 - FilesLoader(1, File Loading Thread 1)&lt;br/&gt;
&amp;gt; validateFileCache Thread-0 - FilesLoader(1, File Loading Thread 1)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 1&lt;br/&gt;
&amp;lt; validateFileCache Thread-0 - FilesLoader(2, File Loading Thread 2)&lt;br/&gt;
&lt;br/&gt;
&amp;gt; validateFileCache Thread-2 - FilesLoader(2, File Loading Thread 2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 2&lt;br/&gt;
&amp;gt; validateFileCache Thread-6 - FilesLoader(2, File Loading Thread 2)&lt;br/&gt;
&amp;gt; validateFileCache Thread-4 - FilesLoader(2, File Loading Thread 2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 2&lt;br/&gt;
&amp;gt; validateFileCache Thread-3 - FilesLoader(2, File Loading Thread 2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 2&lt;br/&gt;
&amp;gt; validateFileCache Thread-5 - FilesLoader(2, File Loading Thread 2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 2&lt;br/&gt;
&amp;lt; validateFileCache Thread-2 - FilesLoader(3, File Loading Thread 3)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;interrupt File Loading Thread 2&lt;br/&gt;
&amp;lt; validateFileCache Thread-4 - FilesLoader(4, File Loading Thread 4)&lt;br/&gt;
&amp;lt; validateFileCache Thread-6 - FilesLoader(5, File Loading Thread 5)&lt;br/&gt;
&amp;lt; validateFileCache Thread-3 - FilesLoader(6, File Loading Thread 6)&lt;br/&gt;
&amp;lt; validateFileCache Thread-5 - FilesLoader(7, File Loading Thread 7)&lt;br/&gt;
&lt;br/&gt;
At first Thread-0 enters BasicDirectoryModel.validateFileCache and starts FilesLoader(1). It enters validateFileCache again, in this case it interrupts FilesLoader(1) and starts a new one, FilesLoader(2). (Thread-0 is the runner thread which created JFileChooser.)&lt;br/&gt;
&lt;br/&gt;
At this point, several threads &#8212; Thread-2, Thread-6, Thread-4, Thread-3, Thread-5 &#8212; enter validateFileCache. All these threads see FilesLoader(2) as the active file loader, they interrupt it and each creates a new instance FilesLoader. Thus, instead of one filesLoader, there are five.&lt;br/&gt;
&lt;br/&gt;
Each thread produces its own instance of DoChangeContents that&amp;#39;s assigned to &amp;#39;runnable&amp;#39;, all five are submitted to EDT. Only the latest one, with fetchID=7, fires an event; others exit because their fid and the current fetchID do not match.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5128243">JDK-8331324</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128425">JDK-8331482</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130670">JDK-8333253</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130703">JDK-8333285</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130872">JDK-8333415</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131004">JDK-8333534</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131561">JDK-8334000</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131906">JDK-8334311</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5129138">JDK-8332000</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5009561">JDK-8238169</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5127951">JDK-8331142</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5012937">JDK-8240690</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118848">JDK-8323670</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5099723">JDK-8307091</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17431"><![CDATA[b19]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="20306">15</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34usr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17312"><![CDATA[b16]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="206"><![CDATA[javax.swing]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>