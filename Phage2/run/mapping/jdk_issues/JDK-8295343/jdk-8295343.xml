<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:44:12 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8295343] sun/security/pkcs11 tests fail on Linux RHEL 8.6 and newer</title>
                <link>https://bugs.openjdk.org/browse/JDK-8295343</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>On our RHEL 8.6  Linux x86_64 test machine, a couple of sun/security/pkcs11 tests fail.&lt;br/&gt;
Below are a number of examples. It looks like the native libs of the system do not support any more RSA keys with 512 bit length.&lt;br/&gt;
Should the tests be adjusted so that some keys are not tested any more in case the system is too new?&lt;br/&gt;
&lt;br/&gt;
Examples of errors :&lt;br/&gt;
&lt;br/&gt;
sun/security/pkcs11/KeyStore/Basic.java&lt;br/&gt;
----------------------------------------------&lt;br/&gt;
&amp;nbsp;....&lt;br/&gt;
test 31 passed&lt;br/&gt;
test 32 passed&lt;br/&gt;
test 33 passed&lt;br/&gt;
got [pk1] signing key: SunPKCS11-nss RSA private key, 512 bits token object, not sensitive, extractable)&lt;br/&gt;
test Basic.testBasic(): failure&lt;br/&gt;
java.security.InvalidKeyException: RSA key must be at least 1023 bits&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11Signature.checkKeySize(P11Signature.java:430)&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11Signature.engineInitSign(P11Signature.java:496)&lt;br/&gt;
	at java.base/java.security.Signature$Delegate.engineInitSign(Signature.java:1357)&lt;br/&gt;
	at java.base/java.security.Signature.initSign(Signature.java:636)&lt;br/&gt;
	at Basic.signAlias(Basic.java:313)&lt;br/&gt;
	at Basic.sign(Basic.java:287)&lt;br/&gt;
	at Basic.doTest(Basic.java:234)&lt;br/&gt;
	at Basic.main(Basic.java:190)&lt;br/&gt;
	at PKCS11Test.premain(PKCS11Test.java:174)&lt;br/&gt;
	at PKCS11Test.testNSS(PKCS11Test.java:550)&lt;br/&gt;
	at PKCS11Test.main(PKCS11Test.java:210)&lt;br/&gt;
	at Basic.testBasic(Basic.java:116)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)&lt;br/&gt;
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)&lt;br/&gt;
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&lt;br/&gt;
	at org.testng.TestRunner.privateRun(TestRunner.java:764)&lt;br/&gt;
	at org.testng.TestRunner.run(TestRunner.java:585)&lt;br/&gt;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)&lt;br/&gt;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)&lt;br/&gt;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)&lt;br/&gt;
	at org.testng.SuiteRunner.run(SuiteRunner.java:286)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)&lt;br/&gt;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)&lt;br/&gt;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)&lt;br/&gt;
	at org.testng.TestNG.runSuites(TestNG.java:1069)&lt;br/&gt;
	at org.testng.TestNG.run(TestNG.java:1037)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:93)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:53)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
sun/security/pkcs11/rsa/TestKeyFactory.java&lt;br/&gt;
------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
java.security.InvalidKeyException: Could not create RSA public key&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11RSAKeyFactory.implTranslatePublicKey(P11RSAKeyFactory.java:70)&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11KeyFactory.engineTranslateKey(P11KeyFactory.java:153)&lt;br/&gt;
	at java.base/java.security.KeyFactory.translateKey(KeyFactory.java:469)&lt;br/&gt;
	at TestKeyFactory.testPublic(TestKeyFactory.java:164)&lt;br/&gt;
	at TestKeyFactory.test(TestKeyFactory.java:221)&lt;br/&gt;
	at TestKeyFactory.main(TestKeyFactory.java:241)&lt;br/&gt;
	at PKCS11Test.premain(PKCS11Test.java:174)&lt;br/&gt;
	at PKCS11Test.testNSS(PKCS11Test.java:550)&lt;br/&gt;
	at PKCS11Test.main(PKCS11Test.java:210)&lt;br/&gt;
	at TestKeyFactory.main(TestKeyFactory.java:228)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
Caused by: sun.security.pkcs11.wrapper.PKCS11Exception: CKR_ATTRIBUTE_VALUE_INVALID&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.wrapper.PKCS11.C_CreateObject(Native Method)&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11RSAKeyFactory.generatePublic(P11RSAKeyFactory.java:193)&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11RSAKeyFactory.implTranslatePublicKey(P11RSAKeyFactory.java:59)&lt;br/&gt;
	... 13 more&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
sun/security/pkcs11/rsa/TestKeyPairGenerator.java&lt;br/&gt;
-------------------------------------------------------&lt;br/&gt;
sunpkcs11: Initializing PKCS#11 library /usr/lib64/libsoftokn3.so&lt;br/&gt;
java.security.InvalidParameterException: RSA key must be at least 1023 bits. The specific key size 512 is not supported&lt;br/&gt;
	at jdk.crypto.cryptoki/sun.security.pkcs11.P11KeyPairGenerator.initialize(P11KeyPairGenerator.java:154)&lt;br/&gt;
	at java.base/java.security.KeyPairGenerator$Delegate.initialize(KeyPairGenerator.java:665)&lt;br/&gt;
	at java.base/java.security.KeyPairGenerator.initialize(KeyPairGenerator.java:377)&lt;br/&gt;
	at TestKeyPairGenerator.main(TestKeyPairGenerator.java:127)&lt;br/&gt;
	at PKCS11Test.premain(PKCS11Test.java:174)&lt;br/&gt;
	at PKCS11Test.testNSS(PKCS11Test.java:550)&lt;br/&gt;
	at PKCS11Test.main(PKCS11Test.java:210)&lt;br/&gt;
	at TestKeyPairGenerator.main(TestKeyPairGenerator.java:108)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5085345">JDK-8295343</key>
            <summary>sun/security/pkcs11 tests fail on Linux RHEL 8.6 and newer</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mdonovan">Matthew Donovan</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>tier2</label>
                    </labels>
                <created>Fri, 14 Oct 2022 05:36:34 -0700</created>
                <updated>Wed, 28 May 2025 00:34:16 -0700</updated>
                            <resolved>Wed, 22 Nov 2023 05:04:03 -0800</resolved>
                                    <version>7</version>
                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>21</watches>
                                                                                                                                                            <comments>
                            <comment id="14759701" author="JIRAUSER20102" created="Tue, 11 Mar 2025 09:41:24 -0700"  >NSS libraries were moved to Oracle Artifact Repo. The libraries used for this test for JDK8U is much different from master bug. It needs much efforts to build the library for each of systems. This backport on jdk8u is on hold.</comment>
                            <comment id="14670885" author="JIRAUSER20917" created="Sun, 5 May 2024 19:27:10 -0700"  >Fix request [11u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 11.0.24-oracle.&lt;br/&gt;
No risk, only tests change.&lt;br/&gt;
Also backport for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8231351&quot; title=&quot;Add notes for PKCS11 tests in the test doc&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8231351&quot;&gt;&lt;strike&gt;JDK-8231351&lt;/strike&gt;&lt;/a&gt; for the testing.html, some small change.&lt;br/&gt;
Test pass. SAP nightly testing passed.</comment>
                            <comment id="14669240" author="roboduke" created="Tue, 30 Apr 2024 02:32:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2694&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2694&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-30 09:23:08 +0000</comment>
                            <comment id="14666381" author="JIRAUSER20917" created="Thu, 18 Apr 2024 18:12:39 -0700"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.11-oracle.&lt;br/&gt;
Small change.&lt;br/&gt;
Test pass. SAP nightly testing passed.</comment>
                            <comment id="14665336" author="roboduke" created="Mon, 15 Apr 2024 19:02:55 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2412&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2412&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-16 01:57:32 +0000</comment>
                            <comment id="14641773" author="roboduke" created="Thu, 18 Jan 2024 23:05:49 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/186&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/186&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-17 14:17:48 +0000</comment>
                            <comment id="14641152" author="goetz" created="Wed, 17 Jan 2024 06:20:20 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.3-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport. Will push this after follow-up &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8320690&quot; title=&quot;sun/security/pkcs11/Provider/MultipleLogins.sh fails after 8295343&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8320690&quot;&gt;&lt;strike&gt;JDK-8320690&lt;/strike&gt;&lt;/a&gt; aka &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319128&quot; title=&quot;sun/security/pkcs11 tests fail on OL 7.9 aarch64&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8319128&quot;&gt;&lt;strike&gt;JDK-8319128&lt;/strike&gt;&lt;/a&gt; to avoid test failures.&lt;br/&gt;
Tests pass. SAP nightly testing passed.</comment>
                            <comment id="14628661" author="mbaesken" created="Thu, 23 Nov 2023 05:58:29 -0800"  >After the change, sun/security/pkcs11/Provider/MultipleLogins.sh  starts to fail in our test infra (e.g. on Linux. Mac).&lt;br/&gt;
we get in stderr :&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; jtreg.SkippedException: Warning: unsupported OS: Linux-amd64-64, please initialize NSS library location, skipping test&lt;br/&gt;
	at PKCS11Test.getNSSLibPath(PKCS11Test.java:262)&lt;br/&gt;
	at PKCS11Test.getNSSLibDir(PKCS11Test.java:243)&lt;br/&gt;
	at PKCS11Test.getNSSLibDir(PKCS11Test.java:239)&lt;br/&gt;
	at PKCS11Test.getNssConfig(PKCS11Test.java:484)&lt;br/&gt;
	at MultipleLogins.main(MultipleLogins.java:49)&lt;br/&gt;
&lt;br/&gt;
Probably Provider/MultipleLogins.sh still cannot deal correctly with the cases where now a SkippedException is thrown .&lt;br/&gt;
I created &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8320690&quot; title=&quot;sun/security/pkcs11/Provider/MultipleLogins.sh fails after 8295343&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8320690&quot;&gt;&lt;strike&gt;JDK-8320690&lt;/strike&gt;&lt;/a&gt; .</comment>
                            <comment id="14628432" author="dukebot" created="Wed, 22 Nov 2023 05:04:02 -0800"  >Changeset: 6ce0ebb8&lt;br/&gt;
Author:    Matthew Donovan &amp;lt;&lt;a href=&apos;mailto:mdonovan@openjdk.org&apos;&gt;mdonovan@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-22 13:00:56 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6ce0ebb858d3112f136e12d3ad595f805f6871a0&quot;&gt;https://git.openjdk.org/jdk/commit/6ce0ebb858d3112f136e12d3ad595f805f6871a0&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14619933" author="roboduke" created="Fri, 20 Oct 2023 12:24:38 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16294&quot;&gt;https://git.openjdk.org/jdk/pull/16294&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-20 19:18:47 +0000</comment>
                            <comment id="14617268" author="valeriep" created="Tue, 10 Oct 2023 12:22:18 -0700"  >For sun/security/pkcs11/KeyStore/Basic.java, it looks like we need to regenerate all the keys and certs using the generally supported RSA key size. 512 is too dated. It&amp;#39;d be nice to update the test and we can resume running this test.</comment>
                            <comment id="14616163" author="JIRAUSER20515" created="Thu, 5 Oct 2023 04:55:57 -0700"  >Hi [~akhuntia], I believe so.</comment>
                            <comment id="14616161" author="JIRAUSER20515" created="Thu, 5 Oct 2023 04:49:19 -0700"  >Hi, [~mbaesken], &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296631&quot; title=&quot;NSS tests failing on OL9 linux-aarch64 hosts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8296631&quot;&gt;&lt;strike&gt;JDK-8296631&lt;/strike&gt;&lt;/a&gt; was caused by a change in database formats. It looks like KeyStore/Basic.java fails because of incorrect key sizes. I didn&amp;#39;t work on 8296631 so I don&amp;#39;t know if they&amp;#39;re related.</comment>
                            <comment id="14616106" author="mbaesken" created="Thu, 5 Oct 2023 00:43:14 -0700"  >Hi [~mdonovan], thanks for the info about &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296631&quot; title=&quot;NSS tests failing on OL9 linux-aarch64 hosts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8296631&quot;&gt;&lt;strike&gt;JDK-8296631&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
However I notice that  e.g.  sun/security/pkcs11/KeyStore/Basic.java is still excluded :&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/test/jdk/ProblemList.txt#L624&quot;&gt;https://github.com/openjdk/jdk/blob/master/test/jdk/ProblemList.txt#L624&lt;/a&gt;&lt;br/&gt;
Is this still valid ?</comment>
                            <comment id="14615858" author="JIRAUSER20515" created="Wed, 4 Oct 2023 08:23:21 -0700"  >[~akhuntia] those errors were fixed in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296631&quot;&gt;https://bugs.openjdk.org/browse/JDK-8296631&lt;/a&gt; and merged just a day or two ago.</comment>
                            <comment id="14558734" author="mbalao" created="Wed, 8 Feb 2023 22:51:20 -0800"  >@Matthias:&lt;br/&gt;
&lt;br/&gt;
1) The problem with the minimum size is not in the test itself but in the key that the test is using (obtained from a PKCS #11 key store but originally pushed to the key store from a serialized byte[] in a file). My impression is that we need to generate keys and certificates again. It would be helpful and self-documented if, as part of fixing this issue, we add an script to generate all the keys, certificates and key stores that this test depends on.&lt;br/&gt;
&lt;br/&gt;
2) You&amp;#39;re right, if the patch is downstream only, checking the NSS version would not be helpful. I can confirm that RHEL 9 has exactly the same patch than RHEL 8.&lt;br/&gt;
&lt;br/&gt;
We can explore the method to skip the test but I wish we could also generate the keys again and run the test. It&amp;#39;s possible that this NSS patch is pushed upstream or applied in other OS in the future so we would have less coverage if we keep these old keys.</comment>
                            <comment id="14539237" author="valeriep" created="Mon, 21 Nov 2022 11:44:00 -0800"  >+1 for changing the hard-coded values as a quick fix.&lt;br/&gt;
Perhaps we can add a pkg private method to the SunPKCS11 provider which returns the min and max value of a particular PKCS11 mechanism. This may then be used by the tests to skip certain values if not within the supported range. </comment>
                            <comment id="14536071" author="rhalade" created="Wed, 9 Nov 2022 16:14:21 -0800"  >Following tests also failed -&lt;br/&gt;
&lt;br/&gt;
sun/security/tools/keytool/NssTest.java &lt;br/&gt;
sun/security/pkcs11/Signature/TestRSAKeyLength.java&lt;br/&gt;
sun/security/pkcs11/rsa/TestSignatures.java</comment>
                            <comment id="14535569" author="mbaesken" created="Tue, 8 Nov 2022 08:02:41 -0800"  >I do not see really much about min key sizes in the test itself  &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/test/jdk/sun/security/pkcs11/KeyStore/Basic.java&quot;&gt;https://github.com/openjdk/jdk/blob/master/test/jdk/sun/security/pkcs11/KeyStore/Basic.java&lt;/a&gt;  .&lt;br/&gt;
Is this stored somehow in the data files found at test/jdk/sun/security/pkcs11/KeyStore/BasicData  ?&lt;br/&gt;
PKCS11Test.java has already some coding for finding out specific nss lib versions (getNssInfo)  but probably such a check would not help much in this test on RHEL 8 /9  if this is a specific NSS RHEL-downstream RPM patch for NSS 3.79 (so we would not find it in other NSS 3.79 libs on other OS, is my understanding correct) ?</comment>
                            <comment id="14535278" author="mbalao" created="Mon, 7 Nov 2022 12:56:27 -0800"  >The min RSA key value supported comes from the NSS Software Token. In particular, OpenJDK obtains the CK_MECHANISM_INFO info for a given mechanism (such as CKM_RSA_PKCS_KEY_PAIR_GEN in the case of TestKeyPairGenerator) with the C_GetMechanismInfo PKCS#11 API. The relevant field in the CK_MECHANISM_INFO is ulMinKeySize and, for RSA mechanisms, specifies the min modulus in bits. In NSS upstream, min modulus for RSA keys have been 128 bits for the last several years [1] [2].&lt;br/&gt;
&lt;br/&gt;
The min RSA key enforcement from 128 to 1023 bits is not RHEL crypto-policies related but comes from an NSS RHEL-downstream RPM patch for NSS 3.79, that is shipped with the latest RHEL 8.6.0 release [3]. Thus, changing the crypto-policies profile to LEGACY will not make any difference. Using an older RHEL release -one that uses NSS &amp;lt; 3.79- will make the test pass.&lt;br/&gt;
&lt;br/&gt;
In my view, we can either increase the test&amp;#39;s min key size to a fixed value greater than 1023 or make it more context-aware and adjust to the min value provided from the underlying NSS Software Token. The latter can be a bit involved because we probably don&amp;#39;t have public API to retrieve the min key size for a given mechanism, and would need to either break encapsulation or parse the error message. I&amp;#39;d go with the former idea of updating the test&amp;#39;s hard-coded values for simplicity.&lt;br/&gt;
&lt;br/&gt;
--&lt;br/&gt;
[1] - &lt;a href=&quot;https://github.com/nss-dev/nss/blob/NSS_3_67_RTM/lib/freebl/blapit.h#L138&quot;&gt;https://github.com/nss-dev/nss/blob/NSS_3_67_RTM/lib/freebl/blapit.h#L138&lt;/a&gt;&lt;br/&gt;
[2] - &lt;a href=&quot;https://github.com/nss-dev/nss/blob/NSS_3_67_RTM/lib/softoken/pkcs11.c#L316&quot;&gt;https://github.com/nss-dev/nss/blob/NSS_3_67_RTM/lib/softoken/pkcs11.c#L316&lt;/a&gt;&lt;br/&gt;
[3] - &lt;a href=&quot;https://git.centos.org/rpms/nss/blob/dc0051d01350d07bd453815ac689db13c9f22e59/f/SOURCES/nss-3.79-rhel-8-fips-signature-policy.patch#_369&quot;&gt;https://git.centos.org/rpms/nss/blob/dc0051d01350d07bd453815ac689db13c9f22e59/f/SOURCES/nss-3.79-rhel-8-fips-signature-policy.patch#_369&lt;/a&gt;</comment>
                            <comment id="14535207" author="mbaesken" created="Mon, 7 Nov 2022 08:13:58 -0800"  >I got some feedback from RedHat about the topic. &lt;br/&gt;
Key size limits are obtained from underlaying pkcs11 implementation .&lt;br/&gt;
The crypto policies, on RHEL-8 and 9,  require RSA keys &amp;gt;=1024 (on RHEL-8) and &amp;gt;=2048 (on RHEL-9) : &lt;br/&gt;
&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening&quot;&gt;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening&quot;&gt;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
RedHat confirmed that jdk17 portable builds currently fail these tests (ones mentioned in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8295343&quot; title=&quot;sun/security/pkcs11 tests fail on Linux RHEL 8.6 and newer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8295343&quot;&gt;&lt;strike&gt;JDK-8295343&lt;/strike&gt;&lt;/a&gt;) on RHEL-8 even with legacy CP, however same build passes these tests on RHEL-7  (RHEL-7 does not yet have system-wide crypto policies).&lt;br/&gt;
So we should probably increase the RSA key sizes used in these tests.</comment>
                            <comment id="14530994" author="mbaesken" created="Wed, 19 Oct 2022 05:48:08 -0700"  >Looks like the RHEL8 system defaults&lt;br/&gt;
&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening&quot;&gt;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening&lt;/a&gt;&lt;br/&gt;
do not allow RSA keys with less than 1024 bits   (not sure about those exceptions &amp;quot;RSA key must be at least 1023 bits&amp;quot; , shouldn&amp;#39;t this be 1024 the current value looks a bit odd).</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5140543">JDK-8341428</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5119186">JDK-8323979</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120031">JDK-8324705</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121401">JDK-8325801</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121481">JDK-8325867</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121510">JDK-8325892</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5127361">JDK-8330649</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128721">JDK-8331700</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                                        </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5087152">JDK-8296675</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5115393">JDK-8320690</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5120207">JDK-8324841</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5085426">JDK-8295405</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5087091">JDK-8296611</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5093127">JDK-8301611</subtask>
                                                              <subtask id="5112230">JDK-8317977</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ywab:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="249"><![CDATA[javax.crypto:pkcs11]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>