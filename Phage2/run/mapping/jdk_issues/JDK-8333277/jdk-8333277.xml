<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:08:17 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8333277] ubsan: mlib_ImageScanPoly.c:292:43: runtime error: division by zero</title>
                <link>https://bugs.openjdk.org/browse/JDK-8333277</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When running the jdk jtreg tests with ubsan enabled binaries on Linux x86_64, I get the warning below.&lt;br/&gt;
This shows up in a couple of tests, for example&lt;br/&gt;
java/awt/image/mlib/MlibOpsTest.jtr&lt;br/&gt;
java/awt/image/Raster/TestChildRasterOp.jtr&lt;br/&gt;
&lt;br/&gt;
src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c:292:43: runtime error: division by zero&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x7fe6d958b862 in mlib_AffineEdges src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c:292&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x7fe6d958bb5d in mlib_ImageAffine_alltypes src/java.desktop/share/native/libmlib_image/mlib_ImageAffine.c:179&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x7fe6d9e9b398 in Java_sun_awt_image_ImagingLib_transformBI src/java.desktop/share/native/libawt/awt/medialib/awt_ImagingLib.c:922&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x7fe76f00ae7b  (&amp;lt;unknown module&amp;gt;)</description>
                <environment></environment>
        <key id="5130694">JDK-8333277</key>
            <summary>ubsan: mlib_ImageScanPoly.c:292:43: runtime error: division by zero</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbaesken">Matthias Baesken</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok-next</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>ubsan</label>
                    </labels>
                <created>Thu, 30 May 2024 07:13:10 -0700</created>
                <updated>Thu, 1 Aug 2024 01:30:14 -0700</updated>
                            <resolved>Thu, 13 Jun 2024 05:48:30 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14692983" author="mbaesken" created="Fri, 26 Jul 2024 05:39:16 -0700"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14692982" author="mbaesken" created="Fri, 26 Jul 2024 05:38:52 -0700"  >jdk23u backport request&lt;br/&gt;
I would like to have the patch in jdk23u as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14692978" author="roboduke" created="Fri, 26 Jul 2024 05:20:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/870&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/870&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-26 12:12:31 +0000</comment>
                            <comment id="14692977" author="roboduke" created="Fri, 26 Jul 2024 05:18:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/37&quot;&gt;https://git.openjdk.org/jdk23u/pull/37&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-26 12:10:50 +0000</comment>
                            <comment id="14681383" author="dukebot" created="Thu, 13 Jun 2024 05:48:29 -0700"  >Changeset: 57b64814&lt;br/&gt;
Author:    Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-13 12:45:32 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/57b6481449612529615484a313d8b85ccf23e287&quot;&gt;https://git.openjdk.org/jdk/commit/57b6481449612529615484a313d8b85ccf23e287&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14680828" author="roboduke" created="Wed, 12 Jun 2024 01:08:52 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19674&quot;&gt;https://git.openjdk.org/jdk/pull/19674&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-12 08:02:00 +0000</comment>
                            <comment id="14680563" author="mbaesken" created="Tue, 11 Jun 2024 06:23:53 -0700"  >With this small change the java/awt/image tests  pass :&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c b/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c&lt;br/&gt;
index a643b9c111c..34bda0ff12e 100644&lt;br/&gt;
--- a/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c&lt;br/&gt;
+++ b/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c&lt;br/&gt;
@@ -289,13 +289,15 @@ mlib_status mlib_AffineEdges(mlib_affine_param *param,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dX1 = coords[(topIdx - i) &amp;amp; 0x3][0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dY2 = coords[(topIdx - i - 1) &amp;amp; 0x3][1];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dX2 = coords[(topIdx - i - 1) &amp;amp; 0x3][0];&lt;br/&gt;
-    mlib_d64 x = dX1, slope = (dX2 - dX1) / (dY2 - dY1);&lt;br/&gt;
+    mlib_d64 x = dX1, slope;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_s32 y1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_s32 y2;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (dY1 == dY2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+    slope = (dX2 - dX1) / (dY2 - dY1);&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!(IS_FINITE(slope))) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
@@ -330,13 +332,15 @@ mlib_status mlib_AffineEdges(mlib_affine_param *param,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dX1 = coords[(topIdx + i) &amp;amp; 0x3][0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dY2 = coords[(topIdx + i + 1) &amp;amp; 0x3][1];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dX2 = coords[(topIdx + i + 1) &amp;amp; 0x3][0];&lt;br/&gt;
-    mlib_d64 x = dX1, slope = (dX2 - dX1) / (dY2 - dY1);&lt;br/&gt;
+    mlib_d64 x = dX1, slope;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_s32 y1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_s32 y2;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (dY1 == dY2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+    slope = (dX2 - dX1) / (dY2 - dY1);&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!(IS_FINITE(slope))) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</comment>
                            <comment id="14680549" author="mbaesken" created="Tue, 11 Jun 2024 05:09:09 -0700"  >Could we move the slope computation after the check ?&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (dY1 == dY2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slope = (dX2 - dX1) / (dY2 - dY1);&lt;br/&gt;
&lt;br/&gt;
Maybe this is better than using an attribute annotating the function.</comment>
                            <comment id="14680399" author="mbaesken" created="Tue, 11 Jun 2024 00:26:28 -0700"  >&amp;gt; So I don&amp;#39;t think we need to do anything here.&lt;br/&gt;
&lt;br/&gt;
With a supported configure option  &amp;quot;--enable-ubsan&amp;quot; , it would be good to have a way to deal with this;  for the C++ coding in HS I used at a few places an attribute for such functions/methods to attribute that the coding is fine.&lt;br/&gt;
Have to check this for C coding.</comment>
                            <comment id="14680270" author="prr" created="Mon, 10 Jun 2024 11:14:41 -0700"  >By looking at the line of code in the description and simply instrumenting it  ..&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c b/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c&lt;br/&gt;
index a643b9c111c..c7e46590edd 100644&lt;br/&gt;
--- a/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c&lt;br/&gt;
+++ b/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c&lt;br/&gt;
@@ -290,6 +290,7 @@ mlib_status mlib_AffineEdges(mlib_affine_param *param,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dY2 = coords[(topIdx - i - 1) &amp;amp; 0x3][1];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 dX2 = coords[(topIdx - i - 1) &amp;amp; 0x3][0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_d64 x = dX1, slope = (dX2 - dX1) / (dY2 - dY1);&lt;br/&gt;
+fprintf(stderr, &amp;quot;%f %f slope=%f\n&amp;quot;, dY2, dY1, slope);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_s32 y1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mlib_s32 y2;&lt;br/&gt;
&lt;br/&gt;
... &lt;br/&gt;
I can reproduce this using a cut down test from a part of MlibOpsTest.java&lt;br/&gt;
import java.awt.geom.AffineTransform;&lt;br/&gt;
import java.awt.image.AffineTransformOp;&lt;br/&gt;
import static java.awt.image.AffineTransformOp.*;&lt;br/&gt;
import java.awt.image.BufferedImage;&lt;br/&gt;
import static java.awt.image.BufferedImage.*;&lt;br/&gt;
&lt;br/&gt;
public class ATOp {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AffineTransform at = new AffineTransform();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AffineTransformOp op = new AffineTransformOp(at, TYPE_BICUBIC);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BufferedImage src = new BufferedImage(100, 100, TYPE_INT_RGB);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BufferedImage dst = new BufferedImage(100, 100, TYPE_INT_RGB);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BufferedImage ret = op.filter(src, dst);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Running this prints &lt;br/&gt;
98.000000 1.000000 slope=0.000000&lt;br/&gt;
98.000000 98.000000 slope=inf&lt;br/&gt;
99.500000 -0.500000 slope=0.000000&lt;br/&gt;
99.500000 99.500000 slope=inf&lt;br/&gt;
&lt;br/&gt;
However I don&amp;#39;t think there is a problem here. The code knows this can happen.&lt;br/&gt;
&lt;br/&gt;
Right below the diff I showed we have&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (dY1 == dY2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!(IS_FINITE(slope))) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}   &lt;br/&gt;
&lt;br/&gt;
Both of these would catch this case. &lt;br/&gt;
&lt;br/&gt;
The same pattern is followed in another loop about 30 lines later.&lt;br/&gt;
&lt;br/&gt;
So I don&amp;#39;t think we need to do anything here.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5135326">JDK-8337333</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135736">JDK-8337643</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36jk3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="197"><![CDATA[2d]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>