<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:26:28 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8259866] two java.util tests failed with &quot;IOException: There is not enough space on the disk&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8259866</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following tests failed in the JDK17 CI:&lt;br/&gt;
&lt;br/&gt;
java/util/zip/ZipFile/Zip64SizeTest.java&lt;br/&gt;
java/util/jar/JarFile/LargeManifestOOMTest.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the Zip64SizeTest.java log file:&lt;br/&gt;
&lt;br/&gt;
----------System.out:(45/2703)----------&lt;br/&gt;
[TestNG] Running:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;java/util/zip/ZipFile/Zip64SizeTest.java&lt;br/&gt;
&lt;br/&gt;
config Zip64SizeTest.setUp(): success&lt;br/&gt;
Creating LargeZipEntry.txt&lt;br/&gt;
test Zip64SizeTest.validateZipEntrySizes(): failure&lt;br/&gt;
java.io.IOException: There is not enough space on the disk&lt;br/&gt;
	at java.base/java.io.RandomAccessFile.setLength(Native Method)&lt;br/&gt;
	at Zip64SizeTest.createFiles(Zip64SizeTest.java:124)&lt;br/&gt;
	at Zip64SizeTest.validateZipEntrySizes(Zip64SizeTest.java:67)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)&lt;br/&gt;
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)&lt;br/&gt;
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)&lt;br/&gt;
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)&lt;br/&gt;
	at org.testng.TestRunner.privateRun(TestRunner.java:773)&lt;br/&gt;
	at org.testng.TestRunner.run(TestRunner.java:623)&lt;br/&gt;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)&lt;br/&gt;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)&lt;br/&gt;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)&lt;br/&gt;
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)&lt;br/&gt;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)&lt;br/&gt;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)&lt;br/&gt;
	at org.testng.TestNG.run(TestNG.java:1018)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:94)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:831)&lt;br/&gt;
config Zip64SizeTest.tearDown(): success&lt;br/&gt;
&lt;br/&gt;
===============================================&lt;br/&gt;
java/util/zip/ZipFile/Zip64SizeTest.java&lt;br/&gt;
Total tests run: 1, Failures: 1, Skips: 0&lt;br/&gt;
===============================================&lt;br/&gt;
&lt;br/&gt;
----------System.err:(12/726)----------&lt;br/&gt;
java.lang.Exception: failures: 1&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:96)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:831)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: failures: 1&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the LargeManifestOOMTest.java log file:&lt;br/&gt;
&lt;br/&gt;
----------System.out:(41/2539)----------&lt;br/&gt;
[TestNG] Running:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;java/util/jar/JarFile/LargeManifestOOMTest.java&lt;br/&gt;
&lt;br/&gt;
test LargeManifestOOMTest.testOutOfMemoryError(): failure&lt;br/&gt;
java.io.IOException: There is not enough space on the disk&lt;br/&gt;
	at java.base/java.io.RandomAccessFile.setLength(Native Method)&lt;br/&gt;
	at LargeManifestOOMTest.createLargeManifest(LargeManifestOOMTest.java:74)&lt;br/&gt;
	at LargeManifestOOMTest.testOutOfMemoryError(LargeManifestOOMTest.java:55)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)&lt;br/&gt;
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)&lt;br/&gt;
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)&lt;br/&gt;
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)&lt;br/&gt;
	at org.testng.TestRunner.privateRun(TestRunner.java:773)&lt;br/&gt;
	at org.testng.TestRunner.run(TestRunner.java:623)&lt;br/&gt;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)&lt;br/&gt;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)&lt;br/&gt;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)&lt;br/&gt;
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)&lt;br/&gt;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)&lt;br/&gt;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)&lt;br/&gt;
	at org.testng.TestNG.run(TestNG.java:1018)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:94)&lt;br/&gt;
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:831)&lt;br/&gt;
&lt;br/&gt;
===============================================&lt;br/&gt;
java/util/jar/JarFile/LargeManifestOOMTest.java&lt;br/&gt;
Total tests run: 1, Failures: 1, Skips: 0&lt;br/&gt;
===============================================&lt;br/&gt;
&lt;br/&gt;
----------System.err:(11/615)----------&lt;br/&gt;
java.lang.Exception: failures: 1&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:96)&lt;br/&gt;
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:831)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: failures: 1&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the test task&amp;#39;s stdout:&lt;br/&gt;
&lt;br/&gt;
[2021-01-16T03:20:04,272Z][DEBUG][pool-3-thread-1][c.o.j.s.e.u.DiskProfiler] Several file stores with the same name: &lt;br/&gt;
[2021-01-16T03:20:04,288Z][INFO][pool-3-thread-1][c.o.j.s.e.u.DiskProfiler] Available disk space before execution (T:): 6.9 GiB / 46.0 GiB (14.9%)&lt;br/&gt;
&lt;br/&gt;
The second line says there is 6.9GB available before the test&lt;br/&gt;
setup started. I would think that&amp;#39;s enough space for a test run,&lt;br/&gt;
but I don&amp;#39;t know these tests.&lt;br/&gt;
&lt;br/&gt;
This line from c.o.j.s.e.u.DiskProfiler is also interesting:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Several file stores with the same name:&lt;br/&gt;
&lt;br/&gt;
and why is there nothing showing the names of the file stores?&lt;br/&gt;
Could be nothing or could be the root cause? I don&amp;#39;t know.&lt;br/&gt;
&lt;br/&gt;
Minimally, I think the tests should be updated with additional&lt;br/&gt;
info about the file store&amp;#39;s currently available space.&lt;br/&gt;
&lt;br/&gt;
Normally Tier1 failures would start as P2, but these two failures&lt;br/&gt;
are very strange so I&amp;#39;m starting this at P3 so it can be evaluated&lt;br/&gt;
by Core-Libs triage. After evaluation, I have no problem if it gets&lt;br/&gt;
lowered to P4.</description>
                <environment></environment>
        <key id="5039530">JDK-8259866</key>
            <summary>two java.util tests failed with &quot;IOException: There is not enough space on the disk&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lancea">Lance Andersen</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>tier1</label>
                            <label>ursqe-triaged</label>
                    </labels>
                <created>Sat, 16 Jan 2021 07:30:07 -0800</created>
                <updated>Mon, 26 May 2025 06:39:31 -0700</updated>
                            <resolved>Tue, 13 Feb 2024 08:20:10 -0800</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14698636" author="JIRAUSER20917" created="Thu, 15 Aug 2024 19:59:54 -0700"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.13-oracle.&lt;br/&gt;
No risk, only tests change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test pass. SAP nightly testing passed.</comment>
                            <comment id="14698200" author="roboduke" created="Wed, 14 Aug 2024 03:39:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2803&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2803&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-14 10:34:32 +0000</comment>
                            <comment id="14658761" author="roboduke" created="Tue, 19 Mar 2024 12:48:43 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/383&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/383&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-19 19:43:00 +0000</comment>
                            <comment id="14658758" author="goetz" created="Tue, 19 Mar 2024 12:42:45 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
Duplicate of 8303891. See comment there.</comment>
                            <comment id="14648803" author="dukebot" created="Tue, 13 Feb 2024 08:20:09 -0800"  >Changeset: 842b895f&lt;br/&gt;
Author:    Eirik Bj&amp;#xF8;rsn&amp;#xF8;s &amp;lt;&lt;a href=&apos;mailto:eirbjo@openjdk.org&apos;&gt;eirbjo@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-02-13 16:18:50 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/842b895f093e15ecd8aa0153d712f5f81cf1cf67&quot;&gt;https://git.openjdk.org/jdk/commit/842b895f093e15ecd8aa0153d712f5f81cf1cf67&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14647685" author="roboduke" created="Thu, 8 Feb 2024 06:24:13 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12948&quot;&gt;https://git.openjdk.org/jdk/pull/12948&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-09 12:06:52 +0000</comment>
                            <comment id="14565518" author="JIRAUSER20720" created="Thu, 9 Mar 2023 04:18:50 -0800"  >We could use a sparse file when writing the 5GB entry, this would reduce disk requirements to a few KB and also speed up the test considerably.&lt;br/&gt;
&lt;br/&gt;
See &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8303891&quot; title=&quot;Speed up Zip64SizeTest using a small ZIP64 file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8303891&quot;&gt;&lt;strike&gt;JDK-8303891&lt;/strike&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/openjdk/jdk/pull/12948&quot;&gt;https://github.com/openjdk/jdk/pull/12948&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
LargeManifestOOMTest seems to have been removed in JDK-8266115: &lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/commit/34628ff8ac4acf72070945d030d6cd7999afe617&quot;&gt;https://github.com/openjdk/jdk/commit/34628ff8ac4acf72070945d030d6cd7999afe617&lt;/a&gt;</comment>
                            <comment id="14394789" author="martin" created="Tue, 19 Jan 2021 15:06:46 -0800"  >Consider asking jtreg folk for guidance.&lt;br/&gt;
Consider adding a new @requires tag to jtreg to ensure sufficient free disk space in the test&amp;#39;s scratch directory filesystem.&lt;br/&gt;
Consider configuring test machines to have at least 32GB free disk space - this is 2021 !</comment>
                            <comment id="14394776" author="lancea" created="Tue, 19 Jan 2021 14:06:42 -0800"  >Given the size of the files created, probably best to make these manual tests as was done with other tests that are creating large files.  Also looks like LargeManifestOOMTest.java could delete the files before/after the tests run as well.</comment>
                            <comment id="14394109" author="dcubed" created="Sat, 16 Jan 2021 07:32:31 -0800"  >I checked the test task history for this test machine and for the most&lt;br/&gt;
recent 20 tasks: 1 is running, 19 have PASSed. </comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5123112">JDK-8327205</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124833">JDK-8328687</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130377">JDK-8332985</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137189">JDK-8338725</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5095860">JDK-8303891</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2r58b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="231"><![CDATA[java.util.jar]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>