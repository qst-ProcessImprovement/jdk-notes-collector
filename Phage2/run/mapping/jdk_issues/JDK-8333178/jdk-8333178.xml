<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:08:00 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8333178] ubsan: jvmti_tools.cpp:149:16: runtime error: null pointer passed as argument 2, which is declared to never be null</title>
                <link>https://bugs.openjdk.org/browse/JDK-8333178</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>With ubsan enabled binaries we run into the following issue in HS :tier4 tests :&lt;br/&gt;
e.g. vmTestbase/nsk/jvmti/unit/FollowReferences/followref006/TestDescription.jtr&lt;br/&gt;
&lt;br/&gt;
/jdk/test/hotspot/jtreg/vmTestbase/nsk/share/jvmti/jvmti_tools.cpp:149:16: runtime error: null pointer passed as argument 2, which is declared to never be null&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x7fa7a1049482 in add_option test/hotspot/jtreg/vmTestbase/nsk/share/jvmti/jvmti_tools.cpp:149&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x7fa7a1049482 in nsk_jvmti_parseOptions test/hotspot/jtreg/vmTestbase/nsk/share/jvmti/jvmti_tools.cpp:242&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x7fa7a10634cd in Agent_Initialize test/hotspot/jtreg/vmTestbase/nsk/jvmti/unit/FollowReferences/followref006/followref006.cpp:216&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x7fa79a9dbb36 in invoke_Agent_OnLoad src/hotspot/share/prims/jvmtiAgent.cpp:609&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x7fa79a9dbb36 in JvmtiAgent::load(outputStream*) src/hotspot/share/prims/jvmtiAgent.cpp:623&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x7fa79a9defd4 in load_agents src/hotspot/share/prims/jvmtiAgentList.cpp:179&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x7fa79a9defd4 in JvmtiAgentList::load_agents() src/hotspot/share/prims/jvmtiAgentList.cpp:190&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x7fa79bdad503 in Threads::create_vm(JavaVMInitArgs*, bool*) src/hotspot/share/runtime/threads.cpp:505&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x7fa79a6e531f in JNI_CreateJavaVM_inner src/hotspot/share/prims/jni.cpp:3581&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x7fa79a6e531f in JNI_CreateJavaVM src/hotspot/share/prims/jni.cpp:3672&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x7fa7a11277d5 in InitializeJVM src/java.base/share/native/libjli/java.c:1550&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x7fa7a11277d5 in JavaMain src/java.base/share/native/libjli/java.c:491&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x7fa7a1130f68 in ThreadJavaMain src/java.base/unix/native/libjli/java_md.c:653&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x7fa7a10df6e9 in start_thread (/lib64/libpthread.so.0+0xa6e9) (BuildId: 2f8d3c2d0f4d7888c2598d2ff6356537f5708a73)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#14 0x7fa7a071550e in clone (/lib64/libc.so.6+0x11850e) (BuildId: f732026552f6adff988b338e92d466bc81a01c37)</description>
                <environment></environment>
        <key id="5130592">JDK-8333178</key>
            <summary>ubsan: jvmti_tools.cpp:149:16: runtime error: null pointer passed as argument 2, which is declared to never be null</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbaesken">Matthias Baesken</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>ubsan</label>
                    </labels>
                <created>Wed, 29 May 2024 05:42:05 -0700</created>
                <updated>Fri, 2 Aug 2024 00:44:00 -0700</updated>
                            <resolved>Mon, 1 Jul 2024 10:03:15 -0700</resolved>
                                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14695058" author="mbaesken" created="Thu, 1 Aug 2024 01:05:29 -0700"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14694142" author="roboduke" created="Wed, 31 Jul 2024 07:24:15 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/884&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/884&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-31 14:17:17 +0000</comment>
                            <comment id="14685604" author="clanger" created="Fri, 28 Jun 2024 00:21:08 -0700"  >This was resolved as backport bug:&lt;br/&gt;
Changeset: 880c6b42&lt;br/&gt;
Author: Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date: 2024-06-06 07:46:35 +0000&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/commit/880c6b42ba74884690daa5c23f6605876f29aece&quot;&gt;https://git.openjdk.org/jdk/commit/880c6b42ba74884690daa5c23f6605876f29aece&lt;/a&gt;</comment>
                            <comment id="14685370" author="mbaesken" created="Thu, 27 Jun 2024 05:44:24 -0700"  >Not sure why this looks so strange in JBS. The push to jdk-head ( &lt;a href=&quot;https://git.openjdk.org/jdk/commit/880c6b42ba74884690daa5c23f6605876f29aece&quot;&gt;https://git.openjdk.org/jdk/commit/880c6b42ba74884690daa5c23f6605876f29aece&lt;/a&gt; ) shows up at the &amp;quot;backport&amp;quot; !&lt;br/&gt;
The PR associated with this, is  here under 8333178; but I would expect that the commit would be also in the comments sections but seems not to be the case.&lt;br/&gt;
But I cannot really say much about it,  maybe it was a temporary bug/issue with JBS ?&lt;br/&gt;
</comment>
                            <comment id="14685360" author="thartmann" created="Thu, 27 Jun 2024 05:28:52 -0700"  >[~mbaesken] Something is weird here. There is a backport to JDK 23 that is resolved but the main bug is still open and targeted to JDK 24 although the fix is in JDK 24 already.</comment>
                            <comment id="14679165" author="roboduke" created="Wed, 5 Jun 2024 06:10:04 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19557&quot;&gt;https://git.openjdk.org/jdk/pull/19557&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-05 13:04:03 +0000</comment>
                            <comment id="14679056" author="dholmes" created="Wed, 5 Jun 2024 01:01:22 -0700"  >Apologies - you are right some options don&amp;#39;t have values. We simply need to guard&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;strncpy(value, val, val_len);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;value[val_len] = &amp;#39;\0&amp;#39;;&lt;br/&gt;
&lt;br/&gt;
with a check for val_len &amp;gt; 0&lt;br/&gt;
</comment>
                            <comment id="14679022" author="mbaesken" created="Wed, 5 Jun 2024 00:20:47 -0700"  >&amp;gt; I am suggesting that we skip calling add_option if the value is null.&lt;br/&gt;
&lt;br/&gt;
I can try that ;  but what about an option with a name but no value (null value) ? We would simply skip that - does this really work?</comment>
                            <comment id="14679002" author="dholmes" created="Tue, 4 Jun 2024 23:09:15 -0700"  >&amp;gt; Why pass something else when the value can be null? &lt;br/&gt;
&lt;br/&gt;
I never suggested passing anything else. At the moment we can pass a null value to add_option and add_option is not checking for null but relying on a zero length to turn it into a no-op. But IIUC that is what ubsan is complaining about because strncpy doesn&amp;#39;t specify that it is okay to pass a null buffer if the count is zero.&lt;br/&gt;
&lt;br/&gt;
I am suggesting that we skip calling add_option if the value is null.</comment>
                            <comment id="14678892" author="cjplummer" created="Tue, 4 Jun 2024 11:10:08 -0700"  >&lt;br/&gt;
static int add_option(const char opt[], int opt_len, const char val[], int val_len) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char* name;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char* value;&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name = (char*)malloc(opt_len + 1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value = (char*)malloc(val_len + 1);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (name == nullptr || value == nullptr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nsk_complain(&amp;quot;nsk_jvmti_parseOptions(): out of memory\n&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;success = NSK_FALSE;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strncpy(name, opt, opt_len);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name[opt_len] = &amp;#39;\0&amp;#39;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strncpy(value, val, val_len);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value[val_len] = &amp;#39;\0&amp;#39;;&lt;br/&gt;
&lt;br/&gt;
Is strncpy ok with the null val == null if val_len is 0? If so, then this code works fine when val == null and val_len == 0. Verifying that val_len == 0 if val == null should silence usban.</comment>
                            <comment id="14678771" author="mbaesken" created="Tue, 4 Jun 2024 07:46:24 -0700"  >Looking at the add_option call, we expect to pass nullptr and the function add_option should handle that.&lt;br/&gt;
Why pass something else when the value can be null?</comment>
                            <comment id="14677360" author="dholmes" created="Wed, 29 May 2024 19:17:14 -0700"  >At L242 we can pass null in `value`:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!add_option(name, (int)strlen(name), value,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value ? (int)strlen(value) : 0)) {&lt;br/&gt;
&lt;br/&gt;
but add_option does not anticipate being passed a null.&lt;br/&gt;
&lt;br/&gt;
I think add_option should assert value is not null, and the caller should be modified to better handle the null case.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131188">JDK-8333688</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36ixf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>