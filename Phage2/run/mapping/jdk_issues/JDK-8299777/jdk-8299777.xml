<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:27:46 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299777] Test runtime/NMT/BaselineWithParameter.java timed out</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299777</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Nothing to go on:&lt;br/&gt;
&lt;br/&gt;
----------messages:(9/503)----------&lt;br/&gt;
command: main -XX:NativeMemoryTracking=detail BaselineWithParameter&lt;br/&gt;
reason: User specified action: run main/othervm -XX:NativeMemoryTracking=detail BaselineWithParameter &lt;br/&gt;
started: Fri Jan 06 05:21:12 UTC 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
Additional options from @modules: --add-modules java.base,java.management --add-exports java.base/jdk.internal.misc=ALL-UNNAMED&lt;br/&gt;
Timeout information:&lt;br/&gt;
--- Timeout information end.&lt;br/&gt;
finished: Fri Jan 06 05:48:08 UTC 2023&lt;br/&gt;
elapsed time (seconds): 1616.121&lt;br/&gt;
----------configuration:(4/115)----------&lt;br/&gt;
Boot Layer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;add modules: java.base java.management   &lt;br/&gt;
&amp;nbsp;&amp;nbsp;add exports: java.base/jdk.internal.misc ALL-UNNAMED&lt;br/&gt;
&lt;br/&gt;
----------System.out:(1/28)----------&lt;br/&gt;
Timeout refired 1200 times&lt;br/&gt;
----------System.err:(0/0)----------</description>
                <environment></environment>
        <key id="5090907">JDK-8299777</key>
            <summary>Test runtime/NMT/BaselineWithParameter.java timed out</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stefank">Stefan Karlsson</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>nmt</label>
                            <label>tier7</label>
                    </labels>
                <created>Sun, 8 Jan 2023 13:48:50 -0800</created>
                <updated>Wed, 1 Mar 2023 05:57:45 -0800</updated>
                            <resolved>Tue, 21 Feb 2023 02:59:49 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14561894" author="dholmes" created="Tue, 21 Feb 2023 23:21:45 -0800"  >So I had to dig further into this, and back in JDK 8 / hsx25 the OutputAnalyzer only processed the actual output of the process:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://hg.openjdk.org/hsx/hsx25/hotspot/file/a649f6511c04/test/testlibrary/com/oracle/java/testlibrary/OutputAnalyzer.java&quot;&gt;https://hg.openjdk.org/hsx/hsx25/hotspot/file/a649f6511c04/test/testlibrary/com/oracle/java/testlibrary/OutputAnalyzer.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
It requires that the Process passed to the constructor has already terminated.&lt;br/&gt;
&lt;br/&gt;
The issue that introduced the p.start.waitFor() was simply that the test had to wait for the baseline to be taken before requesting the summary - it had nothing to do with checking any output and no use of OutputAnalyzer was involved. The flaw with that is that unless something consumes the process output it can block - hence this issue and the fix.</comment>
                            <comment id="14561885" author="stefank" created="Tue, 21 Feb 2023 22:31:57 -0800"  >[~dholmes] Right. That was my understanding as well, but your earlier comment got me worried that I had missed something. Thanks.</comment>
                            <comment id="14561830" author="dholmes" created="Tue, 21 Feb 2023 14:31:28 -0800"  >[~stefank] These days at least, OutputAnalyzer implicitly ensures the process has terminated. If you check the process output then that operation only completes when the stream pumper terminates, which means the process output has ceased and the process terminated. If you check the return value then an explicit waitFor is issued.</comment>
                            <comment id="14561664" author="stefank" created="Tue, 21 Feb 2023 04:45:42 -0800"  >[~dholmes] I wonder if the issue the waitFor tried to solve was that we reused the ProcessBuilder, while the first forked process were not completely shut down. Maybe we shouldn&amp;#39;t be reusing ProcessBuilder instances, or we need to add back the waitFor() calls *after* the usage of the OutputAnalyzer?&lt;br/&gt;
&lt;br/&gt;
Update: According to the documentation of ProcessBuilder.start():&lt;br/&gt;
&amp;quot;Subsequent modifications to this process builder will not affect the returned Process.&amp;quot;&lt;br/&gt;
</comment>
                            <comment id="14561647" author="dukebot" created="Tue, 21 Feb 2023 02:59:48 -0800"  >Changeset: fef19102&lt;br/&gt;
Author:    Stefan Karlsson &amp;lt;&lt;a href=&apos;mailto:stefank@openjdk.org&apos;&gt;stefank@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-21 10:58:36 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/fef1910277842303b41854c207fc4caba393adc6&quot;&gt;https://git.openjdk.org/jdk/commit/fef1910277842303b41854c207fc4caba393adc6&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14561502" author="dholmes" created="Mon, 20 Feb 2023 13:04:55 -0800"  >BTW the waitFor() was explicitly added by this issue: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8010084&quot; title=&quot;Race in runtime/NMT/BaselineWithParameter.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8010084&quot;&gt;&lt;strike&gt;JDK-8010084&lt;/strike&gt;&lt;/a&gt;. I wonder if OutputAnalyzer behaved differently back then?</comment>
                            <comment id="14561425" author="roboduke" created="Mon, 20 Feb 2023 05:52:46 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12663&quot;&gt;https://git.openjdk.org/jdk/pull/12663&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-20 13:46:46 +0000</comment>
                            <comment id="14561405" author="stefank" created="Mon, 20 Feb 2023 04:26:38 -0800"  >I think I know what the problem is with these NMT tests. The test forks a process and then waits for it to finish without draining the streams. The forked process then hangs when it writes to stdout/stderr because the main thread doesn&amp;#39;t read the written data.&lt;br/&gt;
&lt;br/&gt;
I think this often works, because the forked process writes so little that it fits in some kind of out buffer. If I artificially increase the written data I can reproduce this hang.&lt;br/&gt;
&lt;br/&gt;
Adding more data to the NMT jcmd:&lt;br/&gt;
```&lt;br/&gt;
diff --git a/src/hotspot/share/services/nmtDCmd.cpp b/src/hotspot/share/services/nmtDCmd.cpp&lt;br/&gt;
index f64c65c2dc8..42dbe6c1ae2 100644&lt;br/&gt;
--- a/src/hotspot/share/services/nmtDCmd.cpp&lt;br/&gt;
+++ b/src/hotspot/share/services/nmtDCmd.cpp&lt;br/&gt;
@@ -108,6 +108,11 @@ void NMTDCmd::execute(DCmdSource source, TRAPS) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// Serialize NMT query&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;MutexLocker locker(THREAD, MemTracker::query_lock());&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+  // Fill up the output&lt;br/&gt;
+  for (int i = 0; i &amp;lt; 8 * 1024; i++) {&lt;br/&gt;
+    output()-&amp;gt;print_cr(&amp;quot;Fake line: %d&amp;quot;, i);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (_summary.value()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;report(true, scale_unit);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (_detail.value()) {&lt;br/&gt;
```</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4665023">JDK-8010084</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5074376">JDK-8286345</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ztq3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>