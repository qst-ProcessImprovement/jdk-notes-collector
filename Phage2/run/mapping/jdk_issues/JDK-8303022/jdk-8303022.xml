<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:06:05 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8303022] &quot;assert(allocates2(pc)) failed: not in CodeBuffer memory&quot; When linking downcall handle</title>
                <link>https://bugs.openjdk.org/browse/JDK-8303022</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When linking the following function (generated by fuzzer):&lt;br/&gt;
&lt;br/&gt;
EXPORT struct S6 F84(struct S6 (*cb)(void*, short, long long, int, short, struct S5, long long, char, double, char,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;float, char, void*, char, struct S6, union U3, double, int, double, char, union U5,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void* a0, short a1, long long a2, int a3, short a4, struct S5 a5, long long a6, char a7, double a8, char a9,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;float a10, char a11, void* a12, char a13, struct S6 a14, union U3 a15, double a16, int a17, double a18,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char a19, union U5 a20, int a21){&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return cb(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
(see also attached diff)&lt;br/&gt;
&lt;br/&gt;
We hit an assert:&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (src/hotspot/share/asm/codeBuffer.hpp:194), pid=19794, tid=19819&lt;br/&gt;
#  assert(allocates2(pc)) failed: not in CodeBuffer memory: 0x00007f356843cc80 &amp;lt;= 0x00007f356843d112 &amp;lt;= 0x00007f356843d110&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (21.0) (fastdebug build 21-internal-adhoc.jorn.foreign-abi)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 21-internal-adhoc.jorn.foreign-abi, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x770b3b]  CodeSection::set_end(unsigned char*)+0x5b&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: core.19794 (may not exist)&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
With the following stack track:&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f35510f0000,0x00007f35511f0000],  sp=0x00007f35511ebcd8,  free space=1007k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x770b3b]  CodeSection::set_end(unsigned char*)+0x5b  (codeBuffer.hpp:194)&lt;br/&gt;
V  [libjvm.so+0x6d7303]  Assembler::emit_operand_helper(int, int, int, Address::ScaleFactor, int, RelocationHolder const&amp;amp;, int)+0x4a3  (codeBuffer.hpp:226)&lt;br/&gt;
V  [libjvm.so+0x6d8535]  Assembler::emit_operand(Register, Register, Register, Address::ScaleFactor, int, RelocationHolder const&amp;amp;, int) [clone .constprop.5]+0x65  (assembler_x86.cpp:713)&lt;br/&gt;
V  [libjvm.so+0x767ad2]  Assembler::movq(Address, Register)+0x142  (assembler_x86.cpp:1259)&lt;br/&gt;
V  [libjvm.so+0x1572889]  MacroAssembler::movptr(Address, Register)+0x69  (macroAssembler_x86.cpp:2582)&lt;br/&gt;
V  [libjvm.so+0xda0949]  RegSpiller::pd_store_reg(MacroAssembler*, int, VMStorage)+0x89  (foreignGlobals_x86_64.cpp:85)&lt;br/&gt;
V  [libjvm.so+0xd9da19]  RegSpiller::generate(MacroAssembler*, int, bool) const+0x89  (foreignGlobals.cpp:108)&lt;br/&gt;
V  [libjvm.so+0xd2c83b]  DowncallStubGenerator::generate()+0x18bb  (foreignGlobals.hpp:108)&lt;br/&gt;
V  [libjvm.so+0xd2cbbf]  DowncallLinker::make_downcall_stub(BasicType*, int, BasicType, ABIDescriptor const&amp;amp;, GrowableArray&amp;lt;VMStorage&amp;gt; const&amp;amp;, GrowableArray&amp;lt;VMStorage&amp;gt; const&amp;amp;, bool, int, bool)+0x2cf  (downcallLinker_x86_64.cpp:112)&lt;br/&gt;
V  [libjvm.so+0x16dedff]  NEP_makeDowncallStub+0x7df  (nativeEntryPoint.cpp:79)&lt;br/&gt;
j  jdk.internal.foreign.abi.NativeEntryPoint.makeDowncallStub(Ljava/lang/invoke/MethodType;Ljdk/internal/foreign/abi/ABIDescriptor;[Ljdk/internal/foreign/abi/VMStorage;[Ljdk/internal/foreign/abi/VMStorage;ZIZ)J+0 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.NativeEntryPoint.lambda$make$1(Ljava/lang/invoke/MethodType;Ljdk/internal/foreign/abi/ABIDescriptor;[Ljdk/internal/foreign/abi/VMStorage;[Ljdk/internal/foreign/abi/VMStorage;ZIZLjdk/internal/foreign/abi/NativeEntryPoint$CacheKey;)Ljdk/internal/foreign/abi/NativeEntryPoint;+10 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.NativeEntryPoint$$Lambda$101+0x000000080103a310.apply(Ljava/lang/Object;)Ljava/lang/Object;+32 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.SoftReferenceCache$Node.get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;+45 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.SoftReferenceCache.get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;+21 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.NativeEntryPoint.make(Ljdk/internal/foreign/abi/ABIDescriptor;[Ljdk/internal/foreign/abi/VMStorage;[Ljdk/internal/foreign/abi/VMStorage;Ljava/lang/invoke/MethodType;ZIZ)Ljdk/internal/foreign/abi/NativeEntryPoint;+79 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.DowncallLinker.getBoundMethodHandle()Ljava/lang/invoke/MethodHandle;+75 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.x64.sysv.CallArranger.arrangeDowncall(Ljava/lang/invoke/MethodType;Ljava/lang/foreign/FunctionDescriptor;Ljdk/internal/foreign/abi/LinkerOptions;)Ljava/lang/invoke/MethodHandle;+22 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.x64.sysv.SysVx64Linker.arrangeDowncall(Ljava/lang/invoke/MethodType;Ljava/lang/foreign/FunctionDescriptor;Ljdk/internal/foreign/abi/LinkerOptions;)Ljava/lang/invoke/MethodHandle;+3 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.AbstractLinker.lambda$downcallHandle$0(Ljdk/internal/foreign/abi/AbstractLinker$LinkRequest;)Ljava/lang/invoke/MethodHandle;+19 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.AbstractLinker$$Lambda$74+0x0000000801074b60.apply(Ljava/lang/Object;)Ljava/lang/Object;+8 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.SoftReferenceCache$Node.get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;+45 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.SoftReferenceCache.get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;+21 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.foreign.abi.AbstractLinker.downcallHandle(Ljava/lang/foreign/FunctionDescriptor;[Ljava/lang/foreign/Linker$Option;)Ljava/lang/invoke/MethodHandle;+39 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.foreign.Linker.downcallHandle(Ljava/lang/foreign/MemorySegment;Ljava/lang/foreign/FunctionDescriptor;[Ljava/lang/foreign/Linker$Option;)Ljava/lang/invoke/MethodHandle;+7 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  NativeTestHelper.downcallHandle(Ljava/lang/String;Ljava/lang/foreign/FunctionDescriptor;[Ljava/lang/foreign/Linker$Option;)Ljava/lang/invoke/MethodHandle;+9&lt;br/&gt;
j  TestPCAssert.testOOB()V+189&lt;br/&gt;
...</description>
                <environment></environment>
        <key id="5094760">JDK-8303022</key>
            <summary>&quot;assert(allocates2(pc)) failed: not in CodeBuffer memory&quot; When linking downcall handle</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jvernee">Jorn Vernee</assignee>
                                    <reporter username="jvernee">Jorn Vernee</reporter>
                        <labels>
                            <label>foreign-memaccess+abi</label>
                    </labels>
                <created>Tue, 21 Feb 2023 10:11:06 -0800</created>
                <updated>Mon, 24 Jul 2023 11:04:12 -0700</updated>
                            <resolved>Wed, 15 Mar 2023 16:45:16 -0700</resolved>
                                    <version>21</version>
                    <version>repo-panama</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14567279" author="dukebot" created="Wed, 15 Mar 2023 16:45:14 -0700"  >Changeset: 2b81faeb&lt;br/&gt;
Author:    Jorn Vernee &amp;lt;&lt;a href=&apos;mailto:jvernee@openjdk.org&apos;&gt;jvernee@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-15 23:43:18 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/2b81faeb3514060e6c8c950ef4e39e299c43199d&quot;&gt;https://git.openjdk.org/jdk/commit/2b81faeb3514060e6c8c950ef4e39e299c43199d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14565301" author="roboduke" created="Wed, 8 Mar 2023 06:48:05 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12908&quot;&gt;https://git.openjdk.org/jdk/pull/12908&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-07 18:02:41 +0000</comment>
                            <comment id="14562717" author="jvernee" created="Fri, 24 Feb 2023 08:48:41 -0800"  >The issue is caused by the size of the code buffer not being large enough. I think we want to scale this size to the number of arguments of the downcall stub</comment>
                    </comments>
                    <attachments>
                            <attachment id="102738" name="pcassert.diff" size="8656" author="jvernee" created="Tue, 21 Feb 2023 10:12:13 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30hi3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="2492"><![CDATA[java.lang.foreign]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>