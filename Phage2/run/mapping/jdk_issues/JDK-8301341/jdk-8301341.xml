<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:57:10 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301341] LinkedTransferQueue does not respect timeout for poll()</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301341</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Linux 5.15.0-58-generic #64-Ubuntu SMP x86_64 GNU/Linux&lt;br/&gt;
Ubuntu 22.04.1 LTS&lt;br/&gt;
openjdk 17.0.5 2022-10-18&lt;br/&gt;
OpenJDK Runtime Environment (build 17.0.5+8-Ubuntu-2ubuntu122.04)&lt;br/&gt;
OpenJDK 64-Bit Server VM (build 17.0.5+8-Ubuntu-2ubuntu122.04, mixed mode, sharing)&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
There&amp;#39;s code that used a LinkedTransferQueue that is not returning from `poll` under certain circumstance. The code in question is &lt;a href=&quot;https://github.com/openhab/openhab-core/blob/main/bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java#L193&quot;&gt;https://github.com/openhab/openhab-core/blob/main/bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java#L193&lt;/a&gt;. I modified it locally to include its own measurements and logging:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long start = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final Runnable runnable = taskQueue.poll(2, TimeUnit.SECONDS);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long end = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long duration = end - start;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (duration &amp;gt; 3000000000L) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.warn(&amp;quot;Polling the task queue in thread pool &amp;#39;{}&amp;#39; took {}ms&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;threadPoolName, duration / 1000000L);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
When it hangs, CPU use on that thread goes to 100%, and the stack trace is:&lt;br/&gt;
```&lt;br/&gt;
&amp;quot;safeCall-queue&amp;quot; Id=8239 in RUNNABLE&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@17.0.5&apos;&gt;java.base@17.0.5&lt;/a&gt;/java.util.concurrent.LinkedTransferQueue.awaitMatch(LinkedTransferQueue.java:652)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@17.0.5&apos;&gt;java.base@17.0.5&lt;/a&gt;/java.util.concurrent.LinkedTransferQueue.xfer(LinkedTransferQueue.java:616)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@17.0.5&apos;&gt;java.base@17.0.5&lt;/a&gt;/java.util.concurrent.LinkedTransferQueue.poll(LinkedTransferQueue.java:1294)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.openhab.core.common.QueueingThreadPoolExecutor$1.run(QueueingThreadPoolExecutor.java:193)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@17.0.5&apos;&gt;java.base@17.0.5&lt;/a&gt;/java.lang.Thread.run(Thread.java:833)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
This stack trace is consistent, no matter how many times I sample it, I&amp;#39;ve not caught it executing on a different line.&lt;br/&gt;
&lt;br/&gt;
At this point, I used another thread to inspect the queue, and confirmed that from its point of view the queue is empty. I was unable to inspect the internal data structures of the queue via reflection, because `head` and `tail` are `volatile transient`. I _am_ able to force it to break out by forcing an item to be pushed onto the queue (line 118 in that file). At which point, my logs indicated the following:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
2023-01-27 08:05:17.338 [WARN ] [re.common.QueueingThreadPoolExecutor] - Polling the task queue in thread pool &amp;#39;safeCall&amp;#39; took 1377089ms&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Definitely longer than 2s! I&amp;#39;m not sure if the `awaitMatch` method is messing up its time-keeping, or if it&amp;#39;s getting confused by some rare intermediate state. It&amp;#39;s not completely deadlocked, because pushing a new element allows it to break out. And it&amp;#39;s definitely spinning chewing up CPU usage, and not parking itself.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run openHAB 3.4.1 on my hardware, and I&amp;#39;m sure a smattering of my particular configuration. I can reproduce within a few hours of restarting the process, no less often than once per day.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
`poll` returns after 2 seconds, even if the queue is empty.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
CPU usage gets pegged at 100%.&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
I&amp;#39;m able to notice the situation, and trigger an item to be pushed onto the pertinent queue, dislodging it.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : often&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5092650">JDK-8301341</key>
            <summary>LinkedTransferQueue does not respect timeout for poll()</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vklang">Viktor Klang</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcsaw</label>
                            <label>jdk21u-fix-SQE-ok-next</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>reproducer-hard</label>
                            <label>webbug</label>
                    </labels>
                <created>Fri, 27 Jan 2023 07:20:58 -0800</created>
                <updated>Fri, 17 May 2024 03:55:21 -0700</updated>
                            <resolved>Sat, 22 Jul 2023 03:42:23 -0700</resolved>
                                    <version>17</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14611597" author="roboduke" created="Fri, 15 Sep 2023 11:48:09 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/168&quot;&gt;https://git.openjdk.org/jdk21u/pull/168&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-15 18:39:02 +0000</comment>
                            <comment id="14598009" author="dukebot" created="Sat, 22 Jul 2023 03:42:22 -0700"  >Changeset: 8d1ab570&lt;br/&gt;
Author:    Doug Lea &amp;lt;&lt;a href=&apos;mailto:dl@openjdk.org&apos;&gt;dl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-07-22 10:41:42 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/8d1ab57065c7ebcc650b5fb4ae098f8b0a35f112&quot;&gt;https://git.openjdk.org/jdk/commit/8d1ab57065c7ebcc650b5fb4ae098f8b0a35f112&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14587163" author="roboduke" created="Mon, 5 Jun 2023 11:59:25 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14317&quot;&gt;https://git.openjdk.org/jdk/pull/14317&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-05 18:52:00 +0000</comment>
                            <comment id="14587158" author="dl" created="Mon, 5 Jun 2023 11:51:27 -0700"  >Updated to use Thread.isVirtual to distinguish spin vs immediate block cases, enabling re-introduction of spin control from the previous version, removing anomalies like this one. There wasn&amp;#39;t a stand-alone test case submitted for this, and I&amp;#39;m not sure how  to create one that merely shows fewer performance glitches.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14557532" author="dl" created="Mon, 6 Feb 2023 07:13:08 -0800"  >This is a similar issue as &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8300663&quot;&gt;https://bugs.openjdk.org/browse/JDK-8300663&lt;/a&gt; - and might await non-preview status of loom to address&lt;br/&gt;
</comment>
                            <comment id="14555902" author="dholmes" created="Mon, 30 Jan 2023 21:14:07 -0800"  >Just to be clear, these kinds of timeouts only apply to the time a thread waits (ie parks) for some state to change, it does not apply to the whole operation. If the code enters a busy loop rather then parking, then the timeout will not apply.</comment>
                            <comment id="14555404" author="tongwan" created="Mon, 30 Jan 2023 03:48:20 -0800"  >The problem was observed on openHAB 3.4.1</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5113683">JDK-8319218</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5118833">JDK-8323659</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5129305">JDK-8332154</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i304hf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17337"><![CDATA[b08]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="215"><![CDATA[java.util.concurrent]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>