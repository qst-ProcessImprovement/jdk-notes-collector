<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:39:38 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8319436] Proxy.newProxyInstance throws NPE if loader is null and interface not visible from class loader</title>
                <link>https://bugs.openjdk.org/browse/JDK-8319436</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Seen since JDK 21 and JDK 17.0.8&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Ref: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302791&quot;&gt;https://bugs.openjdk.org/browse/JDK-8302791&lt;/a&gt;&lt;br/&gt;
This changed the exception handling to include the classloader name in the IllegalArgumentException.&lt;br/&gt;
&lt;br/&gt;
If the caller passes null as the classloader, and an IllegalArgument exception is raised, an NPE is thrown since JDK 17.0.8 ...&lt;br/&gt;
&lt;br/&gt;
Caused by: java.lang.NullPointerException: Cannot invoke &amp;quot;java.lang.ClassLoader.nameAndId()&amp;quot; because &amp;quot;loader&amp;quot; is null&lt;br/&gt;
	at java.base/java.lang.System$2.getLoaderNameID(System.java:2456)&lt;br/&gt;
	at java.base/java.lang.reflect.Proxy$ProxyBuilder.ensureVisible(Proxy.java:884)&lt;br/&gt;
	at java.base/java.lang.reflect.Proxy$ProxyBuilder.validateProxyInterfaces(Proxy.java:721)&lt;br/&gt;
&lt;br/&gt;
Previously the IllegalArgumentException was thrown.&lt;br/&gt;
&lt;br/&gt;
Null is a valid classloader argument, and the change here is not safe.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
REGRESSION : Last worked in JDK 20 and JDK 17.0.7&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run test case provided as &amp;quot;java TestProxy an.interace.name a.jar&amp;quot;&lt;br/&gt;
Use any jar you have, so long as the interface class isn&amp;#39;t on the boot classpath.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
IllegalArgumentException from ensureVisible if classloader is null&lt;br/&gt;
Test case should produce - GOOD - JDK 17.0.7 or earlier gets here&lt;br/&gt;
ACTUAL -&lt;br/&gt;
NPE from ensureVisible if classloader is null&lt;br/&gt;
Test case produces - BAD - JDK 17.0.8 or later gets here&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import java.lang.reflect.InvocationHandler;&lt;br/&gt;
import java.lang.reflect.Method;&lt;br/&gt;
import java.lang.reflect.Proxy;&lt;br/&gt;
import java.net.URL;&lt;br/&gt;
import java.net.URLClassLoader;&lt;br/&gt;
&lt;br/&gt;
/**&lt;br/&gt;
&amp;nbsp;* Run as ...&lt;br/&gt;
&amp;nbsp;* &lt;br/&gt;
&amp;nbsp;* TestProxy an.interface a.jar&lt;br/&gt;
&amp;nbsp;* &lt;br/&gt;
&amp;nbsp;* ... where an.interface is any interface in the jar that isn&amp;#39;t on the boot classpath.&lt;br/&gt;
&amp;nbsp;* &lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
public class TestProxy&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String iclz = args[0]; // An interface class (not on the boot class&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// path)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String jar = args[1]; // A jar file containing the interface class&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL[] urls =&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{ new URL(&amp;quot;jar:file:&amp;quot; + jar + &amp;quot;!/&amp;quot;) };&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URLClassLoader cl = URLClassLoader.newInstance(urls);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Class clazz = cl.loadClass(iclz);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object str = Proxy.newProxyInstance(null, new Class&amp;lt;?&amp;gt;[]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{ clazz }, new InvocationHandler()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Object invoke(Object proxy, Method method, Object[] args) throws Throwable&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Invoked &amp;quot; + method.getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(str.toString());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch (IllegalArgumentException ex)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(&amp;quot;GOOD - JDK 17.0.7 or earlier gets here&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch (NullPointerException ex)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(&amp;quot;BAD - JDK 17.0.8 or later gets here&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch (Throwable t)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(&amp;quot;Test is broken, shouldn&amp;#39;t get here&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Tolerate the NPE in calling code.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5113982">JDK-8319436</key>
            <summary>Proxy.newProxyInstance throws NPE if loader is null and interface not visible from class loader</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mchung">Mandy Chung</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>regression</label>
                            <label>webbug</label>
                    </labels>
                <created>Fri, 3 Nov 2023 11:33:52 -0700</created>
                <updated>Mon, 25 Mar 2024 16:30:34 -0700</updated>
                            <resolved>Tue, 7 Nov 2023 09:01:37 -0800</resolved>
                                    <version>openjdk8u382</version>
                    <version>11.0.20</version>
                    <version>17.0.8</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                <comments>
                            <comment id="14659764" author="JIRAUSER20112" created="Fri, 22 Mar 2024 13:57:18 -0700"  >Fix Request (11u): Fixes a regression caused by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302791&quot; title=&quot;Add specific ClassLoader object to Proxy IllegalArgumentException message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302791&quot;&gt;&lt;strike&gt;JDK-8302791&lt;/strike&gt;&lt;/a&gt;, as described in the fix request for 21u. Backport is clean and passes included tests.&lt;br/&gt;
</comment>
                            <comment id="14659715" author="roboduke" created="Fri, 22 Mar 2024 09:52:13 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2619&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2619&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-22 16:47:16 +0000</comment>
                            <comment id="14639246" author="roboduke" created="Wed, 10 Jan 2024 11:53:43 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2454&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2454&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-10 19:48:06 +0000</comment>
                            <comment id="14639245" author="roboduke" created="Wed, 10 Jan 2024 11:53:40 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2119&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2119&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-10 19:48:04 +0000</comment>
                            <comment id="14639243" author="JIRAUSER20112" created="Wed, 10 Jan 2024 11:50:14 -0800"  >Fix Request (17u): Parity with 21u for the same reasons stated above. Patch applies cleanly and passes included tests.</comment>
                            <comment id="14625005" author="roboduke" created="Wed, 8 Nov 2023 12:05:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/340&quot;&gt;https://git.openjdk.org/jdk21u/pull/340&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-08 20:01:34 +0000</comment>
                            <comment id="14624973" author="mchung" created="Wed, 8 Nov 2023 09:37:20 -0800"  >Fix Request (jdk21u)&lt;br/&gt;
&lt;br/&gt;
This is a regression caused by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302791&quot; title=&quot;Add specific ClassLoader object to Proxy IllegalArgumentException message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302791&quot;&gt;&lt;strike&gt;JDK-8302791&lt;/strike&gt;&lt;/a&gt; which has been backported to older releases.   After &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302791&quot; title=&quot;Add specific ClassLoader object to Proxy IllegalArgumentException message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302791&quot;&gt;&lt;strike&gt;JDK-8302791&lt;/strike&gt;&lt;/a&gt;, `Proxy::newProxyInstance` should throw NPE instead of IAE if the given class loader is null and the given proxy interface is not visible to the bootstrap loader.   This issue only affects this specific exception case throwing an incorrect exception type which makes it less obvious to diagnose the user error.  It does not impact proper calls to `Proxy::newProxyInstance`.   The fix is trivial - add the check if the loader parameter is null and very low risk.&lt;br/&gt;
&lt;br/&gt;
The patch applied cleanly to jdk21u repo.</comment>
                            <comment id="14624474" author="dukebot" created="Tue, 7 Nov 2023 09:01:36 -0800"  >Changeset: 8eb6f617&lt;br/&gt;
Author:    Mandy Chung &amp;lt;&lt;a href=&apos;mailto:mchung@openjdk.org&apos;&gt;mchung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-07 17:00:08 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/8eb6f617b3f8e2a990e4244af4e56287f9741b20&quot;&gt;https://git.openjdk.org/jdk/commit/8eb6f617b3f8e2a990e4244af4e56287f9741b20&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14624158" author="roboduke" created="Mon, 6 Nov 2023 11:18:19 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16525&quot;&gt;https://git.openjdk.org/jdk/pull/16525&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-06 19:12:28 +0000</comment>
                            <comment id="14623760" author="alanb" created="Sat, 4 Nov 2023 00:47:22 -0700"  >I&amp;#39;ve changed the title to make it clearer what this issue is about. IAE should be thrown when an interface is not visible to the given class loader but the change cited means it throws NPE when the loader is null. So yes, this does appear to be a regression in JDK 21. I see that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302791&quot; title=&quot;Add specific ClassLoader object to Proxy IllegalArgumentException message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302791&quot;&gt;&lt;strike&gt;JDK-8302791&lt;/strike&gt;&lt;/a&gt; has been backported to a number of releases so updates of other releases may have this newly introduced bug too.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5114901">JDK-8320256</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118535">JDK-8323402</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5119850">JDK-8324554</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120033">JDK-8324707</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120036">JDK-8324710</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5125192">JDK-8329005</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5094521">JDK-8302791</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5120844">JDK-8325343</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33qo3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17433"><![CDATA[b23]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="668"><![CDATA[java.lang:reflect]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>