<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:02:44 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8325326] [PPC64] Don&apos;t relocate in case of allocation failure</title>
                <link>https://bugs.openjdk.org/browse/JDK-8325326</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In the test compiler/codecache/TestStressCodeBuffers.java we see today 2 times the following assertion (when running with fastdebug binaries) :&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/workspace/openjdk-jdk-dev-aix_ppc64-dbg/jdk/src/hotspot/share/asm/codeBuffer.hpp:212), pid=8257968, tid=3599&lt;br/&gt;
#  assert(allocates2(pc)) failed: relocation addr must be in this section&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (fastdebug build 23-internal-adhoc.sapmachine.jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 23-internal-adhoc.sapmachine.jdk, compiled mode, compressed oops, compressed class ptrs, g1 gc, aix-ppc64)&lt;br/&gt;
&amp;nbsp;.....&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00000001154140b0):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=3599, stack(0x0000000115420000,0x000000011581d888) (4086K)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:3266  461    b        sun.invoke.util.Wrapper::forBasicType (103 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000000115420000,0x000000011581d888],  sp=0x0000000115819a80,  free space=4070k&lt;br/&gt;
No context given, using current context.&lt;br/&gt;
Native frame:&lt;br/&gt;
iar:  0x09000000056bdc18 libjvm.so::AixNativeCallstack::print_callstack_for_context(outputStream*, ucontext_t const*, bool, char*, unsigned long)+0x4cc  (C++ uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 fixedparms:5 parmsonstk:1)&lt;br/&gt;
lr:   0x09000000051989b4 libjvm.so::fdStream::write(char const*, unsigned long)+0x44  (C++ uses_alloca saves_lr stores_bc gpr_saved:4 fixedparms:3 parmsonstk:1)&lt;br/&gt;
sp:   0x0000000115818d40 (base - 0x4B48) &lt;br/&gt;
rtoc: 0x08001000a03d9960 &lt;br/&gt;
|---stackaddr----|   |----lrsave------|:   &amp;lt;function name&amp;gt;&lt;br/&gt;
0x0000000115819130 - 0x09000000056bd6d8 libjvm.so::os::Aix::platform_print_native_stack(outputStream*, void const*, char*, int, unsigned char*&amp;amp;)+0x24  (C++ uses_alloca saves_lr stores_bc gpr_saved:1 fixedparms:5 parmsonstk:1)&lt;br/&gt;
0x00000001158191b0 - 0x09000000051a96b0 libjvm.so::VMError::report(outputStream*, bool)+0x1c0c  (C++ fp_present uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 fixedparms:2 parmsonstk:1)&lt;br/&gt;
0x0000000115819a90 - 0x0900000005197dc8 libjvm.so::VMError::report_and_die(int, char const*, char const*, char*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x7cc  (C++ uses_alloca saves_lr stores_bc gpr_saved:18 fixedparms:8 parmsonstk:1)&lt;br/&gt;
0x0000000115819c80 - 0x09000000051975b0 libjvm.so::VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, char*)+0x58  (C++ uses_alloca saves_lr stores_bc gpr_saved:2 fixedparms:7 parmsonstk:1)&lt;br/&gt;
0x0000000115819d20 - 0x0900000005197290 libjvm.so::report_vm_error(char const*, int, char const*, char const*, ...)+0x8c  (C++ uses_alloca saves_lr stores_bc gpr_saved:5 fixedparms:4 parmsonstk:1)&lt;br/&gt;
0x0000000115819dc0 - 0x090000000522bc58 libjvm.so::CodeSection::relocate(unsigned char*, RelocationHolder const&amp;amp;, int)+0x3b0  (C++ uses_alloca saves_cr saves_lr stores_bc gpr_saved:12 fixedparms:4 parmsonstk:1)&lt;br/&gt;
0x0000000115819e90 - 0x0900000005b64600 libjvm.so::loadConP_hiNode::emit(CodeBuffer&amp;amp;, PhaseRegAlloc*) const+0x210  (C++ uses_alloca saves_lr stores_bc gpr_saved:9 fixedparms:3 parmsonstk:1)&lt;br/&gt;
0x0000000115819fb0 - 0x0900000005fa7760 libjvm.so::PhaseOutput::fill_buffer(CodeBuffer*, unsigned int*)+0x1678  (C++ uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 fixedparms:3 parmsonstk:1)&lt;br/&gt;
0x000000011581a3d0 - 0x0900000005f9e2a0 libjvm.so::PhaseOutput::Output()+0x8d8  (C++ fp_present uses_alloca saves_lr stores_bc gpr_saved:12 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581a4a0 - 0x0900000005f3e7e4 libjvm.so::Compile::Code_Gen()+0x3dc  (C++ uses_alloca saves_lr stores_bc gpr_saved:6 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581b0e0 - 0x0900000005fbbb8c libjvm.so::Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1718  (C++ fp_present uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 fixedparms:6 parmsonstk:1)&lt;br/&gt;
0x000000011581bd50 - 0x09000000061cc780 libjvm.so::C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x25c  (C++ uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 fixedparms:6 parmsonstk:1)&lt;br/&gt;
0x000000011581ca90 - 0x09000000054de564 libjvm.so::CompileBroker::invoke_compiler_on_method(CompileTask*)+0xcb4  (C++ fp_present uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581d210 - 0x09000000054cec80 libjvm.so::CompileBroker::compiler_thread_loop()+0x4c0  (C++ fp_present uses_alloca saves_cr saves_lr stores_bc gpr_saved:18 parmsonstk:1)&lt;br/&gt;
0x000000011581d460 - 0x09000000054ce740 libjvm.so::CompilerThread::thread_entry(JavaThread*, JavaThread*)+0x58  (C++ uses_alloca saves_lr stores_bc gpr_saved:1 fixedparms:2 parmsonstk:1)&lt;br/&gt;
0x000000011581d4e0 - 0x090000000536c7f8 libjvm.so::JavaThread::thread_main_inner()+0x1f8  (C++ uses_alloca saves_lr stores_bc gpr_saved:4 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581d5b0 - 0x090000000536a8e0 libjvm.so::JavaThread::run()+0x214  (C++ uses_alloca saves_lr stores_bc gpr_saved:5 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581d650 - 0x0900000005298640 libjvm.so::Thread::call_run()+0x128  (C++ uses_alloca saves_lr stores_bc gpr_saved:3 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581d6e0 - 0x0900000005297b34 libjvm.so::thread_native_entry(Thread*)+0x194  (C++ uses_alloca saves_lr stores_bc gpr_saved:9 fixedparms:1 parmsonstk:1)&lt;br/&gt;
0x000000011581d7a0 - 0x090000000056204c libpthreads.a::_pthread_body+0xec  (C saves_lr stores_bc gpr_saved:1 fixedparms:1 )&lt;br/&gt;
0x000000011581d820 - 0x0000000000000000 &lt;br/&gt;
*** end of backchain ***&lt;br/&gt;
-----------------------</description>
                <environment></environment>
        <key id="5120826">JDK-8325326</key>
            <summary>[PPC64] Don&apos;t relocate in case of allocation failure</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mdoerr">Martin Doerr</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>c2</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Tue, 6 Feb 2024 07:07:30 -0800</created>
                <updated>Wed, 20 Mar 2024 01:59:11 -0700</updated>
                            <resolved>Fri, 16 Feb 2024 08:01:10 -0800</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14658053" author="roboduke" created="Mon, 18 Mar 2024 03:55:42 -0700"  >[jdk11u-fix-request] Approval Request from Martin&lt;br/&gt;
JDK 11 is affected by this bug. The fix is small, only touches one PPC64 file and applies cleanly. It has been tested in head for some time and retested in 22u, 21u-dev, 17u-dev and 11u-dev. No regression found.</comment>
                            <comment id="14657814" author="roboduke" created="Fri, 15 Mar 2024 13:15:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2603&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2603&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-15 20:11:05 +0000</comment>
                            <comment id="14657082" author="roboduke" created="Wed, 13 Mar 2024 03:37:45 -0700"  >[jdk17u-fix-request] Approval Request from Martin&lt;br/&gt;
JDK 17 is affected by this bug. The fix is small, only touches one PPC64 file and applies cleanly. It has been tested in head for some time and retested in 22u and 21u-dev and 17u-dev. No regression found.</comment>
                            <comment id="14655980" author="roboduke" created="Fri, 8 Mar 2024 19:53:43 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2280&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2280&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-09 03:49:50 +0000</comment>
                            <comment id="14654080" author="roboduke" created="Sat, 2 Mar 2024 07:03:44 -0800"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
JDK 21 is affected by this bug. The fix is small, only touches one PPC64 file and applies cleanly. It has been tested in head for some time and retested in 22u and 21u-dev. No regression found.</comment>
                            <comment id="14653929" author="roboduke" created="Fri, 1 Mar 2024 07:52:24 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/311&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/311&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-01 15:47:13 +0000</comment>
                            <comment id="14653802" author="roboduke" created="Thu, 29 Feb 2024 23:57:23 -0800"  >[jdk22u-fix-request] Approval Request from Martin&lt;br/&gt;
JDK 22 is affected by this bug. The fix is small, only touches one PPC64 file and applies cleanly. It has been tested in head for some time and retested in 22u. No regression found.</comment>
                            <comment id="14653110" author="roboduke" created="Wed, 28 Feb 2024 02:06:23 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/75&quot;&gt;https://git.openjdk.org/jdk22u/pull/75&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-28 09:59:47 +0000</comment>
                            <comment id="14650027" author="dukebot" created="Fri, 16 Feb 2024 08:01:08 -0800"  >Changeset: 4388095c&lt;br/&gt;
Author:    Martin Doerr &amp;lt;&lt;a href=&apos;mailto:mdoerr@openjdk.org&apos;&gt;mdoerr@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-02-16 15:58:37 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4388095cde20dec602ada9fe2977f1a359ceab91&quot;&gt;https://git.openjdk.org/jdk/commit/4388095cde20dec602ada9fe2977f1a359ceab91&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14650004" author="mbaesken" created="Fri, 16 Feb 2024 07:08:56 -0800"  >Similar issue seen in JDK11 linuxppc64be, stack backtrace however looks a little different&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/test/openjdk-11u-linux_ppc64le-dbg/jdk/src/hotspot/share/asm/codeBuffer.hpp:198), pid=30296, tid=30316&lt;br/&gt;
#  assert(allocates2(pc)) failed: relocation addr must be in this section&lt;br/&gt;
&lt;br/&gt;
V  [libjvm.so+0x1a794b4]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, char*)+0x54&lt;br/&gt;
V  [libjvm.so+0xa97a70]  report_vm_error(char const*, int, char const*, char const*, ...)+0xf0&lt;br/&gt;
V  [libjvm.so+0x8cf418]  CodeSection::relocate(unsigned char*, RelocationHolder const&amp;amp;, int) [clone .part.84]+0x348&lt;br/&gt;
V  [libjvm.so+0x8cf714]  CodeSection::relocate(unsigned char*, relocInfo::relocType, int, int)+0x94&lt;br/&gt;
V  [libjvm.so+0x13a8890]  MacroAssembler::bxx64_patchable(unsigned char*, relocInfo::relocType, bool)+0x3f0&lt;br/&gt;
V  [libjvm.so+0x23decc]  HandlerImpl::emit_deopt_handler(CodeBuffer&amp;amp;)+0x9c&lt;br/&gt;
V  [libjvm.so+0x1613124]  Compile::fill_buffer(CodeBuffer*, unsigned int*)+0x2004&lt;br/&gt;
V  [libjvm.so+0x9766c4]  Compile::Code_Gen()+0x434&lt;br/&gt;
V  [libjvm.so+0x97acf0]  Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, bool, DirectiveSet*)+0x1480&lt;br/&gt;
V  [libjvm.so+0x6ca1ac]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)+0x19c&lt;br/&gt;
V  [libjvm.so+0x98da5c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x3dc&lt;br/&gt;
V  [libjvm.so+0x98ed18]  CompileBroker::compiler_thread_loop()+0x638&lt;br/&gt;
V  [libjvm.so+0x1954db4]  compiler_thread_entry(JavaThread*, Thread*)+0x44&lt;br/&gt;
V  [libjvm.so+0x197091c]  JavaThread::thread_main_inner()+0x34c&lt;br/&gt;
V  [libjvm.so+0x196ab10]  Thread::call_run()+0xc0&lt;br/&gt;
V  [libjvm.so+0x15dff1c]  thread_native_entry(Thread*)+0x14c&lt;br/&gt;
C  [libpthread.so.0+0x8cd4]  start_thread+0x104</comment>
                            <comment id="14647440" author="roboduke" created="Wed, 7 Feb 2024 08:56:38 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17744&quot;&gt;https://git.openjdk.org/jdk/pull/17744&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-07 09:41:29 +0000</comment>
                            <comment id="14647399" author="mbaesken" created="Wed, 7 Feb 2024 06:11:09 -0800"  >I  had to set the jtreg  &amp;quot;-vmoption:-Xmx768m&amp;quot;  to reproduce the issue locally (no need to run :tier1 , just running the single test with this option is sufficient) .</comment>
                            <comment id="14647233" author="thartmann" created="Tue, 6 Feb 2024 23:25:08 -0800"  >ILW = Same as &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8248411&quot; title=&quot;AArch64: Insufficient error handling when CodeBuffer is exhausted&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8248411&quot;&gt;&lt;strike&gt;JDK-8248411&lt;/strike&gt;&lt;/a&gt; = P3</comment>
                            <comment id="14647044" author="mbaesken" created="Tue, 6 Feb 2024 07:09:12 -0800"  >there was a similar assert in the issue &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8248411&quot; title=&quot;AArch64: Insufficient error handling when CodeBuffer is exhausted&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8248411&quot;&gt;&lt;strike&gt;JDK-8248411&lt;/strike&gt;&lt;/a&gt; but on aarch64</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5123027">JDK-8327133</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5123611">JDK-8327653</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124346">JDK-8328295</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124695">JDK-8328582</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5023248">JDK-8248411</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5120942">JDK-8325432</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17024"><![CDATA[ppc]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34vxn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>