<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:12:40 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8334482] Shenandoah: Deadlock when safepoint is pending during nmethods iteration</title>
                <link>https://bugs.openjdk.org/browse/JDK-8334482</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In one of our applications running Shenandoah on Corretto 17.0.11+10, we see safepoint timeouts showing that the Sweeper thread has not reached a safepoint after 1000ms.&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
# SafepointSynchronize::begin: Timeout detected:&lt;br/&gt;
[364.175s][warning][safepoint] # SafepointSynchronize::begin: Timed out while spinning to reach a safepoint.&lt;br/&gt;
[364.175s][warning][safepoint] # SafepointSynchronize::begin: Threads which did not reach the safepoint:&lt;br/&gt;
[364.175s][warning][safepoint] # &amp;quot;Sweeper thread&amp;quot; #19 daemon prio=9 os_prio=0 cpu=1516.68ms elapsed=363.34s tid=0x00007ff04c1bbe50 nid=0x7eda runnable  [0x0000000000000000]&lt;br/&gt;
[364.175s][warning][safepoint]    java.lang.Thread.State: RUNNABLE&lt;br/&gt;
[364.175s][warning][safepoint]&lt;br/&gt;
[364.175s][warning][safepoint] # SafepointSynchronize::begin: (End of list)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
Threads waiting in SuspendibleThreadSet:join for ShenandoahConcurrentWeakRootsEvacUpdate Task:&lt;br/&gt;
&lt;br/&gt;
#0 0x00007fa753404377 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0&lt;br/&gt;
#1 0x00007fa7526f2a1b in os::PlatformMonitor::wait(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#2 0x00007fa7526a0489 in Monitor::wait_without_safepoint_check(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#3 0x00007fa7528c81fa in SuspendibleThreadSet::join() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#4 0x00007fa7527dc27d in ShenandoahConcurrentWeakRootsEvacUpdateTask::work(unsigned int) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#5 0x00007fa7529e42bf in GangWorker::loop() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#6 0x00007fa7529e431f in GangWorker::run() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#7 0x00007fa752930118 in Thread::call_run() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#8 0x00007fa7526e7131 in thread_native_entry(Thread*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#9 0x00007fa7533fe44b in start_thread () from /lib64/libpthread.so.0&lt;br/&gt;
#10 0x00007fa752f3552f in clone () from /lib64/libc.so.6&lt;br/&gt;
&lt;br/&gt;
and our blocked sweeper thread, waiting for the evac threads to notify it:&lt;br/&gt;
&lt;br/&gt;
#0 0x00007fa753404377 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0&lt;br/&gt;
#1 0x00007fa7526f2a1b in os::PlatformMonitor::wait(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#2 0x00007fa7526a0489 in Monitor::wait_without_safepoint_check(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#3 0x00007fa75282169b in ShenandoahNMethodTable::flush_nmethod(nmethod*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#4 0x00007fa7526ad05a in nmethod::flush() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#5 0x00007fa7528c8fe2 in NMethodSweeper::process_compiled_method(CompiledMethod*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#6 0x00007fa7528c95a3 in NMethodSweeper::sweep_code_cache() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#7 0x00007fa7528c9eec in NMethodSweeper::sweep() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#8 0x00007fa7528ca126 in NMethodSweeper::sweeper_loop() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#9 0x00007fa75292c58b in JavaThread::thread_main_inner() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#10 0x00007fa752930118 in Thread::call_run() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#11 0x00007fa7526e7131 in thread_native_entry(Thread*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#12 0x00007fa7533fe44b in start_thread () from /lib64/libpthread.so.0&lt;br/&gt;
#13 0x00007fa752f3552f in clone () from /lib64/libc.so.6&lt;br/&gt;
``` &lt;br/&gt;
&lt;br/&gt;
This appears to be a deadlock when another vm op happens at a bad time. See attached reproducer - run with `javac SweeperStuck.java &amp;amp;&amp;amp; java -Xcomp -XX:+UseShenandoahGC -Xlog:safepoint=info -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnSafepointTimeout -XX:+SafepointTimeout -XX:SafepointTimeoutDelay=1000 SweeperStuck` </description>
                <environment></environment>
        <key id="5132115">JDK-8334482</key>
            <summary>Shenandoah: Deadlock when safepoint is pending during nmethods iteration</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shade">Aleksey Shipilev</assignee>
                                    <reporter username="ogillespie">Oli Gillespie</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>gc-shenandoah</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok-next</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Tue, 18 Jun 2024 07:21:22 -0700</created>
                <updated>Wed, 29 Jan 2025 09:48:49 -0800</updated>
                            <resolved>Fri, 26 Jul 2024 04:24:23 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14694146" author="roboduke" created="Wed, 31 Jul 2024 07:32:45 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Fixes a Shenandoah deadlock. Applies with minor fuzz. The patch was in mainline for a short time, but passed multi-day stress testing. Risk is medium-low: the code change is simple enough, but affects a generic path in Shenandoah. We are picking this up into our downstream releases ahead of time as well.</comment>
                            <comment id="14694145" author="roboduke" created="Wed, 31 Jul 2024 07:32:27 -0700"  >[jdk17u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Fixes a Shenandoah deadlock. Applies with minor fuzz. The patch was in mainline for a short time, but passed multi-day stress testing. Risk is medium-low: the code change is simple enough, but affects a generic path in Shenandoah. We are picking this up into our downstream releases ahead of time as well.</comment>
                            <comment id="14693832" author="roboduke" created="Tue, 30 Jul 2024 11:58:11 -0700"  >[jdk23u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Fixes a Shenandoah deadlock. Applies cleanly. The patch was in mainline for a short time, but passed multi-day stress testing. Risk is medium-low: the code change is simple enough, but affects a generic path in Shenandoah.</comment>
                            <comment id="14693736" author="roboduke" created="Tue, 30 Jul 2024 06:34:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2751&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2751&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-30 13:27:53 +0000</comment>
                            <comment id="14693724" author="roboduke" created="Tue, 30 Jul 2024 05:04:10 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/880&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/880&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-30 11:56:49 +0000</comment>
                            <comment id="14693717" author="roboduke" created="Tue, 30 Jul 2024 04:03:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/45&quot;&gt;https://git.openjdk.org/jdk23u/pull/45&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-30 10:57:34 +0000</comment>
                            <comment id="14692964" author="dukebot" created="Fri, 26 Jul 2024 04:24:22 -0700"  >Changeset: 2aeb12ec&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-07-26 11:20:40 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/2aeb12ec03944c777d617d0be48982fd225b16e7&quot;&gt;https://git.openjdk.org/jdk/commit/2aeb12ec03944c777d617d0be48982fd225b16e7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14692434" author="roboduke" created="Wed, 24 Jul 2024 13:04:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20309&quot;&gt;https://git.openjdk.org/jdk/pull/20309&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-24 09:10:35 +0000</comment>
                            <comment id="14692074" author="shade" created="Tue, 23 Jul 2024 10:12:36 -0700"  >It looks to me the real problem is indeed with STS interaction: we cannot first start the nmethod iteration in ShenandoahConcurrentWeakRootsEvacUpdateTask constructor, and then go to STS in its work(), which can potentially block. Whatever triggers the safepoint when between constructor call and worker picking up the task would deadlock the whole thing.&lt;br/&gt;
&lt;br/&gt;
Sweeper is not really related to this, any pending safepoint would deadlock, if there is a pending operation that waits for nmethod iteration to be over. Could be Sweeper, could be just compiler patching the code and registering a new nmethod version.&lt;br/&gt;
&lt;br/&gt;
I think I have a fix for this: avoid starting nmethod iteration before we enter STS; do it after. A crude version is like this: 8334482-crude-17u.patch, see attached.</comment>
                            <comment id="14691939" author="shade" created="Tue, 23 Jul 2024 03:05:16 -0700"  >The STS in question was added by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8307395&quot; title=&quot;Add missing STS to Shenandoah&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8307395&quot;&gt;&lt;strike&gt;JDK-8307395&lt;/strike&gt;&lt;/a&gt;, so maybe that one needs to be reconsidered.</comment>
                            <comment id="14691938" author="shade" created="Tue, 23 Jul 2024 03:03:41 -0700"  >We have seen a second path to this deadlock, when C1 hotpatches the code and calls `ShenandoahNMethodTable::register_nmethod`:&lt;br/&gt;
&lt;br/&gt;
Thread 37 (Thread 0x7f8a004c1700 (LWP 11028)):&lt;br/&gt;
#0  0x00007f8a260c9377 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0&lt;br/&gt;
#1  0x00007f8a253bb5eb in os::PlatformMonitor::wait(long) () &lt;br/&gt;
#2  0x00007f8a253687f9 in Monitor::wait_without_safepoint_check(long) ()&lt;br/&gt;
#3  0x00007f8a254ea3b3 in ShenandoahNMethodTable::register_nmethod(nmethod*) () &lt;br/&gt;
#4  0x00007f8a24c6ea8d in Runtime1::patch_code(JavaThread*, Runtime1::StubID) ()&lt;br/&gt;
#5  0x00007f8a24c6fe97 in Runtime1::move_klass_patching(JavaThread*) ()&lt;br/&gt;
&lt;br/&gt;
ShenandoahConcurrentWeakRootsEvacUpdateTask is also parked on STS in that failure mode.</comment>
                            <comment id="14684136" author="JIRAUSER20804" created="Mon, 24 Jun 2024 06:03:42 -0700"  >It seems to be a deadlock, not just a delay.&lt;br/&gt;
When the safepoint timeout triggers, we have:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
Threads waiting in SuspendibleThreadSet:join for ShenandoahConcurrentWeakRootsEvacUpdate Task:&lt;br/&gt;
&lt;br/&gt;
#0  0x00007fa753404377 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0&lt;br/&gt;
#1  0x00007fa7526f2a1b in os::PlatformMonitor::wait(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#2  0x00007fa7526a0489 in Monitor::wait_without_safepoint_check(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#3  0x00007fa7528c81fa in SuspendibleThreadSet::join() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#4  0x00007fa7527dc27d in ShenandoahConcurrentWeakRootsEvacUpdateTask::work(unsigned int) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#5  0x00007fa7529e42bf in GangWorker::loop() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#6  0x00007fa7529e431f in GangWorker::run() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#7  0x00007fa752930118 in Thread::call_run() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#8  0x00007fa7526e7131 in thread_native_entry(Thread*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#9  0x00007fa7533fe44b in start_thread () from /lib64/libpthread.so.0&lt;br/&gt;
#10 0x00007fa752f3552f in clone () from /lib64/libc.so.6&lt;br/&gt;
&lt;br/&gt;
and our blocked sweeper thread, waiting for the evac threads to notify it:&lt;br/&gt;
&lt;br/&gt;
#0  0x00007fa753404377 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0&lt;br/&gt;
#1  0x00007fa7526f2a1b in os::PlatformMonitor::wait(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#2  0x00007fa7526a0489 in Monitor::wait_without_safepoint_check(long) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#3  0x00007fa75282169b in ShenandoahNMethodTable::flush_nmethod(nmethod*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#4  0x00007fa7526ad05a in nmethod::flush() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#5  0x00007fa7528c8fe2 in NMethodSweeper::process_compiled_method(CompiledMethod*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#6  0x00007fa7528c95a3 in NMethodSweeper::sweep_code_cache() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#7  0x00007fa7528c9eec in NMethodSweeper::sweep() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#8  0x00007fa7528ca126 in NMethodSweeper::sweeper_loop() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#9  0x00007fa75292c58b in JavaThread::thread_main_inner() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#10 0x00007fa752930118 in Thread::call_run() () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#11 0x00007fa7526e7131 in thread_native_entry(Thread*) () from /local/apollo/package/local_1/AL2_x86_64/JDK17/JDK17-3703.0-0/jdk-17/lib/server/libjvm.so&lt;br/&gt;
#12 0x00007fa7533fe44b in start_thread () from /lib64/libpthread.so.0&lt;br/&gt;
#13 0x00007fa752f3552f in clone () from /lib64/libc.so.6&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
It seems that non-gc safepoints at the wrong time can trigger this deadlock. I have attached reproducer which reliably triggers the timeout within ~15 seconds on my host.&lt;br/&gt;
&lt;br/&gt;
`javac SweeperStuck.java &amp;amp;&amp;amp; java -Xcomp -XX:+UseShenandoahGC -Xlog:safepoint=info -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnSafepointTimeout -XX:+SafepointTimeout -XX:SafepointTimeoutDelay=1000 SweeperStuck`</comment>
                            <comment id="14682975" author="JIRAUSER20804" created="Wed, 19 Jun 2024 07:59:08 -0700"  >Thanks Zhengyu - yes this is Corretto 17.0.11+10. Investigating further, actually the application never recovers from the stuck sweeper thread, so it seems more likely that there&amp;#39;s something causing the sweeper not to be notified at all, not just delayed. I will do more investigation on the application and update here with my findings.</comment>
                            <comment id="14682711" author="zgu" created="Tue, 18 Jun 2024 11:40:45 -0700"  >CodeCache_lock is only taken at begin and end of iteration, not during the iteration, I doubt it is the cause to block safepoints.&lt;br/&gt;
&lt;br/&gt;
BTW, this is jdk17? Sweeper was removed in jdk20.&lt;br/&gt;
</comment>
                            <comment id="14682651" author="shade" created="Tue, 18 Jun 2024 08:15:08 -0700"  >Zhengyu, do you remember why this code acquires CodeCache_lock, and/or why it acquires without checking for safepoint?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5135738">JDK-8337645</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135837">JDK-8337727</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135579">JDK-8337560</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5119460">JDK-8324225</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5100064">JDK-8307395</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="110200" name="8334482-crude-17u.patch" size="2349" author="shade" created="Tue, 23 Jul 2024 10:29:46 -0700"/>
                            <attachment id="109841" name="SweeperStuck.java" size="7867" author="ogillespie" created="Mon, 24 Jun 2024 06:03:52 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36sbv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>