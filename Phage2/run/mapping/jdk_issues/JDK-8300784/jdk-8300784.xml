<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:57:19 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8300784] Specify exactly how padding should be presented to the linker</title>
                <link>https://bugs.openjdk.org/browse/JDK-8300784</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In C it is possible to create a struct with extra padding such as:&lt;br/&gt;
&lt;br/&gt;
struct Foo {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int x;    &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int : 32;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int y;&lt;br/&gt;
};&lt;br/&gt;
&lt;br/&gt;
Which uses an unnamed bitfield to represent the padding.&lt;br/&gt;
&lt;br/&gt;
It is unclear how the layout for this struct should be constructed. Jextract uses PaddingLayouts, but this might not work on all linker implementations (such as fallback linker).&lt;br/&gt;
&lt;br/&gt;
We should specify and test cases like these in the JDK</description>
                <environment></environment>
        <key id="5092099">JDK-8300784</key>
            <summary>Specify exactly how padding should be presented to the linker</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jvernee">Jorn Vernee</assignee>
                                    <reporter username="jvernee">Jorn Vernee</reporter>
                        <labels>
                            <label>foreign-memaccess+abi</label>
                    </labels>
                <created>Fri, 20 Jan 2023 06:52:22 -0800</created>
                <updated>Mon, 24 Jul 2023 11:14:40 -0700</updated>
                            <resolved>Mon, 1 May 2023 06:03:14 -0700</resolved>
                                    <version>repo-panama</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14577847" author="dukebot" created="Mon, 1 May 2023 06:03:13 -0700"  >Changeset: 1de1a388&lt;br/&gt;
Author:    Jorn Vernee &amp;lt;&lt;a href=&apos;mailto:jvernee@openjdk.org&apos;&gt;jvernee@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-01 13:00:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1de1a38859c696cd5f3f6efa51809bff9c127953&quot;&gt;https://git.openjdk.org/jdk/commit/1de1a38859c696cd5f3f6efa51809bff9c127953&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14569639" author="roboduke" created="Mon, 27 Mar 2023 06:56:12 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13164&quot;&gt;https://git.openjdk.org/jdk/pull/13164&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-23 18:11:18 +0000</comment>
                            <comment id="14565930" author="jvernee" created="Fri, 10 Mar 2023 09:45:56 -0800"  >For clasification purposes unamed bitfields seem to be ignored by SysV. e.g.&lt;br/&gt;
&lt;br/&gt;
struct Foo {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;float f0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int: 32;&lt;br/&gt;
};&lt;br/&gt;
&lt;br/&gt;
Is passed in xmm0, instead of rdi if the bitfield was named.</comment>
                            <comment id="14564632" author="mcimadamore" created="Mon, 6 Mar 2023 03:54:08 -0800"  >IMHO, it is not even clear how much cases like these are supported by ABIs. In SysV, while I can find some mentions of bitfields:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
C struct and union definitions may include bit-fields that define integral values of&lt;br/&gt;
a specified size&lt;br/&gt;
&lt;br/&gt;
The ABI does not permit bit-fields having the type __m64, __m128 or __m256.&lt;br/&gt;
Programs using bit-fields of these types are not portable.&lt;br/&gt;
Bit-fields that are neither signed nor unsigned always have non-negative val-&lt;br/&gt;
ues. Although they may have type char, short, int, or long (which can have neg-&lt;br/&gt;
ative values), these bit-fields have the same range as a bit-field of the same size&lt;br/&gt;
with the corresponding unsigned type. Bit-fields obey the same size and alignment&lt;br/&gt;
rules as other structure and union members.&lt;br/&gt;
Also:&lt;br/&gt;
&#8226; bit-fields are allocated from right to left&lt;br/&gt;
&#8226; bit-fields must be contained in a storage unit appropriate for its declared&lt;br/&gt;
type&lt;br/&gt;
&#8226; bit-fields may share a storage unit with other struct / union members&lt;br/&gt;
Unnamed bit-fields&#8217; types do not affect the alignment of a structure or union.&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The ABI doesn&amp;#39;t really say how bit-fields are passed to functions - neither it seems to be too strict on the kind of layout that one should expect when compiling the struct in this issue. Of course many compilers will end up with three 32-bit words (two for the fields, one for the padding) - but what does the API do when passing this struct? There&amp;#39;s no other references to &amp;quot;bit-fields&amp;quot; in the SysV document, which makes me think we do not have enough information to work with here.</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3012z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17412"><![CDATA[b21]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="2492"><![CDATA[java.lang.foreign]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>