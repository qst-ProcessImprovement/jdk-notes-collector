<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:17:26 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8296010] AssertionError in annotationTargetType</title>
                <link>https://bugs.openjdk.org/browse/JDK-8296010</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In the following example, javac crashes when compiling a file that references an annotation with a @Target containing an invalid ElementType.&lt;br/&gt;
&lt;br/&gt;
The class file is not well formed, but the compiler should handle it without crashing.&lt;br/&gt;
&lt;br/&gt;
I think this should be a warning, but not a fatal error. The values in ElementType are updated for new language features, so this is similar this crash involve a Java 8 compilation that saw a reference to ElementType.MODULE: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8295314&quot;&gt;https://bugs.openjdk.org/browse/JDK-8295314&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
import org.objectweb.asm.AnnotationVisitor;&lt;br/&gt;
import org.objectweb.asm.ClassWriter;&lt;br/&gt;
import org.objectweb.asm.Opcodes;&lt;br/&gt;
&lt;br/&gt;
import java.nio.file.Files;&lt;br/&gt;
import java.nio.file.Paths;&lt;br/&gt;
&lt;br/&gt;
public class Gen {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Files.write(Paths.get(&amp;quot;A.class&amp;quot;), dump());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;private static byte[] dump() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ClassWriter classWriter = new ClassWriter(0);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;classWriter.visit(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Opcodes.V11,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Opcodes.ACC_ANNOTATION | Opcodes.ACC_ABSTRACT | Opcodes.ACC_INTERFACE,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;A&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;null,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;java/lang/Object&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new String[] {&amp;quot;java/lang/annotation/Annotation&amp;quot;});&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;classWriter.visitSource(&amp;quot;A.java&amp;quot;, null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AnnotationVisitor target = classWriter.visitAnnotation(&amp;quot;Ljava/lang/annotation/Target;&amp;quot;, true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AnnotationVisitor value = target.visitArray(&amp;quot;value&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value.visitEnum(null, &amp;quot;Ljava/lang/annotation/ElementType;&amp;quot;, &amp;quot;FIELD&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value.visitEnum(null, &amp;quot;Ljava/lang/annotation/ElementType;&amp;quot;, &amp;quot;NO_SUCH&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value.visitEnd();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;target.visitEnd();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;classWriter.visitEnd();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return classWriter.toByteArray();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
class B {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@A Object o;&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
$ javac -cp asm-9.4.jar:asm-util-9.4.jar Gen.java&lt;br/&gt;
$ java -cp asm-9.4.jar:asm-util-9.4.jar:. Gen&lt;br/&gt;
$ javac -fullversion B.java&lt;br/&gt;
javac full version &amp;quot;19-ea+34-2229&amp;quot;&lt;br/&gt;
warning: unknown enum constant ElementType.NO_SUCH&lt;br/&gt;
warning: unknown enum constant ElementType.NO_SUCH&lt;br/&gt;
2 warnings&lt;br/&gt;
An exception has occurred in the compiler (19-ea). Please file a bug against the Java compiler via the Java bug reporting page (&lt;a href=&quot;http://bugreport.java.com&quot;&gt;http://bugreport.java.com&lt;/a&gt;) after checking the Bug Database (&lt;a href=&quot;http://bugs.java.com&quot;&gt;http://bugs.java.com&lt;/a&gt;) for duplicates. Include your program, the following diagnostic, and the parameters passed to the Java compiler in your report. Thank you.&lt;br/&gt;
java.lang.AssertionError: annotationTargetType(): unrecognized Attribute name NO_SUCH (class com.sun.tools.javac.util.SharedNameTable$NameImpl)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.util.Assert.error(Assert.java:162)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations.targetToAnnotationType(TypeAnnotations.java:256)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations.lambda$annotationTargetType$3(TypeAnnotations.java:190)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1921)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.stream.ReferencePipeline.reduce(ReferencePipeline.java:657)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations.annotationTargetType(TypeAnnotations.java:191)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations$TypeAnnotationPositions.separateAnnotationsKinds(TypeAnnotations.java:316)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations$TypeAnnotationPositions.visitVarDef(TypeAnnotations.java:1269)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:1018)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations$TypeAnnotationPositions.scan(TypeAnnotations.java:294)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:57)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations$TypeAnnotationPositions.visitClassDef(TypeAnnotations.java:1142)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:810)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations$TypeAnnotationPositions.scan(TypeAnnotations.java:294)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.code.TypeAnnotations.lambda$organizeTypeAnnotationsSignatures$0(TypeAnnotations.java:131)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.comp.Annotate.flush(Annotate.java:198)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.comp.Annotate.unblockAnnotations(Annotate.java:145)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.comp.Annotate.enterDone(Annotate.java:158)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.enterDone(JavaCompiler.java:1741)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.enterTrees(JavaCompiler.java:1044)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:917)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:317)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:176)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:64)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:50)&lt;br/&gt;
```</description>
                <environment></environment>
        <key id="5086270">JDK-8296010</key>
            <summary>AssertionError in annotationTargetType</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vromero">Vicente Arturo Romero Zaldivar</assignee>
                                    <reporter username="cushon">Liam Miller-Cushon</reporter>
                        <labels>
                            <label>javac-crash</label>
                    </labels>
                <created>Thu, 27 Oct 2022 14:12:00 -0700</created>
                <updated>Wed, 22 Feb 2023 23:13:01 -0800</updated>
                            <resolved>Thu, 16 Feb 2023 11:07:48 -0800</resolved>
                                    <version>19</version>
                                    <fixVersion>21</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14560811" author="dukebot" created="Thu, 16 Feb 2023 11:07:47 -0800"  >Changeset: de80dd9c&lt;br/&gt;
Author:    Vicente Romero &amp;lt;&lt;a href=&apos;mailto:vromero@openjdk.org&apos;&gt;vromero@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-16 19:06:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/de80dd9c15cd3194ba8c512498d37a76c747e5fc&quot;&gt;https://git.openjdk.org/jdk/commit/de80dd9c15cd3194ba8c512498d37a76c747e5fc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14555121" author="cushon" created="Fri, 27 Jan 2023 11:24:49 -0800"  >Thanks, that all SGTM--reporting an error here is clearly an improvement over crashing.&lt;br/&gt;
&lt;br/&gt;
The other use-case might warrant another thread or RFE in the future. Thinking a little more about it, though, i can see it would be surprising if a @Target(MODULE) annotation that was only intended to be applicable to modules was interpreted as @Target() on earlier versions, and become applicable to other declaration types.</comment>
                            <comment id="14554885" author="roboduke" created="Thu, 26 Jan 2023 21:19:06 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12241&quot;&gt;https://git.openjdk.org/jdk/pull/12241&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-27 05:13:35 +0000</comment>
                            <comment id="14554872" author="vromero" created="Thu, 26 Jan 2023 21:00:24 -0800"  >I understand the concern here but it seems to me that allowing this situation without issuing an error would be odd from the compiler POV. I see that ignoring this could have practical applications but to me it also offers a way to circumvent compiler&amp;#39;s symbol resolution. We can continue discussing the issue on the PR but TBH this seems  to me that the compiler should issue an error not a warning.</comment>
                            <comment id="14554814" author="cushon" created="Thu, 26 Jan 2023 13:32:06 -0800"  >The more realistic example than NO_SUCH is something like MODULE in a jar of Java 8 bytecode, which is possible to produce using -source/-target/-bootclasspath.&lt;br/&gt;
&lt;br/&gt;
A potential benefit of allowing this instead of reporting an error would to support libraries of annotations that want to be applicable to newer target types when used in projects targeting newer language versions, but for that jar of annotations to also be compatible with projects targeting older language levels. I&amp;#39;m curious what you think about that use-case?&lt;br/&gt;
&lt;br/&gt;
A potential alternative would be to use multi-release jars, and have definitions of the annotations with different `@Target`s for newer versions. JEP-238 mentions &amp;quot;every version of the library should offer the same API&amp;quot;, though, so it&amp;#39;s not clear that having different @Targets for different versions is allowed by the spirit of that.</comment>
                            <comment id="14554786" author="vromero" created="Thu, 26 Jan 2023 10:53:35 -0800"  >I agree that javac shouldn&amp;#39;t crash, but not sure if this should be a compiler error instead of a warning. I mean right now if this was declared in source code the compiler would do:&lt;br/&gt;
```&lt;br/&gt;
error: cannot find symbol&lt;br/&gt;
@Target(ElementType.NO_SUCH)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;br/&gt;
&amp;nbsp;&amp;nbsp;symbol:   variable NO_SUCH&lt;br/&gt;
&amp;nbsp;&amp;nbsp;location: class ElementType&lt;br/&gt;
1 error&lt;br/&gt;
```</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5085058">JDK-8295314</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5085058">JDK-8295314</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2z1zf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="212"><![CDATA[javac]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>