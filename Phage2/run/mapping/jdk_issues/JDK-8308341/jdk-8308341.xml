<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:34:32 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8308341] JNI_GetCreatedJavaVMs returns a partially initialized JVM</title>
                <link>https://bugs.openjdk.org/browse/JDK-8308341</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
OS: Ubuntu 22.04.2 LTS&lt;br/&gt;
OpenJDK compiled with debugslow from &lt;a href=&quot;https://github.com/openjdk/jdk/&quot;&gt;https://github.com/openjdk/jdk/&lt;/a&gt; and commit 8d49ba9e8d3095f850b3007b56488a0c0cf8ddff&lt;br/&gt;
&lt;br/&gt;
openjdk version &amp;quot;21-internal&amp;quot; 2023-09-19&lt;br/&gt;
OpenJDK Runtime Environment (slowdebug build 21-internal-adhoc.fpoli.jdk)&lt;br/&gt;
OpenJDK 64-Bit Server VM (slowdebug build 21-internal-adhoc.fpoli.jdk, mixed mode, sharing)&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
`JNI_GetCreatedJavaVMs` returns a pointer to a VM that has not been fully initialized. Thus, trying to `AttachCurrentThread` on the returned VM causes an internal assertion to fail.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run `make run`. The program will crash with high probability (100% on my computer so far).&lt;br/&gt;
&lt;br/&gt;
ACTUAL -&lt;br/&gt;
The call to `JNI_GetCreatedJavaVMs` returns a pointer to a VM that has not been fully initialized. In fact, by calling `AttachCurrentThread` on the returned VM the following debug assertion fails:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/home/fpoli/src/jdk/src/hotspot/share/runtime/mutex.cpp:275), pid=2128085, tid=2128087&lt;br/&gt;
#  assert(os::mutex_init_done()) failed: Too early!&lt;br/&gt;
#&lt;br/&gt;
# JRE version:  (21.0) (slowdebug build )&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 21-internal-adhoc.fpoli.jdk, mixed mode, sharing, tiered, compressed class ptrs, unknown gc, linux-amd64)&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /home/fpoli/src/jni-bug/core.2128085)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /home/fpoli/src/jni-bug/hs_err_pid2128085.log&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
C++ code:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
#include &amp;lt;jni.h&amp;gt;&lt;br/&gt;
#include &amp;lt;string.h&amp;gt;&lt;br/&gt;
#include &amp;lt;pthread.h&amp;gt;&lt;br/&gt;
#include &amp;lt;iostream&amp;gt;&lt;br/&gt;
&lt;br/&gt;
using namespace std;&lt;br/&gt;
&lt;br/&gt;
#define NUM_THREADS 2&lt;br/&gt;
&lt;br/&gt;
void *thread_runner(void *threadid) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long tid;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tid = (long)threadid;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaVM *vm;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JNIEnv *env;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaVMInitArgs vm_args;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaVMOption* options = new JavaVMOption[0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vm_args.version = JNI_VERSION_1_6;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vm_args.nOptions = 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vm_args.options = options;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vm_args.ignoreUnrecognized = false;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] BEGIN JNI_CreateJavaVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jint create_res = JNI_CreateJavaVM(&amp;amp;vm, (void **)&amp;amp;env, &amp;amp;vm_args);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] END JNI_CreateJavaVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (create_res != JNI_OK) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] Error creating JVM: &amp;quot; &amp;lt;&amp;lt; create_res &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (create_res == -5) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jsize count;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] BEGIN JNI_CreateJavaVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jint get_res = JNI_GetCreatedJavaVMs(&amp;amp;vm, 1, &amp;amp;count);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] END JNI_CreateJavaVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (get_res != JNI_OK) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] Error obtaining created JVMs: &amp;quot; &amp;lt;&amp;lt; get_res &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_exit(NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] Obtained an existing JVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] BEGIN AttachCurrentThread&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vm-&amp;gt;AttachCurrentThread((void **)&amp;amp;env, NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] END AttachCurrentThread&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_exit(NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] Created a JVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;delete options;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_exit(NULL);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
int main () {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_t threads[NUM_THREADS];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; NUM_THREADS; i++ ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[*] Creating thread &amp;quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int status = pthread_create(&amp;amp;threads[i], NULL, thread_runner, (void *)i);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (status) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[*] Error creating thread: &amp;quot; &amp;lt;&amp;lt; status &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(-1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; NUM_THREADS; i++ ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_join(threads[i], NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[*] Joined thread &amp;quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return 0;&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Makefile:&lt;br/&gt;
```&lt;br/&gt;
main:&lt;br/&gt;
	$(CXX) \&lt;br/&gt;
		-Wall -Wextra -g \&lt;br/&gt;
		-L${JAVA_HOME}/lib/server/ \&lt;br/&gt;
		-I${JAVA_HOME}/include/ \&lt;br/&gt;
		-I${JAVA_HOME}/include/linux/ \&lt;br/&gt;
		main.cpp \&lt;br/&gt;
		-ljvm&lt;br/&gt;
&lt;br/&gt;
run: main&lt;br/&gt;
	LD_LIBRARY_PATH=&amp;quot;${JAVA_HOME}/lib/server/:${LD_LIBRARY_PATH}&amp;quot; ./a.out&lt;br/&gt;
```&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Unknown&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : often&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5100921">JDK-8308341</key>
            <summary>JNI_GetCreatedJavaVMs returns a partially initialized JVM</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dholmes">David Holmes</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>17bpr-critical-approved</label>
                            <label>additional-information-received</label>
                            <label>dcsswa</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>release-note=yes</label>
                            <label>reproducer-other</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 15 May 2023 02:35:41 -0700</created>
                <updated>Tue, 6 May 2025 01:41:38 -0700</updated>
                            <resolved>Tue, 30 May 2023 15:48:29 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                                                            <comments>
                            <comment id="14727399" author="roboduke" created="Mon, 2 Dec 2024 05:16:21 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3084&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3084&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-02 13:08:05 +0000</comment>
                            <comment id="14727395" author="goetz" created="Mon, 2 Dec 2024 05:09:42 -0800"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.15-oracle including follow-ups &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8309231&quot; title=&quot;ProblemList vmTestbase/nsk/jvmti/scenarios/jni_interception/JI05/ji05t001/TestDescription.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8309231&quot;&gt;&lt;strike&gt;JDK-8309231&lt;/strike&gt;&lt;/a&gt; and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8309171&quot; title=&quot;Test vmTestbase/nsk/jvmti/scenarios/jni_interception/JI05/ji05t001/TestDescription.java fails after JDK-8308341&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8309171&quot;&gt;&lt;strike&gt;JDK-8309171&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
Medium risk, VM startup was always hairy to change. But the VM should behave consistent with other VMs. Also, it&amp;#39;s well tested.&lt;br/&gt;
Trivial resolves.&lt;br/&gt;
Test passes. SAP nighlty testing passed.</comment>
                            <comment id="14585803" author="dukebot" created="Tue, 30 May 2023 15:48:28 -0700"  >Changeset: 1e6770fb&lt;br/&gt;
Author:    David Holmes &amp;lt;&lt;a href=&apos;mailto:dholmes@openjdk.org&apos;&gt;dholmes@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-30 22:46:06 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1e6770fb978e630b38a70a05120c50f723bb66dc&quot;&gt;https://git.openjdk.org/jdk/commit/1e6770fb978e630b38a70a05120c50f723bb66dc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14584297" author="roboduke" created="Wed, 24 May 2023 22:08:27 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14139&quot;&gt;https://git.openjdk.org/jdk/pull/14139&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-25 05:02:19 +0000</comment>
                            <comment id="14584272" author="dholmes" created="Wed, 24 May 2023 16:49:42 -0700"  >Reopening. As I wrote above:&lt;br/&gt;
&lt;br/&gt;
The problem, per the bug report, is that GetCreatedJavaVMs is reporting too early that a JVM is available. It relies solely on the value of vm_created, but that is set to 1 early in the creation process as the guard against concurrent creation attempts - long before the VM initialization is actually complete. &lt;br/&gt;
&lt;br/&gt;
I have a fix in-progress but there is a subtle change in behaviour that might cause racy code that has been working (by luck) to start failing.</comment>
                            <comment id="14584085" author="pnarayanaswa" created="Wed, 24 May 2023 05:06:02 -0700"  >Additional Information from submitter:&lt;br/&gt;
=============================&lt;br/&gt;
When compiling and running the provided program using OpenJDK version 20.0.1 (see info below), the JVM terminates with a segmentation fault. Running the program with `gdb` shows the following backtrace:&lt;br/&gt;
```&lt;br/&gt;
(gdb) run&lt;br/&gt;
Starting program: &amp;lt;path&amp;gt;/a.out &lt;br/&gt;
[Thread debugging using libthread_db enabled]&lt;br/&gt;
Using host libthread_db library &amp;quot;/lib/x86_64-linux-gnu/libthread_db.so.1&amp;quot;.&lt;br/&gt;
[*] Creating thread 0&lt;br/&gt;
[New Thread 0x7ffff63ff640 (LWP 2326275)]&lt;br/&gt;
[*] Creating thread 1&lt;br/&gt;
[0] BEGIN JNI_CreateJavaVM&lt;br/&gt;
[New Thread 0x7ffff5bfe640 (LWP 2326276)]&lt;br/&gt;
[1] BEGIN JNI_CreateJavaVM&lt;br/&gt;
[1] END JNI_CreateJavaVM&lt;br/&gt;
[1] Error creating JVM: -5&lt;br/&gt;
[1] BEGIN JNI_CreateJavaVM&lt;br/&gt;
[1] END JNI_CreateJavaVM&lt;br/&gt;
[1] Obtained an existing JVM&lt;br/&gt;
[1] BEGIN AttachCurrentThread&lt;br/&gt;
&lt;br/&gt;
Thread 3 &amp;quot;a.out&amp;quot; received signal SIGSEGV, Segmentation fault.&lt;br/&gt;
[Switching to Thread 0x7ffff5bfe640 (LWP 2326276)]&lt;br/&gt;
0x00007ffff7a5bd46 in ThreadLocalAllocBuffer::initial_desired_size() () from /opt/openjdk-20.0.1/lib/server/libjvm.so&lt;br/&gt;
(gdb) bt&lt;br/&gt;
#0  0x00007ffff7a5bd46 in ThreadLocalAllocBuffer::initial_desired_size() () from /opt/openjdk-20.0.1/lib/server/libjvm.so&lt;br/&gt;
#1  0x00007ffff7a5bdb4 in ThreadLocalAllocBuffer::initialize() () from /opt/openjdk-20.0.1/lib/server/libjvm.so&lt;br/&gt;
#2  0x00007ffff7559524 in attach_current_thread.part () from /opt/openjdk-20.0.1/lib/server/libjvm.so&lt;br/&gt;
#3  0x000055555555595a in JavaVM_::AttachCurrentThread (this=0x7ffff7eecf80 &amp;lt;main_vm&amp;gt;, penv=0x7ffff5bfdd98, args=0x0) at /opt/openjdk-20.0.1/include/jni.h:1950&lt;br/&gt;
#4  0x0000555555555676 in thread_runner (threadid=0x1) at main.cpp:45&lt;br/&gt;
#5  0x00007ffff6494b43 in start_thread (arg=&amp;lt;optimized out&amp;gt;) at ./nptl/pthread_create.c:442&lt;br/&gt;
#6  0x00007ffff6526a00 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
JDK version:&lt;br/&gt;
```&lt;br/&gt;
openjdk version &amp;quot;20.0.1&amp;quot; 2023-04-18&lt;br/&gt;
OpenJDK Runtime Environment (build 20.0.1+9-29)&lt;br/&gt;
OpenJDK 64-Bit Server VM (build 20.0.1+9-29, mixed mode, sharing)&lt;br/&gt;
```</comment>
                            <comment id="14583879" author="mseledtsov" created="Tue, 23 May 2023 11:17:30 -0700"  >Runtime Triage team: Closing as not an issue based on David&amp;#39;s comments. This is not a JVM issue.</comment>
                            <comment id="14582769" author="dholmes" created="Thu, 18 May 2023 21:16:59 -0700"  >&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jint get_res = JNI_GetCreatedJavaVMs(&amp;amp;vm, 1, &amp;amp;count);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] END JNI_CreateJavaVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (get_res != JNI_OK) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] Error obtaining created JVMs: &amp;quot; &amp;lt;&amp;lt; get_res &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_exit(NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout &amp;lt;&amp;lt; &amp;quot;[&amp;quot; &amp;lt;&amp;lt; tid &amp;lt;&amp;lt; &amp;quot;] Obtained an existing JVM&amp;quot; &amp;lt;&amp;lt; endl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Also note the above code is incorrect. JNI_GetCreatedJavaVMs will return JNI_OK even if there are zero created VMs (zeroi is a valid answer so the call should not report an error). You need to check the value of count is one otherwise you are just using a random memory location as if it were a JavaVM structure.</comment>
                            <comment id="14582733" author="dholmes" created="Thu, 18 May 2023 15:32:29 -0700"  >A workaround would be to use synchronization e.g. a semaphore, around any calls to CreateJavaVM, such that any secondary calls will have to wait until the primary has actually completed.</comment>
                            <comment id="14582732" author="dholmes" created="Thu, 18 May 2023 15:30:46 -0700"  >I initially misread the test program and as there was no output shown I had the wrong impression of what is happening. Here is the output (with source code adjustments for correct method reporting):&lt;br/&gt;
&lt;br/&gt;
[*] Creating thread 0&lt;br/&gt;
[*] Creating thread 1&lt;br/&gt;
[0] BEGIN JNI_CreateJavaVM&lt;br/&gt;
[1] BEGIN JNI_CreateJavaVM&lt;br/&gt;
[1] END JNI_CreateJavaVM&lt;br/&gt;
[1] Error creating JVM: -5&lt;br/&gt;
[1] BEGIN JNI_GetCreatedJavaVMs&lt;br/&gt;
[1] END JNI_GetCreatedJavaVMs&lt;br/&gt;
[1] Obtained 1 existing JVM&lt;br/&gt;
[1] BEGIN AttachCurrentThread&lt;br/&gt;
[53077813.102s][warning][os,thread] Attempt to allocate stack guard pages failed.&lt;br/&gt;
Segmentation fault (core dumped)&lt;br/&gt;
&lt;br/&gt;
So what is happening is that thread[0] is in the process of initializing the JVM. Thread[1] attempts to create the VM as well and gets an error as expected (JNI_EEXIST). So it looks up the VM that is already in existence via GetCreatedJavaVMs and receives back the JavaVM that ithread[0] was creating, but apparently has not yet completed. thread[1] then tries to attach to that JavaVM and it fails.&lt;br/&gt;
&lt;br/&gt;
The problem, per the bug report, is that GetCreatedJavaVMs is reporting too early that a JVM is available. It relies solely on the value of vm_created, but that is set to 1 early in the creation process as the guard against concurrent creation attempts - long before the VM initialization is actually complete.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14582520" author="sswsharm" created="Wed, 17 May 2023 21:15:08 -0700"  >The crash is reported on OpenJDK 21&lt;br/&gt;
crash occurred in the native thread:&lt;br/&gt;
&lt;br/&gt;
Current thread is native thread&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f69ca000000,0x00007f69ca7ff000],  sp=0x00007f69ca7fd7b0,  free space=8181k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x16d8d2d]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x915  (mutex.cpp:275)&lt;br/&gt;
V  [libjvm.so+0x16d83bd]  (vmError.cpp:1361)&lt;br/&gt;
V  [libjvm.so+0xa05117]  report_vm_status_error(char const*, int, char const*, int, char const*)+0x0  (debug.cpp:191)&lt;br/&gt;
V  [libjvm.so+0x12874c7]  Mutex::Mutex(Mutex::Rank, char const*, bool)+0x99  (mutex.cpp:275)&lt;br/&gt;
&lt;br/&gt;
Moving it to dev team for further analysis.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5142375">JDK-8342969</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5145355">JDK-8345455</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5146126">JDK-8346091</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5148283">JDK-8347932</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5143380">JDK-8343820</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5101767">JDK-8308816</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10600">
                    <name>Causes</name>
                                            <outwardlinks description="causes">
                                        <issuelink>
            <issuekey id="5095434">JDK-8303549</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5102177">JDK-8309171</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5102261">JDK-8309243</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5127144">JDK-8330470</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5102270">JDK-8309249</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31isr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>