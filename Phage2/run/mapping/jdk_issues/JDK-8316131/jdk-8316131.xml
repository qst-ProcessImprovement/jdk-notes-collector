<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:33:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8316131] runtime/cds/appcds/TestParallelGCWithCDS.java fails with JNI error</title>
                <link>https://bugs.openjdk.org/browse/JDK-8316131</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>3. Exec with -XX:+UseParallelGC -Xmx2m&lt;br/&gt;
Command line: [/jdk-22-galahadstaging+1-20/linux-x64-debug.jdk/jdk-22/fastdebug/bin/java -cp /testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/classes/0/runtime/cds/appcds/TestParallelGCWithCDS.d:/jdk-22-galahadstaging+1-20/src.full/open/test/hotspot/jtreg/runtime/cds/appcds:/testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/classes/0/test/lib:/testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/classes/0/test/hotspot/jtreg/runtime/cds/appcds:/jtreg/lib/jtreg.jar:/jtreg/lib/junit-platform-console-standalone-1.9.2.jar:/jtreg/lib/testng-7.3.0.jar:/jtreg/lib/jcommander-1.82.jar:/jtreg/lib/guice-5.1.0.jar -XX:MaxRAMPercentage=4.16667 -Djava.io.tmpdir=/testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/tmp -Xcomp -ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -server -XX:-TieredCompilation -XX:-UseCompressedOops -XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler -Xshare:on -showversion -XX:SharedArchiveFile=/testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/5/appcds-00h22m27s118.jsa -Dtest.timeout.factor=25.0 -cp /testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/5/hello.jar -XX:+UnlockDiagnosticVMOptions -XX:VerifyArchivedFields=1 -XX:+UseParallelGC -Xmx256m -XX:ObjectAlignmentInBytes=64 -Xmx2m -Xlog:cds Hello ]&lt;br/&gt;
[2023-09-12T00:24:14.141810867Z] Gathering output for process 26475&lt;br/&gt;
[ELAPSED: 55310 ms]&lt;br/&gt;
[logging stdout to /testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/5/runtime.cds.appcds.TestParallelGCWithCDS.java-0012-exec.stdout]&lt;br/&gt;
[logging stderr to /testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/5/runtime.cds.appcds.TestParallelGCWithCDS.java-0012-exec.stderr]&lt;br/&gt;
[STDERR]&lt;br/&gt;
java version &amp;quot;22-galahadstaging&amp;quot; 2024-03-19&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 22-galahadstaging+1-20)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 22-galahadstaging+1-20, compiled mode, sharing)&lt;br/&gt;
Error: A JNI error has occurred, please check your installation and try again&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; &lt;br/&gt;
[2023-09-12T00:25:09.451972585Z] Waiting for completion for process 26475&lt;br/&gt;
[2023-09-12T00:25:09.452011335Z] Waiting for completion finished for process 26475&lt;br/&gt;
[2023-09-12T00:25:09.452026909Z] Waiting for completion for process 26475&lt;br/&gt;
[2023-09-12T00:25:09.452182337Z] Waiting for completion finished for process 26475&lt;br/&gt;
[2023-09-12T00:25:09.452569181Z] Waiting for completion for process 26475&lt;br/&gt;
[2023-09-12T00:25:09.452602542Z] Waiting for completion finished for process 26475&lt;br/&gt;
----------System.err:(51/4584)----------&lt;br/&gt;
&amp;nbsp;stdout: [[0.001s][info][cds] optimized module handling: disabled due to incompatible property: jdk.module.addmods.0=jdk.internal.vm.ci&lt;br/&gt;
[0.004s][info][cds] trying to map /testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/5/appcds-00h22m27s118.jsa&lt;br/&gt;
[0.004s][info][cds] Opened archive /testoutput/test-support/jtreg_open_test_hotspot_jtreg_hotspot_runtime/scratch/5/appcds-00h22m27s118.jsa.&lt;br/&gt;
[0.004s][info][cds] Archive was created with UseCompressedOops = 0, UseCompressedClassPointers = 1&lt;br/&gt;
[0.004s][info][cds] optimized module handling: disabled because archive was created without optimized module handling&lt;br/&gt;
[0.004s][info][cds] full module graph: disabled because archive was created without full module graph&lt;br/&gt;
[0.004s][info][cds] Core region alignment: 4096&lt;br/&gt;
[0.004s][info][cds] Reserved archive_space_rs [0x0000000800000000 - 0x0000000801000000] (16777216) bytes&lt;br/&gt;
[0.004s][info][cds] Reserved class_space_rs   [0x0000000801000000 - 0x0000000841000000] (1073741824) bytes&lt;br/&gt;
[0.004s][info][cds] Mapped static  region #0 at base 0x0000000800000000 top 0x0000000800506000 (ReadWrite)&lt;br/&gt;
[0.004s][info][cds] Mapped static  region #1 at base 0x0000000800506000 top 0x0000000800d27000 (ReadOnly)&lt;br/&gt;
[0.004s][info][cds] ArchiveRelocationMode == 1: always map archive(s) at an alternative address&lt;br/&gt;
[0.004s][info][cds] Unmapping region #0 at base 0x0000000800000000 (ReadWrite)&lt;br/&gt;
[0.004s][info][cds] Unmapping region #1 at base 0x0000000800506000 (ReadOnly)&lt;br/&gt;
[0.004s][info][cds] Try to map archive(s) at an alternative address&lt;br/&gt;
[0.004s][info][cds] Reserved archive_space_rs [0x00007f369a000000 - 0x00007f369b000000] (16777216) bytes&lt;br/&gt;
[0.004s][info][cds] Reserved class_space_rs   [0x00007f369b000000 - 0x00007f36db000000] (1073741824) bytes&lt;br/&gt;
[0.004s][info][cds] Mapped static  region #0 at base 0x00007f369a000000 top 0x00007f369a506000 (ReadWrite)&lt;br/&gt;
[0.004s][info][cds] Mapped static  region #1 at base 0x00007f369a506000 top 0x00007f369ad27000 (ReadOnly)&lt;br/&gt;
[0.004s][info][cds] Mapped static  region #2 at base 0x00007f36f0a87000 top 0x00007f36f0ac9000 (Bitmap)&lt;br/&gt;
[0.011s][info][cds] CDS archive was created with max heap size = 256M, and the following configuration:&lt;br/&gt;
[0.012s][info][cds]     narrow_klass_base at mapping start address, narrow_klass_shift = 0&lt;br/&gt;
[0.012s][info][cds]     narrow_oop_mode = 0, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 0&lt;br/&gt;
[0.012s][info][cds] The current max heap size = 2M, HeapRegion::GrainBytes = 0&lt;br/&gt;
[0.012s][info][cds]     narrow_klass_base = 0x00007f369a000000, narrow_klass_shift = 0&lt;br/&gt;
[0.012s][info][cds]     narrow_oop_mode = 0, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 0&lt;br/&gt;
[0.012s][info][cds]     heap range = [0x0000000000000000 - 0x0000000000000000]&lt;br/&gt;
[0.012s][info][cds] Cannot use CDS heap data. UseG1GC is required for -XX:-UseCompressedOops&lt;br/&gt;
[0.012s][info][cds] optimized module handling: disabled&lt;br/&gt;
[0.012s][info][cds] full module graph: disabled&lt;br/&gt;
[0.012s][info][cds] Unmapping region #2 at base 0x00007f36f0a87000 (Bitmap)&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: [java version &amp;quot;22-galahadstaging&amp;quot; 2024-03-19&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 22-galahadstaging+1-20)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 22-galahadstaging+1-20, compiled mode, sharing)&lt;br/&gt;
Error: A JNI error has occurred, please check your installation and try again&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; ]&lt;br/&gt;
&amp;nbsp;exitValue = 1&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: &amp;#39;((Too small maximum heap)|(GC triggered before VM initialization completed)|(java.lang.OutOfMemoryError: Java heap space))&amp;#39; missing from stdout/stderr&lt;br/&gt;
	at jdk.test.lib.process.OutputAnalyzer.shouldMatch(OutputAnalyzer.java:340)&lt;br/&gt;
	at TestParallelGCWithCDS.test(TestParallelGCWithCDS.java:120)&lt;br/&gt;
	at TestParallelGCWithCDS.main(TestParallelGCWithCDS.java:57)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5110142">JDK-8316131</key>
            <summary>runtime/cds/appcds/TestParallelGCWithCDS.java fails with JNI error</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ccheung">Calvin Cheung</assignee>
                                    <reporter username="iklam">Ioi Lam</reporter>
                        <labels>
                            <label>cds</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Tue, 12 Sep 2023 08:56:13 -0700</created>
                <updated>Fri, 3 Jan 2025 04:58:59 -0800</updated>
                            <resolved>Tue, 4 Jun 2024 09:45:16 -0700</resolved>
                                    <version>22</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14691843" author="mbaesken" created="Tue, 23 Jul 2024 00:11:02 -0700"  >seems we need as well for jdk21u-dev the OutputAnalyzer part from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8321400&quot; title=&quot;java/foreign/TestStubAllocFailure.java fails with code cache exhaustion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8321400&quot;&gt;&lt;strike&gt;JDK-8321400&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/commit/7ece9e90c0198f92cdf8d620e346c4a9832724cd&quot;&gt;https://github.com/openjdk/jdk/commit/7ece9e90c0198f92cdf8d620e346c4a9832724cd&lt;/a&gt;</comment>
                            <comment id="14691481" author="mbaesken" created="Mon, 22 Jul 2024 00:18:03 -0700"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, for parity with Oracle JDK.  The backport is clean and low risk.</comment>
                            <comment id="14691478" author="roboduke" created="Mon, 22 Jul 2024 00:13:27 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/859&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/859&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-22 07:08:25 +0000</comment>
                            <comment id="14678809" author="dukebot" created="Tue, 4 Jun 2024 09:45:15 -0700"  >Changeset: 31f70391&lt;br/&gt;
Author:    Calvin Cheung &amp;lt;&lt;a href=&apos;mailto:ccheung@openjdk.org&apos;&gt;ccheung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-04 16:43:08 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/31f70391e5f22ff5803d16b52c1e1248b6253d8c&quot;&gt;https://git.openjdk.org/jdk/commit/31f70391e5f22ff5803d16b52c1e1248b6253d8c&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14677946" author="roboduke" created="Fri, 31 May 2024 15:41:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19506&quot;&gt;https://git.openjdk.org/jdk/pull/19506&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 22:37:56 +0000</comment>
                            <comment id="14677936" author="ccheung" created="Fri, 31 May 2024 14:42:56 -0700"  >I couldn&amp;#39;t reproduce the JNI error. With very small heap, I could reproduce the following:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;stdout: [[0.002s][info][cds] optimized module handling: disabled due to incompatible property: jdk.module.addmods=jdk.internal.vm.ci&lt;br/&gt;
Error occurred during initialization of VM&lt;br/&gt;
Initial heap size set to a larger value than the maximum heap size&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: []&lt;br/&gt;
&amp;nbsp;exitValue = 1&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: &amp;#39;((Too small maximum heap)|(GC triggered before VM initialization completed)|(java.lang.OutOfMemoryError: Java heap space))&amp;#39; missing from stdout/stderr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.process.OutputAnalyzer.shouldMatch(OutputAnalyzer.java:371)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestParallelGCWithCDS.test(TestParallelGCWithCDS.java:120)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestParallelGCWithCDS.test(TestParallelGCWithCDS.java:64)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestParallelGCWithCDS.main(TestParallelGCWithCDS.java:51)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:1575)&lt;br/&gt;
&lt;br/&gt;
Below are the options used in the jtreg command line:&lt;br/&gt;
-javaoptions:&amp;quot;-Xcomp -ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -server -XX:-TieredCompilation -XX:-UseCompressedOops -XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler -Xmx8m -Xms2m&amp;quot;&lt;br/&gt;
-timeout:25&lt;br/&gt;
</comment>
                            <comment id="14610712" author="dholmes" created="Tue, 12 Sep 2023 15:52:11 -0700"  >I now see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316132&quot; title=&quot;CDSProtectionDomain::get_shared_protection_domain should check for exception&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316132&quot;&gt;&lt;strike&gt;JDK-8316132&lt;/strike&gt;&lt;/a&gt; was also filed.</comment>
                            <comment id="14610711" author="dholmes" created="Tue, 12 Sep 2023 15:49:23 -0700"  >If the VM doesn&amp;#39;t crash (ie vm_exit_during_initialization) due to the small heap then it should be throwing an exception and the CHECK_EXCEPTION_NULL_LEAVE macro should be reporting that exception. But it isn&amp;#39;t. We reach the null check:&lt;br/&gt;
&lt;br/&gt;
#define CHECK_EXCEPTION_NULL_LEAVE(CENL_exception) \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do { \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((*env)-&amp;gt;ExceptionOccurred(env)) { \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JLI_ReportExceptionDescription(env); \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LEAVE(); \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((CENL_exception) == NULL) { \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JLI_ReportErrorMessage(JNI_ERROR); \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LEAVE(); \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} while (JNI_FALSE)&lt;br/&gt;
&lt;br/&gt;
which leads to the generic &amp;quot;JNI error occurred&amp;quot; message. We should investigate how we are failing without generating an exception.</comment>
                            <comment id="14610435" author="iklam" created="Tue, 12 Sep 2023 09:00:09 -0700"  >The error is from here in src/java.base/share/native/libjli/java.c, where the macro expands to print the &amp;quot;Error: A JNI error has occurred, please check your installation and try again&amp;quot; message&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mainClass = LoadMainClass(env, mode, what);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CHECK_EXCEPTION_NULL_LEAVE(mainClass); &amp;lt;&amp;lt; HERE&lt;br/&gt;
&lt;br/&gt;
This test cases runs with a very small heap, so it possible for the JVM to fail in many locations with different messages. Instead of checking only for ((Too small maximum heap)|(GC triggered before VM initialization completed)|(java.lang.OutOfMemoryError: Java heap space)), its better to change the test to:&lt;br/&gt;
&lt;br/&gt;
- assert that exit code is not zero&lt;br/&gt;
- assert that the JVM has not crashed (no hs_err message in stdout)&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5134628">JDK-8336732</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135075">JDK-8337120</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5110143">JDK-8316132</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5133328">JDK-8335577</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i333ej:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>