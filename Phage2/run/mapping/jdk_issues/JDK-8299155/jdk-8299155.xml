<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:07:12 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299155] C2: SubTypeCheckNode::verify() should not produce dependencies / oop pool entries</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299155</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>C2&amp;#39;s SubTypeCheckNode::verify() produce dependencies which in turn produce entries in the oop pool which affect the unloading behaviour of the nmethod. This can hide issues of the release build which will not have the dependencies and oop pool entries.&lt;br/&gt;
&lt;br/&gt;
The attachment CallFinalVirtualFromOtherLoader.java is a reproducer. ClassA_LVL_1.testMethod_dojit() has a virtual call that can be statically bound because the target method is final. It is loaded by a subclassloader though. SubTypeCheckNode::verify() adds a dependency to the subclassloader &amp;#39;CallFinalVirtualFromOtherLoader$DirectLeveledClassLoader$Level2&amp;#39; (see attachment output.log:1411). This is redundant as a dependency is added by ClassLoaderData::record_dependency().&lt;br/&gt;
&lt;br/&gt;
Without calling SubTypeCheckNode::verify() the dependency is not added (see output_UseNewCode.log:1406)&lt;br/&gt;
The run was produced with the following patch:&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/hotspot/share/opto/subtypenode.cpp b/src/hotspot/share/opto/subtypenode.cpp&lt;br/&gt;
index 8ef50b73be9..04ccf6ae674 100644&lt;br/&gt;
--- a/src/hotspot/share/opto/subtypenode.cpp&lt;br/&gt;
+++ b/src/hotspot/share/opto/subtypenode.cpp&lt;br/&gt;
@@ -110,7 +110,7 @@ Node *SubTypeCheckNode::Ideal(PhaseGVN* phase, bool can_reshape) {&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// Verify that optimizing the subtype check to a simple code pattern&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// when possible would not constant fold better&lt;br/&gt;
-  assert(verify(phase), &amp;quot;missing Value() optimization&amp;quot;);&lt;br/&gt;
+  assert(UseNewCode || verify(phase), &amp;quot;missing Value() optimization&amp;quot;);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;return NULL;&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
The redundant dependency is added here:&lt;br/&gt;
&lt;br/&gt;
#0  Dependencies::assert_leaf_type (this=0x7fe266d3fbe0 &amp;lt;Compile::dependencies()+36&amp;gt;, ctxk=0x7fe20baf7010) at .../jdk/src/hotspot/share/code/dependencies.cpp:84&lt;br/&gt;
#1  0x00007fe267ba6799 in TypeInstPtr::as_klass_type (this=0x7fe1ec036978, try_for_exact=true) at .../jdk/src/hotspot/share/opto/type.cpp:4328&lt;br/&gt;
#2  0x00007fe2677aad4d in LoadNode::klass_value_common (this=0x7fe1ec054d28, phase=0x7fe20baf8040) at .../jdk/src/hotspot/share/opto/memnode.cpp:2340&lt;br/&gt;
#3  0x00007fe2677ab273 in LoadNKlassNode::Value (this=0x7fe1ec054d28, phase=0x7fe20baf8040) at .../jdk/src/hotspot/share/opto/memnode.cpp:2449&lt;br/&gt;
#4  0x00007fe2678dc8cc in PhaseGVN::transform_no_reclaim (this=0x7fe20baf8040, n=0x7fe1ec054d28) at .../jdk/src/hotspot/share/opto/phaseX.cpp:862&lt;br/&gt;
#5  0x00007fe2678dc77b in PhaseGVN::transform (this=0x7fe20baf8040, n=0x7fe1ec054d28) at .../jdk/src/hotspot/share/opto/phaseX.cpp:829&lt;br/&gt;
#6  0x00007fe2677aa989 in LoadKlassNode::make (gvn=..., ctl=0x0, mem=0x7fe1ec0521e8, adr=0x7fe1ec054c88, at=0x7fe1ec023b28, tk=0x7fe1ec0269a8) at .../jdk/src/hotspot/share/opto/memnode.cpp:2276&lt;br/&gt;
#7  0x00007fe267b0ac79 in SubTypeCheckNode::verify (this=0x7fe1ec054b80, phase=0x7fe20baf8040) at .../jdk/src/hotspot/share/opto/subtypenode.cpp:173&lt;br/&gt;
#8  0x00007fe267b0a763 in SubTypeCheckNode::Ideal (this=0x7fe1ec054b80, phase=0x7fe20baf8040, can_reshape=false) at .../jdk/src/hotspot/share/opto/subtypenode.cpp:113&lt;br/&gt;
#9  0x00007fe2678dc74a in PhaseGVN::apply_ideal (this=0x7fe20baf8040, k=0x7fe1ec054b80, can_reshape=false) at .../jdk/src/hotspot/share/opto/phaseX.cpp:820&lt;br/&gt;
#10 0x00007fe2678dc7bf in PhaseGVN::transform_no_reclaim (this=0x7fe20baf8040, n=0x7fe1ec054b80) at .../jdk/src/hotspot/share/opto/phaseX.cpp:840&lt;br/&gt;
#11 0x00007fe2678dc77b in PhaseGVN::transform (this=0x7fe20baf8040, n=0x7fe1ec054b80) at .../jdk/src/hotspot/share/opto/phaseX.cpp:829&lt;br/&gt;
#12 0x00007fe2673354d0 in GraphKit::gen_subtype_check (this=0x7fe20baf75d0, obj_or_subklass=0x7fe1ec054a70, superklass=0x7fe1ec054b10) at .../jdk/src/hotspot/share/opto/graphKit.cpp:2834&lt;br/&gt;
#13 0x00007fe2673359db in GraphKit::subtype_check_receiver (this=0x7fe20baf75d0, receiver=0x7fe1ec054a70, klass=0x7fe1ec02dec8, casted_receiver=0x7fe20baf7510) at .../jdk/src/hotspot/share/opto/graphKit.cpp:2879&lt;br/&gt;
#14 0x00007fe266ef5a34 in PredictedCallGenerator::generate (this=0x7fe1ec056008, jvms=0x7fe1ec055d00) at .../jdk/src/hotspot/share/opto/callGenerator.cpp:885&lt;br/&gt;
#15 0x00007fe267191119 in Parse::do_call (this=0x7fe20baf7b90) at .../jdk/src/hotspot/share/opto/doCall.cpp:662&lt;br/&gt;
#16 0x00007fe2678c91c1 in Parse::do_one_bytecode (this=0x7fe20baf7b90) at .../jdk/src/hotspot/share/opto/parse2.cpp:2704&lt;br/&gt;
#17 0x00007fe2678b8226 in Parse::do_one_block (this=0x7fe20baf7b90) at .../jdk/src/hotspot/share/opto/parse1.cpp:1555&lt;br/&gt;
#18 0x00007fe2678b44c3 in Parse::do_all_blocks (this=0x7fe20baf7b90) at .../jdk/src/hotspot/share/opto/parse1.cpp:707&lt;br/&gt;
#19 0x00007fe2678b400b in Parse::Parse (this=0x7fe20baf7b90, caller=0x7fe1ec055a70, parse_method=0x7fe1ec02c078, expected_uses=6784) at .../jdk/src/hotspot/share/opto/parse1.cpp:614&lt;br/&gt;
&lt;br/&gt;
This was noticed while working on &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296440&quot; title=&quot;Remove Method* handling from cleanup_inline_caches_impl&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8296440&quot;&gt;JDK-8296440&lt;/a&gt;. The intention there was to assert during call resolution that the loader of a statically bound callee is reachable from the caller.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5090163">JDK-8299155</key>
            <summary>C2: SubTypeCheckNode::verify() should not produce dependencies / oop pool entries</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="rrich">Richard Reingruber</reporter>
                        <labels>
                            <label>c2</label>
                            <label>oracle-triage-11</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Tue, 20 Dec 2022 13:10:14 -0800</created>
                <updated>Wed, 8 Feb 2023 23:39:24 -0800</updated>
                            <resolved>Fri, 3 Feb 2023 00:00:21 -0800</resolved>
                                    <version>17</version>
                    <version>18</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14557105" author="dukebot" created="Fri, 3 Feb 2023 00:00:20 -0800"  >Changeset: cf68d9fb&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-03 07:58:29 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/cf68d9fb8e55e461fa717f1443094300de8feacb&quot;&gt;https://git.openjdk.org/jdk/commit/cf68d9fb8e55e461fa717f1443094300de8feacb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14556833" author="roboduke" created="Thu, 2 Feb 2023 01:17:43 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12383&quot;&gt;https://git.openjdk.org/jdk/pull/12383&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-02 09:07:39 +0000</comment>
                            <comment id="14547157" author="rrich" created="Wed, 21 Dec 2022 07:28:16 -0800"  >I cannot reproduce the issue with your fix, thanks!&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; Are there other issues that show up with this one fixed? &lt;br/&gt;
&lt;br/&gt;
None I&amp;#39;d be aware of at the moment.</comment>
                            <comment id="14547148" author="roland" created="Wed, 21 Dec 2022 06:43:53 -0800"  >That seems to fix it:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/rwestrel/jdk/tree/JDK-8299155&quot;&gt;https://github.com/rwestrel/jdk/tree/JDK-8299155&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Can you verify [~rrich]? That one was straightforward. Are there other issues that show up with this one fixed?</comment>
                            <comment id="14547076" author="thartmann" created="Wed, 21 Dec 2022 00:43:02 -0800"  >[~roland], [~vlivanov], maybe you want to have a look at this.</comment>
                            <comment id="14547074" author="thartmann" created="Wed, 21 Dec 2022 00:40:35 -0800"  >While the problematic verification code is in there since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8238691&quot; title=&quot;C2: turn subtype check into macro node&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8238691&quot;&gt;&lt;strike&gt;JDK-8238691&lt;/strike&gt;&lt;/a&gt; in JDK 15, I can only reproduce this after JDK 18 b3, probably because of changes like &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8268405&quot; title=&quot;Several regressions 4-17% after CHA changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8268405&quot;&gt;&lt;strike&gt;JDK-8268405&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
ILW = Redundant leaf_type dependency in C2 compiled code, only with debug builds, no workaround = MLH = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5010243">JDK-8238691</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5086868">JDK-8296440</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102116" name="CallFinalVirtualFromOtherLoader.java" size="8345" author="rrich" created="Tue, 20 Dec 2022 13:14:26 -0800"/>
                            <attachment id="102117" name="output.log" size="83119" author="rrich" created="Tue, 20 Dec 2022 13:14:26 -0800"/>
                            <attachment id="102118" name="output_UseNewCode.log" size="82504" author="rrich" created="Tue, 20 Dec 2022 13:14:26 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zp7n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>