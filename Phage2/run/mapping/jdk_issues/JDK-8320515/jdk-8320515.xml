<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:51:39 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8320515] assert(monitor-&gt;object_peek() != nullptr) failed: Owned monitors should not have a dead object</title>
                <link>https://bugs.openjdk.org/browse/JDK-8320515</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>We hit this assert when JNI code calls MonitorEnter, makes the object unreachable, and then detaches the thread without calling MonitorExit.&lt;br/&gt;
&lt;br/&gt;
This can be seen by running the CompleteExit test with `-XX:+UseZGC -Xmx12m` and the following changes:&lt;br/&gt;
```&lt;br/&gt;
diff --git a/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c b/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c&lt;br/&gt;
index 07ba0ff0ef8..fac500542ea 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c&lt;br/&gt;
+++ b/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c&lt;br/&gt;
@@ -44,8 +44,27 @@ static void* do_test() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;int res = (*jvm)-&amp;gt;AttachCurrentThread(jvm, (void**)&amp;amp;env, NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (res != JNI_OK) die(&amp;quot;AttachCurrentThread&amp;quot;);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-  if ((*env)-&amp;gt;MonitorEnter(env, t1) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
-  if ((*env)-&amp;gt;MonitorEnter(env, t2) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
+  jclass c = (*env)-&amp;gt;FindClass(env, &amp;quot;java/lang/Object&amp;quot;);&lt;br/&gt;
+  if (c == 0) {&lt;br/&gt;
+    die(&amp;quot;No class&amp;quot;);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  jmethodID m = (*env)-&amp;gt;GetMethodID(env, c, &amp;quot;&amp;lt;init&amp;gt;&amp;quot;, &amp;quot;()V&amp;quot;);&lt;br/&gt;
+  if (m == 0) {&lt;br/&gt;
+    die(&amp;quot;No constructor&amp;quot;);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  jobject o1 = (*env)-&amp;gt;NewObject(env, c, m);&lt;br/&gt;
+  jobject o2 = (*env)-&amp;gt;NewObject(env, c, m);&lt;br/&gt;
+  jobject o3 = (*env)-&amp;gt;NewObject(env, c, m);&lt;br/&gt;
+&lt;br/&gt;
+  if ((*env)-&amp;gt;MonitorEnter(env, o1) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
+  if ((*env)-&amp;gt;MonitorEnter(env, o2) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
+&lt;br/&gt;
+  (*env)-&amp;gt;DeleteLocalRef(env, o1);&lt;br/&gt;
+  (*env)-&amp;gt;DeleteLocalRef(env, o2);&lt;br/&gt;
+&lt;br/&gt;
+  (*env)-&amp;gt;NewObjectArray(env, 1024 * 1024, c, o3);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((*jvm)-&amp;gt;DetachCurrentThread(jvm) != JNI_OK) die(&amp;quot;DetachCurrentThread&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_exit(NULL);&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The assert comes from this path:&lt;br/&gt;
&lt;br/&gt;
V  [libjvm.so+0x171fb1d]  ObjectSynchronizer::owned_monitors_iterate(MonitorClosure*, JavaThread*)+0x15d  (synchronizer.cpp:1094)&lt;br/&gt;
V  [libjvm.so+0x1720d2a]  ObjectSynchronizer::release_monitors_owned_by_thread(JavaThread*)+0x4a  (synchronizer.cpp:1792)&lt;br/&gt;
V  [libjvm.so+0xeb806c]  JavaThread::exit(bool, JavaThread::ExitType)+0x7fc  (javaThread.cpp:871)&lt;br/&gt;
V  [libjvm.so+0xf8066a]  jni_DetachCurrentThread+0xda  (jni.cpp:3923)&lt;br/&gt;
C  [libCompleteExit.so+0xb53]  do_test+0x173  (libCompleteExit.c:73)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve also managed to reproduce this issue from VM_ThreadDump with this patch:&lt;br/&gt;
```&lt;br/&gt;
diff --git a/src/hotspot/share/runtime/synchronizer.cpp b/src/hotspot/share/runtime/synchronizer.cpp&lt;br/&gt;
index ed323b7a416..7bf8091a4e6 100644&lt;br/&gt;
--- a/src/hotspot/share/runtime/synchronizer.cpp&lt;br/&gt;
+++ b/src/hotspot/share/runtime/synchronizer.cpp&lt;br/&gt;
@@ -1091,7 +1091,7 @@ void ObjectSynchronizer::owned_monitors_iterate_filtered(MonitorClosure* closure&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ObjectMonitor cannot be async deflated.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (monitor-&amp;gt;has_owner() &amp;amp;&amp;amp; filter(monitor-&amp;gt;owner_raw())) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert(!monitor-&amp;gt;is_being_async_deflated(), &amp;quot;Owned monitors should not be deflating&amp;quot;);&lt;br/&gt;
-      assert(monitor-&amp;gt;object_peek() != nullptr, &amp;quot;Owned monitors should not have a dead object&amp;quot;);&lt;br/&gt;
+      assert(UseNewCode || monitor-&amp;gt;object_peek() != nullptr, &amp;quot;Owned monitors should not have a dead object&amp;quot;);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;closure-&amp;gt;do_monitor(monitor);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
diff --git a/test/hotspot/jtreg/runtime/Monitor/CompleteExit.java b/test/hotspot/jtreg/runtime/Monitor/CompleteExit.java&lt;br/&gt;
index 7e63050dc9e..11b6149978d 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/runtime/Monitor/CompleteExit.java&lt;br/&gt;
+++ b/test/hotspot/jtreg/runtime/Monitor/CompleteExit.java&lt;br/&gt;
@@ -31,6 +31,9 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* @run main/native CompleteExit&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+import java.lang.management.ManagementFactory;&lt;br/&gt;
+import java.lang.management.ThreadMXBean;&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;public class CompleteExit {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static native void testIt(Object o1, Object o2);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
@@ -41,7 +44,21 @@ public class CompleteExit {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.loadLibrary(&amp;quot;CompleteExit&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+    static private void dumpThreads() {&lt;br/&gt;
+        ThreadMXBean threadBean = ManagementFactory.getThreadMXBean();&lt;br/&gt;
+        while (true) {&lt;br/&gt;
+            threadBean.dumpAllThreads(true, false);&lt;br/&gt;
+            try {&lt;br/&gt;
+                Thread.sleep(1);&lt;br/&gt;
+            } catch (InterruptedException e) {}&lt;br/&gt;
+        }&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
+        Thread threadDumper = new Thread(() -&amp;gt; dumpThreads());&lt;br/&gt;
+        threadDumper.setDaemon(true);&lt;br/&gt;
+        threadDumper.start();&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testIt(o1, o2);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
diff --git a/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c b/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c&lt;br/&gt;
index 07ba0ff0ef8..6b1a5465b2e 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c&lt;br/&gt;
+++ b/test/hotspot/jtreg/runtime/Monitor/libCompleteExit.c&lt;br/&gt;
@@ -25,6 +25,7 @@&lt;br/&gt;
&amp;nbsp;#include &amp;lt;stdlib.h&amp;gt;&lt;br/&gt;
&amp;nbsp;#include &amp;lt;pthread.h&amp;gt;&lt;br/&gt;
&amp;nbsp;#include &amp;lt;stdio.h&amp;gt;&lt;br/&gt;
+#include &amp;lt;unistd.h&amp;gt;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;#define die(x) do { printf(&amp;quot;%s:%s\n&amp;quot;,x , __func__); perror(x); exit(EXIT_FAILURE); } while (0)&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
@@ -44,8 +45,30 @@ static void* do_test() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;int res = (*jvm)-&amp;gt;AttachCurrentThread(jvm, (void**)&amp;amp;env, NULL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (res != JNI_OK) die(&amp;quot;AttachCurrentThread&amp;quot;);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-  if ((*env)-&amp;gt;MonitorEnter(env, t1) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
-  if ((*env)-&amp;gt;MonitorEnter(env, t2) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
+  jclass c = (*env)-&amp;gt;FindClass(env, &amp;quot;java/lang/Object&amp;quot;);&lt;br/&gt;
+  if (c == 0) {&lt;br/&gt;
+    die(&amp;quot;No class&amp;quot;);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  jmethodID m = (*env)-&amp;gt;GetMethodID(env, c, &amp;quot;&amp;lt;init&amp;gt;&amp;quot;, &amp;quot;()V&amp;quot;);&lt;br/&gt;
+  if (m == 0) {&lt;br/&gt;
+    die(&amp;quot;No constructor&amp;quot;);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  jobject o1 = (*env)-&amp;gt;NewObject(env, c, m);&lt;br/&gt;
+  jobject o2 = (*env)-&amp;gt;NewObject(env, c, m);&lt;br/&gt;
+  jobject o3 = (*env)-&amp;gt;NewObject(env, c, m);&lt;br/&gt;
+&lt;br/&gt;
+  if ((*env)-&amp;gt;MonitorEnter(env, o1) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
+  if ((*env)-&amp;gt;MonitorEnter(env, o2) != 0) die(&amp;quot;MonitorEnter&amp;quot;);&lt;br/&gt;
+&lt;br/&gt;
+  (*env)-&amp;gt;DeleteLocalRef(env, o1);&lt;br/&gt;
+  (*env)-&amp;gt;DeleteLocalRef(env, o2);&lt;br/&gt;
+&lt;br/&gt;
+  (*env)-&amp;gt;NewObjectArray(env, 1024 * 1024, c, o3);&lt;br/&gt;
+  printf(&amp;quot;Going to sleep: 10s&amp;quot;);&lt;br/&gt;
+  sleep(10);&lt;br/&gt;
+  printf(&amp;quot;Slept&amp;quot;);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((*jvm)-&amp;gt;DetachCurrentThread(jvm) != JNI_OK) die(&amp;quot;DetachCurrentThread&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;pthread_exit(NULL);&lt;br/&gt;
```</description>
                <environment></environment>
        <key id="5115194">JDK-8320515</key>
            <summary>assert(monitor-&gt;object_peek() != nullptr) failed: Owned monitors should not have a dead object</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stefank">Stefan Karlsson</assignee>
                                    <reporter username="stefank">Stefan Karlsson</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>sync</label>
                    </labels>
                <created>Tue, 21 Nov 2023 05:38:13 -0800</created>
                <updated>Wed, 23 Jul 2025 07:00:07 -0700</updated>
                            <resolved>Thu, 30 Nov 2023 01:48:37 -0800</resolved>
                                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14656750" author="roboduke" created="Tue, 12 Mar 2024 04:37:40 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Fixes the JNI interaction problem, followup for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318757&quot; title=&quot;VM_ThreadDump asserts in interleaved ObjectMonitor::deflate_monitor calls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318757&quot;&gt;&lt;strike&gt;JDK-8318757&lt;/strike&gt;&lt;/a&gt;. This is a part of atomic 21u integration, see 21u-dev PR for more details. Does not apply cleanly due to minor conflict in JtregNativeHotspot.gmk. All tests pass. Was in mainline for several months, without bugtail.</comment>
                            <comment id="14655426" author="roboduke" created="Thu, 7 Mar 2024 02:13:15 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/337&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/337&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-06 19:12:00 +0000</comment>
                            <comment id="14630242" author="dukebot" created="Thu, 30 Nov 2023 01:48:36 -0800"  >Changeset: 0d146361&lt;br/&gt;
Author:    Stefan Karlsson &amp;lt;&lt;a href=&apos;mailto:stefank@openjdk.org&apos;&gt;stefank@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-30 09:46:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0d146361f27e1415fab9272de1cdde84c074c718&quot;&gt;https://git.openjdk.org/jdk/commit/0d146361f27e1415fab9272de1cdde84c074c718&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14629633" author="mseledtsov" created="Tue, 28 Nov 2023 11:28:25 -0800"  >ILW = HLM = P3</comment>
                            <comment id="14628460" author="roboduke" created="Wed, 22 Nov 2023 07:10:03 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16783&quot;&gt;https://git.openjdk.org/jdk/pull/16783&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-22 15:00:29 +0000</comment>
                            <comment id="14628114" author="stefank" created="Tue, 21 Nov 2023 05:51:56 -0800"  >Thanks to [~dholmes] who identified this issue.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5122182">JDK-8326477</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124420">JDK-8328336</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10600">
                    <name>Causes</name>
                                            <outwardlinks description="causes">
                                        <issuelink>
            <issuekey id="5166492">JDK-8363949</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5115245">JDK-8320561</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5113126">JDK-8318757</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5115434">JDK-8320720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5115435">JDK-8320721</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5114625">JDK-8322743</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33y5f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17419"><![CDATA[b27]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>