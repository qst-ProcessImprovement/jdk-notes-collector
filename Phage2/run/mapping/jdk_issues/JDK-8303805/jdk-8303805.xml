<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:31:48 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8303805] [REDO] JDK-8302189 and JDK-8302799</title>
                <link>https://bugs.openjdk.org/browse/JDK-8303805</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>After the integration of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302189&quot; title=&quot;Mark assertion failures noreturn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302189&quot;&gt;&lt;strike&gt;JDK-8302189&lt;/strike&gt;&lt;/a&gt; (which hard a very large merge with master immediately before integration) builds of macos-aarch64-debug are failing due to a VM crash:&lt;br/&gt;
&lt;br/&gt;
[2023-03-08T02:49:48,236Z] Optimizing the exploded image&lt;br/&gt;
[2023-03-08T02:49:49,737Z] #&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
[2023-03-08T02:49:49,737Z] #&lt;br/&gt;
[2023-03-08T02:49:49,737Z] #  SIGSEGV (0xb) at pc=0x000000010297ec24, pid=35266, tid=24579&lt;br/&gt;
[2023-03-08T02:49:49,737Z] #&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # JRE version: OpenJDK Runtime Environment (21.0+13) (fastdebug build 21-ea+13-1054)&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # Java VM: OpenJDK 64-Bit Server VM (fastdebug 21-ea+13-1054, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, bsd-aarch64)&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # Problematic frame:&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # V  [libjvm.dylib+0xc7ac24]  InitializeNode::coalesce_subword_stores(long, Node*, PhaseGVN*)+0x380&lt;br/&gt;
[2023-03-08T02:49:49,737Z] #&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # Core dump will be written. Default location: core.35266&lt;br/&gt;
[2023-03-08T02:49:49,737Z] #&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # An error report file with more information is saved as:&lt;br/&gt;
[2023-03-08T02:49:49,737Z] # /System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S109737/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/001a5962-3ba0-468e-b3f9-f4edc3999b64/runs/a1ec2ebc-1bce-4fd4-9a93-8e12baf0773f/workspace/open/make/hs_err_pid35266.log&lt;br/&gt;
[2023-03-08T02:49:49,757Z] [thread 15107 also had an error]&lt;br/&gt;
[2023-03-08T02:49:49,757Z] [thread 24323 also had an error]&lt;br/&gt;
[2023-03-08T02:49:49,757Z] [thread 6147 also had an error]</description>
                <environment></environment>
        <key id="5095753">JDK-8303805</key>
            <summary>[REDO] JDK-8302189 and JDK-8302799</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kbarrett">Kim Barrett</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>oracle-triage-21</label>
                            <label>regression</label>
                            <label>tier1</label>
                            <label>tier2</label>
                            <label>tier3</label>
                    </labels>
                <created>Tue, 7 Mar 2023 20:27:10 -0800</created>
                <updated>Fri, 16 Feb 2024 13:51:37 -0800</updated>
                            <resolved>Wed, 29 Mar 2023 16:47:32 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                                                            <comments>
                            <comment id="14570551" author="dukebot" created="Wed, 29 Mar 2023 16:47:31 -0700"  >Changeset: b3ff8d1c&lt;br/&gt;
Author:    Kim Barrett &amp;lt;&lt;a href=&apos;mailto:kbarrett@openjdk.org&apos;&gt;kbarrett@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-29 23:45:03 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b3ff8d1c89b0f968b7b5ec2105502778524e4e4a&quot;&gt;https://git.openjdk.org/jdk/commit/b3ff8d1c89b0f968b7b5ec2105502778524e4e4a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14569840" author="roboduke" created="Mon, 27 Mar 2023 17:02:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13199&quot;&gt;https://git.openjdk.org/jdk/pull/13199&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-27 23:57:45 +0000</comment>
                            <comment id="14567875" author="kbarrett" created="Fri, 17 Mar 2023 13:54:01 -0700"  >The problem exists with Xcode12.4.  Upgrading to either Xcode13.2.1 or Xcode14.2 fixes the problem.&lt;br/&gt;
</comment>
                            <comment id="14567863" author="kbarrett" created="Fri, 17 Mar 2023 12:57:27 -0700"  >The core file isn&amp;#39;t very useful. The thread with the error shows the location in coalesce_subword_store as &amp;quot;memnode.cpp:0:15&amp;quot;. Selecting that frame in lldb we&amp;#39;re told &amp;quot;Note: this address is compiler-generated code in function InitializeNode::coalesce_subword_stores(long, Node*, PhaseGVN*) that has no source code associated with it.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Not too surprisingly, slowdebug builds fine.&lt;br/&gt;
</comment>
                            <comment id="14567807" author="kbarrett" created="Fri, 17 Mar 2023 09:30:59 -0700"  >I can reproduce. I can also confirm that changing _enabled from int to unsigned removes the failure, which makes no sense at all.&lt;br/&gt;
&lt;br/&gt;
coalesce_subword_stores has 9 asserts.  Commenting out all but the last still fails in the same way.  Commenting out just the last builds successfully. That assert is&lt;br/&gt;
assert(offset &amp;gt;= header_size, &amp;quot;do not smash header&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
Changing that assert to&lt;br/&gt;
if (offset &amp;gt;= header_size) fatal(&amp;quot;...&amp;quot;);&lt;br/&gt;
also fails in the same way. Changing that to a &amp;quot;wrapper&amp;quot; around `fatal` that isn&amp;#39;t declared noreturn successfully builds. So the problem isn&amp;#39;t really the complications introduced in the assert test, but rather the noreturn.&lt;br/&gt;
&lt;br/&gt;
Continuing to explore.&lt;br/&gt;
</comment>
                            <comment id="14565510" author="JIRAUSER20000" created="Thu, 9 Mar 2023 03:44:33 -0800"  >Filed &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8303810&quot; title=&quot;Restore attribute positions after JDK-8303839 to match JDK-8302124&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8303810&quot;&gt;&lt;strike&gt;JDK-8303810&lt;/strike&gt;&lt;/a&gt; to restore the attribute positions undone by this backout to match the Style Guide&amp;#39;s attribute position requirement</comment>
                            <comment id="14565406" author="dholmes" created="Wed, 8 Mar 2023 13:57:37 -0800"  >I confirmed that changing to unsigned int also fixes the issue.</comment>
                            <comment id="14565405" author="dholmes" created="Wed, 8 Mar 2023 13:43:47 -0800"  >I tried to debug things and modified isEnabled:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;static bool is_enabled() {&lt;br/&gt;
+    if (_enabled &amp;gt; 0) {&lt;br/&gt;
+      printf(&amp;quot;ERROR: Unexpected _enabled state: %d\n&amp;quot;, _enabled);&lt;br/&gt;
+      return true;&lt;br/&gt;
+    } else {&lt;br/&gt;
+      return false;&lt;br/&gt;
+    }&lt;br/&gt;
+  }&lt;br/&gt;
&lt;br/&gt;
but the build passed with that change, so I&amp;#39;m guessing it was sufficient to fix whatever compiler bug is present. I guess we need to get a hold of the created object files and disassemble them to see what the compiler is generating.</comment>
                            <comment id="14565391" author="dholmes" created="Wed, 8 Mar 2023 12:48:41 -0800"  >Sorry I missed that there were two bug ids covered by the same PR - thanks for changing to the more appropriate one.</comment>
                            <comment id="14565387" author="dcubed" created="Wed, 8 Mar 2023 12:30:31 -0800"  >Moving from hotspot/compiler -&amp;gt; hotspot/runtime&lt;br/&gt;
since that&amp;#39;s where &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302799&quot; title=&quot;Refactor Debugging variable usage for noreturn crash reporting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302799&quot;&gt;&lt;strike&gt;JDK-8302799&lt;/strike&gt;&lt;/a&gt; lives.</comment>
                            <comment id="14565377" author="thartmann" created="Wed, 8 Mar 2023 11:47:07 -0800"  >Thanks Damon. Given that we still don&amp;#39;t understand the root cause and suspect a toolchain issue, I would recommend a backout of the offending change and re-assign to [~kbarrett] to decide.</comment>
                            <comment id="14565357" author="dcubed" created="Wed, 8 Mar 2023 10:46:44 -0800"  >Based on [~dholmes] comment here:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8303805?focusedCommentId=14565223&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14565223&quot;&gt;https://bugs.openjdk.org/browse/JDK-8303805?focusedCommentId=14565223&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14565223&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
it looks like this regression is caused by:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302799&quot; title=&quot;Refactor Debugging variable usage for noreturn crash reporting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302799&quot;&gt;&lt;strike&gt;JDK-8302799&lt;/strike&gt;&lt;/a&gt; Refactor Debugging variable usage for noreturn crash reporting&lt;br/&gt;
&lt;br/&gt;
so I&amp;#39;ve updated the synopsis line and added a link to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302799&quot; title=&quot;Refactor Debugging variable usage for noreturn crash reporting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302799&quot;&gt;&lt;strike&gt;JDK-8302799&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14565330" author="JIRAUSER20518" created="Wed, 8 Mar 2023 08:49:50 -0800"  >The issue seems to disappear by making &amp;quot;_enabled&amp;quot; an &amp;quot;unsigned int&amp;quot; (which i guess could be ok for its purpose). Still it&amp;#39;s not really clear why this happens. </comment>
                            <comment id="14565276" author="thartmann" created="Wed, 8 Mar 2023 03:06:48 -0800"  >ILW = Build fails due to SIGSEGV during C2 compilation (regression), macos-aarch64-debug build, no workaround but disable C2 compilation = HMH = P1</comment>
                            <comment id="14565275" author="thartmann" created="Wed, 8 Mar 2023 03:05:31 -0800"  >I just wonder why testing did not catch this, maybe [~kbarrett] missed the failing build on the results page. Or was there a last minute change?</comment>
                            <comment id="14565274" author="thartmann" created="Wed, 8 Mar 2023 03:03:31 -0800"  >[~dfenacci], please have a look at this. Maybe we can go with a point fix like disabling the assert (as a subtask of this issue) to re-enable the build.</comment>
                            <comment id="14565248" author="dholmes" created="Wed, 8 Mar 2023 01:02:27 -0800"  >I changed the code so that is_enabled() always return false and the build passed.&lt;br/&gt;
&lt;br/&gt;
There is an assert at the start of  InitializeNode::coalesce_subword_stores so I have to suspect that the assert itself somehow crashes due to something toolchain related (else why only this one platform!).</comment>
                            <comment id="14565223" author="dholmes" created="Tue, 7 Mar 2023 21:10:45 -0800"  >I grabbed the PR branch for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302189&quot; title=&quot;Mark assertion failures noreturn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302189&quot;&gt;&lt;strike&gt;JDK-8302189&lt;/strike&gt;&lt;/a&gt; and the build failed.&lt;br/&gt;
&lt;br/&gt;
I then reverted the merge and the build still failed.&lt;br/&gt;
&lt;br/&gt;
I then reverted &amp;quot;make Debugging::_enabled a nesting counter &amp;quot; and the build passed!&lt;br/&gt;
&lt;br/&gt;
I then manually added back the patch to make _enabled a counter and the build failed again!&lt;br/&gt;
&lt;br/&gt;
This is that patch:&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/hotspot/share/utilities/debug.cpp b/src/hotspot/share/utilities/debug.cpp&lt;br/&gt;
index 3ba7ede8f6fc..ec67c18734f7 100644&lt;br/&gt;
--- a/src/hotspot/share/utilities/debug.cpp&lt;br/&gt;
+++ b/src/hotspot/share/utilities/debug.cpp&lt;br/&gt;
@@ -76,18 +76,15 @@ static intx g_asserting_thread = 0;&lt;br/&gt;
&amp;nbsp;static void* g_assertion_context = nullptr;&lt;br/&gt;
&amp;nbsp;#endif // CAN_SHOW_REGISTERS_ON_ASSERT&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-bool DebuggingContext::_enabled = false;&lt;br/&gt;
+int DebuggingContext::_enabled = 0; // Initially disabled.&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;DebuggingContext::DebuggingContext() {&lt;br/&gt;
-  // Not an assert, since asserts are disabled by DebuggingContext.&lt;br/&gt;
-  if (is_enabled()) {&lt;br/&gt;
-    fatal(&amp;quot;Multiple Debugging contexts&amp;quot;);&lt;br/&gt;
-  }&lt;br/&gt;
-  _enabled = true;&lt;br/&gt;
+  _enabled += 1;                // Increase nesting count.&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;DebuggingContext::~DebuggingContext() {&lt;br/&gt;
-  _enabled = false;&lt;br/&gt;
+  assert(is_enabled(), &amp;quot;Debugging nesting confusion&amp;quot;);&lt;br/&gt;
+  _enabled -= 1;                // Decrease nesting count.&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;#ifndef ASSERT&lt;br/&gt;
diff --git a/src/hotspot/share/utilities/debug.hpp b/src/hotspot/share/utilities/debug.hpp&lt;br/&gt;
index 1b14e4b45ce7..91b3e6564155 100644&lt;br/&gt;
--- a/src/hotspot/share/utilities/debug.hpp&lt;br/&gt;
+++ b/src/hotspot/share/utilities/debug.hpp&lt;br/&gt;
@@ -55,14 +55,14 @@ bool handle_assert_poison_fault(const void* ucVoid, const void* faulting_address&lt;br/&gt;
&amp;nbsp;// those operations are not normally permitted, with the state checked by an&lt;br/&gt;
&amp;nbsp;// assert.  We want the debugging commands to bypass those checks.&lt;br/&gt;
&amp;nbsp;class DebuggingContext {&lt;br/&gt;
-  static bool _enabled;&lt;br/&gt;
+  static int _enabled;          // Nesting counter.&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;public:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;DebuggingContext();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;~DebuggingContext();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// Asserts and other code use this to determine whether to bypass checks&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// that would otherwise lead to program termination.&lt;br/&gt;
-  static bool is_enabled() { return _enabled; }&lt;br/&gt;
+  static bool is_enabled() { return _enabled &amp;gt; 0; }&lt;br/&gt;
&amp;nbsp;};&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;// VMASSERT_CHECK_PASSED(P) provides the mechanism by which DebuggingContext</comment>
                            <comment id="14565217" author="dholmes" created="Tue, 7 Mar 2023 20:35:54 -0800"  >---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x000000015400d410):  JavaThread &amp;quot;C2 CompilerThread1&amp;quot; daemon [_thread_in_native, id=41475, stack(0x0000000170e64000,0x0000000171067000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    511  349       4       java.util.stream.ReferencePipeline$3$1::accept (23 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000000170e64000,0x0000000171067000],  sp=0x0000000171063010,  free space=2044k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0xc785c4]  InitializeNode::coalesce_subword_stores(long, Node*, PhaseGVN*)+0x380&lt;br/&gt;
V  [libjvm.dylib+0xc790a4]  InitializeNode::complete_stores(Node*, Node*, Node*, long, Node*, PhaseIterGVN*)+0xc4&lt;br/&gt;
V  [libjvm.dylib+0xbea3f0]  PhaseMacroExpand::initialize_object(AllocateNode*, Node*, Node*, Node*, Node*, Node*, Node*)+0x3dc&lt;br/&gt;
V  [libjvm.dylib+0xbe92b4]  PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*, Node*)+0x73c&lt;br/&gt;
V  [libjvm.dylib+0xbeeca0]  PhaseMacroExpand::expand_macro_nodes()+0x5e8&lt;br/&gt;
V  [libjvm.dylib+0x487074]  Compile::Optimize()+0xd48&lt;br/&gt;
V  [libjvm.dylib+0x484d30]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0xfc0&lt;br/&gt;
V  [libjvm.dylib+0x36df40]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x160&lt;br/&gt;
V  [libjvm.dylib+0x4a1448]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x6d8&lt;br/&gt;
V  [libjvm.dylib+0x4a0ad0]  CompileBroker::compiler_thread_loop()+0x2e8&lt;br/&gt;
V  [libjvm.dylib+0x825ca4]  JavaThread::thread_main_inner()+0x178&lt;br/&gt;
V  [libjvm.dylib+0xf54c60]  Thread::call_run()+0xf4&lt;br/&gt;
V  [libjvm.dylib+0xd3a2c4]  thread_native_entry(Thread*)+0x120&lt;br/&gt;
C  [libsystem_pthread.dylib+0x7240]  _pthread_start+0x94&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 2 (SEGV_ACCERR), si_addr: 0xfffffff1710630a8</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5095105">JDK-8303276</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5097790">JDK-8305489</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5094530">JDK-8302799</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121495">JDK-8325878</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121738">JDK-8326091</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5098057">JDK-8305719</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095759">JDK-8303810</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093801">JDK-8302189</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5097136">JDK-8304939</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102911" name="hs_err_pid70564.log" size="81942" author="dholmes" created="Tue, 7 Mar 2023 20:36:15 -0800"/>
                    </attachments>
                <subtasks>
                                              <subtask id="5095793">JDK-8303839</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30nmr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>