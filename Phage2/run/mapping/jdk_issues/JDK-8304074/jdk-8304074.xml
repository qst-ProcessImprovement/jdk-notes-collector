<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:40:50 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8304074] [JMX] Add an approximation of total bytes allocated on the Java heap by the JVM</title>
                <link>https://bugs.openjdk.org/browse/JDK-8304074</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>com.sun.management.ThreadMXBean supports per-thread cumulative allocated bytes queries via getThreadAllocatedBytes(long) and getThreadAllocatedBytes(long[]). There is, however, no way to get the same information for the entire JVM process. The value should include not only the amount allocated by live threads but also the amount allocated by terminated threads. &lt;br/&gt;
&lt;br/&gt;
Define a new com.sun.management.ThreadMXBean method getAllThreadAllocatedBytes() that, if both isAllocatedThreadMemorySupported() and isThreadAllocatedMemoryEnabled() are true, returns an approximation of the total number of bytes allocated in the Java heap by the JVM process.&lt;br/&gt;
&amp;nbsp;</description>
                <environment></environment>
        <key id="5096091">JDK-8304074</key>
            <summary>[JMX] Add an approximation of total bytes allocated on the Java heap by the JVM</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="phh">Paul Hohensee</assignee>
                                    <reporter username="phh">Paul Hohensee</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk8u-fix-request</label>
                            <label>jdk8u-fix-yes</label>
                    </labels>
                <created>Mon, 13 Mar 2023 11:16:27 -0700</created>
                <updated>Thu, 26 Jun 2025 06:38:21 -0700</updated>
                            <resolved>Tue, 30 May 2023 06:46:17 -0700</resolved>
                                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14647030" author="sgehwolf" created="Tue, 6 Feb 2024 06:15:09 -0800"  >8u: Pushing this to the July release to see this in JDK 11 and 17 in April first.</comment>
                            <comment id="14634739" author="phh" created="Fri, 15 Dec 2023 12:23:17 -0800"  >Sure, we&amp;#39;ll wait until the April release.&lt;br/&gt;
</comment>
                            <comment id="14634627" author="sgehwolf" created="Fri, 15 Dec 2023 05:29:37 -0800"  >I&amp;#39;d like to see this in released JDK 11/17 for a cycle before also backporting to OpenJDK 8u.</comment>
                            <comment id="14632234" author="roboduke" created="Wed, 6 Dec 2023 15:40:25 -0800"  >[jdk8u-fix-request] Approval Request from Paul Hohensee&lt;br/&gt;
Backport of a purely additive JMX feature (doesn&amp;#39;t change existing code). Backport required code changes due to 11u code restructuring and the lack of Thread SMR in 8u, but the changes are confined to additive or additive support code. In production at Amazon for over two months.</comment>
                            <comment id="14632231" author="roboduke" created="Wed, 6 Dec 2023 15:28:52 -0800"  >[jdk11u-fix-request] Approval Request from Paul Hohensee&lt;br/&gt;
Almost clean backport of purely additive JMX feature (doesn&amp;#39;t change existing code). In production at Amazon for over two months.</comment>
                            <comment id="14632137" author="roboduke" created="Wed, 6 Dec 2023 08:56:35 -0800"  >[jdk17u-fix-request] Approval Request from Paul Hohensee&lt;br/&gt;
Almost clean backport of purely additive JMX feature (doesn&amp;#39;t change existing code). In production at Amazon for over two months.</comment>
                            <comment id="14628893" author="roboduke" created="Sun, 26 Nov 2023 11:59:10 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk8u-dev/pull/392&quot;&gt;https://git.openjdk.org/jdk8u-dev/pull/392&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-26 19:54:02 +0000</comment>
                            <comment id="14628152" author="roboduke" created="Tue, 21 Nov 2023 07:47:14 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2286&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2286&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-21 15:38:46 +0000</comment>
                            <comment id="14627445" author="roboduke" created="Sun, 19 Nov 2023 14:09:54 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1971&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1971&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-19 22:04:46 +0000</comment>
                            <comment id="14585583" author="dukebot" created="Tue, 30 May 2023 06:46:15 -0700"  >Changeset: 3eced01f&lt;br/&gt;
Author:    Paul Hohensee &amp;lt;&lt;a href=&apos;mailto:phh@openjdk.org&apos;&gt;phh@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-30 13:44:02 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3eced01f9efe2567a07b63343f8559683a2d0517&quot;&gt;https://git.openjdk.org/jdk/commit/3eced01f9efe2567a07b63343f8559683a2d0517&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14579688" author="roboduke" created="Mon, 8 May 2023 02:02:24 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13814&quot;&gt;https://git.openjdk.org/jdk/pull/13814&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-04 19:54:57 +0000</comment>
                            <comment id="14566497" author="phh" created="Mon, 13 Mar 2023 11:54:38 -0700"  >Updating a global value with a locked write would in most cases result in cache line bouncing. Instead, update it from a per-thread value when a thread terminates. getAllThreadAllocatedBytes()&amp;#39;s return value is the sum of the global value and the per-thread values for all live Java threads.&lt;br/&gt;
&lt;br/&gt;
There could be thousands of these, so it would be potentially time-consuming to run through all of them. As a follow-on to this issue, we could add a blocked thread list and a per-thread &amp;quot;blocked allocated bytes&amp;quot; TLS field that&amp;#39;s updated from the existing dynamic count whenever a thread blocks. The existing dynamic value would record the total bytes allocated since the last blocking event. getThreadAllocatedBytes() and friends would return the sum of blocked allocated byes and the dynamic count.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5115036">JDK-8320374</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116404">JDK-8321536</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121733">JDK-8326086</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5162846">JDK-8360676</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5100065">JDK-8307396</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5106588">JDK-8313081</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5102292">CODETOOLS-7903484</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30ppn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="194"><![CDATA[java.lang.management]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>