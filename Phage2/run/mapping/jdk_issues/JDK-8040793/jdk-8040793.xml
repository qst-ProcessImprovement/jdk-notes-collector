<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:31:18 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8040793] vmTestbase/nsk/monitoring/stress/lowmem fails on calling isCollectionUsageThresholdExceeded()</title>
                <link>https://bugs.openjdk.org/browse/JDK-8040793</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>&amp;nbsp;Tests: vmTestbase/nsk/monitoring/stress/lowmem/lowmem034/TestDescription.java&lt;br/&gt;
VM options: -XX:+CreateCoredumpOnCrash -XX:+IgnoreUnrecognizedVMOptions -XX:+UseSerialGC -Xmixed -XX:+TieredCompilation&lt;br/&gt;
Product tested: JDK 17.0.5-5-185 (ATR run)&lt;br/&gt;
OS/architecture: Linux-x64&lt;br/&gt;
Reproducible: Intermittent, failed 2 times on running 50 repetitions.&lt;br/&gt;
Is it a Regression: No, failing intermittently in previous builds too.&lt;br/&gt;
Is it a platform-specific issue: Not sure, currently seen only with linux-x64.&lt;br/&gt;
&lt;br/&gt;
Error:&lt;br/&gt;
&lt;br/&gt;
MemoryMonitor &amp;gt; Collection threshold is set, pool: &lt;a href=&apos;mailto:sun.management.MemoryPoolImpl@20ff0906&apos;&gt;sun.management.MemoryPoolImpl@20ff0906&lt;/a&gt;, usage: init = 12976128(12672K) used = 0(0K) committed = 34603008(33792K) max = 34603008(33792K), threshold: 32972799&lt;br/&gt;
# ERROR: MemoryMonitor &amp;gt; Unexpected exception while retrieving isCollectionUsageThresholdExceeded() for pool Eden Space&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: MemoryMonitor &amp;gt; Unexpected exception while retrieving isCollectionUsageThresholdExceeded() for pool Eden Space&lt;br/&gt;
at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
at nsk.share.Log$Logger.complain(Log.java:736) &lt;br/&gt;
at nsk.monitoring.share.Monitor.complain(Monitor.java:320)&lt;br/&gt;
at nsk.monitoring.share.MemoryMonitor$Polling.pollCollectionThresholds(MemoryMonitor.java:1496)&lt;br/&gt;
at nsk.monitoring.share.MemoryMonitor$Polling.run(MemoryMonitor.java:1280)&lt;br/&gt;
java.lang.IllegalArgumentException: committed = 276889600 should be &amp;lt; max = 276824064&lt;br/&gt;
at java.management/java.lang.management.MemoryUsage.&amp;lt;init&amp;gt;(MemoryUsage.java:166) &lt;br/&gt;
[...]&lt;br/&gt;
&lt;br/&gt;
There is also a discrepancy between native and Java part of MemoryUsage specification between commited and max memory:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;- java.lang.management.MemoryUsage says&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* committed: &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      represents the amount of memory (in bytes) that is&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      guaranteed to be available for use by the Java virtual machine.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      The amount of committed memory may change over time (increase&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      or decrease).  The Java virtual machine may release memory to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      the system and committed could be less than init.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      committed will always be greater than or equal to used.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* max:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      represents the maximum amount of memory (in bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      that can be used for memory management. Its value may be undefined.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      The maximum amount of memory may change over time if defined.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      The amount of used and committed memory will always be less than or equal to max if max is defined.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      A memory allocation may fail if it attempts to increase the used memory such that used &amp;gt; committed even&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*      if used &amp;lt;= max would still be true (for example, when the system is low on virtual memory).&lt;br/&gt;
- vm/services/memoryUsage.hpp says&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//  committed - represents the amount of memory (in bytes) that is&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     guaranteed to be available for use by the Java virtual machine.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     The amount of committed memory may change over time (increase&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     or decrease).  It is guaranteed to be greater than or equal&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     to initSize.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//  maxSize   - represents the maximum amount of memory (in bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     that can be used for memory management. The maximum amount of&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     memory for memory management could be less than the amount of&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//     committed memory.  Its value may be undefined.&lt;br/&gt;
&lt;br/&gt;
So in case of this test we call native method (sun.management.MemoryPoolImpl.getCollectionUsage0) to retrieve MemoryUsage object. Native side creates it (MemoryService::create_MemoryUsage_obj) based on native object with unexpected values for Java side.</description>
                <environment></environment>
        <key id="4722796">JDK-8040793</key>
            <summary>vmTestbase/nsk/monitoring/stress/lowmem fails on calling isCollectionUsageThresholdExceeded()</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="5" iconUrl="https://bugs.openjdk.org/images/jbsImages/p5.png">P5</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ayang">Albert Yang</assignee>
                                    <reporter username="pchistyakov">Pavel Chistyakov</reporter>
                        <labels>
                            <label>gc-serial</label>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                    </labels>
                <created>Thu, 17 Apr 2014 02:33:46 -0700</created>
                <updated>Thu, 22 Jun 2023 03:46:34 -0700</updated>
                            <resolved>Mon, 13 Feb 2023 03:30:54 -0800</resolved>
                                    <version>hs25</version>
                    <version>8</version>
                    <version>17</version>
                    <version>19</version>
                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                                                                <comments>
                            <comment id="14591279" author="mdoerr" created="Thu, 22 Jun 2023 01:31:35 -0700"  >Fix Request (17u):&lt;br/&gt;
Should get backported for parity with 17.0.9-oracle. Applies cleanly.</comment>
                            <comment id="14591056" author="roboduke" created="Wed, 21 Jun 2023 08:43:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1485&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1485&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-21 15:33:23 +0000</comment>
                            <comment id="14559564" author="dcubed" created="Mon, 13 Feb 2023 09:10:19 -0800"  >The fix for this bug is integrated in jdk-21+10-740.</comment>
                            <comment id="14559449" author="dukebot" created="Mon, 13 Feb 2023 03:30:53 -0800"  >Changeset: 0025764e&lt;br/&gt;
Author:    Albert Mingkun Yang &amp;lt;&lt;a href=&apos;mailto:ayang@openjdk.org&apos;&gt;ayang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-13 11:28:40 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0025764ec02bef391720962272b7219d34c00653&quot;&gt;https://git.openjdk.org/jdk/commit/0025764ec02bef391720962272b7219d34c00653&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14559234" author="roboduke" created="Fri, 10 Feb 2023 12:27:30 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12516&quot;&gt;https://git.openjdk.org/jdk/pull/12516&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-10 20:20:31 +0000</comment>
                            <comment id="14519082" author="tschatzl" created="Mon, 22 Aug 2022 01:28:42 -0700"  >Also occurs on x64-linux (see JDK-8292702), so this is not particularly specific to a platform.&lt;br/&gt;
&lt;br/&gt;
I think there is a small window of time when the value are sent when committed may be &amp;gt; max when resizing the heap.</comment>
                            <comment id="13635153" author="jwilhelm" created="Mon, 27 Apr 2015 05:30:27 -0700"  >ILW = Low (inconsistent reporting), Medium (always, but on specific hardware), High (none) = P5</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5099515">JDK-8306909</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5103872">JDK-8310635</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="4970938">JDK-8210015</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5097415">JDK-8305192</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="20270" name="lowmem036.log" size="132803" author="pchistyakov" created="Wed, 7 May 2014 00:33:53 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ffqv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>90032</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>