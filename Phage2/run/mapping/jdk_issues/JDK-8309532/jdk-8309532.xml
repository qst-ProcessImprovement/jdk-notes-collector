<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:16:43 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8309532] java/lang/Class/getDeclaredField/FieldSetAccessibleTest should filter modules that depend on JVMCI</title>
                <link>https://bugs.openjdk.org/browse/JDK-8309532</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Loading com.oracle.graal.vector.lir.aarch64.AArch64ASIMDMove$LoadInlineConstant&lt;br/&gt;
----------System.err:(30/3022)----------&lt;br/&gt;
WARNING: Using incubator modules: jdk.incubator.vector, jdk.incubator.concurrent&lt;br/&gt;
java.lang.IllegalAccessError: superinterface check failed: class com.oracle.graal.vector.nodes.simd.SimdConstant (in module com.oracle.graal.graal_enterprise) cannot access class jdk.vm.ci.meta.SerializableConstant (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.meta to module com.oracle.graal.graal_enterprise&lt;br/&gt;
	at java.base/java.lang.ClassLoader.defineClass2(Native Method)&lt;br/&gt;
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1109)&lt;br/&gt;
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:182)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:821)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassInModuleOrNull(BuiltinClassLoader.java:741)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:665)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)&lt;br/&gt;
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)&lt;br/&gt;
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)&lt;br/&gt;
	at java.base/java.lang.Class.getDeclaredFields0(Native Method)&lt;br/&gt;
	at java.base/java.lang.Class.privateGetDeclaredFields(Class.java:3401)&lt;br/&gt;
	at java.base/java.lang.Class.getDeclaredFields(Class.java:2470)&lt;br/&gt;
	at FieldSetAccessibleTest.testSetFieldsAccessible(FieldSetAccessibleTest.java:90)&lt;br/&gt;
	at FieldSetAccessibleTest.test(FieldSetAccessibleTest.java:130)&lt;br/&gt;
	at FieldSetAccessibleTest.test(FieldSetAccessibleTest.java:244)&lt;br/&gt;
	at FieldSetAccessibleTest.test(FieldSetAccessibleTest.java:200)&lt;br/&gt;
	at FieldSetAccessibleTest.run(FieldSetAccessibleTest.java:184)&lt;br/&gt;
	at FieldSetAccessibleTest$TestCase.run(FieldSetAccessibleTest.java:307)&lt;br/&gt;
	at FieldSetAccessibleTest.main(FieldSetAccessibleTest.java:175)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1583)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.IllegalAccessError: superinterface check failed: class com.oracle.graal.vector.nodes.simd.SimdConstant (in module com.oracle.graal.graal_enterprise) cannot access class jdk.vm.ci.meta.SerializableConstant (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.meta to module com.oracle.graal.graal_enterprise&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
The packages in jdk.internal.vm.ci are dynamically exported[1] to com.oracle.graal.graal_enterprise. This is not done if jargraal is not initialized. FieldSetAccessibleTest should limit scanning the boot class path to avoid this problem.&lt;br/&gt;
&lt;br/&gt;
There is a similar failure in for jdk/internal/jimage/JImageOpenTest.java: &lt;br/&gt;
java.lang.IllegalAccessError: superinterface check failed: class com.oracle.graal.vector.nodes.simd.SimdConstant (in module com.oracle.graal.graal_enterprise) cannot access class jdk.vm.ci.meta.SerializableConstant (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.meta to module com.oracle.graal.graal_enterprise&lt;br/&gt;
	at java.base/java.lang.ClassLoader.defineClass2(Native Method)&lt;br/&gt;
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1109)&lt;br/&gt;
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:182)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:821)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassInModuleOrNull(BuiltinClassLoader.java:741)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:665)&lt;br/&gt;
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)&lt;br/&gt;
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)&lt;br/&gt;
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)&lt;br/&gt;
	at java.base/java.lang.Class.forName0(Native Method)&lt;br/&gt;
	at java.base/java.lang.Class.forName(Class.java:497)&lt;br/&gt;
	at java.base/java.lang.Class.forName(Class.java:476)&lt;br/&gt;
	at JImageOpenTest$1.lambda$run$0(JImageOpenTest.java:60)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1593)&lt;br/&gt;
	at JImageOpenTest$1.run(JImageOpenTest.java:57)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1583)&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.IllegalAccessError: superinterface check failed: class com.oracle.graal.vector.nodes.simd.SimdConstant (in module com.oracle.graal.graal_enterprise) cannot access class jdk.vm.ci.meta.SerializableConstant (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.meta to module com.oracle.graal.graal_enterprise&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.IllegalAccessError: superinterface check failed: class com.oracle.graal.vector.nodes.simd.SimdConstant (in module com.oracle.graal.graal_enterprise) cannot access class jdk.vm.ci.meta.SerializableConstant (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.meta to module com.oracle.graal.graal_enterprise&lt;br/&gt;
&lt;br/&gt;
These failures occur in a JDK that includes jargraal-ee in the runtime image (e.g. GraalVM EE).&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://github.com/oracle/graal/blob/f749c67d655734b5ca8d047b289c5faf5acb75eb/compiler/src/jdk.internal.vm.compiler/src/org/graalvm/compiler/serviceprovider/GraalServices.java#L204-L210&quot;&gt;https://github.com/oracle/graal/blob/f749c67d655734b5ca8d047b289c5faf5acb75eb/compiler/src/jdk.internal.vm.compiler/src/org/graalvm/compiler/serviceprovider/GraalServices.java#L204-L210&lt;/a&gt;</description>
                <environment></environment>
        <key id="5102589">JDK-8309532</key>
            <summary>java/lang/Class/getDeclaredField/FieldSetAccessibleTest should filter modules that depend on JVMCI</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mchung">Mandy Chung</assignee>
                                    <reporter username="dnsimon">Douglas Simon</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>testonly</label>
                    </labels>
                <created>Tue, 6 Jun 2023 04:09:34 -0700</created>
                <updated>Wed, 20 Nov 2024 02:08:34 -0800</updated>
                            <resolved>Wed, 7 Jun 2023 11:46:51 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14723201" author="roboduke" created="Mon, 18 Nov 2024 08:13:19 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3053&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3053&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-18 16:00:33 +0000</comment>
                            <comment id="14723194" author="goetz" created="Mon, 18 Nov 2024 07:56:10 -0800"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.13-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed.</comment>
                            <comment id="14595040" author="dnsimon" created="Tue, 11 Jul 2023 07:28:23 -0700"  >The jdk/internal/jimage/JImageOpenTest.java still fails on jargraal-ee. It will need the same treatment as FieldSetAccessibleTest.java.</comment>
                            <comment id="14587741" author="dukebot" created="Wed, 7 Jun 2023 11:46:50 -0700"  >Changeset: 02bce0b1&lt;br/&gt;
Author:    Mandy Chung &amp;lt;&lt;a href=&apos;mailto:mchung@openjdk.org&apos;&gt;mchung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-07 18:44:27 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/02bce0b1452b804f3a7883ca8bf29a524b73672e&quot;&gt;https://git.openjdk.org/jdk/commit/02bce0b1452b804f3a7883ca8bf29a524b73672e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14587695" author="roboduke" created="Wed, 7 Jun 2023 09:13:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14362&quot;&gt;https://git.openjdk.org/jdk/pull/14362&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-07 16:06:54 +0000</comment>
                            <comment id="14587467" author="mchung" created="Tue, 6 Jun 2023 14:15:43 -0700"  >One possible solution to filter out all modules that directly and indirectly depends on jdk.internal.vm.compiler.  [~dnsimon] can you try the attached test.patch?&lt;br/&gt;
</comment>
                            <comment id="14587302" author="dnsimon" created="Tue, 6 Jun 2023 05:05:19 -0700"  >Indeed with this patch, the test passes:&lt;br/&gt;
diff --git a/test/jdk/java/lang/Class/getDeclaredField/FieldSetAccessibleTest.java b/test/jdk/java/lang/Class/getDeclaredField/FieldSetAccessibleTest.java&lt;br/&gt;
index 12cab1f5d0f..c7a3c6a67b1 100644&lt;br/&gt;
--- a/test/jdk/java/lang/Class/getDeclaredField/FieldSetAccessibleTest.java&lt;br/&gt;
+++ b/test/jdk/java/lang/Class/getDeclaredField/FieldSetAccessibleTest.java&lt;br/&gt;
@@ -289,7 +289,8 @@ public class FieldSetAccessibleTest {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Set&amp;lt;String&amp;gt; mods = Set.of(&amp;quot;javafx.deploy&amp;quot;, &amp;quot;jdk.deploy&amp;quot;, &amp;quot;jdk.plugin&amp;quot;, &amp;quot;jdk.javaws&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// All JVMCI packages other than jdk.vm.ci.services are dynamically&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// exported to jdk.internal.vm.compiler&lt;br/&gt;
-                &amp;quot;jdk.internal.vm.compiler&amp;quot;&lt;br/&gt;
+                &amp;quot;jdk.internal.vm.compiler&amp;quot;,&lt;br/&gt;
+                &amp;quot;com.oracle.graal.graal_enterprise&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return ModuleFinder.ofSystem().findAll().stream()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.map(mref -&amp;gt; mref.descriptor().name())&lt;br/&gt;
</comment>
                            <comment id="14587298" author="alanb" created="Tue, 6 Jun 2023 04:45:26 -0700"  >FieldSetAccessibleTest has a link a modules to ignore, does it pass if the Graal modules are filtered out?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5132082">JDK-8334449</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5144368">JDK-8344618</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="104195" name="FieldSetAccessibleTest.jtr.log" size="74471" author="dnsimon" created="Tue, 6 Jun 2023 04:09:27 -0700"/>
                            <attachment id="104196" name="JImageOpenTest.jtr.log" size="31359" author="dnsimon" created="Tue, 6 Jun 2023 04:09:27 -0700"/>
                            <attachment id="104203" name="test.patch" size="5135" author="mchung" created="Tue, 6 Jun 2023 14:25:58 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31sxf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="668"><![CDATA[java.lang:reflect]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>