<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:54:32 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8298813] [C2] Converting double to float  cause a loss of precision and resulting crypto.aes scores fluctuate</title>
                <link>https://bugs.openjdk.org/browse/JDK-8298813</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>For C2, convert double to float  cause a loss of precision,&lt;br/&gt;
&lt;br/&gt;
./chaitin.cpp:221&lt;br/&gt;
_high_frequency_lrg = MIN2(double(OPTO_LRG_HIGH_FREQ), _cfg.get_outer_loop_frequency());&lt;br/&gt;
&lt;br/&gt;
Here, _high_frequency_lrg type is float, so maybe has a loss of precision. when it be used:&lt;br/&gt;
&lt;br/&gt;
./coalesce.cpp:379&lt;br/&gt;
if( lrg._maxfreq &amp;gt;= _phc.high_frequency_lrg() ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Here, lrg._maxfreq type is double, so _high_frequency_lrg will be convert double again. But now, due to the loss of precision of _high_frequency_lrg, the conditions here may be true or false.&lt;br/&gt;
&lt;br/&gt;
There are two cases that I tested for SPECjvm2008 crypto.aes.&lt;br/&gt;
case 1:&lt;br/&gt;
//chaitin.cpp:221 &lt;br/&gt;
// fcvt.s.d    $f0,$f0  #double-&amp;gt;float&lt;br/&gt;
d = 16.994714324523816&lt;br/&gt;
f = 16.9947147&lt;br/&gt;
&lt;br/&gt;
//coalesce.cpp:379&lt;br/&gt;
// fcvt.d.s    $f0,$f0       #float-&amp;gt;double&lt;br/&gt;
// fcmp.sle.d    $fcc2,$f0,$f1&lt;br/&gt;
(gdb) i r fa0&lt;br/&gt;
fa0            {f = 0x0, d = 0x10} {f = -1.08420217e-19, d = 16.994714736938477} &lt;br/&gt;
(gdb) i r fa1&lt;br/&gt;
fa1            {f = 0x0, d = 0x10} {f = -7.68722312e-24, d = 16.994714324523816}&lt;br/&gt;
&lt;br/&gt;
case2:&lt;br/&gt;
//chaitin.cpp:221 &lt;br/&gt;
// fcvt.s.d    $f0,$f0&lt;br/&gt;
d = 16.996332681816536&lt;br/&gt;
f = 16.9963322&lt;br/&gt;
&lt;br/&gt;
//coalesce.cpp&lt;br/&gt;
// fcvt.d.s    $f0,$f0&lt;br/&gt;
// fcmp.sle.d    $fcc2,$f0,$f1&lt;br/&gt;
(gdb) i r fa0&lt;br/&gt;
fa0            {f = 0x0, d = 0x10} {f = -1.08420217e-19, d = 16.996332168579102}&lt;br/&gt;
(gdb) i r fa1&lt;br/&gt;
fa1            {f = 0x0, d = 0x10} {f = -1.73570044e-14, d = 16.996332681816536}&lt;br/&gt;
&lt;br/&gt;
The above two cases result in different block generation&#65288;case2 can insert new SpillCopyNodes), and resulting score on cryto.aes is fluctuate.</description>
                <environment></environment>
        <key id="5089731">JDK-8298813</key>
            <summary>[C2] Converting double to float  cause a loss of precision and resulting crypto.aes scores fluctuate</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="5" iconUrl="https://bugs.openjdk.org/images/jbsImages/p5.png">P5</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sguoyun">Sun Guoyun</assignee>
                                    <reporter username="sguoyun">Sun Guoyun</reporter>
                        <labels>
                            <label>c2</label>
                            <label>oracle-triage-21</label>
                            <label>performance</label>
                    </labels>
                <created>Wed, 14 Dec 2022 18:32:01 -0800</created>
                <updated>Wed, 21 Dec 2022 17:22:45 -0800</updated>
                            <resolved>Sun, 18 Dec 2022 23:58:02 -0800</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14546337" author="dukebot" created="Sun, 18 Dec 2022 23:58:01 -0800"  >Changeset: 36376605&lt;br/&gt;
Author:    sunguoyun &amp;lt;&lt;a href=&apos;mailto:sunguoyun@loongson.cn&apos;&gt;sunguoyun@loongson.cn&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2022-12-19 07:56:36 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/36376605215ba3380bfc07752eec043af04a5c29&quot;&gt;https://git.openjdk.org/jdk/commit/36376605215ba3380bfc07752eec043af04a5c29&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14546030" author="chagedorn" created="Fri, 16 Dec 2022 02:10:35 -0800"  >ILW = Using floats instead of doubles could result in loss of precision in GCM for frequency fields could result in different code shapes/fluctuations in benchmarks, low, no workaround = LLH = P5</comment>
                            <comment id="14545579" author="roboduke" created="Wed, 14 Dec 2022 19:01:05 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11685&quot;&gt;https://git.openjdk.org/jdk/pull/11685&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-15 02:52:51 +0000</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zmrv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>