<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:57:45 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307185] pkcs11 native libraries make JNI calls into java code while holding GC lock</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307185</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test sun/security/pkcs11/Cipher/TestGCMKeyAndIvCheck.java crashed&lt;br/&gt;
with&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S79186/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/2ef51ca9-bad0-46db-8e19-172f18899f3c/runs/8002a502-cb17-4c3a-ad85-b28c10f2ab4e/workspace/open/src/hotspot/share/gc/shared/gcLocker.cpp:107), pid=6849, tid=6918&lt;br/&gt;
#  assert(!JavaThread::current()-&amp;gt;in_critical()) failed: Would deadlock&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0) (fastdebug build 21-internal-LTS-2023-04-28-1933301.leonid.mesnik.jdk-ttf-build)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-internal-LTS-2023-04-28-1933301.leonid.mesnik.jdk-ttf-build, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xd1553c]  GCLocker::stall_until_clear()+0x1ac&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f25b0007850):  JavaThread &amp;quot;ForkJoinPool-1-worker-2&amp;quot; daemon [_thread_in_vm, id=6918, stack(0x00007f25f94f4000,0x00007f25f95f5000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f25f94f4000,0x00007f25f95f5000],  sp=0x00007f25f95f1ba0,  free space=1014k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xd1553c]  GCLocker::stall_until_clear()+0x1ac  (gcLocker.cpp:107)&lt;br/&gt;
V  [libjvm.so+0xc0ba5b]  G1CollectedHeap::attempt_allocation_slow(unsigned long)+0x13b  (g1CollectedHeap.cpp:484)&lt;br/&gt;
V  [libjvm.so+0xc100fe]  G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*)+0x21e  (g1CollectedHeap.cpp:642)&lt;br/&gt;
V  [libjvm.so+0x1325707]  MemAllocator::mem_allocate_inside_tlab_slow(MemAllocator::Allocation&amp;amp;) const+0x237  (memAllocator.cpp:324)&lt;br/&gt;
V  [libjvm.so+0x1325fbb]  MemAllocator::mem_allocate_slow(MemAllocator::Allocation&amp;amp;) const+0x9b  (memAllocator.cpp:361)&lt;br/&gt;
V  [libjvm.so+0x13260eb]  MemAllocator::allocate() const+0xdb  (memAllocator.cpp:379)&lt;br/&gt;
V  [libjvm.so+0xe07167]  InstanceKlass::allocate_instance(JavaThread*)+0x87  (collectedHeap.inline.hpp:36)&lt;br/&gt;
V  [libjvm.so+0xe409de]  InterpreterRuntime::_new(JavaThread*, ConstantPool*, int)+0x15e  (interpreterRuntime.cpp:243)&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11Exception$RV.&amp;lt;clinit&amp;gt;()V+872 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f26101c5d21&lt;br/&gt;
V  [libjvm.so+0xe55d02]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x462  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xe07d48]  InstanceKlass::call_class_initializer(JavaThread*)+0x258  (instanceKlass.cpp:1553)&lt;br/&gt;
V  [libjvm.so+0xe0a6d0]  InstanceKlass::initialize_impl(JavaThread*)+0x640  (instanceKlass.cpp:1139)&lt;br/&gt;
V  [libjvm.so+0x11f5ac6]  LinkResolver::resolve_static_call(CallInfo&amp;amp;, LinkInfo const&amp;amp;, bool, JavaThread*)+0x1e6  (linkResolver.cpp:1078)&lt;br/&gt;
V  [libjvm.so+0x11f679b]  LinkResolver::resolve_invoke(CallInfo&amp;amp;, Handle, constantPoolHandle const&amp;amp;, int, Bytecodes::Code, JavaThread*)+0x18b  (linkResolver.cpp:1672)&lt;br/&gt;
V  [libjvm.so+0xe3f3a6]  InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code)+0x316  (interpreterRuntime.cpp:834)&lt;br/&gt;
V  [libjvm.so+0xe400ee]  InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)+0x7e  (interpreterRuntime.cpp:968)&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11Exception.lookup(J)Ljava/lang/String;+0 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11Exception.&amp;lt;init&amp;gt;(JLjava/lang/String;)V+11 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f26101c5d21&lt;br/&gt;
V  [libjvm.so+0xe55d02]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x462  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xf61fa9]  jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*) [clone .constprop.0]+0x1d9  (jni.cpp:950)&lt;br/&gt;
V  [libjvm.so+0xf62a18]  jni_NewObject+0x208  (jni.cpp:1023)&lt;br/&gt;
C  [libj2pkcs11.so+0xc989]  ckAssertReturnValueOK2.part.0+0x89  (p11_util.c:224)&lt;br/&gt;
C  [libj2pkcs11.so+0x68ab]  Java_sun_security_pkcs11_wrapper_PKCS11_C_1Decrypt+0xdb  (p11_crypt.c:404)&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11.C_Decrypt(JJ[BIIJ[BII)I+0 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.cancelOperation()V+120 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.reset(Z)V+65 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.ensureInitialized()V+19 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.implDoFinal([BII[BII)I+26 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.engineDoFinal([BII[BI)I+14 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.engineDoFinal([BII)[B+20 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  javax.crypto.Cipher.doFinal([B)[B+31 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  TestGCMKeyAndIvCheck.test(Ljava/lang/String;Ljava/security/Provider;)V+240&lt;br/&gt;
j  TestGCMKeyAndIvCheck.main(Ljava/security/Provider;)V+4&lt;br/&gt;
j  PKCS11Test.premain(Ljava/security/Provider;)V+69&lt;br/&gt;
j  PKCS11Test.testNSS(LPKCS11Test;)V+16&lt;br/&gt;
J 600  jdk.internal.vm.Continuation.enterSpecial(Ljdk/internal/vm/Continuation;ZZ)V &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (0 bytes) @ 0x00007f261079c6d3 [0x00007f261079c560+0x0000000000000173]&lt;br/&gt;
j  jdk.internal.vm.Continuation.run()V+152 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+76 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda+0x000000010014aba8.run()V+4 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
J 1241 c2 java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (263 bytes) @ 0x00007f26107f626c [0x00007f26107f6040+0x000000000000022c]&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f26101c5d21&lt;br/&gt;
V  [libjvm.so+0xe55d02]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x462  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xe562e3]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x283  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0xe564f1]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x71  (javaCalls.cpp:191)&lt;br/&gt;
V  [libjvm.so+0xfa5666]  thread_entry(JavaThread*, JavaThread*)+0x96  (jvm.cpp:2918)&lt;br/&gt;
V  [libjvm.so+0xe87e9e]  JavaThread::thread_main_inner()+0x17e  (javaThread.cpp:717)&lt;br/&gt;
V  [libjvm.so+0x1758538]  Thread::call_run()+0xb8  (thread.cpp:215)&lt;br/&gt;
V  [libjvm.so+0x145984a]  thread_native_entry(Thread*)+0x11a  (os_linux.cpp:740)&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11Exception$RV.&amp;lt;clinit&amp;gt;()V+872 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f26101c5d21&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11Exception.lookup(J)Ljava/lang/String;+0 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11Exception.&amp;lt;init&amp;gt;(JLjava/lang/String;)V+11 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f26101c5d21&lt;br/&gt;
j  sun.security.pkcs11.wrapper.PKCS11.C_Decrypt(JJ[BIIJ[BII)I+0 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.cancelOperation()V+120 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.reset(Z)V+65 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.ensureInitialized()V+19 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.implDoFinal([BII[BII)I+26 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.engineDoFinal([BII[BI)I+14 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  sun.security.pkcs11.P11AEADCipher.engineDoFinal([BII)[B+20 &lt;a href=&apos;mailto:jdk.crypto.cryptoki@21-internal&apos;&gt;jdk.crypto.cryptoki@21-internal&lt;/a&gt;&lt;br/&gt;
j  javax.crypto.Cipher.doFinal([B)[B+31 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  TestGCMKeyAndIvCheck.test(Ljava/lang/String;Ljava/security/Provider;)V+240&lt;br/&gt;
j  TestGCMKeyAndIvCheck.main(Ljava/security/Provider;)V+4&lt;br/&gt;
j  PKCS11Test.premain(Ljava/security/Provider;)V+69&lt;br/&gt;
j  PKCS11Test.testNSS(LPKCS11Test;)V+16&lt;br/&gt;
J 600  jdk.internal.vm.Continuation.enterSpecial(Ljdk/internal/vm/Continuation;ZZ)V &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (0 bytes) @ 0x00007f261079c6d3 [0x00007f261079c560+0x0000000000000173]&lt;br/&gt;
j  jdk.internal.vm.Continuation.run()V+152 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+76 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda+0x000000010014aba8.run()V+4 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
J 1241 c2 java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (263 bytes) @ 0x00007f26107f626c [0x00007f26107f6040+0x000000000000022c]&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f26101c5d21&lt;br/&gt;
Registers:&lt;br/&gt;
RAX=0x00007f262962e000, RBX=0x00007f26289ab044, RCX=0x00007f26283b7e01, RDX=0x00007f26284a5230&lt;br/&gt;
RSP=0x00007f25f95f1ba0, RBP=0x00007f25f95f1bb0, RSI=0x000000000000006b, RDI=0x00007f26284a4ff8&lt;br/&gt;
R8 =0x0000000000000000, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x00007f2620048960&lt;br/&gt;
R12=0x00007f25b0007850, R13=0x0000000000000100, R14=0x00007f262003f830, R15=0x00007f26289ab044&lt;br/&gt;
RIP=0x00007f262777c53c, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000006&lt;br/&gt;
&amp;nbsp;&amp;nbsp;TRAPNO=0x000000000000000e&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5099832">JDK-8307185</key>
            <summary>pkcs11 native libraries make JNI calls into java code while holding GC lock</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djelinski">Daniel Jelinski</assignee>
                                    <reporter username="lmesnik">Leonid Mesnik</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>hgupdate-sync</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21-fix-request</label>
                            <label>jdk21-fix-yes</label>
                    </labels>
                <created>Mon, 1 May 2023 13:21:48 -0700</created>
                <updated>Thu, 25 Jul 2024 23:26:58 -0700</updated>
                            <resolved>Thu, 20 Jul 2023 09:41:10 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                                                                <comments>
                            <comment id="14638139" author="roboduke" created="Mon, 8 Jan 2024 06:29:14 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2112&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2112&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-08 14:23:12 +0000</comment>
                            <comment id="14638136" author="goetz" created="Mon, 8 Jan 2024 06:23:50 -0800"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.11-oracle.&lt;br/&gt;
Risk limited to pkcs. Rather simple change, limited risk.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes, but also without the fix. SAP nightly testing passed.</comment>
                            <comment id="14597846" author="mullan" created="Fri, 21 Jul 2023 06:08:16 -0700"  >Fix request approved.</comment>
                            <comment id="14597805" author="JIRAUSER19825" created="Fri, 21 Jul 2023 03:43:50 -0700"  >Fix Request&lt;br/&gt;
This is a fix for a regression that will cause user applications to deadlock randomly. The issue is well understood, and the fix is low risk. The fix is covered by existing tests that time out intermittently without it.</comment>
                            <comment id="14597803" author="roboduke" created="Fri, 21 Jul 2023 03:36:56 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21/pull/142&quot;&gt;https://git.openjdk.org/jdk21/pull/142&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-21 10:29:43 +0000</comment>
                            <comment id="14597641" author="dukebot" created="Thu, 20 Jul 2023 09:41:08 -0700"  >Changeset: 354c6605&lt;br/&gt;
Author:    Daniel Jeli&#324;ski &amp;lt;&lt;a href=&apos;mailto:djelinski@openjdk.org&apos;&gt;djelinski@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-07-20 16:39:17 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/354c6605e32790ca421869636d8bf5456fc51717&quot;&gt;https://git.openjdk.org/jdk/commit/354c6605e32790ca421869636d8bf5456fc51717&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14597256" author="roboduke" created="Wed, 19 Jul 2023 05:33:35 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14931&quot;&gt;https://git.openjdk.org/jdk/pull/14931&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-19 12:03:14 +0000</comment>
                            <comment id="14597189" author="JIRAUSER19825" created="Wed, 19 Jul 2023 00:25:00 -0700"  >introduced in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8080462&quot; title=&quot;Update SunPKCS11 provider with PKCS11 v2.40 support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8080462&quot;&gt;&lt;strike&gt;JDK-8080462&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14597179" author="alanb" created="Tue, 18 Jul 2023 23:51:30 -0700"  >I&amp;#39;ve changed the priority back to P2, this is an important bug to fix. See also discussion in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8253056&quot; title=&quot;sun/security/pkcs11/Cipher/TestGCMKeyAndIvCheck.java timed out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8253056&quot;&gt;&lt;strike&gt;JDK-8253056&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14594302" author="valeriep" created="Thu, 6 Jul 2023 12:58:18 -0700"  >p11_crypt.c is last touched in JDK 17. Lowering to P3 due to the intermittent nature.</comment>
                            <comment id="14586175" author="lmesnik" created="Wed, 31 May 2023 20:40:07 -0700"  >The advice to don&amp;#39;t call JNI functions and don&amp;#39;t allocate a heap in the critical section is correct. GC locker prevent GC and might cause deadlock.&lt;br/&gt;
I am not sure if  -Xcheck:jni print warnings for JDK libraries. </comment>
                            <comment id="14586131" author="valeriep" created="Wed, 31 May 2023 14:11:19 -0700"  >Is there a set of rules of calling GetPrimitiveArrayCritical? Is the advice in this discussion legit? &lt;a href=&quot;https://stackoverflow.com/questions/23258357/whats-the-trade-off-between-using-getprimitivearraycritical-and-getprimitivety&quot;&gt;https://stackoverflow.com/questions/23258357/whats-the-trade-off-between-using-getprimitivearraycritical-and-getprimitivety&lt;/a&gt; &lt;br/&gt;
Would this be reported with the Java flag -Xcheck:jni?</comment>
                            <comment id="14584770" author="alanb" created="Thu, 25 May 2023 23:13:25 -0700"  >It looks like like several JNI functions in p11_crypt.c can exit (in error case) without doing cleanup so they don&amp;#39;t ReleasePrimitiveArrayCritical. These should be fixed.</comment>
                            <comment id="14584689" author="lmesnik" created="Thu, 25 May 2023 15:54:03 -0700"  >The code in the &lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/89b3c375ac55f960dbeac8a2355e528450e610a1/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_crypt.c#L404&quot;&gt;https://github.com/openjdk/jdk/blob/89b3c375ac55f960dbeac8a2355e528450e610a1/src/jdk.crypto.cryptoki/share/native/libj2pkcs11/p11_crypt.c#L404&lt;/a&gt; &lt;br/&gt;
and places like this can cause JVM locks.&lt;br/&gt;
The pattern like:&lt;br/&gt;
&amp;nbsp;inBufP = (*env)-&amp;gt;GetPrimitiveArrayCritical(env, jIn, NULL);&lt;br/&gt;
...&lt;br/&gt;
ckAssertReturnValueOK(env, rv);&lt;br/&gt;
^^^^ call Java code here&lt;br/&gt;
(*env)-&amp;gt;ReleasePrimitiveArrayCritical(env, jIn, inBufP, JNI_ABORT);&lt;br/&gt;
&lt;br/&gt;
is unsafe. It could potentially GC deadlock if Java code allocates an object while the heap is locked.&lt;br/&gt;
Also, it could cause virtual threads remounting while GC lock is held. Which also can deadlock.&lt;br/&gt;
</comment>
                            <comment id="14578075" author="lmesnik" created="Mon, 1 May 2023 13:26:18 -0700"  >The more reliable reproducer would be better as a regression test for this bug.</comment>
                            <comment id="14578074" author="lmesnik" created="Mon, 1 May 2023 13:25:30 -0700"  >Although it is in gc component, it is more loom issue.</comment>
                            <comment id="14578073" author="lmesnik" created="Mon, 1 May 2023 13:24:22 -0700"  >The failure is very intermittent. Run:&lt;br/&gt;
make -- run-test JTREG_VERBOSE=all JTREG_RETAIN=all  JTREG_TEST_THREAD_FACTORY=Virtual  TEST=sun/security/pkcs11/Cipher/TestGCMKeyAndIvCheck.java &lt;br/&gt;
to reproduce.&lt;br/&gt;
&lt;br/&gt;
Seems the GCLocker should pin VirtualThread to JavaThread so the another gc locking couldn&amp;#39;t be executed on it.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5106081">JDK-8312590</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5106464">JDK-8312958</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118723">JDK-8323569</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5111698">JDK-8317493</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118398">JDK-8323270</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5012851">JDK-8240611</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5029635">JDK-8253056</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5060947">JDK-8275751</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5062945">JDK-8277359</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5090562">JDK-8299485</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5105828">JDK-8312368</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4779828">JDK-8080462</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5090562">JDK-8299485</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31c2r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17337"><![CDATA[b08]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="249"><![CDATA[javax.crypto:pkcs11]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>