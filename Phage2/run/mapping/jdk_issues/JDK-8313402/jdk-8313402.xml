<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:46:55 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8313402] C1: Incorrect LoadIndexed value numbering</title>
                <link>https://bugs.openjdk.org/browse/JDK-8313402</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I suspect this is a compiler bug in compact string intrinsics, because it reproduces only with C1. Starts to pass with `-XX:-CompactStrings` (which disables compact strings). Starts to pass `-XX:-Inline` (which disables intrinsics). Starts to pass with `-XX:DisableIntrinsic=_getCharStringU`.&lt;br/&gt;
&lt;br/&gt;
Reproduces reliably after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8268698&quot; title=&quot;Use Objects.check{Index,FromToIndex,FromIndexSize} for java.base&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8268698&quot;&gt;&lt;strike&gt;JDK-8268698&lt;/strike&gt;&lt;/a&gt;, but the issue could manifest after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8141132&quot; title=&quot;Integration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8141132&quot;&gt;&lt;strike&gt;JDK-8141132&lt;/strike&gt;&lt;/a&gt; in any unlucky code.&lt;br/&gt;
&lt;br/&gt;
% CONF=linux-x86_64-server-fastdebug make images test TEST=&amp;quot;java/time/test/java/time/format/TestUnicodeExtension.java&amp;quot; TEST_VM_OPTS=&amp;quot;-XX:TieredStopAtLevel=1&amp;quot;&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
est test.java.time.format.TestUnicodeExtension.test_withLocale(dz, null, null, null, null, &amp;quot;??????????, ????????2017 ??????????? ????10 ??????? 3 ?????? 15:00 ?????? ???????????????????????????????????????&amp;quot;): failure&lt;br/&gt;
java.time.format.DateTimeParseException: Text &amp;#39;??????????, ????????2017 ??????????? ????10 ??????? 3 ?????? 15:...&amp;#39; could not be parsed at index 74&lt;br/&gt;
&lt;br/&gt;
===============================================&lt;br/&gt;
java/time/test/java/time/format/TestUnicodeExtension.java&lt;br/&gt;
Total tests run: 531, Passes: 519, Failures: 12, Skips: 0&lt;br/&gt;
===============================================</description>
                <environment></environment>
        <key id="5106995">JDK-8313402</key>
            <summary>C1: Incorrect LoadIndexed value numbering</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shade">Aleksey Shipilev</assignee>
                                    <reporter username="shade">Aleksey Shipilev</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c1</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21-defer-request</label>
                            <label>jdk21-defer-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-22</label>
                    </labels>
                <created>Mon, 31 Jul 2023 03:18:59 -0700</created>
                <updated>Mon, 22 Jan 2024 07:35:13 -0800</updated>
                            <resolved>Wed, 2 Aug 2023 04:23:56 -0700</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14603720" author="shade" created="Mon, 14 Aug 2023 06:57:20 -0700"  >Fix Request (17u)&lt;br/&gt;
&lt;br/&gt;
Same reason as 21u. Applies cleanly. Testing passes.</comment>
                            <comment id="14603033" author="thartmann" created="Wed, 9 Aug 2023 10:44:42 -0700"  >Deferral Request (JDK 21)&lt;br/&gt;
Non-trivial fix that needs some more bake time before being released and will therefore be integrated into JDK 21.0.1.</comment>
                            <comment id="14601885" author="shade" created="Fri, 4 Aug 2023 03:01:11 -0700"  >Fix Request (21u)&lt;br/&gt;
&lt;br/&gt;
Fixes the important C1 bug. Patch applies cleanly. New test fails without the fix, passes with it. Other tests pass too.</comment>
                            <comment id="14601624" author="roboduke" created="Thu, 3 Aug 2023 04:27:50 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1636&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1636&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-03 11:21:29 +0000</comment>
                            <comment id="14601593" author="roboduke" created="Thu, 3 Aug 2023 02:39:40 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/37&quot;&gt;https://git.openjdk.org/jdk21u/pull/37&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-03 09:32:59 +0000</comment>
                            <comment id="14601395" author="thartmann" created="Wed, 2 Aug 2023 07:00:24 -0700"  >Makes sense. For JDK 21 GA we either need approval for integration or a defer request since this is a P2. I think it would be fine to still integrate it. GAC (initial build) is only next week (Aug 10).</comment>
                            <comment id="14601390" author="shade" created="Wed, 2 Aug 2023 06:42:30 -0700"  >Yes, and downwards to 17u and 11u. I am not sure we want to have it in 21 GA, as it would probably invalidate some testing. Can be safe to 21.0.1.</comment>
                            <comment id="14601389" author="thartmann" created="Wed, 2 Aug 2023 06:40:31 -0700"  >[~shade] should this be backported to JDK 21?</comment>
                            <comment id="14601245" author="dukebot" created="Wed, 2 Aug 2023 04:23:50 -0700"  >Changeset: 46fbedb2&lt;br/&gt;
Author:    Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-02 11:21:34 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/46fbedb2be98a9b8aba042fa9f90c3b25c312cd6&quot;&gt;https://git.openjdk.org/jdk/commit/46fbedb2be98a9b8aba042fa9f90c3b25c312cd6&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14600733" author="dlong" created="Tue, 1 Aug 2023 12:24:46 -0700"  >ILW = incorrect result; reproduces reliably; disable intrinsic = HMM = P2</comment>
                            <comment id="14600293" author="roboduke" created="Mon, 31 Jul 2023 09:55:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15091&quot;&gt;https://git.openjdk.org/jdk/pull/15091&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-31 16:47:56 +0000</comment>
                            <comment id="14600281" author="shade" created="Mon, 31 Jul 2023 08:43:32 -0700"  >Actually:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
$ build/macosx-aarch64-server-fastdebug/images/jdk/bin/java -XX:TieredStopAtLevel=1 -XX:CICompilerCount=1 -XX:+PrintCompilation -XX:+PrintIR0 -XX:+PrintValueNumbering Test8313402.java&lt;br/&gt;
&lt;br/&gt;
. 8    0    a141   a102._20 ([) value&lt;br/&gt;
. 2    0    i144   a141.length&lt;br/&gt;
&amp;nbsp;&amp;nbsp;2    0    a148   &amp;lt;instance 0x0000000159f04470 klass=jdk/internal/util/Preconditions$4&amp;gt;&lt;br/&gt;
. 5    0    i149   Preconditions.Preconditions_checkIndex(i110, i144, a148)&lt;br/&gt;
. 8    0    i152   a141[i110](i144) (B) [rc] ; &amp;lt;---- This&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
. 17   0    a162   a102._20 ([) value&lt;br/&gt;
. 1    0    i169   a162.length&lt;br/&gt;
&amp;nbsp;&amp;nbsp;2    0    i170   1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;3    0    i171   i169 &amp;gt;&amp;gt; i170&lt;br/&gt;
&amp;nbsp;&amp;nbsp;2    0    a176   &amp;lt;instance 0x0000000159f04470 klass=jdk/internal/util/Preconditions$4&amp;gt;&lt;br/&gt;
. 5    0    i177   Preconditions.Preconditions_checkIndex(i110, i171, a176)&lt;br/&gt;
. 7    0    i180   a162[i110] (C)     ; &amp;lt;----- This&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
Value Numbering: LoadIndexed i180 equal to i152  (size 47, entries 27, nesting-diff 0)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
i180 is from intrinsic, having type (C) and not having length. &lt;br/&gt;
i152 is from somewhere else, having type (B) and having length (implies arraylength check).&lt;br/&gt;
&lt;br/&gt;
Unclear why these are folded together, given HASHING3 should have discriminated on type()-&amp;gt;tag(). &lt;br/&gt;
&lt;br/&gt;
EDIT: type()-&amp;gt;tag() is actually &amp;quot;int&amp;quot; for both (B) and (C)! The conversion from elt_type() loses the distinction between byte and char.</comment>
                            <comment id="14600274" author="shade" created="Mon, 31 Jul 2023 08:18:38 -0700"  >Oh, I have a hypothesis: getCharStringU emits the mismatched LoadIndexed op (reading char from byte[]). LoadIndexed is hashed and subject to GVN. The hash for LoadIndexed does not take &amp;quot;mismatched&amp;quot; into account, so we may fold it with another LoadIndexed (e.g. reading byte from byte[]), breaking correctness.&lt;br/&gt;
&lt;br/&gt;
-XX:-UseGlobalValueNumbering fixes the test. &lt;br/&gt;
&lt;br/&gt;
This patch also fixes the test:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
diff --git a/src/hotspot/share/c1/c1_Instruction.hpp b/src/hotspot/share/c1/c1_Instruction.hpp&lt;br/&gt;
index 6067767da4e..da8ad195008 100644&lt;br/&gt;
--- a/src/hotspot/share/c1/c1_Instruction.hpp&lt;br/&gt;
+++ b/src/hotspot/share/c1/c1_Instruction.hpp&lt;br/&gt;
@@ -954,7 +954,7 @@ LEAF(LoadIndexed, AccessIndexed)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;ciType* declared_type() const;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// generic;&lt;br/&gt;
-  HASHING3(LoadIndexed, true, type()-&amp;gt;tag(), array()-&amp;gt;subst(), index()-&amp;gt;subst())&lt;br/&gt;
+  HASHING3(LoadIndexed, !mismatched(), type()-&amp;gt;tag(), array()-&amp;gt;subst(), index()-&amp;gt;subst())&lt;br/&gt;
&amp;nbsp;};&lt;br/&gt;
```&lt;br/&gt;
</comment>
                            <comment id="14600262" author="shade" created="Mon, 31 Jul 2023 07:30:41 -0700"  >Attached the minimized test case derived from the original jtreg.&lt;br/&gt;
&lt;br/&gt;
$ build/macosx-aarch64-server-fastdebug/images/jdk/bin/java -XX:TieredStopAtLevel=1 Test8313402.java&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.time.format.DateTimeParseException: Text &amp;#39;&#3906;&#3935;&#3936;&#3851;&#3924;&#3851;&#3942;&#3908;&#3942;&#3851;, &#3942;&#4004;&#4017;&#3954;&#3851;&#3939;&#3964;&#3851;2017 &#3935;&#4019;&#3851;&#3926;&#3938;&#3986;&#4017;&#3921;&#3851;&#3924;&#3851; &#3930;&#3962;&#3942;&#3851;10 &#3910;&#3956;&#3851;&#3930;&#3964;&#3921;&#3851; 3 &#3942;&#3984;&#3938;&#3851;&#3928;&#3851; 15:...&amp;#39; could not be parsed at index 74&lt;br/&gt;
	at java.base/java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2108)&lt;br/&gt;
	at java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1936)&lt;br/&gt;
	at Test8313402.main(Test8313402.java:18)&lt;br/&gt;
&lt;br/&gt;
$ build/macosx-aarch64-server-fastdebug/images/jdk/bin/java -XX:TieredStopAtLevel=1 -XX:DisableIntrinsic=_getCharStringU Test8313402.java&lt;br/&gt;
&amp;lt;OK&amp;gt;&lt;br/&gt;
&lt;br/&gt;
$ build/macosx-aarch64-server-fastdebug/images/jdk/bin/java -XX:TieredStopAtLevel=4 Test8313402.java&lt;br/&gt;
&amp;lt;OK&amp;gt;</comment>
                            <comment id="14600253" author="shade" created="Mon, 31 Jul 2023 06:36:51 -0700"  >This is a minimal hunk that needs to be reverted from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8268698&quot; title=&quot;Use Objects.check{Index,FromToIndex,FromIndexSize} for java.base&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8268698&quot;&gt;&lt;strike&gt;JDK-8268698&lt;/strike&gt;&lt;/a&gt; to make the test pass:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
diff --git a/src/java.base/share/classes/java/lang/String.java b/src/java.base/share/classes/java/lang/String.java&lt;br/&gt;
index 5c234d4dfac..8487711e87e 100644&lt;br/&gt;
--- a/src/java.base/share/classes/java/lang/String.java&lt;br/&gt;
+++ b/src/java.base/share/classes/java/lang/String.java&lt;br/&gt;
@@ -4825,7 +4825,10 @@ public final class String&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* negative or greater than or equal to {@code length}.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static void checkIndex(int index, int length) {&lt;br/&gt;
-        Preconditions.checkIndex(index, length, Preconditions.SIOOBE_FORMATTER);&lt;br/&gt;
+        if (index &amp;lt; 0 || index &amp;gt;= length) {&lt;br/&gt;
+            throw new StringIndexOutOfBoundsException(&amp;quot;index &amp;quot; + index +&lt;br/&gt;
+                                                      &amp;quot;, length &amp;quot; + length);&lt;br/&gt;
+        }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&lt;br/&gt;
```</comment>
                            <comment id="14600247" author="shade" created="Mon, 31 Jul 2023 04:55:54 -0700"  >Bisection points to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8268698&quot; title=&quot;Use Objects.check{Index,FromToIndex,FromIndexSize} for java.base&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8268698&quot;&gt;&lt;strike&gt;JDK-8268698&lt;/strike&gt;&lt;/a&gt;.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5108186">JDK-8314410</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5107710">JDK-8314017</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5108834">JDK-8314984</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5051772">JDK-8268698</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5107303">JDK-8313676</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="104916" name="Test8313402.java" size="818" author="shade" created="Mon, 31 Jul 2023 07:29:02 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32jzf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>