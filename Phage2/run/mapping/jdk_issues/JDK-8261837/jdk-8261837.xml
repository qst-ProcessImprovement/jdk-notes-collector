<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:43:32 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8261837] SIGSEGV in ciVirtualCallTypeData::translate_from</title>
                <link>https://bugs.openjdk.org/browse/JDK-8261837</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test crashed in the JDK17 CI:&lt;br/&gt;
&lt;br/&gt;
jdk/internal/jimage/JImageOpenTest.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(4/210)----------&lt;br/&gt;
command: main -Djdk.image.map.all=false JImageOpenTest&lt;br/&gt;
reason: User specified action: run main/othervm -Djdk.image.map.all=false JImageOpenTest &lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
elapsed time (seconds): 0.708&lt;br/&gt;
----------configuration:(0/0)----------&lt;br/&gt;
----------System.out:(21/1157)----------&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x0000000105ea9d32, pid=8269, tid=23043&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (17.0+10) (build 17-ea+10-LTS-717)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (17-ea+10-LTS-717, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, bsd-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.dylib+0x2a9d32]  ciVirtualCallTypeData::translate_from(ProfileData const*)+0x92&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: core.8269&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /System/Volumes/Data/mesos/work_dir/slaves/a4f8fba9-f017-4328-b286-c66b6a97143d-S6108/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/0ad57bbc-6fd4-46d2-a23f-b4a90d9c004b/runs/0af9a24f-a153-40e3-a2be-e3c5cc4c5145/testoutput/test-support/jtreg_open_test_jdk_tier1_part1/scratch/3/hs_err_pid8269.log&lt;br/&gt;
&lt;br/&gt;
[error occurred during error reporting (), id 0xe0000000, Internal Error (./open/src/hotspot/share/ci/ciMethodData.cpp:693)]&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(37/5960)*----------&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007fc7d2808a00):  JavaThread &amp;quot;C1 CompilerThread0&amp;quot; daemon [_thread_in_vm, id=23043, stack(0x000070000d505000,0x000070000d605000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C1:    622  711       2       java.util.concurrent.ConcurrentHashMap::setTabAt (20 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000070000d505000,0x000070000d605000],  sp=0x000070000d604530,  free space=1021k&lt;br/&gt;
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0x2a9d32]  ciVirtualCallTypeData::translate_from(ProfileData const*)+0x92&lt;br/&gt;
V  [libjvm.dylib+0x2a6aaf]  ciMethodData::load_data()+0x40f&lt;br/&gt;
V  [libjvm.dylib+0x2a2d7c]  ciMethod::ensure_method_data(methodHandle const&amp;amp;)+0x8c&lt;br/&gt;
V  [libjvm.dylib+0x2a2eeb]  ciMethod::ensure_method_data()+0x14b&lt;br/&gt;
V  [libjvm.dylib+0x1d0878]  Compilation::compile_java_method()+0x58&lt;br/&gt;
V  [libjvm.dylib+0x1d0dac]  Compilation::compile_method()+0x11c&lt;br/&gt;
V  [libjvm.dylib+0x1d11d8]  Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)+0x228&lt;br/&gt;
V  [libjvm.dylib+0x1d2851]  Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x61&lt;br/&gt;
V  [libjvm.dylib+0x31bfe2]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x552&lt;br/&gt;
V  [libjvm.dylib+0x31b89a]  CompileBroker::compiler_thread_loop()+0x2ea&lt;br/&gt;
V  [libjvm.dylib+0x9e9e2d]  JavaThread::thread_main_inner()+0xcd&lt;br/&gt;
V  [libjvm.dylib+0x9e8261]  Thread::call_run()+0x71&lt;br/&gt;
V  [libjvm.dylib+0x87ce37]  thread_native_entry(Thread*)+0x157&lt;br/&gt;
C  [libsystem_pthread.dylib+0x6109]  _pthread_start+0x94&lt;br/&gt;
C  [libsystem_pthread.dylib+0x1b8b]  thread_start+0xf&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000001ddf70&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m starting this bug out as a P2 since this is a Tier1 failure.</description>
                <environment></environment>
        <key id="5042166">JDK-8261837</key>
            <summary>SIGSEGV in ciVirtualCallTypeData::translate_from</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dlong">Dean Long</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c1</label>
                            <label>hs-comp-triaged</label>
                            <label>intermittent</label>
                            <label>intermittent-low-frequency</label>
                            <label>jdk17-defer-request</label>
                            <label>jdk17-defer-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-hard</label>
                            <label>oracle-triage-17</label>
                            <label>oracle-triage-21</label>
                            <label>tier1</label>
                    </labels>
                <created>Tue, 16 Feb 2021 08:56:11 -0800</created>
                <updated>Mon, 15 Apr 2024 00:27:40 -0700</updated>
                            <resolved>Mon, 27 Nov 2023 14:03:40 -0800</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14636094" author="roboduke" created="Thu, 21 Dec 2023 12:41:02 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2076&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2076&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-21 20:34:05 +0000</comment>
                            <comment id="14636092" author="goetz" created="Thu, 21 Dec 2023 12:36:40 -0800"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.11-oracle.&lt;br/&gt;
Typical risk of a C2 change. Not big, not trivial, limited to platforms. We should take it to stay on par. &lt;br/&gt;
I had to resolve due to context, code is unchanged. &lt;br/&gt;
I will request a review.&lt;br/&gt;
SAP nightly tessting passed.</comment>
                            <comment id="14635021" author="roboduke" created="Mon, 18 Dec 2023 04:59:39 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/58&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/58&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-18 12:51:02 +0000</comment>
                            <comment id="14635016" author="goetz" created="Mon, 18 Dec 2023 04:50:29 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.3-oracle.&lt;br/&gt;
Typical risk of a C2 change. Not big, not trivial, limited to platforms. We should take it to stay on par.&lt;br/&gt;
Clean backport.&lt;br/&gt;
SAP nightly testing passed.</comment>
                            <comment id="14629304" author="dukebot" created="Mon, 27 Nov 2023 14:03:39 -0800"  >Changeset: 1bb250c9&lt;br/&gt;
Author:    Dean Long &amp;lt;&lt;a href=&apos;mailto:dlong@openjdk.org&apos;&gt;dlong@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-27 22:01:37 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1bb250c9e6b65d1a7a2b90eeb7d6e3a936fb8e8e&quot;&gt;https://git.openjdk.org/jdk/commit/1bb250c9e6b65d1a7a2b90eeb7d6e3a936fb8e8e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14627751" author="roboduke" created="Mon, 20 Nov 2023 14:48:37 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16750&quot;&gt;https://git.openjdk.org/jdk/pull/16750&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-20 22:42:41 +0000</comment>
                            <comment id="14627390" author="dlong" created="Fri, 17 Nov 2023 15:25:28 -0800"  >riscv looks vulnerable as well.</comment>
                            <comment id="14627389" author="dlong" created="Fri, 17 Nov 2023 15:25:13 -0800"  >The could be.  The problem seems to happen most often in the first second.</comment>
                            <comment id="14627106" author="thartmann" created="Thu, 16 Nov 2023 22:12:37 -0800"  >I think it might just be timing, i.e. a side effect of product builds executing faster.</comment>
                            <comment id="14627039" author="dlong" created="Thu, 16 Nov 2023 15:43:56 -0800"  >So far I have come up with a race scenario that requires 3 threads trying to update the slot from its initial state at the same time.  Also, only seeing crashes in product builds so far would seem to point to the C1 LIR_Assembler::emit_profile_type as the problem, because that code has extra debug code that may hide the problem.  However, the debug code is on the &amp;quot;no_conflict&amp;quot; path, which shouldn&amp;#39;t be setting the &amp;quot;type_unknown&amp;quot; status bit.  So I can explain the race but not why it only happens with product builds.</comment>
                            <comment id="14625134" author="thartmann" created="Thu, 9 Nov 2023 00:45:14 -0800"  >Good catch, Dean. The failure only ever triggered in product, so we would need to add the extra checks to product which might then trigger in more cases than the original issue. I think it would be safer to just align the implementations.</comment>
                            <comment id="14625009" author="dlong" created="Wed, 8 Nov 2023 12:26:08 -0800"  >In the latest crash on linux-aarch64, the bad value is 0xb97b, which has the low bits type_unknown and null_seen set.  Looking at InterpreterMacroAssembler::profile_obj_type, it looks like there is a race there.  The type_unknown and null_seen bits are not set atomically on Aarch64 and x86 (ppc64 and s390 look OK).  Aarch64 and x86 do an XOR of the previously stored Klass* with the current Klass*, then later store the XORed result.  This only works if the previously stored Klass* was 0.  However, the code does not check the loaded value that was used in the XOR against 0.  Instead it reloads the value from memory.  This is unsafe because concurrent read-OR-write updates to the slot for type_unknown and null_seen allow it to become temporarily non-zero.  Or that&amp;#39;s my theory at least.  If we rewrite the Aarch64/x86 code to match ppc64/s390, I think this crash will go away.  To convince ourselves this is the problem, we could add extra sanity checks to the Aarch64/x86 code.</comment>
                            <comment id="14611712" author="dholmes" created="Sun, 17 Sep 2023 18:58:10 -0700"  >This crash is appearing with virtual threads in JDK 22.</comment>
                            <comment id="14591258" author="dholmes" created="Thu, 22 Jun 2023 00:26:58 -0700"  >The same failure mode has just been reported in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8310583&quot; title=&quot;java/lang/Thread/virtual/stress/Skynet.java#id0 fails with SEGV&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8310583&quot;&gt;&lt;strike&gt;JDK-8310583&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14579303" author="thartmann" created="Fri, 5 May 2023 01:09:42 -0700"  >Agreed. Closed as Cannot Reproduce.</comment>
                            <comment id="14579194" author="dlong" created="Thu, 4 May 2023 13:18:29 -0700"  >Let&amp;#39;s close it as Cannot Reproduce.</comment>
                            <comment id="14578500" author="thartmann" created="Tue, 2 May 2023 22:35:35 -0700"  >Igor, Dean, any suggestions on how to move forward with this? Would it make sense to add some additional guarantees to catch it earlier?&lt;br/&gt;
&lt;br/&gt;
Otherwise, I guess we can only close this as Cannot Reproduce again.</comment>
                            <comment id="14572521" author="dlong" created="Fri, 7 Apr 2023 12:52:19 -0700"  >According to the core dump, the Klass* we loaded from the TypeStackSlotEntries entry 1 was bad.  The replay file is truncated because the replay dump crashed trying to the dump the same ciMethodData being processed when ciMethodData::load_data() crashed.&lt;br/&gt;
All of the crashes seem to be in product builds.  If it was a debug build, we would probably get an useful assert before crashing.</comment>
                            <comment id="14572441" author="dcubed" created="Fri, 7 Apr 2023 06:46:19 -0700"  >Here&amp;#39;s a log file snippet from the jdk-21+18-1438-tier1 sighting:&lt;br/&gt;
&lt;br/&gt;
jdk/internal/jimage/JImageOpenTest.java&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(6/286)----------&lt;br/&gt;
command: main -Djdk.image.map.all=false JImageOpenTest&lt;br/&gt;
reason: User specified action: run main/othervm -Djdk.image.map.all=false JImageOpenTest &lt;br/&gt;
started: Fri Apr 07 10:35:45 UTC 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
finished: Fri Apr 07 10:35:55 UTC 2023&lt;br/&gt;
elapsed time (seconds): 9.76&lt;br/&gt;
----------configuration:(0/0)----------&lt;br/&gt;
----------System.out:(20/1529)----------&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f629c737210, pid=2111786, tid=2111807&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+18) (build 21-ea+18-LTS-1438)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21-ea+18-LTS-1438, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x595210]  ciTypeStackSlotEntries::translate_type_data_from(TypeStackSlotEntries const*)+0x50&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S41093/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/f35ab63b-24bf-4cde-b45f-34bda7e7235a/runs/555234f7-baa2-497d-8c4f-e4563ba8601d/testoutput/test-support/jtreg_open_test_jdk_tier1_part1/scratch/3/core.2111786)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S41093/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/f35ab63b-24bf-4cde-b45f-34bda7e7235a/runs/555234f7-baa2-497d-8c4f-e4563ba8601d/testoutput/test-support/jtreg_open_test_jdk_tier1_part1/scratch/3/hs_err_pid2111786.log&lt;br/&gt;
&lt;br/&gt;
[error occurred during error reporting (), id 0xe0000000, Internal Error (open/src/hotspot/share/ci/ciMethodData.cpp:701)]&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(37/5755)*----------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f629420e0f0):  JavaThread &amp;quot;C1 CompilerThread0&amp;quot; daemon [_thread_in_vm, id=2111807, stack(0x00007f629872c000,0x00007f629882d000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C1:    447  829       2       java.util.concurrent.ConcurrentHashMap::setTabAt (20 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f629872c000,0x00007f629882d000],  sp=0x00007f629882ae00,  free space=1019k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x595210]  ciTypeStackSlotEntries::translate_type_data_from(TypeStackSlotEntries const*)+0x50  (klass.inline.hpp:52)&lt;br/&gt;
V  [libjvm.so+0x5986bb]  ciVirtualCallTypeData::translate_from(ProfileData const*)+0x10b  (ciMethodData.hpp:267)&lt;br/&gt;
V  [libjvm.so+0x595f2f]  ciMethodData::load_data()+0x57f  (ciMethodData.cpp:235)&lt;br/&gt;
V  [libjvm.so+0x5935f8]  ciMethod::ensure_method_data()+0x168  (ciMethod.cpp:1005)&lt;br/&gt;
V  [libjvm.so+0x49dcbb]  Compilation::compile_java_method()+0x3b  (c1_Compilation.cpp:383)&lt;br/&gt;
V  [libjvm.so+0x49e1c2]  Compilation::compile_method()+0x112  (c1_Compilation.cpp:473)&lt;br/&gt;
V  [libjvm.so+0x49e58b]  Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)+0x20b  (c1_Compilation.cpp:600)&lt;br/&gt;
V  [libjvm.so+0x49f3d1]  Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0xb1  (c1_Compiler.cpp:258)&lt;br/&gt;
V  [libjvm.so+0x626a47]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa87  (compileBroker.cpp:2265)&lt;br/&gt;
V  [libjvm.so+0x627958]  CompileBroker::compiler_thread_loop()+0x6a8  (compileBroker.cpp:1944)&lt;br/&gt;
V  [libjvm.so+0x8d5c68]  JavaThread::thread_main_inner() [clone .part.0]+0xb8  (javaThread.cpp:717)&lt;br/&gt;
V  [libjvm.so+0xe73f06]  Thread::call_run()+0xa6  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0xc9c8f8]  thread_native_entry(Thread*)+0xd8  (os_linux.cpp:740)&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000000fa4c0&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
[~thartmann] - This time the failure is on linux-x64, the replay file looks rather long and&lt;br/&gt;
MDash says there&amp;#39;s a core file. Hopefully someone on the compiler team can investigate&lt;br/&gt;
before the core file ages out of MDash...</comment>
                            <comment id="14460518" author="thartmann" created="Wed, 24 Nov 2021 00:00:29 -0800"  >I&amp;#39;m closing this again because there is not enough information to investigate further. Please re-open and set the fix version accordingly (P2 bugs should not be set to &amp;#39;tbd&amp;#39;) once this reproduces again and there is more information (core file etc.) available.</comment>
                            <comment id="14456981" author="kvn" created="Fri, 5 Nov 2021 14:26:39 -0700"  >Got similar crash today while testing my changes. Replay file is cut short - useless. I attached h_err and replay files. Filed test on macosx-x64:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/vm/gc/containers/ConcurrentHashMap_Arrays/TestDescription.java</comment>
                            <comment id="14428968" author="iveresov" created="Mon, 21 Jun 2021 09:37:28 -0700"  >Deferral Request&lt;br/&gt;
&lt;br/&gt;
Multiple people looked at this issue and we can&amp;#39;t figure out what might going wrong. This issue reproduced only two times in the course of 6 months. I&amp;#39;ve tried reproducing this with the original options and in every stress mode I could imagine, I haven&amp;#39;t had any luck with over 10,000 runs. Without a working reproducer or even a core file it&amp;#39;s hard to make further progress. Therefore, I&amp;#39;m proposing to defer this issue and wait for another crash - perhaps it&amp;#39;s going to give us more information.</comment>
                            <comment id="14428936" author="roland" created="Mon, 21 Jun 2021 07:13:49 -0700"  >[~iveresov] nope, no idea unfortunately</comment>
                            <comment id="14428847" author="iveresov" created="Sun, 20 Jun 2021 21:48:37 -0700"  >[~roland] Ronald, as the original author of this, perhaps you would have have some insight in what can be wrong here?&lt;br/&gt;
The crash location is in ciVirtualCallTypeData::translate_from(), around this code:&lt;br/&gt;
if (has_arguments()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;args()-&amp;gt;translate_type_data_from(data-&amp;gt;as_VirtualCallTypeData()-&amp;gt;args());&lt;br/&gt;
}&lt;br/&gt;
In particular, we go into ciTypeStackSlotEntries::translate_type_data_from() and there we crash while attempting to do klass-&amp;gt;is_loader_alive(), because the klass value is corrupted. It almost looks like the upper 32bits had been zeroed.</comment>
                            <comment id="14412586" author="thartmann" created="Sun, 11 Apr 2021 23:25:10 -0700"  >Set Status to &amp;quot;Closed&amp;quot;. Status &amp;quot;Resolved&amp;quot; should only be used if the bug was fixed and there is an actual changeset.</comment>
                            <comment id="14412474" author="iveresov" created="Fri, 9 Apr 2021 14:55:06 -0700"  >Looks like a memory corruption issue. Happened only once. Cannot reproduce.</comment>
                            <comment id="14408998" author="iveresov" created="Tue, 23 Mar 2021 21:37:09 -0700"  >So, the assert during the replay is because ciMethod::method_data_or_null() returns a NULL when the MDO has a state that is empty. That can&amp;#39;t happen normally, but during a replay it can if the serialized MDO is corrupted. That&amp;#39;s easy to fix, ciMethod::ensure_method_data() should return false in this case. However, I still can&amp;#39;t figure out what could&amp;#39;ve caused the original problem (except a memory glitch).</comment>
                            <comment id="14401660" author="thartmann" created="Thu, 18 Feb 2021 00:01:39 -0800"  >Might be related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8251462&quot; title=&quot;Simplify compilation policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8251462&quot;&gt;&lt;strike&gt;JDK-8251462&lt;/strike&gt;&lt;/a&gt;. [~iveresov], any ideas?</comment>
                            <comment id="14401659" author="thartmann" created="Thu, 18 Feb 2021 00:00:58 -0800"  >ILW = Crash during C1 compilation due to missing/corrupted method data, only showed up once, no workaround but disable profiling = HLH = P2</comment>
                            <comment id="14401658" author="thartmann" created="Wed, 17 Feb 2021 23:58:07 -0800"  >The replay file only contains a single line:&lt;br/&gt;
ciMethodData java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V 0 0 orig 80 0 0 0 0 0 0 0 0 0 0 0 0 21 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 data 23 0x10000b 0x4 0x0 0x0 0x0 0x0 0x0 0x4 0x1 0x7fc7d20235c0 0x4 0x1 0x7fc7d38614e8 0x7fc7d3862600 0x0 0x4000 0x50000000000 0x200000000 0x0 0x1fc144000 0x0 0x200000000 0xc oops 1 9 [Ljava/util/concurrent/ConcurrentHashMap$Node;&lt;br/&gt;
&lt;br/&gt;
Adding the corresponding compile statement manually:&lt;br/&gt;
compile java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V -1 2&lt;br/&gt;
&lt;br/&gt;
Leads to &lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/oracle/jdk/open/src/hotspot/share/c1/c1_IR.cpp:548), pid=394331, tid=394345&lt;br/&gt;
#  assert(md != __null) failed: Sanity&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C1:    240   24    b  2       java.util.concurrent.ConcurrentHashMap::setTabAt (20 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f6f46a33000,0x00007f6f46b34000],  sp=0x00007f6f46b31f20,  free space=1019k&lt;br/&gt;
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x73bd4c]  ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*)+0x5fc&lt;br/&gt;
V  [libjvm.so+0x73bd99]  IR::compute_code()+0x39&lt;br/&gt;
V  [libjvm.so+0x6fd35e]  Compilation::build_hir() [clone .part.0]+0x40e&lt;br/&gt;
V  [libjvm.so+0x701b6c]  Compilation::compile_java_method()+0x1bc&lt;br/&gt;
V  [libjvm.so+0x702980]  Compilation::compile_method()+0x1d0&lt;br/&gt;
V  [libjvm.so+0x70339b]  Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)+0x36b&lt;br/&gt;
V  [libjvm.so+0x7047c3]  Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x1a3&lt;br/&gt;
V  [libjvm.so+0xa1de21]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xea1&lt;br/&gt;
V  [libjvm.so+0xa1eaa8]  CompileBroker::compiler_thread_loop()+0x5a8&lt;br/&gt;
V  [libjvm.so+0x18409c6]  JavaThread::thread_main_inner()+0x256&lt;br/&gt;
V  [libjvm.so+0x1846e40]  Thread::call_run()+0x100&lt;br/&gt;
V  [libjvm.so+0x1532ff6]  thread_native_entry(Thread*)+0x116&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5116869">JDK-8321955</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116871">JDK-8321957</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117676">JDK-8322626</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117782">JDK-8322728</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5122034">JDK-8326356</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5103816">JDK-8310583</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5111922">JDK-8317691</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                                        </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="106739" name="hs_err_pid39388.log" size="70556" author="thartmann" created="Sun, 8 Oct 2023 22:14:16 -0700"/>
                            <attachment id="94740" name="hs_err_pid8103.log" size="100119" author="iveresov" created="Sun, 23 May 2021 11:57:36 -0700"/>
                            <attachment id="96939" name="hs_err_pid84796.log" size="143541" author="kvn" created="Fri, 5 Nov 2021 14:25:44 -0700"/>
                            <attachment id="106738" name="replay_pid39388.log" size="409575" author="thartmann" created="Sun, 8 Oct 2023 22:14:19 -0700"/>
                            <attachment id="94739" name="replay_pid8103.log" size="649" author="iveresov" created="Sun, 23 May 2021 11:57:35 -0700"/>
                            <attachment id="96938" name="replay_pid84796.log" size="834" author="kvn" created="Fri, 5 Nov 2021 14:25:40 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    <customfieldvalue key="20300"><![CDATA[riscv]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2rli3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>