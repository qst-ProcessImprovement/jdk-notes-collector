<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:59:03 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307840] SequencedMap view method specification and implementation adjustments</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307840</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Observed that SequencedMap : SequencedXXX   default methods implementation requirements  not correctly matching the behavior :&lt;br/&gt;
&lt;br/&gt;
For example :&lt;br/&gt;
&#8220;Implementation Requirements:&lt;br/&gt;
The implementation in this interface returns a SequencedSet implementation that delegates all operations either to this map or to this map&amp;#39;s Map.keySet(), except for its reversed method, which instead returns the result of calling sequencedKeySet on this map&amp;#39;s reverse-ordered view.&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
Use case &#8211; invoking the &#8220;add&#8221; on the returned SequencedSet  &lt;br/&gt;
Expected &#8211;  invocation of &#8220;add&#8221; method on instance returned by Map.keySet().&lt;br/&gt;
Actual - java.lang.UnsupportedOperationException&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5100614">JDK-8307840</key>
            <summary>SequencedMap view method specification and implementation adjustments</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="smarks">Stuart Marks</assignee>
                                    <reporter username="kganapureddy">Krushnareddy Ganapureddy</reporter>
                        <labels>
                            <label>conformance</label>
                    </labels>
                <created>Wed, 10 May 2023 09:00:15 -0700</created>
                <updated>Mon, 12 Jun 2023 20:49:37 -0700</updated>
                            <resolved>Tue, 6 Jun 2023 10:04:37 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14587406" author="dukebot" created="Tue, 6 Jun 2023 10:04:35 -0700"  >Changeset: 95261908&lt;br/&gt;
Author:    Stuart Marks &amp;lt;&lt;a href=&apos;mailto:smarks@openjdk.org&apos;&gt;smarks@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-06 17:02:32 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/952619086358326c2fb3fcbada654fc2edd09f07&quot;&gt;https://git.openjdk.org/jdk/commit/952619086358326c2fb3fcbada654fc2edd09f07&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14586436" author="roboduke" created="Thu, 1 Jun 2023 13:34:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14267&quot;&gt;https://git.openjdk.org/jdk/pull/14267&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-01 16:18:12 +0000</comment>
                            <comment id="14586123" author="smarks" created="Wed, 31 May 2023 13:43:36 -0700"  >I&amp;#39;m adjusting the specification and implementing it as described in the &amp;quot;Alternatively&amp;quot; paragraph of my earlier comment. That is, the map&amp;#39;s corresponding non-sequenced view collection is obtained each time instead of caching it at creation time.</comment>
                            <comment id="14580726" author="smarks" created="Wed, 10 May 2023 21:02:37 -0700"  >[~kganapureddy] Yes these spec changes will definitely be covered by a CSR.</comment>
                            <comment id="14580723" author="kganapureddy" created="Wed, 10 May 2023 20:47:17 -0700"  >[~smarks] I believe these spec changes would be part of CSR ?</comment>
                            <comment id="14580586" author="smarks" created="Wed, 10 May 2023 09:17:11 -0700"  >This applies to the three SequencedMap methods that return sequenced views, namely, sequencedKeySet(), sequencedValues(), and sequencedEntrySet().&lt;br/&gt;
&lt;br/&gt;
The implementation requirements for all of them should state:&lt;br/&gt;
&lt;br/&gt;
* a reference to the corresponding non-sequenced view of the underlying map is obtained once via the appropriate method&lt;br/&gt;
&lt;br/&gt;
* methods add() and addAll() throw UnsupportedOperationException&lt;br/&gt;
&lt;br/&gt;
* the reversed() method calls reversed() on the underlying map and then returns the result of calling sequencedX() on the reversed view&lt;br/&gt;
&lt;br/&gt;
* all other methods are delegated to the corresponding method of the non-sequenced view previously obtained.&lt;br/&gt;
&lt;br/&gt;
Alternatively, instead of obtaining a reference to the underlying view collection once and reusing it, it might be better to obtain the underlying view collection each time. Most implementations will cache and return the same object; but fetching it each time gives more flexibility to the underlying implementation. This is not only a spec change but a slight change in behavior. It should be specified though so that implementations can rely on these behaviors.&lt;br/&gt;
&lt;br/&gt;
This could be accomplished by changing the view field of AbstractMap.ViewCollection into an abstract view() method returning Collection&amp;lt;E&amp;gt;, removing the constructor argument, and adjusting the delegating methods&amp;#39; implementations.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5067281">JDK-8280836</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5102257">JDK-8309239</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31gwj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="669"><![CDATA[java.util:collections]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>