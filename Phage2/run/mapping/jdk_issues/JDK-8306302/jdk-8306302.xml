<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:39:06 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306302] C2 Superword fix: use VectorMaskCmp and VectorBlend instead of CMoveVF/D</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306302</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I found this during work of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306088&quot; title=&quot;C2 Superword: verify consistency of packset and my_pack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8306088&quot;&gt;&lt;strike&gt;JDK-8306088&lt;/strike&gt;&lt;/a&gt; / &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8304720&quot; title=&quot;SuperWord::schedule should rebuild C2-graph from SuperWord dependency-graph&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8304720&quot;&gt;&lt;strike&gt;JDK-8304720&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
With appended Test.java run like this:&lt;br/&gt;
&lt;br/&gt;
./java -Xcomp -XX:CompileCommand=compileonly,Test::test -XX:+TraceLoopOpts -XX:+UseVectorCmov -XX:+UseCMoveUnconditionally -XX:+TraceSuperWord -XX:MaxVectorSize=32 -XX:+TraceNewVectors Test.java&lt;br/&gt;
&lt;br/&gt;
I get:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/home/emanuel/Documents/fork7-jdk/open/src/hotspot/share/opto/node.hpp:392), pid=21814, tid=21831&lt;br/&gt;
#  assert(i &amp;lt; _max) failed: oob: i=1, _max=1&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0) (slowdebug build 21-internal-LTS-2023-04-17-1039212.emanuel...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (slowdebug 21-internal-LTS-2023-04-17-1039212.emanuel..., compiled mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x416445]  Node::in(unsigned int) const+0x41&lt;br/&gt;
&lt;br/&gt;
Note: the body of the loop can contain the equals check, or non-equals - it fails for both:&lt;br/&gt;
dataFc[i] = (dataFa[i] == dataFb[i]) ? dataFa[i] : dataFb[i];&lt;br/&gt;
dataFc[i] = (dataFa[i] != dataFb[i]) ? dataFa[i] : dataFb[i];&lt;br/&gt;
&lt;br/&gt;
My guess is that something is wrong with the &amp;quot;EQ/NEQ tests (cmpOpUCF2)&amp;quot; in x86.</description>
                <environment></environment>
        <key id="5098743">JDK-8306302</key>
            <summary>C2 Superword fix: use VectorMaskCmp and VectorBlend instead of CMoveVF/D</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="epeter">Emanuel Peter</reporter>
                        <labels>
                            <label>c2</label>
                            <label>c2-superword</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Tue, 18 Apr 2023 07:35:55 -0700</created>
                <updated>Thu, 3 Aug 2023 15:54:49 -0700</updated>
                            <resolved>Wed, 24 May 2023 00:02:30 -0700</resolved>
                                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14584003" author="dukebot" created="Wed, 24 May 2023 00:02:29 -0700"  >Changeset: beb75e65&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-24 07:00:27 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/beb75e651f1e4a9bd21f611f9abc7ca28afbae31&quot;&gt;https://git.openjdk.org/jdk/commit/beb75e651f1e4a9bd21f611f9abc7ca28afbae31&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14580070" author="roboduke" created="Mon, 8 May 2023 23:19:24 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13493&quot;&gt;https://git.openjdk.org/jdk/pull/13493&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-17 13:14:37 +0000</comment>
                            <comment id="14579078" author="JIRAUSER19821" created="Thu, 4 May 2023 06:39:42 -0700"  >I know what the problem is with Test2.java&lt;br/&gt;
The code in this function is wrong:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/commit/0485593fbc4a3264b79969de192e8e7d36e5b590#diff-7070c036c7d88ba4a8467e404d8d88aee646b97bf7bacc8b73cbc93f3ef11d2dR2097&quot;&gt;https://github.com/openjdk/jdk/commit/0485593fbc4a3264b79969de192e8e7d36e5b590#diff-7070c036c7d88ba4a8467e404d8d88aee646b97bf7bacc8b73cbc93f3ef11d2dR2097&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
To understand this, we must know that:&lt;br/&gt;
CmpF a b&lt;br/&gt;
Is based on the java byte-code &amp;quot;fcmpl&amp;quot;. It returns -1 if any operand is NaN.&lt;br/&gt;
-1: b larger or any NaN&lt;br/&gt;
0: a equals b&lt;br/&gt;
1: a is larger&lt;br/&gt;
&lt;br/&gt;
In our example java code, we have:&lt;br/&gt;
r[i] = (a[i] &amp;gt; b[i]) ? a[i] : b[i];&lt;br/&gt;
&lt;br/&gt;
This means we would like to have a[i], iff &amp;quot;a[i] GT_OQ b[i]&amp;quot;.&lt;br/&gt;
(O for ordered means that if there is a NaN, we have false -&amp;gt; b[i])&lt;br/&gt;
Inversely, we could also say we want b[i] iff &amp;quot;a[i] LE_UQ b[i]&amp;quot;.&lt;br/&gt;
(Unordered means that if there is a NaN,  we get true -&amp;gt; b[i])&lt;br/&gt;
Note:&lt;br/&gt;
LE_UQ == NGT_UQ&lt;br/&gt;
(Q stands for Quiet, S for signaling. The difference is if we want to signal for a jump, or not signal because we are computing a mask)&lt;br/&gt;
&lt;br/&gt;
javac turns this into that:&lt;br/&gt;
load a[i]&lt;br/&gt;
load b[i]&lt;br/&gt;
fcmpl&lt;br/&gt;
if_le:    load b[i]&lt;br/&gt;
else:    load a[i]&lt;br/&gt;
store r[i]&lt;br/&gt;
&lt;br/&gt;
So if cmpl returns -1 or 0, we take b[i], and we only take a[i] if it is larger (and no NaN).&lt;br/&gt;
&lt;br/&gt;
Note: the &amp;quot;le&amp;quot; does not mean we compare &amp;quot;a le b&amp;quot;.&lt;br/&gt;
It means that the return code of &amp;quot;fcmpl&amp;quot; is &amp;quot;le = [-1, 0]&amp;quot;.&lt;br/&gt;
The only difference here is with NaN&amp;#39;s.&lt;br/&gt;
If we have a NaN:&lt;br/&gt;
&amp;quot;a &amp;lt;= b&amp;quot; -&amp;gt; false (any comparison with NaN is false)&lt;br/&gt;
&amp;quot;a &amp;gt; b&amp;quot; -&amp;gt; false&lt;br/&gt;
CmpF a b [le] -&amp;gt; true (fcmpl returns -1, and that is in le)&lt;br/&gt;
&lt;br/&gt;
The code in &amp;quot;cmpOp_vcmppd&amp;quot; is wrong, here an example:&lt;br/&gt;
Imagine we had a pattern like this:&lt;br/&gt;
CmpF a b&lt;br/&gt;
Bool [le]&lt;br/&gt;
&lt;br/&gt;
We turn this into a:&lt;br/&gt;
CMoveVF a b [le]&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;cmpOp_vcmppd&amp;quot; now maps the &amp;quot;copnd == le&amp;quot;:&lt;br/&gt;
int cond = (Assembler::Condition)($copnd$$cmpcode);&lt;br/&gt;
This is somehow metaprogrammed to go from &amp;quot;cmpcode&amp;quot; -&amp;gt; &amp;quot;ccode&amp;quot; -&amp;gt; &amp;quot;COND_INTER&amp;quot; in &amp;quot;cmpOp_vcmppd&amp;quot;.&lt;br/&gt;
So we map &amp;quot;le&amp;quot; -&amp;gt; &amp;quot;less_equal&amp;quot; -&amp;gt; 0x2&lt;br/&gt;
In &amp;quot;enum ComparisonPredicateFP&amp;quot;, this equates to &amp;quot;LE_OS&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
But form what I stated above, it should be &amp;quot;LE_UQ == NGT_UQ&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Generally, I&amp;#39;m not sure why &amp;quot;cmpOp_vcmppd&amp;quot; has a mix of S and Q.&lt;br/&gt;
Generally, I think the person who wrote it thought that &amp;quot;Bool le&amp;quot; translates to &amp;quot;LE_OQ&amp;quot; directly, and forgot that &amp;quot;le&amp;quot; is on the return code of CmpF.&lt;br/&gt;
&lt;br/&gt;
Once I replcaed the code there with &amp;quot;NGT_UQ&amp;quot;, my Test2.java passes.&lt;br/&gt;
&lt;br/&gt;
Let&amp;#39;s play the same game with a few more examples:&lt;br/&gt;
&amp;quot;eq&amp;quot;: &amp;quot;CmpF a b == 0&amp;quot;: equal, no NaN : EQ_OQ (that was correct)&lt;br/&gt;
&amp;quot;lt&amp;quot;: less-than or NaN: LT_UQ (was wrong, had LT_OS)&lt;br/&gt;
&amp;quot;le&amp;quot;: less-equal or NaN: LE_UQ (was wrong, had LE_OS)&lt;br/&gt;
&amp;quot;ne&amp;quot;: not-equal or NaN: NEQ_UQ (was wrong, had NEQ_OQ)&lt;br/&gt;
&amp;quot;ge&amp;quot;: greater or equal, no NaN: GE_OQ (was close enough with GE_OS)&lt;br/&gt;
&amp;quot;gt&amp;quot;: greater, no NaN: GT_OQ (was close enough with GT_OS)&lt;br/&gt;
&lt;br/&gt;
This was a great exercise.&lt;br/&gt;
But I will delete this code anyway, with the removal of &amp;quot;CMoveVF/D&amp;quot;.&lt;br/&gt;
But I will have to handle similar cases when going from &amp;quot;Cmp Bool&amp;quot; -&amp;gt; &amp;quot;VectorMaskCmp&amp;quot;, since the vector compare turns all compares into OQ (except NE), see &amp;quot;booltest_pred_to_comparison_pred_fp&amp;quot;.</comment>
                            <comment id="14578958" author="JIRAUSER19821" created="Wed, 3 May 2023 23:26:08 -0700"  >I found a new issue: SuperWord gets the comparisons with NaN wrong (UseVectorCmov).&lt;br/&gt;
&lt;br/&gt;
./java -Xbatch -XX:CompileCommand=compileonly,Test2::test -XX:+TraceLoopOpts -XX:+UseVectorCmov -XX:+UseCMoveUnconditionally -XX:+TraceSuperWord -XX:+TraceNewVectors -XX:+Verbose -XX:UseAVX=2 -XX:MaxVectorSize=32 Test2.java&lt;br/&gt;
&lt;br/&gt;
This seems also to happen with JDK17, have not tested it further back.</comment>
                            <comment id="14577555" author="JIRAUSER19821" created="Thu, 27 Apr 2023 23:45:50 -0700"  >Thanks [~fgao] for the hints. I will have a look at it. It would be nice if we could even extend the logic to use different arguments for the &amp;quot;VectorMaskCmp&amp;quot; than for the &amp;quot;VectorBlend&amp;quot;. I will see what I can do. I&amp;#39;ll have to learn a bit more about how the matcher rules work.</comment>
                            <comment id="14574945" author="JIRAUSER19807" created="Tue, 18 Apr 2023 20:30:45 -0700"  >Hi [~epeter], thanks for your analysis!&lt;br/&gt;
&lt;br/&gt;
The restructure in matching here, &lt;a href=&quot;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/share/opto/matcher.cpp#L2394,&quot;&gt;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/share/opto/matcher.cpp#L2394,&lt;/a&gt; is to follow the original design in x86 here: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/cpu/x86/x86.ad#L5970&quot;&gt;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/cpu/x86/x86.ad#L5970&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Well, as we can see, the info of BoolNode and BoolTest mask are duplicate whether from semantics side or ideal graph side. For aarch64, no Cmp is needed here and only a constant would be enough: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/cpu/aarch64/aarch64_vector.ad#L5881&quot;&gt;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/cpu/aarch64/aarch64_vector.ad#L5881&lt;/a&gt;. So, I don&amp;#39;t know if x86 could construct the info of current BoolNode based on the constant in the backend. If yes, then we can drop the restructuring in matching and keep a constant only, like:&lt;br/&gt;
`match(Set dst (CMoveVF cond (Binary src1 src2)));`. &lt;br/&gt;
Thus, the error here won&amp;#39;t exist naturally, I suppose, and the code would be clean as well.&lt;br/&gt;
&lt;br/&gt;
Also, the semantics of `CMoveVF` is perfectly composed of `VectorMaskCmp` + `VectorBlend`. It&amp;#39;s fine for aarch64 to implement `CMoveVF` by `VectorMaskCmp` + `VectorBlend` separately. I don&amp;#39;t know if it&amp;#39;s okay for x86. If yes, we can implement it in the mid-end and clean rules for `CMoveVF` in the backend.&lt;br/&gt;
&lt;br/&gt;
Thanks.</comment>
                            <comment id="14574720" author="JIRAUSER19821" created="Tue, 18 Apr 2023 08:43:23 -0700"  >This is in the way of adding more CMove tests for SuperWord:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/pull/13493&quot;&gt;https://github.com/openjdk/jdk/pull/13493&lt;/a&gt;</comment>
                            <comment id="14574717" author="thartmann" created="Tue, 18 Apr 2023 08:41:35 -0700"  >The &amp;quot;modified node is not on IGVN._worklist&amp;quot; assert first reproduces after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8255665&quot; title=&quot;C2 should aggressively remove temporary hook nodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8255665&quot;&gt;&lt;strike&gt;JDK-8255665&lt;/strike&gt;&lt;/a&gt; in JDK 16.</comment>
                            <comment id="14574711" author="JIRAUSER19821" created="Tue, 18 Apr 2023 08:37:35 -0700"  >The assert gets triggered in the code from this change: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8285973&quot; title=&quot;x86_64: Improve fp comparison and cmove for eq/ne&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8285973&quot;&gt;&lt;strike&gt;JDK-8285973&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
On this line:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/commit/c1db70d827f7ac81aa6c6646e2431f672c71c8dc#diff-e5266a3774f26ac663dcc67e0be18608b1735f38c0576673ce36e0cd689bab4aR4309&quot;&gt;https://github.com/openjdk/jdk/commit/c1db70d827f7ac81aa6c6646e2431f672c71c8dc#diff-e5266a3774f26ac663dcc67e0be18608b1735f38c0576673ce36e0cd689bab4aR4309&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
[~sviswanathan] [~qamai] it seems you two are familiar with this code. Would you want to look at it?&lt;br/&gt;
&lt;br/&gt;
From what I see, the issue is this:&lt;br/&gt;
The problematic line wants to find a Cmp above the Bool, and compare its inputs. But we have no Cmp there, just a constant, that we have set during matching:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/share/opto/matcher.cpp#L2394&quot;&gt;https://github.com/openjdk/jdk/blob/af4d5600e37ec6d331e62c5d37491ee97cad5311/src/hotspot/share/opto/matcher.cpp#L2394&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8289422&quot; title=&quot;Fix and re-enable vector conditional move&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8289422&quot;&gt;&lt;strike&gt;JDK-8289422&lt;/strike&gt;&lt;/a&gt; is also related [~fgao] [~pli].</comment>
                            <comment id="14574686" author="thartmann" created="Tue, 18 Apr 2023 07:53:30 -0700"  >ILW = Assert during C2 compilation, reproducible with targeted test and UseVectorCmov (non-default), disable superword or compilation of affected method = HLM = P3</comment>
                            <comment id="14574685" author="thartmann" created="Tue, 18 Apr 2023 07:50:36 -0700"  >With JDK 16 - JDK 19, we hit:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (workspace/open/src/hotspot/share/opto/phaseX.cpp:1074), pid=3222333, tid=3222346&lt;br/&gt;
#  fatal error: modified node is not on IGVN._worklist&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (16.0+25) (fastdebug build 16-ea+25-1626)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 16-ea+25-1626, compiled mode, sharing, tiered, compressed oops, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x15eb5b0]  PhaseIterGVN::init_verifyPhaseIterGVN()+0x140&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5098515">JDK-8306088</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5106930">JDK-8313345</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5099529">JDK-8306922</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5101796">JDK-8308841</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5073945">JDK-8285973</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5078137">JDK-8289422</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5096884">JDK-8304720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5107381">JDK-8313720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5102289">JDK-8309268</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103474" name="Test.java" size="771" author="epeter" created="Tue, 18 Apr 2023 07:36:14 -0700"/>
                            <attachment id="103697" name="Test2.java" size="1864" author="epeter" created="Wed, 3 May 2023 23:26:00 -0700"/>
                            <attachment id="103475" name="hs_err_pid22009.log" size="61909" author="epeter" created="Tue, 18 Apr 2023 07:37:01 -0700"/>
                            <attachment id="103476" name="replay_pid22009.log" size="249146" author="epeter" created="Tue, 18 Apr 2023 07:37:03 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i315sb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>