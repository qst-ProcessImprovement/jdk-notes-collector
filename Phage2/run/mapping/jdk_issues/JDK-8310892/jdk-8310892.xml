<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:31:41 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8310892] ScopedValue throwing StructureViolationException should be clearer</title>
                <link>https://bugs.openjdk.org/browse/JDK-8310892</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Java SE 21 &amp;amp; JDK 21&lt;br/&gt;
DRAFT 21-ea+28-LTS-2377&lt;br/&gt;
&lt;br/&gt;
Many method&amp;#39;s specs in j.l.ScopedValue+Carrier contain the following assertion&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Once closed, StructureViolationException is thrown.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
e.g. &lt;a href=&quot;https://download.java.net/java/early_access/jdk21/docs/api/java.base/java/lang/ScopedValue.Carrier.html#call(java.util.concurrent.Callable)&quot;&gt;https://download.java.net/java/early_access/jdk21/docs/api/java.base/java/lang/ScopedValue.Carrier.html#call(java.util.concurrent.Callable)&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
As experiments show it seems the spec should mention IllegalStateException instead of StructureViolationException&lt;br/&gt;
&lt;br/&gt;
UPD: this original note above is based on reading of the following block that is repeated 6 times in the specs for j.l.ScopedValue+Carrier methods&lt;br/&gt;
&lt;br/&gt;
========&lt;br/&gt;
Scoped values are intended to be used in a structured manner. If op creates a StructuredTaskScope but does not close it, then exiting op causes the underlying construct of each StructuredTaskScope created in the dynamic scope to be closed. This may require blocking until all child threads have completed their sub-tasks. The closing is done in the reverse order that they were created. Once closed, StructureViolationException is thrown.&lt;br/&gt;
========&lt;br/&gt;
&lt;br/&gt;
The last sentence could give an impression that it&amp;#39;s the scope instance which is throwing StructureViolationException when we are calling, say, StructuredTaskScope::fork after the scope is closed, - while it&amp;#39;s throwing IllegalStateException. &lt;br/&gt;
&lt;br/&gt;
Actually the carrier&amp;#39;s methods are expected to throw StructureViolationException if STS was not properly closed by the op.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5104151">JDK-8310892</key>
            <summary>ScopedValue throwing StructureViolationException should be clearer</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="alanb">Alan Bateman</assignee>
                                    <reporter username="dbessono">Dmitry Bessonov</reporter>
                        <labels>
                            <label>conformance</label>
                            <label>hgupdate-sync</label>
                            <label>loom</label>
                            <label>noreg-doc</label>
                    </labels>
                <created>Mon, 26 Jun 2023 05:27:10 -0700</created>
                <updated>Tue, 25 Jul 2023 04:33:44 -0700</updated>
                            <resolved>Mon, 10 Jul 2023 05:35:07 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14595082" author="roboduke" created="Tue, 11 Jul 2023 10:38:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21/pull/113&quot;&gt;https://git.openjdk.org/jdk21/pull/113&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-11 17:21:13 +0000</comment>
                            <comment id="14594740" author="dukebot" created="Mon, 10 Jul 2023 05:35:06 -0700"  >Changeset: 623cfcd0&lt;br/&gt;
Author:    Alan Bateman &amp;lt;&lt;a href=&apos;mailto:alanb@openjdk.org&apos;&gt;alanb@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-07-10 12:33:29 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/623cfcd04b0c4662e614cb6a3bf52536abc02d5a&quot;&gt;https://git.openjdk.org/jdk/commit/623cfcd04b0c4662e614cb6a3bf52536abc02d5a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14592293" author="roboduke" created="Tue, 27 Jun 2023 08:46:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14679&quot;&gt;https://git.openjdk.org/jdk/pull/14679&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-27 15:34:58 +0000</comment>
                            <comment id="14592026" author="dbessono" created="Mon, 26 Jun 2023 09:23:22 -0700"  >Thank you [~alanb], I&amp;#39;ve updated the description with some follow-up notes, reflecting communication in the comments.</comment>
                            <comment id="14591999" author="alanb" created="Mon, 26 Jun 2023 06:38:32 -0700"  >I&amp;#39;ve changed the title of this issue. The ISE in the example is because fork is being called on a closed STS. As regards ScopedValue + StructureViolationException then we can try to improve the wording, and adding the missing &amp;quot;@throws StructureViolationException&amp;quot;.</comment>
                            <comment id="14591995" author="dbessono" created="Mon, 26 Jun 2023 06:26:00 -0700"  >the following assertion looks deserving to be easily perceivable from the text:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If op creates a StructuredTaskScope but does not close it &#8230;  StructureViolationException is thrown&lt;br/&gt;
&lt;br/&gt;
Currently there&amp;#39;s plenty of detail in &amp;quot;...&amp;quot; so this simple statement above is not easy to grasp from the mentioned paragraph on the first reading.&lt;br/&gt;
</comment>
                            <comment id="14591989" author="dbessono" created="Mon, 26 Jun 2023 06:06:32 -0700"  >Reading of the following paragraph copied across spec &lt;br/&gt;
===&lt;br/&gt;
Scoped values are intended to be used in a structured manner. If op creates a StructuredTaskScope but does not close it, then exiting op causes the underlying construct of each StructuredTaskScope created in the dynamic scope to be closed. This may require blocking until all child threads have completed their sub-tasks. The closing is done in the reverse order that they were created. Once closed, StructureViolationException is thrown.&lt;br/&gt;
===&lt;br/&gt;
&lt;br/&gt;
doesn&amp;#39;t clearly give an impression of who is expected to throw StructureViolationException, the ::fork method inside the op throws IllegalStateException&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Once closed, StructureViolationException is thrown&amp;quot; statement is confusing and could give the following impression of where to expect SVE&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ScopedValue.where(ScopedValue.newInstance(), new Object()).run(() -&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var scope = new StructuredTaskScope&amp;lt;&amp;gt;();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try (scope) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.fork(Object::new);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.join();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (InterruptedException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RuntimeException(e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ISE thrown&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.fork(Object::new);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&lt;br/&gt;
while if we don&amp;#39;t close STS, then we get SVE from method ScopedValue.Carrier::run (and other methods)&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ScopedValue.where(ScopedValue.newInstance(), new Object()).run(() -&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var scope = new StructuredTaskScope&amp;lt;&amp;gt;();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.fork(Object::new);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.fork(Object::new);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {scope.join();} catch (InterruptedException e) {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&lt;br/&gt;
the methods that have the quoted same block of text look deserving to have StructuredViolationException specified in a more direct manner, for example&lt;br/&gt;
&lt;br/&gt;
e.g. ScopedValue.Carrier::run may have&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;@throws StructuredViolationException If the op creates a StructuredTaskScope but does not close it&lt;br/&gt;
&lt;br/&gt;
such declaration in 6 run*/get*/call* methods would greatly improve the understanding of the expected behaviour</comment>
                            <comment id="14591981" author="alanb" created="Mon, 26 Jun 2023 05:40:06 -0700"  >ScopedValue runWhere/callWhere/getWhere (and the Carrier equivalents) throw StructureViolationException if the op completes without closing any STS. It looks like the @throws has got lost, we can fix that.&lt;br/&gt;
&lt;br/&gt;
Do you have an example where runWhere/callWhere/getWhere throw IllegalStateException?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5105289">JDK-8311916</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5106409">JDK-8312903</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5104301">JDK-8311024</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i322jn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="190"><![CDATA[java.lang]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>