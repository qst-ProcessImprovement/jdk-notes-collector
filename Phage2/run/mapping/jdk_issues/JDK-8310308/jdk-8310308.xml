<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:46:35 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8310308] IR Framework: check for type and size of vector nodes</title>
                <link>https://bugs.openjdk.org/browse/JDK-8310308</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Since the IR Framework is some kind of proxy for performance, we should not just check for the use of vector nodes, but also the size. In most cases, we can check that the maximal vector size is used.</description>
                <environment></environment>
        <key id="5103516">JDK-8310308</key>
            <summary>IR Framework: check for type and size of vector nodes</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="epeter">Emanuel Peter</reporter>
                        <labels>
                            <label>ir-framework</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Mon, 19 Jun 2023 04:40:32 -0700</created>
                <updated>Wed, 9 Oct 2024 23:35:29 -0700</updated>
                            <resolved>Tue, 15 Aug 2023 03:10:04 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14634305" author="goetz" created="Thu, 14 Dec 2023 06:19:54 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this to improve testing of C2 in 22u. It will also simplify future test backports.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Trivial resolves needed, including follow-up 8314513.&lt;br/&gt;
Tests pass. SAP nightly testing passed.</comment>
                            <comment id="14634304" author="roboduke" created="Thu, 14 Dec 2023 06:18:20 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/29&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/29&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-14 14:10:22 +0000</comment>
                            <comment id="14604687" author="chagedorn" created="Thu, 17 Aug 2023 06:01:51 -0700"  >I filed &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8314513&quot; title=&quot;[IR Framework] Some internal IR Framework tests are failing after JDK-8310308 on PPC and Cascade Lake&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8314513&quot;&gt;&lt;strike&gt;JDK-8314513&lt;/strike&gt;&lt;/a&gt; to get this fixed.</comment>
                            <comment id="14604420" author="JIRAUSER19821" created="Wed, 16 Aug 2023 07:37:37 -0700"  >Ok, looks like you are on a Cascade Lake machine (x86_64). I suspect that it is the failOn rule that creates issues there. I wonder why I did never see this issue in my own testing. I suspect we need to add the same exception handling code from here to somewhere else:&lt;br/&gt;
&lt;br/&gt;
test/hotspot/jtreg/compiler/lib/ir_framework/driver/irmatching/irrule/constraint/raw/RawCountsConstraint.java&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return Constraint.createCounts(rawIRNode.regex(compilePhase, vmInfo, getComparisonBound()), constraintIndex, comparison, compilationOutput);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (SuccessOnlyConstraintException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return Constraint.createSuccess();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
we try to create a constraint, but if the constraint signals that it needs to allways pass, it throws a SuccessOnlyConstraintException.&lt;br/&gt;
&lt;br/&gt;
Your java stacktrace shows that we passed by &amp;quot;compiler.lib.ir_framework.driver.irmatching.irrule.constraint.raw.RawFailOnConstraint.parse&amp;quot;. We should have the try-catch there.</comment>
                            <comment id="14604415" author="mbaesken" created="Wed, 16 Aug 2023 07:21:57 -0700"  >I see failures also on Linux x86_64  (not only ppc64le)  in testlibrary_tests/ir_framework/examples/IRExample.java&lt;br/&gt;
&lt;br/&gt;
Messages from Test VM&lt;br/&gt;
---------------------&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 5 of 6 in goodFailOn: Flag constraint not met (applyIf): UseZGC, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 3 of 4 in testVectorNodeExactSize1: Flag constraint not met (applyIf): MaxVectorSize, =32&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 4 of 4 in testVectorNodeExactSize1: Flag constraint not met (applyIf): MaxVectorSize, =16&lt;br/&gt;
&lt;br/&gt;
[2023-08-16T01:25:03.672874880Z] Waiting for completion for process 75644&lt;br/&gt;
[2023-08-16T01:25:03.673362290Z] Waiting for completion finished for process 75644&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_I#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_F#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_F#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The lower bound rule for &amp;quot;_#V#LOAD_VECTOR_F#_&amp;quot; is now performed with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;IRNode.VECTOR_SIZE_TAG_ANY&amp;quot; instead of &amp;quot;IRNode.VECTOR_SIZE_TAG_MAX&amp;quot;.&lt;br/&gt;
WARNING: you are on a system with &amp;quot;canTrustVectorSize == false&amp;quot; (default Cascade Lake).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The upper bound rule for &amp;quot;_#V#LOAD_VECTOR_F#_&amp;quot; cannot be checked.&lt;br/&gt;
&lt;br/&gt;
----------System.err:(32/2906)----------&lt;br/&gt;
compiler.lib.ir_framework.driver.SuccessOnlyConstraintException: Unhandled SuccessOnlyConstraintException, should have created a Constraint that always succeeds:&lt;br/&gt;
upper bound with specified size&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.checkattribute.parsing.RawIRNode.regexForVectorIRNode(RawIRNode.java:114)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.checkattribute.parsing.RawIRNode.regex(RawIRNode.java:63)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.constraint.raw.RawFailOnConstraint.parse(RawFailOnConstraint.java:57)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.phase.DefaultPhaseRawConstraintParser.parseRawConstraints(DefaultPhaseRawConstraintParser.java:75)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.phase.DefaultPhaseRawConstraintParser.parse(DefaultPhaseRawConstraintParser.java:58)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.phase.CompilePhaseIRRuleBuilder.createCompilePhaseIRRulesForDefault(CompilePhaseIRRuleBuilder.java:81)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.phase.CompilePhaseIRRuleBuilder.build(CompilePhaseIRRuleBuilder.java:70)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irrule.IRRule.&amp;lt;init&amp;gt;(IRRule.java:51)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irmethod.IRMethod.createIRRules(IRMethod.java:63)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.irmethod.IRMethod.&amp;lt;init&amp;gt;(IRMethod.java:56)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.IRMethodBuilder.createIRMethod(IRMethodBuilder.java:65)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.IRMethodBuilder.lambda$build$0(IRMethodBuilder.java:57)&lt;br/&gt;
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.IRMethodBuilder.build(IRMethodBuilder.java:56)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.TestClassParser.createTestClass(TestClassParser.java:72)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.TestClassParser.parse(TestClassParser.java:61)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.runTestVM(TestFramework.java:750)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.start(TestFramework.java:718)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.start(TestFramework.java:338)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.run(TestFramework.java:222)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.run(TestFramework.java:211)&lt;br/&gt;
	at ir_framework.examples.IRExample.main(IRExample.java:49)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
but so far it looks like all failing tests are from  &amp;quot; ir_framework&amp;quot; .&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14604411" author="JIRAUSER19821" created="Wed, 16 Aug 2023 07:04:07 -0700"  >[~mbaesken] This looks related indeed. I did lots of testing on x86 and aarch64, and GitHub actions passed. But I guess we did not run the tests on PPC (I don&amp;#39;t have access to any PPC).&lt;br/&gt;
&lt;br/&gt;
Are all failures ir_framework internal tests like these?&lt;br/&gt;
test/hotspot/jtreg/testlibrary_tests/ir_framework/tests/TestBadFormat.java&lt;br/&gt;
test/hotspot/jtreg/testlibrary_tests/ir_framework/examples/IRExample.java&lt;br/&gt;
&lt;br/&gt;
For those it seems that the applyIf clauses are the issues:&lt;br/&gt;
I expect those rules to fail. But if you are on a platform like ppc where the features do not apply (avx or asimd), then the rule is not run, and therefore does not fail.&lt;br/&gt;
&lt;br/&gt;
I think the solution for these cases is to simply remove the applyIfCPUFeature clauses from the IR rules. In that case the rule is always executed, and should always fail.&lt;br/&gt;
&lt;br/&gt;
Are there any other &amp;quot;normal&amp;quot; IR tests that are failing as well?&lt;br/&gt;
&lt;br/&gt;
Feel free to send me and [~chagedorn] an email with more info, if it is too much to send everything here.</comment>
                            <comment id="14604367" author="mbaesken" created="Wed, 16 Aug 2023 04:44:54 -0700"  >we observed quite a lot of test failures after this, is this maybe related ?&lt;br/&gt;
&lt;br/&gt;
e.g.  testlibrary_tests/ir_framework/tests/TestBadFormat.java    on Linux ppc64le :&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: Could not find method &amp;quot;badVectorNodeSize&amp;quot; in violations&lt;br/&gt;
&lt;br/&gt;
One or more format violations have been detected:&lt;br/&gt;
&lt;br/&gt;
Violations (57)&lt;br/&gt;
---------------&lt;br/&gt;
&amp;nbsp;- Provided empty string for composite node IRNode.STORE_OF_CLASS at index 1 for IR rule 1 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.emtpyUserProvidedPostfix().&lt;br/&gt;
&amp;nbsp;- Provided empty string for composite node IRNode.STORE_OF_CLASS at index 1 for IR rule 2 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.emtpyUserProvidedPostfix().&lt;br/&gt;
&amp;nbsp;- Provided empty string for composite node IRNode.STORE_OF_CLASS at index 1 for IR rule 3 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.emtpyUserProvidedPostfix().&lt;br/&gt;
&amp;nbsp;- Provided empty string for composite node IRNode.STORE_OF_CLASS at index 1 for IR rule 4 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.emtpyUserProvidedPostfix().&lt;br/&gt;
&amp;nbsp;- Missing count for node IRNode.STORE for IR rule 1 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.missingCountString().&lt;br/&gt;
&amp;nbsp;- Missing count for node IRNode.STORE_OF_CLASS for IR rule 2 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.missingCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;_#STORE#_&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;_#STORE#_&amp;quot; for IR rule 1 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;_#STORE#_&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;_#STORE#_&amp;quot; for IR rule 2 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;_#STORE#_&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;_#STORE#_&amp;quot; for IR rule 3 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided empty value, node IRNode.STORE, in count string &amp;quot;&amp;quot; for IR rule 4 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided empty value, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;quot; for IR rule 5 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided empty value after comparator &amp;quot;&amp;lt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;lt;&amp;quot; for IR rule 6 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided empty value after comparator &amp;quot;!&amp;quot;, node IRNode.STORE, in count string &amp;quot;!&amp;quot; for IR rule 7 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid comparator &amp;quot;!&amp;quot;, node IRNode.STORE, in count string &amp;quot;!3&amp;quot; for IR rule 8 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;=&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;==&amp;quot; for IR rule 9 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;-45&amp;quot; for IR rule 10 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;3.0&amp;quot; for IR rule 11 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;a3&amp;quot; for IR rule 12 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE, in count string &amp;quot;0x1&amp;quot; for IR rule 13 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt;-45&amp;quot; for IR rule 14 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt;3.0&amp;quot; for IR rule 15 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt;a3&amp;quot; for IR rule 16 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt;0x1&amp;quot; for IR rule 17 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt; -45&amp;quot; for IR rule 18 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt; 3.0&amp;quot; for IR rule 19 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt; a3&amp;quot; for IR rule 20 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt; 0x1&amp;quot; for IR rule 21 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot; &amp;gt; -45&amp;quot; for IR rule 22 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot; &amp;gt; 3.0&amp;quot; for IR rule 23 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot; &amp;gt; a3&amp;quot; for IR rule 24 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot; &amp;gt; 0x1&amp;quot; for IR rule 25 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Not-equal comparator not supported. Please rewrite the rule. for IR rule 26 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Node count comparison &amp;quot;&amp;lt;0&amp;quot; is not allowed: always false. for IR rule 27 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Node count comparison &amp;quot;&amp;lt;1&amp;quot; should be rewritten as &amp;quot;=0&amp;quot; for IR rule 28 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Node count comparison &amp;quot;&amp;lt;=0&amp;quot; should be rewritten as &amp;quot;=0&amp;quot; for IR rule 29 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE, in count string &amp;quot;&amp;gt; -1&amp;quot; for IR rule 30 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Node count comparison &amp;quot;&amp;gt;=0&amp;quot; is useless, please only use strictly positive numbers with greater-equal. for IR rule 31 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided empty value after comparator &amp;quot;&amp;lt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;lt;&amp;quot; for IR rule 32 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided empty value after comparator &amp;quot;!&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;!&amp;quot; for IR rule 33 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid comparator &amp;quot;!&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;!3&amp;quot; for IR rule 34 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;=&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;==&amp;quot; for IR rule 35 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;-45&amp;quot; for IR rule 36 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;3.0&amp;quot; for IR rule 37 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;a3&amp;quot; for IR rule 38 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;=&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;0x1&amp;quot; for IR rule 39 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt;-45&amp;quot; for IR rule 40 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt;3.0&amp;quot; for IR rule 41 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt;a3&amp;quot; for IR rule 42 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt;0x1&amp;quot; for IR rule 43 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt; -45&amp;quot; for IR rule 44 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt; 3.0&amp;quot; for IR rule 45 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt; a3&amp;quot; for IR rule 46 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot;&amp;gt; 0x1&amp;quot; for IR rule 47 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;-45&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot; &amp;gt; -45&amp;quot; for IR rule 48 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;3.0&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot; &amp;gt; 3.0&amp;quot; for IR rule 49 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;a3&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot; &amp;gt; a3&amp;quot; for IR rule 50 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
&amp;nbsp;- Provided invalid value &amp;quot;0x1&amp;quot; after comparator &amp;quot;&amp;gt;&amp;quot;, node IRNode.STORE_OF_CLASS, in count string &amp;quot; &amp;gt; 0x1&amp;quot; for IR rule 51 at public void ir_framework.tests.BadIRAnnotationsAfterTestVM.wrongCountString().&lt;br/&gt;
/============/: expected true, was false&lt;br/&gt;
	at jdk.test.lib.Asserts.fail(Asserts.java:594)&lt;br/&gt;
	at jdk.test.lib.Asserts.assertTrue(Asserts.java:486)&lt;br/&gt;
	at ir_framework.tests.TestBadFormat.lambda$checkException$0(TestBadFormat.java:144)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&lt;br/&gt;
	at ir_framework.tests.TestBadFormat.checkException(TestBadFormat.java:143)&lt;br/&gt;
	at ir_framework.tests.TestBadFormat.expectTestFormatException(TestBadFormat.java:133)&lt;br/&gt;
	at ir_framework.tests.TestBadFormat.main(TestBadFormat.java:62)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
</comment>
                            <comment id="14603981" author="dukebot" created="Tue, 15 Aug 2023 03:10:03 -0700"  >Changeset: a02d65ef&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-15 10:08:51 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a02d65efccaab5bb7c2f2aad4a2eb5062f545ef8&quot;&gt;https://git.openjdk.org/jdk/commit/a02d65efccaab5bb7c2f2aad4a2eb5062f545ef8&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14592234" author="roboduke" created="Tue, 27 Jun 2023 04:55:04 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14539&quot;&gt;https://git.openjdk.org/jdk/pull/14539&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-19 11:52:42 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5117730">JDK-8322673</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118418">JDK-8323289</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5103754">JDK-8310523</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5108304">JDK-8314513</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5104549">JDK-8311238</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="104475" name="generator.py" size="30771" author="epeter" created="Fri, 30 Jun 2023 02:02:18 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31ymj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>