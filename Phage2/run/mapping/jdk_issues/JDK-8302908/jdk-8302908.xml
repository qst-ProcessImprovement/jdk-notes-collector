<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:03:40 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302908] RISC-V: Support masked vector arithmetic instructions for Vector API</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302908</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>We have added support for vector add mask instructions, please take a look and have some reviews. Thanks a lot!&lt;br/&gt;
This patch will add support of vector add/sub/mul/div mask version. It was implemented by referring to RVV v1.0 [1].&lt;br/&gt;
&lt;br/&gt;
## Load/Store/Cmp Mask&lt;br/&gt;
`VectorLoadMask, VectorMaskCmp, VectorStoreMask` will implement the mask datapath. We can see where the data is passed in the compilation log with `jdk/incubator/vector/Byte128VectorTests.java`&#65306;&lt;br/&gt;
```&lt;br/&gt;
218     loadV V1, [R7]	# vector (rvv)&lt;br/&gt;
220     vloadmask V0, V1&lt;br/&gt;
...&lt;br/&gt;
23c     vmaskcmp_rvv_masked V0, V4, V5, V0, V1, #0&lt;br/&gt;
24c     vstoremask V1, V0&lt;br/&gt;
258     storeV [R7], V1	# vector (rvv)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The corresponding generated jit assembly&#65306;&lt;br/&gt;
```&lt;br/&gt;
# loadV&lt;br/&gt;
0x000000400c8ef958:   vsetvli t0,zero,e8,m1,tu,mu&lt;br/&gt;
0x000000400c8ef95c:   vle8.v  v1,(t2)&lt;br/&gt;
&lt;br/&gt;
# vloadmask&lt;br/&gt;
0x000000400c8ef960:   vsetvli t0,zero,e8,m1,tu,&lt;br/&gt;
0x000000400c8ef964:   vmsne.vx    v0,v1,zero&lt;br/&gt;
&lt;br/&gt;
# vmaskcmp_rvv_masked&lt;br/&gt;
0x000000400c8ef97c:   vsetvli   t0,zero,e8,m1,tu,mu&lt;br/&gt;
0x000000400c8ef980:   vmclr.m   v1&lt;br/&gt;
0x000000400c8ef984:   vmseq.vv  v1,v4,v5,v0.t&lt;br/&gt;
0x000000400c8ef988:   vmv1r.v   v0,v1&lt;br/&gt;
&lt;br/&gt;
# vstoremask&lt;br/&gt;
0x000000400c8ef98c:   vsetvli t0,zero,e8,m1,tu,mu&lt;br/&gt;
0x000000400c8ef990:   vmv.v.x v1,zero&lt;br/&gt;
0x000000400c8ef994:   vmerge.vim  v1,v1,1,v0&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
## Masked vector arithmetic instructions (e.g. vadd)&lt;br/&gt;
AddMaskTestMerge case:&lt;br/&gt;
```java&lt;br/&gt;
import jdk.incubator.vector.IntVector;&lt;br/&gt;
import jdk.incubator.vector.VectorMask;&lt;br/&gt;
import jdk.incubator.vector.VectorOperators;&lt;br/&gt;
import jdk.incubator.vector.VectorSpecies;&lt;br/&gt;
&lt;br/&gt;
public class AddMaskTestMerge {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static final VectorSpecies&amp;lt;Integer&amp;gt; SPECIES = IntVector.SPECIES_128;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static final int SIZE = 1024;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int[] a = new int[SIZE];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int[] b = new int[SIZE];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int[] r = new int[SIZE];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static boolean[] c = new boolean[]{true,false,true,false,true,false,true,false};&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; SIZE; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a[i] = i;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b[i] = i;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static void workload(int idx) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VectorMask&amp;lt;Integer&amp;gt; vmask = VectorMask.fromArray(SPECIES, c, 0);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IntVector av = IntVector.fromArray(SPECIES, a, idx);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IntVector bv = IntVector.fromArray(SPECIES, b, idx);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;av.lanewise(VectorOperators.ADD, bv, vmask).intoArray(r, idx);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; 30_0000; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int j = 0; j &amp;lt; SIZE; j += SPECIES.length()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;workload(j);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
This test case is reduced from existing jtreg vector tests Int128VectorTests.java[3]. This test case corresponds to the add instruction of the vector mask version and other instructions are similar.&lt;br/&gt;
&lt;br/&gt;
Before this patch, the compilation log will not print RVV-related instructions. Now the compilation log is as follows:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
0ae     B10: #	out( B25 B11 ) &amp;lt;- in( B9 )  Freq: 0.999991&lt;br/&gt;
0ae     loadV V1, [R31]	# vector (rvv)&lt;br/&gt;
0b6     vloadmask V0, V2&lt;br/&gt;
0be     vadd.vv V3, V1, V0	#@vaddI_masked&lt;br/&gt;
0c6     lwu  R28, [R7, #124]	# loadN, compressed ptr, #@loadN ! Field: AddMaskTestMerge.r&lt;br/&gt;
0ca     decode_heap_oop  R28, R28	#@decodeHeapOop&lt;br/&gt;
0cc     lwu  R7, [R28, #12]	# range, #@loadRange&lt;br/&gt;
0d0     NullCheck R28&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
And the jit code is as follows:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
0x000000400c823cee:   vsetvli t0,zero,e32,m1,tu,mu&lt;br/&gt;
0x000000400c823cf2:   vle32.v v1,(t6)                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - jdk.incubator.vector.IntVector::&lt;a href=&apos;mailto:intoArray@43&apos;&gt;intoArray@43&lt;/a&gt; (line 3228)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - AddMaskTestMerge::&lt;a href=&apos;mailto:workload@46&apos;&gt;workload@46&lt;/a&gt; (line 25)&lt;br/&gt;
0x000000400c823cf6:   vsetvli t0,zero,e8,m1,tu,mu&lt;br/&gt;
0x000000400c823cfa:   vmsne.vx        v0,v2,zero          ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - jdk.incubator.vector.VectorMask::&lt;a href=&apos;mailto:fromArray@47&apos;&gt;fromArray@47&lt;/a&gt; (line 208)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - AddMaskTestMerge::&lt;a href=&apos;mailto:workload@7&apos;&gt;workload@7&lt;/a&gt; (line 22)&lt;br/&gt;
0x000000400c823cfe:   vsetvli t0,zero,e32,m1,tu,mu&lt;br/&gt;
0x000000400c823d02:   vadd.vv v3,v3,v1,v0.t               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - jdk.incubator.vector.IntVector::&lt;a href=&apos;mailto:lanewiseTemplate@192&apos;&gt;lanewiseTemplate@192&lt;/a&gt; (line 834)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - jdk.incubator.vector.Int128Vector::&lt;a href=&apos;mailto:lanewise@9&apos;&gt;lanewise@9&lt;/a&gt; (line 291)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - jdk.incubator.vector.Int128Vector::&lt;a href=&apos;mailto:lanewise@4&apos;&gt;lanewise@4&lt;/a&gt; (line 41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - AddMaskTestMerge::&lt;a href=&apos;mailto:workload@39&apos;&gt;workload@39&lt;/a&gt; (line 25)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
## Mask register allocation &amp;amp; mask bit opreation&lt;br/&gt;
Since v0 is to be used as a mask register in spec[1], sometimes we need two vmask to do the vector mask logical ops like `AndVMask, OrVMask, XorVMask`. And if only v0 and v31 mask registers are defined, the corresponding c2 nodes will not be generated correctly because of the register pressure[2], so define v30 and v31 as mask register too.&lt;br/&gt;
&lt;br/&gt;
`AndVMask` will emit the C2 JIT code like:&lt;br/&gt;
```&lt;br/&gt;
vloadmask V0, V1&lt;br/&gt;
vloadmask V30, V2&lt;br/&gt;
vmask_and V0, V30, V0&lt;br/&gt;
```&lt;br/&gt;
We also modified the implementation of `spill_copy_vector_stack_to_stack` so that it no longer occupies the v0 register. In addition to that, we change some node like `vasr/vlsl/vlsr/vstring_x/varray_x/vclearArray_x`, which use v0 internally, to make C2 to sense that they used v0.&lt;br/&gt;
&lt;br/&gt;
By the way, the current implementation of `VectorMaskCast` is for the case of equal width of the parameter data, other cases depend on the subsequent cast node.&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc&quot;&gt;https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc&lt;/a&gt;&lt;br/&gt;
[2] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/test/jdk/jdk/incubator/vector/Int128VectorTests.java&quot;&gt;https://github.com/openjdk/jdk/blob/master/test/jdk/jdk/incubator/vector/Int128VectorTests.java&lt;/a&gt;&lt;br/&gt;
[3] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/0deb648985b018653ccdaf193dc13b3cf21c088a/src/hotspot/share/opto/chaitin.cpp#L526&quot;&gt;https://github.com/openjdk/jdk/blob/0deb648985b018653ccdaf193dc13b3cf21c088a/src/hotspot/share/opto/chaitin.cpp#L526&lt;/a&gt;</description>
                <environment></environment>
        <key id="5094647">JDK-8302908</key>
            <summary>RISC-V: Support masked vector arithmetic instructions for Vector API</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dzhang">Dingli Zhang</assignee>
                                    <reporter username="dzhang">Dingli Zhang</reporter>
                        <labels>
                            <label>c2</label>
                            <label>oraclejdk-na</label>
                            <label>performance</label>
                            <label>vectorapi</label>
                    </labels>
                <created>Mon, 20 Feb 2023 21:56:26 -0800</created>
                <updated>Mon, 1 May 2023 10:10:50 -0700</updated>
                            <resolved>Tue, 25 Apr 2023 19:26:54 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14576859" author="dukebot" created="Tue, 25 Apr 2023 19:26:53 -0700"  >Changeset: 1c1a73f7&lt;br/&gt;
Author:    Dingli Zhang &amp;lt;&lt;a href=&apos;mailto:dzhang@openjdk.org&apos;&gt;dzhang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Fei Yang &amp;lt;&lt;a href=&apos;mailto:fyang@openjdk.org&apos;&gt;fyang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-26 02:24:49 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1c1a73f715b291faabbc77d09d0f7b0ae65ebea7&quot;&gt;https://git.openjdk.org/jdk/commit/1c1a73f715b291faabbc77d09d0f7b0ae65ebea7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14561537" author="roboduke" created="Mon, 20 Feb 2023 22:22:55 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12682&quot;&gt;https://git.openjdk.org/jdk/pull/12682&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-21 06:17:06 +0000</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="20300"><![CDATA[riscv]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30gsz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>