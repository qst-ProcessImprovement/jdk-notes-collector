<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:13:15 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301214] Adjust handshakeTimeout value in test HandshakeTimeout.java after 8189338</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301214</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>After 8189338 we noticed some errors on one of our test macOS machines (macOS 12.4)&lt;br/&gt;
in java/rmi/transport/handshakeTimeout/HandshakeTimeout.java :&lt;br/&gt;
&lt;br/&gt;
remote call failed with exception:&lt;br/&gt;
java.rmi.ConnectIOException: error during JRMP connection establishment; nested exception is:&lt;br/&gt;
java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
at java.rmi/sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:308)&lt;br/&gt;
at java.rmi/sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:204)&lt;br/&gt;
at java.rmi/sun.rmi.server.UnicastRef.newCall(UnicastRef.java:345)&lt;br/&gt;
at java.rmi/sun.rmi.registry.RegistryImpl_Stub.lookup(RegistryImpl_Stub.java:116)&lt;br/&gt;
at HandshakeTimeout$Connector.run(HandshakeTimeout.java:133)&lt;br/&gt;
at java.base/java.lang.Thread.run(Thread.java:1623)&lt;br/&gt;
Caused by: java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:273)&lt;br/&gt;
at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:299)&lt;br/&gt;
at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:341)&lt;br/&gt;
at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:791)&lt;br/&gt;
at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1099)&lt;br/&gt;
at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:258)&lt;br/&gt;
at java.base/java.io.BufferedInputStream.implRead(BufferedInputStream.java:292)&lt;br/&gt;
at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:279)&lt;br/&gt;
at java.base/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:288)&lt;br/&gt;
at java.base/java.io.DataInputStream.readByte(DataInputStream.java:268)&lt;br/&gt;
at java.rmi/sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:247)&lt;br/&gt;
... 5 more&lt;br/&gt;
&lt;br/&gt;
TEST PASSED: java.rmi.ConnectException or ConnectIOException thrown&lt;br/&gt;
STATUS:Passed.&lt;br/&gt;
--------------------------------&lt;br/&gt;
java.lang.RuntimeException: TEST FAILED: remote call did not time out&lt;br/&gt;
at HandshakeTimeout.main(HandshakeTimeout.java:94)&lt;br/&gt;
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
at java.base/java.lang.Thread.run(Thread.java:1623)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException: TEST FAILED: remote call did not time out&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5092615">JDK-8301214</key>
            <summary>Adjust handshakeTimeout value in test HandshakeTimeout.java after 8189338</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djelinski">Daniel Jelinski</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>noreg-self</label>
                    </labels>
                <created>Fri, 27 Jan 2023 00:05:50 -0800</created>
                <updated>Mon, 1 Apr 2024 04:19:20 -0700</updated>
                            <resolved>Wed, 8 Feb 2023 00:03:27 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14558167" author="dukebot" created="Wed, 8 Feb 2023 00:03:26 -0800"  >Changeset: e628fd5c&lt;br/&gt;
Author:    Daniel Jeli&#324;ski &amp;lt;&lt;a href=&apos;mailto:djelinski@openjdk.org&apos;&gt;djelinski@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-08 08:01:43 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e628fd5c39847f2f9813cce8e78be8db5e60507d&quot;&gt;https://git.openjdk.org/jdk/commit/e628fd5c39847f2f9813cce8e78be8db5e60507d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14557960" author="msheppar" created="Tue, 7 Feb 2023 05:31:09 -0800"  >yes, the restructuring is good. I never think of running clint and server in same thread, but it will eliminate any possibility of race between main thread and Connector thread. So the job is OXO.</comment>
                            <comment id="14557919" author="JIRAUSER19825" created="Tue, 7 Feb 2023 02:17:50 -0800"  >Thanks [~msheppar] for your suggestions. I adjusted the test to use a single thread only, and to use JTReg for timeout handling. If the test times out again, we will get the diagnostic information from JTReg timeout handler.</comment>
                            <comment id="14555761" author="msheppar" created="Mon, 30 Jan 2023 17:12:48 -0800"  >then I&amp;#39;d proffer that  it is probably a race condition  between the Connector thread and the main thread, requiring some synchronization between the start of the Connector Thread and the invocation of Thread::join e.g. use a CountDownLatch. The Thread::join completes before the Connector thread has fully executed its timeout lookup invocation to the non existent Registry. As such, the main should wait for the Connector Thread to start before it invokes the t.join.&lt;br/&gt;
As the Connector has a timeout of 5 seconds and the main has a 10 second wait, the assumption is that the Connector will have completed before the join times out. But if the scheduling of the Connector&amp;#39;s run is delayed, then it possible for the main to race ahead.&lt;br/&gt;
&lt;br/&gt;
Using the puny handshake timeout make the race less likely, as the time out will be instantaneous on comtemporary systems (super duper, quantum computer)</comment>
                            <comment id="14555572" author="JIRAUSER19825" created="Mon, 30 Jan 2023 11:55:17 -0800"  >sun.rmi.transport.tcp.handshakeTimeout is only used in setSoTimeout call [1], and it only controls the socket timeout, even on SSLSockets.&lt;br/&gt;
&lt;br/&gt;
We control the server socket used for connecting; it does not read or write anything. Writes on the client side will either put the data in OS buffers, or time out. Reads on the client side will time out.&lt;br/&gt;
&lt;br/&gt;
Reducing the timeout does not mask any issues, at least not with the current timeout implementation.&lt;br/&gt;
&lt;br/&gt;
I agree that using jtreg for timeout handling might be a better option.&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/src/java.rmi/share/classes/sun/rmi/transport/tcp/TCPChannel.java#L229&quot;&gt;https://github.com/openjdk/jdk/blob/master/src/java.rmi/share/classes/sun/rmi/transport/tcp/TCPChannel.java#L229&lt;/a&gt;</comment>
                            <comment id="14555569" author="msheppar" created="Mon, 30 Jan 2023 11:36:28 -0800"  >There are two runs of this test ... plain socket and ssl socket. The failures is on the second ssl scenario.&lt;br/&gt;
&lt;br/&gt;
This is unexpected and question arises why did it happen. Is it an obscure issue in the rmi layer, or in the SSL layer, or perhaps in the native code assocaited with &amp;quot;select&amp;quot; for the timeout on the read/write ?&lt;br/&gt;
&lt;br/&gt;
Reducing the handshake timeout for the first scenario seems ok. But reducing the handshake to 1 millisecond for the ssl scenario maybe masking an issue with the SSL timers or within the RMI layer  -- the failure could be suggesting some deeper issues.&lt;br/&gt;
&lt;br/&gt;
What the failure suggestion is that additional diagnostics would be helpful for determining how the main thread has reached the no timeout condition:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (connector.exception == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RuntimeException(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;TEST FAILED: remote call did not time out&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&lt;br/&gt;
Did the Connector thread actually run? Was it in the RTR state when the test completed?  is it still alive? should additional state be added to indicate that the thread has started? Should the Connector thread and the main thread synchronize on a countDownLatch before the thread join ?&lt;br/&gt;
&lt;br/&gt;
The failures suggests a bit of restructuring and some synchronization between the Connector thread and the main thread&lt;br/&gt;
&lt;br/&gt;
The structure of the test means that a jtreg test timeout is unlikely. In this failed case it would have been useful, as the failure handler attempts to capture the jstack output which can hint at the cause of any execution blockage.&lt;br/&gt;
</comment>
                            <comment id="14555403" author="roboduke" created="Mon, 30 Jan 2023 03:47:02 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12292&quot;&gt;https://git.openjdk.org/jdk/pull/12292&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-30 11:06:05 +0000</comment>
                            <comment id="14554915" author="mbaesken" created="Fri, 27 Jan 2023 00:06:52 -0800"  >discussed in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8189338&quot;&gt;https://bugs.openjdk.org/browse/JDK-8189338&lt;/a&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3049n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="247"><![CDATA[java.rmi]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>