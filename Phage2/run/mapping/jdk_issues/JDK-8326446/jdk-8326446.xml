<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:05:46 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8326446] The User and System of jdk.CPULoad on Apple M1 are inaccurate</title>
                <link>https://bugs.openjdk.org/browse/JDK-8326446</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Run the test code on OSX with Apple m1 for a few seconds and then check the User and System of jdk.CPULoad events&lt;br/&gt;
&lt;br/&gt;
java -XX:StartFlightRecording=name=test,settings=default,filename=test.jfr EatCpu 4&lt;br/&gt;
&lt;br/&gt;
top&lt;br/&gt;
PID&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;COMMAND&amp;#xA0; &amp;#xA0; %CPU (total 8 cores)&lt;br/&gt;
42421 &amp;#xA0; java&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;  397.1&lt;br/&gt;
&lt;br/&gt;
jfr view jdk.CPULoad osx-m1.jfr&lt;br/&gt;
&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;CPU Load&lt;br/&gt;
&lt;br/&gt;
Time &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; JVM User &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; JVM System &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; Machine Total&lt;br/&gt;
------------   --------------- -------------- -------------&lt;br/&gt;
10:51:57 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.64% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.56% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;62.59%&lt;br/&gt;
10:51:58 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.64% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.56% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;59.70%&lt;br/&gt;
10:51:59 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.64% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.56% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;59.50%&lt;br/&gt;
10:52:00 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.63% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;0.57% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;65.71%&lt;br/&gt;
&lt;br/&gt;
The User and System of jdk.CPULoad on Apple M1 are inaccurate.&lt;br/&gt;
The system&amp;#39;s CPU is mainly consumed by Java (see Machine Total), but both JVM User and JVM System are obviously low.&lt;br/&gt;
&lt;br/&gt;
The same code, if run on OSX with Intel x64 (12 Hyper-Threading cores), the result is accurate.&lt;br/&gt;
&lt;br/&gt;
jfr view jdk.CPULoad j17-x64.jfr&lt;br/&gt;
&lt;br/&gt;
&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;CPU Load&lt;br/&gt;
&lt;br/&gt;
Time &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; JVM User &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; JVM System &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; Machine Total&lt;br/&gt;
------------ ---------------  --------------- -------------&lt;br/&gt;
10:37:54 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;8.39% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; 24.96% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;34.11%&lt;br/&gt;
10:37:55 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;8.45% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; 24.89% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;33.97%&lt;br/&gt;
10:37:56 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;8.44% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; 24.92% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;34.22%&lt;br/&gt;
10:37:57 &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;8.42% &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; 24.91%&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;34.39%&lt;br/&gt;
&lt;br/&gt;
The reason is JFR used task_info() with flavor TASK_ABSOLUTETIME_INFO to read User and System time.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/f8a924a749a786f9e9172561135731c4948c9856/src/hotspot/os/bsd/os_perf_bsd.cpp#L158&quot;&gt;https://github.com/openjdk/jdk/blob/f8a924a749a786f9e9172561135731c4948c9856/src/hotspot/os/bsd/os_perf_bsd.cpp#L158&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
task_info(task, TASK_ABSOLUTETIME_INFO, (task_info_t)task_info_data, &amp;amp;task_info_count)&lt;br/&gt;
&lt;br/&gt;
but it is not reliable on Apple m1, see &lt;a href=&quot;https://github.com/apple/darwin-xnu/blob/2ff845c2e033bd0ff64b5b6aa6063a1f8f65aa32/tests/task_info.c#L344&quot;&gt;https://github.com/apple/darwin-xnu/blob/2ff845c2e033bd0ff64b5b6aa6063a1f8f65aa32/tests/task_info.c#L344&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
A possible solution is to use&amp;#xA0;TASK_THREAD_TIMES_INFO and&amp;#xA0;&lt;br/&gt;
TASK_BASIC_INFO_64, these two flavors are reliable, just like what UnixOperatingSystem.c&amp;#xA0;does.&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/2963c9e6778b95f5c0fc4298064a21d1e8f31b91/src/jdk.management/macosx/native/libmanagement_ext/UnixOperatingSystem.c#L87&quot;&gt;https://github.com/openjdk/jdk/blob/2963c9e6778b95f5c0fc4298064a21d1e8f31b91/src/jdk.management/macosx/native/libmanagement_ext/UnixOperatingSystem.c#L87&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&amp;#xA0;</description>
                <environment></environment>
        <key id="5122152">JDK-8326446</key>
            <summary>The User and System of jdk.CPULoad on Apple M1 are inaccurate</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lyang">Long Yang</assignee>
                                    <reporter username="lyang">Long Yang</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                    </labels>
                <created>Wed, 21 Feb 2024 19:51:00 -0800</created>
                <updated>Wed, 29 May 2024 05:48:56 -0700</updated>
                            <resolved>Thu, 7 Mar 2024 18:01:28 -0800</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14667262" author="roboduke" created="Tue, 23 Apr 2024 01:16:35 -0700"  >[jdk22u-fix-request] Approval Request from Long Yang&lt;br/&gt;
The JFR&amp;#39;s jdk.CPULoad event provides information about how much CPU is occupied by Java process, often used in performance analysis. But the User and System percentages of jdk.CPULoad event on Apple M1 are inaccurate (far below normal). I would like to backport this fix to jdk22u.&lt;br/&gt;
Low risk: This patch only affects the User and System percentages of JFR&amp;#39;s jdk.CPULoad event.&lt;br/&gt;
Testing: I ran test/jdk/jdk/jfr/event/os/TestCPULoad.java and passed.</comment>
                            <comment id="14667261" author="roboduke" created="Tue, 23 Apr 2024 01:12:26 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/161&quot;&gt;https://git.openjdk.org/jdk22u/pull/161&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-23 08:06:03 +0000</comment>
                            <comment id="14666113" author="roboduke" created="Wed, 17 Apr 2024 18:59:13 -0700"  >[jdk17u-fix-request] Approval Request from Long Yang&lt;br/&gt;
The JFR&amp;#39;s jdk.CPULoad event provides information about how much CPU is occupied by Java process, often used in performance analysis. But the User and System percentages of jdk.CPULoad event on Apple M1 are inaccurate (far below normal). I would like to backport this fix to jdk17u-dev.&lt;br/&gt;
Low risk: This patch only affects the User and System percentages of JFR&amp;#39;s jdk.CPULoad event.&lt;br/&gt;
Testing: I ran test/jdk/jdk/jfr/event/os/TestCPULoad.java and passed. All GHA tests are passed (except linux-cross-compile, build(riscv64), Create sysroot. It looks like there&amp;#39;s an issue with the GHA&amp;#39;s process).</comment>
                            <comment id="14663840" author="coffeys" created="Tue, 9 Apr 2024 01:27:45 -0700"  >[~lyang] [~goetz] A jdk22u port of this fix seems to be missing</comment>
                            <comment id="14655723" author="roboduke" created="Thu, 7 Mar 2024 23:42:31 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2277&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2277&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-08 07:38:57 +0000</comment>
                            <comment id="14655718" author="roboduke" created="Thu, 7 Mar 2024 22:54:12 -0800"  >[jdk21u-fix-request] Approval Request from Long Yang&lt;br/&gt;
The JFR&amp;#39;s `jdk.CPULoad` event provides information about how much CPU is occupied by Java process, often used in performance analysis. But the `User` and `System` percentages of `jdk.CPULoad` event on Apple M1 are inaccurate (far below normal). I would like to backport this fix to `jdk21u-dev`.   &lt;br/&gt;
Low risk: This patch only affects the User and System percentages JFR&amp;#39;s `jdk.CPULoad` event.  &lt;br/&gt;
Testing: I ran `test/jdk/jdk/jfr/event/os/TestCPULoad.java` and passed. All `GHA` tests are passed (except linux-cross-compile, build(riscv64), Create sysroot. It looks like there&amp;#39;s an issue with the GHA&amp;#39;s process).</comment>
                            <comment id="14655714" author="roboduke" created="Thu, 7 Mar 2024 22:39:18 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/341&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/341&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-08 06:35:43 +0000</comment>
                            <comment id="14655677" author="dukebot" created="Thu, 7 Mar 2024 18:01:27 -0800"  >Changeset: 8dbd4b39&lt;br/&gt;
Author:    yibo.yl &amp;lt;&lt;a href=&apos;mailto:yibo.yl@alibaba-inc.com&apos;&gt;yibo.yl@alibaba-inc.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Denghui Dong &amp;lt;&lt;a href=&apos;mailto:ddong@openjdk.org&apos;&gt;ddong@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-08 01:59:30 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/8dbd4b391f7deb1a46a5f07f0bc46f23d6715ddb&quot;&gt;https://git.openjdk.org/jdk/commit/8dbd4b391f7deb1a46a5f07f0bc46f23d6715ddb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14651793" author="roboduke" created="Thu, 22 Feb 2024 23:53:48 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17976&quot;&gt;https://git.openjdk.org/jdk/pull/17976&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-23 07:49:45 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5123618">JDK-8327660</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5123749">JDK-8327766</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130328">JDK-8332937</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5123607">JDK-8327649</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108347" name="EatCpu.java" size="623" author="lyang" created="Wed, 21 Feb 2024 18:56:01 -0800"/>
                            <attachment id="108346" name="j17-x64.jfr" size="361632" author="lyang" created="Wed, 21 Feb 2024 19:23:46 -0800"/>
                            <attachment id="108345" name="osx-m1.jfr" size="444793" author="lyang" created="Wed, 21 Feb 2024 19:24:00 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35443:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>