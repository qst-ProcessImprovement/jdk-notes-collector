<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:57:39 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301846] Invalid TargetDataLine after screen lock when using JFileChooser or COM library</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301846</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
x64 / Windows 10 / Java 17.0.6 or 19.0.2&lt;br/&gt;
a Headset with a Microphone to test sound recording.&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
TargetDataLines become unusable (throw LineUnavailableException) if AudioSystem was called before creating a JFileChooser or COM initialization.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
1. Use AudioSystem e.g. AudioSystem.getMixerInfo()&lt;br/&gt;
2. Create a JFileChooser or init COM library&lt;br/&gt;
3. Lock / unlock screen&lt;br/&gt;
4. Try to open TargetDataLine for recording&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
TargetDataLine is successfully opened&lt;br/&gt;
ACTUAL -&lt;br/&gt;
Exception is thrown:&lt;br/&gt;
javax.sound.sampled.LineUnavailableException: line with format PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian not supported.&lt;br/&gt;
	at java.desktop/com.sun.media.sound.DirectAudioDevice$DirectDL.implOpen(DirectAudioDevice.java:484)&lt;br/&gt;
	at java.desktop/com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:115)&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
// run each test separately in debug mode with a breakpoint to manually lock / unlock screen before resuming&lt;br/&gt;
// source: &lt;a href=&quot;https://github.com/evgenii-orel/java-recording-issue-after-screen-lock/blob/master/src/test/java/com/epam/sound/RecordChannelLockingTest.java&quot;&gt;https://github.com/evgenii-orel/java-recording-issue-after-screen-lock/blob/master/src/test/java/com/epam/sound/RecordChannelLockingTest.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
package com.epam.sound;&lt;br/&gt;
&lt;br/&gt;
import com.sun.jna.platform.win32.Ole32;&lt;br/&gt;
import org.junit.jupiter.api.AfterEach;&lt;br/&gt;
import org.junit.jupiter.api.Disabled;&lt;br/&gt;
import org.junit.jupiter.api.Test;&lt;br/&gt;
&lt;br/&gt;
import java.util.Arrays;&lt;br/&gt;
import java.util.concurrent.ExecutionException;&lt;br/&gt;
import java.util.concurrent.ExecutorService;&lt;br/&gt;
import java.util.concurrent.Executors;&lt;br/&gt;
&lt;br/&gt;
import javax.sound.sampled.AudioSystem;&lt;br/&gt;
import javax.sound.sampled.Line;&lt;br/&gt;
import javax.sound.sampled.LineUnavailableException;&lt;br/&gt;
import javax.sound.sampled.Mixer;&lt;br/&gt;
import javax.sound.sampled.TargetDataLine;&lt;br/&gt;
import javax.swing.JFileChooser;&lt;br/&gt;
&lt;br/&gt;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;&lt;br/&gt;
&lt;br/&gt;
/**&lt;br/&gt;
&amp;nbsp;* Demonstrates breaking {@link TargetDataLine}s so that it always fails with {@link LineUnavailableException}:&lt;br/&gt;
&amp;nbsp;* &amp;lt;br&amp;gt;&lt;br/&gt;
&amp;nbsp;* Option 1. subsequently use {@link AudioSystem}, {@link JFileChooser} in any threads, lock / unlock screen&lt;br/&gt;
&amp;nbsp;* then any following recording attempt fails.&lt;br/&gt;
&amp;nbsp;* &amp;lt;br&amp;gt;&lt;br/&gt;
&amp;nbsp;* Option 2. subsequently use {@link AudioSystem}, COM initialization in the same thread, lock / unlock screen&lt;br/&gt;
&amp;nbsp;* then any following recording attempt fails in that thread.&lt;br/&gt;
&amp;nbsp;* &amp;lt;br&amp;gt;&lt;br/&gt;
&amp;nbsp;* OS: Windows 10, Java: 17, 19.0.2&lt;br/&gt;
&amp;nbsp;* &amp;lt;br&amp;gt;&lt;br/&gt;
&amp;nbsp;* The issue somehow relates to {@link sun.awt.shell.ShellFolder}s usage in the {@link JFileChooser} or COM initialization.&lt;br/&gt;
&amp;nbsp;* A workaround could be calling a {@link JFileChooser} in any thread&lt;br/&gt;
&amp;nbsp;* or COM initialization in the same thread before using {@link AudioSystem}.&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
@Disabled // manual tests&lt;br/&gt;
class RecordChannelLockingTest {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;private final ExecutorService thread1 = Executors.newSingleThreadExecutor();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;private final ExecutorService thread2 = Executors.newSingleThreadExecutor();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;private final Runnable maliciousMethod = this::fileChooser;&lt;br/&gt;
//  private final Runnable maliciousMethod = this::initCom;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@AfterEach&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shutdown() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.shutdown();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread2.shutdown();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// AudioSystem is accessed before JFileChooser / COM&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Test // fails&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shouldRecordIfBeforeInTheSameThread() throws ExecutionException, InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(this::record).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// breakpoint, lock / unlock screen before resuming&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread1.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Test // fails&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shouldRecordIfBeforeInAnyThread() throws ExecutionException, InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread2.submit(this::record).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// breakpoint, lock / unlock screen before resuming&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread1.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Test // fails for file chooser, but successful for COM&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shouldRecordIfBeforeInAnyThread2() throws ExecutionException, InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread2.submit(this::record).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// breakpoint, lock / unlock screen before resuming&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread2.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// AudioSystem is accessed after JFileChooser / COM&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Test // successful&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shouldRecordIfAfterInTheSameThread() throws ExecutionException, InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(this::record).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// breakpoint, lock / unlock screen before resuming&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread1.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Test // successful for file chooser, but fails for COM&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shouldRecordIfAfterInOtherThread() throws ExecutionException, InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread2.submit(this::record).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// breakpoint, lock / unlock screen before resuming&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread1.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Test // successful for file chooser, but fails for COM&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void shouldRecordIfAfterInOtherThreadAndBeforeInTeSame() throws ExecutionException, InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread1.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread2.submit(this::record).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread2.submit(maliciousMethod).get();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// breakpoint, lock / unlock screen before resuming&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread2.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertDoesNotThrow(() -&amp;gt; thread1.submit(this::record).get());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void initCom() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;----&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Initializing COM&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Thread: &amp;quot; + Thread.currentThread().getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ole32.INSTANCE.CoInitializeEx(null, Ole32.COINIT_APARTMENTTHREADED);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void fileChooser() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;----&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;File chooser created with hash &amp;quot; + new JFileChooser().hashCode());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Thread: &amp;quot; + Thread.currentThread().getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void record() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;----&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Recording...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Thread: &amp;quot; + Thread.currentThread().getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mixer mixer = getMixer();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Mixer: &amp;quot; + mixer.getMixerInfo().getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Line.Info lineInfo = mixer.getTargetLineInfo()[0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TargetDataLine line = (TargetDataLine) mixer.getLine(lineInfo);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;line.open();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;line.close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Recording stopped.&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (LineUnavailableException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new IllegalStateException(e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Mixer getMixer() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return Arrays.stream(AudioSystem.getMixerInfo())&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.map(AudioSystem::getMixer)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.filter(this::isRecordingDevice)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.skip(1) // to skip the primary driver and choose one directly&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.findAny()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.orElseThrow();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;boolean isRecordingDevice(Mixer mixer) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Line.Info[] lineInfos = mixer.getTargetLineInfo();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return lineInfos.length &amp;gt; 0 &amp;amp;&amp;amp; lineInfos[0].getLineClass() == TargetDataLine.class;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Option 1: Create JFileChooser before first AudioSystem call in any thread.&lt;br/&gt;
Option 2: Initialize COM before first AudioSystem call per thread.&lt;br/&gt;
Option 3: (Worked only for our complex GUI app, not in the tests) Use Swing&amp;#39;s EDT thread for AudioSystem calls.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5092491">JDK-8301846</key>
            <summary>Invalid TargetDataLine after screen lock when using JFileChooser or COM library</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rkannathpari">Renjith Kannath Pariyangad</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>cssn23_03_02</label>
                            <label>cssn23_07_01</label>
                            <label>cssn23_07_02</label>
                            <label>cssn23_08_01</label>
                            <label>cssn23_10_01</label>
                            <label>dcspn</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>reproducer-yes</label>
                            <label>sustaining</label>
                            <label>webbug</label>
                    </labels>
                <created>Wed, 25 Jan 2023 10:03:19 -0800</created>
                <updated>Wed, 17 Jan 2024 22:29:48 -0800</updated>
                            <resolved>Tue, 31 Oct 2023 11:22:04 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14636414" author="roboduke" created="Tue, 26 Dec 2023 07:51:51 -0800"  >[jdk11u-fix-request] Approval Request from Amos&lt;br/&gt;
&#8220;Backporting for parity with jdk 11.0.23-oracle. Unclean back port. SAP nightlies passed on 2023-12-24&#8221;</comment>
                            <comment id="14633804" author="roboduke" created="Tue, 12 Dec 2023 20:57:31 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2365&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2365&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-13 04:51:31 +0000</comment>
                            <comment id="14630272" author="roboduke" created="Thu, 30 Nov 2023 03:23:36 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2007&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2007&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-30 11:15:01 +0000</comment>
                            <comment id="14630268" author="goetz" created="Thu, 30 Nov 2023 03:15:46 -0800"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.11-oracle.&lt;br/&gt;
Risk limited to sound on windows.&lt;br/&gt;
Clean backport.&lt;br/&gt;
SAP nightly testing passed.</comment>
                            <comment id="14624223" author="JIRAUSER20403" created="Mon, 6 Nov 2023 19:00:59 -0800"  >Fix request: 21u&lt;br/&gt;
&lt;br/&gt;
The fix resolve &amp;#39;Invalid TargetDataLine error after screen lock&amp;#39; and the manual test case helps to verify.  &lt;br/&gt;
Clean backport.&lt;br/&gt;
Pull request: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/326&quot;&gt;https://git.openjdk.org/jdk21u/pull/326&lt;/a&gt;</comment>
                            <comment id="14624082" author="roboduke" created="Mon, 6 Nov 2023 07:24:07 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/326&quot;&gt;https://git.openjdk.org/jdk21u/pull/326&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-06 15:16:54 +0000</comment>
                            <comment id="14622503" author="dukebot" created="Tue, 31 Oct 2023 11:22:03 -0700"  >Changeset: 613a3cc6&lt;br/&gt;
Author:    Renjith Kannath Pariyangad &amp;lt;&lt;a href=&apos;mailto:renjith.kannath.pariyangad@oracle.com&apos;&gt;renjith.kannath.pariyangad@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Alexey Ivanov &amp;lt;&lt;a href=&apos;mailto:aivanov@openjdk.org&apos;&gt;aivanov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-10-31 18:20:38 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/613a3cc6896ef3c3f836d44de9b2fb05beba6e72&quot;&gt;https://git.openjdk.org/jdk/commit/613a3cc6896ef3c3f836d44de9b2fb05beba6e72&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14596457" author="roboduke" created="Sun, 16 Jul 2023 22:58:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14898&quot;&gt;https://git.openjdk.org/jdk/pull/14898&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-17 05:52:30 +0000</comment>
                            <comment id="14595981" author="JIRAUSER20403" created="Thu, 13 Jul 2023 01:16:00 -0700"  >Observation: Without  &amp;#39;Create a JFileChooser or init COM library&amp;#39; jsound.dll loading wrong GUID for recording devices(ID not present in Win registry), but its loading proper ID for Playback device. </comment>
                            <comment id="14566678" author="pnarayanaswa" created="Tue, 14 Mar 2023 03:06:01 -0700"  >Checked with Test case in Windows 10, Issue is reproducible. after locking of screen and logging-in and continuing with testcase execution, &lt;br/&gt;
Exception is thrown&lt;br/&gt;
----&lt;br/&gt;
Recording...&lt;br/&gt;
Thread: main&lt;br/&gt;
Mixer: Microphone Array (Realtek(R) Au&lt;br/&gt;
Recording stopped.&lt;br/&gt;
----&lt;br/&gt;
File chooser created with hash 175408781&lt;br/&gt;
Thread: main&lt;br/&gt;
Please lock / unlock screen and press Enter to proceed&lt;br/&gt;
&lt;br/&gt;
----&lt;br/&gt;
Recording...&lt;br/&gt;
Thread: main&lt;br/&gt;
Mixer: Microphone Array (Realtek(R) Au&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.IllegalStateException: javax.sound.sampled.LineUnavailableException: line with format PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian not supported.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at StandaloneTest.record(StandaloneTest.java:50)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at StandaloneTest.doTest(StandaloneTest.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at StandaloneTest.main(StandaloneTest.java:16)&lt;br/&gt;
Caused by: javax.sound.sampled.LineUnavailableException: line with format PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian not supported.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.desktop/com.sun.media.sound.DirectAudioDevice$DirectDL.implOpen(DirectAudioDevice.java:484)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.desktop/com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:115)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.desktop/com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:357)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at StandaloneTest.record(StandaloneTest.java:46)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
Test Result&lt;br/&gt;
=========&lt;br/&gt;
jdk8: Fail&lt;br/&gt;
jdk11: Fail&lt;br/&gt;
jdk17: Fail&lt;br/&gt;
jdk19: Fail&lt;br/&gt;
jdk20ea36: Fail&lt;br/&gt;
jdk21ea13: Fail&lt;br/&gt;
</comment>
                            <comment id="14566259" author="pnarayanaswa" created="Mon, 13 Mar 2023 04:37:26 -0700"  >Standalone reproducer received from submitter&amp;lt;attached testcase&amp;gt;</comment>
                            <comment id="14557448" author="pnarayanaswa" created="Mon, 6 Feb 2023 03:23:57 -0800"  >Mail to submitter&lt;br/&gt;
=============&lt;br/&gt;
Please share a standalone reproducer of the issue.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5114345">JDK-8319742</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5114536">JDK-8319920</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5114537">JDK-8319921</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116017">JDK-8321246</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117850">JDK-8322785</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118493">JDK-8323361</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                                        </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="104803" name="SoundDevices.cpp" size="1599" author="aivanov" created="Thu, 27 Jul 2023 09:00:50 -0700"/>
                            <attachment id="104804" name="SoundDevices.exe" size="497744" author="aivanov" created="Thu, 27 Jul 2023 09:00:51 -0700"/>
                            <attachment id="102694" name="StandaloneTest.java" size="2204" author="pnarayanaswa" created="Fri, 17 Feb 2023 00:48:31 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19301"><![CDATA[windows_10]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i303i3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="329"><![CDATA[javax.sound]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>