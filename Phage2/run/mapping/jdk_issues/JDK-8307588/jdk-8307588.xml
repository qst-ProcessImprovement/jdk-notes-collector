<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:17:01 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307588] [JVMCI] HotSpotConstantPool#lookupBootstrapMethodInvocation broken by JDK-8301995</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307588</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>As a result of the changes for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8301995&quot; title=&quot;Move invokedynamic resolution information out of ConstantPoolCacheEntry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8301995&quot;&gt;&lt;strike&gt;JDK-8301995&lt;/strike&gt;&lt;/a&gt;, `HotSpotConstantPool#lookupBootstrapMethodIntrospection` is broken as it no longer decodes the correct constant pool index for looking up the bootstrap method invocation for invokedynamic.&lt;br/&gt;
&lt;br/&gt;
This breaks native image on JDK 21+16, resulting in all kind of follow-up exception, for example:&lt;br/&gt;
```&lt;br/&gt;
Caused by: java.lang.NullPointerException: Cannot invoke &amp;quot;Object.getClass()&amp;quot; because &amp;quot;o&amp;quot; is null&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.checkReceiver(DirectMethodHandleAccessor.java:196)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:99)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.infrastructure.WrappedConstantPool$WrappedBootstrapMethodInvocation.getMethod(WrappedConstantPool.java:210)&lt;br/&gt;
```&lt;br/&gt;
The problem can easily be observed using the following patch for `TestDynamicConstant.java`:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
diff --git a/test/hotspot/jtreg/compiler/jvmci/jdk.vm.ci.hotspot.test/src/jdk/vm/ci/hotspot/test/TestDynamicConstant.java b/test/hotspot/jtreg/compiler/jvmci/jdk.vm.ci.hotspot.test/src/jdk/vm/ci/hotspot/test/TestDynamicConstant.java&lt;br/&gt;
index 6f94877b9..014154978 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/compiler/jvmci/jdk.vm.ci.hotspot.test/src/jdk/vm/ci/hotspot/test/TestDynamicConstant.java&lt;br/&gt;
+++ b/test/hotspot/jtreg/compiler/jvmci/jdk.vm.ci.hotspot.test/src/jdk/vm/ci/hotspot/test/TestDynamicConstant.java&lt;br/&gt;
@@ -333,6 +333,8 @@ private static void testLoadReferencedType(ResolvedJavaMethod method) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Assert.assertTrue((code[bci] &amp;amp; 0xff) == INVOKEDYNAMIC, &amp;quot;unexpected bytecode&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int cpi = beS4(code, bci + 1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method.getConstantPool().loadReferencedType(cpi, INVOKEDYNAMIC, false);&lt;br/&gt;
+        BootstrapMethodInvocation bmi = method.getConstantPool().lookupBootstrapMethodInvocation(cpi, INVOKEDYNAMIC);&lt;br/&gt;
+        Assert.assertEquals(bmi.getName(), &amp;quot;do_concat&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// @formatter:off&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
This results in an IOOB exception because a nonsense constant pool index is returned:&lt;br/&gt;
```&lt;br/&gt;
test jdk.vm.ci.hotspot.test.TestDynamicConstant.test(): failure&lt;br/&gt;
java.lang.IndexOutOfBoundsException: index 0 not between 1 and 35&lt;br/&gt;
	at jdk.internal.vm.ci/jdk.vm.ci.hotspot.HotSpotConstantPool.checkBounds(HotSpotConstantPool.java:490)&lt;br/&gt;
	at jdk.internal.vm.ci/jdk.vm.ci.hotspot.HotSpotConstantPool.getTagAt(HotSpotConstantPool.java:316)&lt;br/&gt;
	at jdk.internal.vm.ci/jdk.vm.ci.hotspot.HotSpotConstantPool.lookupBootstrapMethodInvocation(HotSpotConstantPool.java:596)&lt;br/&gt;
	at jdk.vm.ci.hotspot.test.TestDynamicConstant.testLoadReferencedType(TestDynamicConstant.java:336)&lt;br/&gt;
	at jdk.vm.ci.hotspot.test.TestDynamicConstant.testLookupBootstrapMethodInvocation(TestDynamicConstant.java:320)&lt;br/&gt;
	at jdk.vm.ci.hotspot.test.TestDynamicConstant.test(TestDynamicConstant.java:285)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)&lt;br/&gt;
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)&lt;br/&gt;
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&lt;br/&gt;
	at org.testng.TestRunner.privateRun(TestRunner.java:764)&lt;br/&gt;
	at org.testng.TestRunner.run(TestRunner.java:585)&lt;br/&gt;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)&lt;br/&gt;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)&lt;br/&gt;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)&lt;br/&gt;
	at org.testng.SuiteRunner.run(SuiteRunner.java:286)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)&lt;br/&gt;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)&lt;br/&gt;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)&lt;br/&gt;
	at org.testng.TestNG.runSuites(TestNG.java:1069)&lt;br/&gt;
	at org.testng.TestNG.run(TestNG.java:1037)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:102)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:58)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1592)&lt;br/&gt;
```</description>
                <environment></environment>
        <key id="5100285">JDK-8307588</key>
            <summary>[JVMCI] HotSpotConstantPool#lookupBootstrapMethodInvocation broken by JDK-8301995</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jeisl">Josef Eisl</assignee>
                                    <reporter username="jeisl">Josef Eisl</reporter>
                        <labels>
                            <label>jvmci</label>
                            <label>oracle-triage-11</label>
                            <label>oracle-triage-17</label>
                            <label>oracle-triage-21</label>
                            <label>regression</label>
                    </labels>
                <created>Mon, 8 May 2023 01:09:54 -0700</created>
                <updated>Wed, 12 Jul 2023 07:57:01 -0700</updated>
                            <resolved>Tue, 9 May 2023 05:30:58 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14580170" author="dukebot" created="Tue, 9 May 2023 05:30:56 -0700"  >Changeset: 040cb7b5&lt;br/&gt;
Author:    Josef Eisl &amp;lt;&lt;a href=&apos;mailto:jeisl@openjdk.org&apos;&gt;jeisl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Doug Simon &amp;lt;&lt;a href=&apos;mailto:dnsimon@openjdk.org&apos;&gt;dnsimon@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-09 12:29:27 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/040cb7b5a9d0d11c601749951df8ff3089250049&quot;&gt;https://git.openjdk.org/jdk/commit/040cb7b5a9d0d11c601749951df8ff3089250049&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14580068" author="jeisl" created="Mon, 8 May 2023 23:12:26 -0700"  >Unfortunately there was none. I&amp;#39;ve updated the existing test to cover the method in question, but I assume there is still quite some code that is not yet covered by jtreg tests. We should probably port more tests from the graal repo to jtreg, but most of them rely on the graal compiler, so it is not always that trivial.</comment>
                            <comment id="14579986" author="dholmes" created="Mon, 8 May 2023 15:24:28 -0700"  >Is there no testing that would have caught this when &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8301995&quot; title=&quot;Move invokedynamic resolution information out of ConstantPoolCacheEntry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8301995&quot;&gt;&lt;strike&gt;JDK-8301995&lt;/strike&gt;&lt;/a&gt; was done?</comment>
                            <comment id="14579823" author="kvn" created="Mon, 8 May 2023 08:59:59 -0700"  >Please add prefix [JVMCI] to Subject since it is JVMCI issue.</comment>
                            <comment id="14579699" author="chagedorn" created="Mon, 8 May 2023 03:19:11 -0700"  >ILW = Broken Native Images, only with JVMCI, no workaround = HLH = P2</comment>
                            <comment id="14579680" author="roboduke" created="Mon, 8 May 2023 01:42:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13858&quot;&gt;https://git.openjdk.org/jdk/pull/13858&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-08 08:34:15 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5093573">JDK-8301995</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31evf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>