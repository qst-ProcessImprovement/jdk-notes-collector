<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:44:53 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8257967] JFR: Events for loaded agents</title>
                <link>https://bugs.openjdk.org/browse/JDK-8257967</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Sometimes when going through customer recordings, it would be interesting to know if any agents have been loaded, and where from. A requestable event with all the agents that have been dynamically attached, at what time they were attached, and from where, would be helpful.</description>
                <environment></environment>
        <key id="5036888">JDK-8257967</key>
            <summary>JFR: Events for loaded agents</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mgronlun">Markus Gr&#246;nlund</assignee>
                                    <reporter username="hirt">Marcus Hirt</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Dec 2020 04:25:05 -0800</created>
                <updated>Thu, 8 Feb 2024 19:02:30 -0800</updated>
                            <resolved>Mon, 17 Apr 2023 03:26:59 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14574634" author="mbaesken" created="Tue, 18 Apr 2023 05:19:22 -0700"  >looks like the code relies on  os::dll_address_to_library_name  returning a valid offset in non-error cases (see  JvmtiAgentList::lookup ). However this is not always the case but optional, see os.hpp  :&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Locate DLL/DSO. On success, full path of the library is copied to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// buf, and offset is optionally set to be the distance between addr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// and the library&amp;#39;s base address. On failure, buf[0] is set to &amp;#39;\0&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// and offset is set to -1 (if offset is non-null).&lt;br/&gt;
&amp;nbsp;&amp;nbsp;static bool dll_address_to_library_name(address addr, char* buf, int buflen, int* offset);&lt;br/&gt;
&lt;br/&gt;
On AIX , offset is set to -1 (the optional functionality is not supported).</comment>
                            <comment id="14574608" author="mbaesken" created="Tue, 18 Apr 2023 03:36:54 -0700"  >On AIX (when running test with fastdebug binaries) hundreds of jtreg tests fail after this. I created &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306278&quot;&gt;https://bugs.openjdk.org/browse/JDK-8306278&lt;/a&gt; .&lt;br/&gt;
For example a lot of  jdk/jshell/ tests fail .</comment>
                            <comment id="14574104" author="dukebot" created="Mon, 17 Apr 2023 03:26:56 -0700"  >Changeset: 5c95bb1c&lt;br/&gt;
Author:    Markus Gr&amp;#xF6;nlund &amp;lt;&lt;a href=&apos;mailto:mgronlun@openjdk.org&apos;&gt;mgronlun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-17 10:25:36 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/5c95bb1c5146e13dd213d5ca6e02e2a02ca0323e&quot;&gt;https://git.openjdk.org/jdk/commit/5c95bb1c5146e13dd213d5ca6e02e2a02ca0323e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14565418" author="hirt" created="Wed, 8 Mar 2023 14:39:08 -0800"  >Neat!</comment>
                            <comment id="14565290" author="roboduke" created="Wed, 8 Mar 2023 04:54:51 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12923&quot;&gt;https://git.openjdk.org/jdk/pull/12923&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-08 12:41:15 +0000</comment>
                            <comment id="14565288" author="mgronlun" created="Wed, 8 Mar 2023 04:40:04 -0800"  >&lt;br/&gt;
We are adding support to let JFR report on Agents.&lt;br/&gt;
&lt;br/&gt;
#### Design&lt;br/&gt;
&lt;br/&gt;
An Agent is a library that uses any instrumentation or profiling APIs. Most agents are started and initialized on the command line, but agents can also be loaded dynamically during runtime. Because command line agents initialize during the VM startup sequence, they add to the overall startup time latency in getting the VM ready. The events will report on the time the agent took to initialize.&lt;br/&gt;
&lt;br/&gt;
A JavaAgent is an agent written in the Java programming language, using the APIs in the package [java.lang.instrument](&lt;a href=&quot;https://docs.oracle.com/en/java/javase/19/docs/api/java.instrument/java/lang/instrument/package-summary.html&quot;&gt;https://docs.oracle.com/en/java/javase/19/docs/api/java.instrument/java/lang/instrument/package-summary.html&lt;/a&gt;)&lt;br/&gt;
&lt;br/&gt;
A JavaAgent is sometimes called a JPLIS agent, where the acronym JPLIS stands for Java Programming Language Instrumentation Services.&lt;br/&gt;
&lt;br/&gt;
To report on JavaAgents, JFR will add the new event type jdk.JavaAgent and events will look similar to these two examples:&lt;br/&gt;
&lt;br/&gt;
// Command line&lt;br/&gt;
jdk.JavaAgent {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;startTime = 12:31:19.789 (2023-03-08)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;name = &amp;quot;JavaAgent.jar&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;options = &amp;quot;foo=bar&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;dynamic = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;initialization = 12:31:15.574 (2023-03-08)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;initializationTime = 172 ms&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
// Dynamic load&lt;br/&gt;
jdk.JavaAgent {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;startTime = 12:31:31.158 (2023-03-08)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;name = &amp;quot;JavaAgent.jar&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;options = &amp;quot;bar=baz&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;dynamic = true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;initialization = 12:31:31.037 (2023-03-08)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;initializationTime = 64,1 ms&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The jdk.JavaAgent event type is a JFR periodic event that iterates over running Java agents.&lt;br/&gt;
&lt;br/&gt;
For a JavaAgent event, the agent&amp;#39;s name will be the specific .jar file containing the instrumentation code. The options will be the specific options passed to the .jar file as part of launching the agent, for example, on the command line: -javaagent: JavaAgent.jar=foo=bar.&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;dynamic&amp;quot; field denotes if the agent was loaded via the command line (dynamic = false) or dynamically (dynamic = true)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;initialization&amp;quot; is the timestamp the JVM invoked the initialization method, and &amp;quot;initializationTime&amp;quot; is the duration of executing the initialization method.&lt;br/&gt;
&lt;br/&gt;
&amp;quot;startTime&amp;quot; represents the time the JFR framework issued the periodic event; hence &amp;quot;initialization&amp;quot; will be earlier than &amp;quot;startTime&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
An agent can also be written in a native programming language using the [JVM Tools Interface (JVMTI)](&lt;a href=&quot;https://docs.oracle.com/en/java/javase/19/docs/specs/jvmti.html&quot;&gt;https://docs.oracle.com/en/java/javase/19/docs/specs/jvmti.html&lt;/a&gt;). This kind of agent, sometimes called a native agent, is a platform-specific binary, sometimes referred to as a library, but here it means a .so or .dll file.&lt;br/&gt;
&lt;br/&gt;
To report on native agents, JFR will add the new event type jdk.NativeAgent and events will look similar to this example:&lt;br/&gt;
&lt;br/&gt;
jdk.NativeAgent {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;startTime = 12:31:40.398 (2023-03-08)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;name = &amp;quot;jdwp&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;options = &amp;quot;transport=dt_socket,server=y,address=any,onjcmd=y&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;dynamic = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;initialization = 12:31:36.142 (2023-03-08)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;initializationTime = 0,00184 ms&lt;br/&gt;
&amp;nbsp;&amp;nbsp;path = &amp;quot;c:\ade\github\openjdk\jdk\build\windows-x86_64-server-slowdebug\jdk\bin\jdwp.dll&amp;quot;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The layout of the event type is very similar to the jdk.JavaAgent event, but here the path to the native library is reported.&lt;br/&gt;
&lt;br/&gt;
The initialization of a native agent is performed by invoking an agent-specified callback routine. The &amp;quot;initialization&amp;quot; is when the JVM sent or would have sent the JVMTI VMInit event to a specified callback. &amp;quot;initializationTime&amp;quot; is the duration to execute that specific callback. If no callback is specified for the JVMTI VMInit event, the &amp;quot;initializationTime&amp;quot; will be 0.&lt;br/&gt;
&lt;br/&gt;
#### Implementation&lt;br/&gt;
&lt;br/&gt;
There has not existed a reification of a JavaAgent directly in the JVM, as these are built on top of the JDK native library, &amp;quot;instrument&amp;quot;, using a many-to-one mapping. At the level of the JVM, the only representation of agents after startup is through JvmtiEnv&amp;#39;s, which agents request from the JVM during startup and initialization &#8212; as such, mapping which JvmtiEnv belongs to what JavaAgent was not possible before.&lt;br/&gt;
&lt;br/&gt;
Using implementation details of how the JDK native library &amp;quot;instrument&amp;quot; interacts with the JVM, we can build this mapping to track what JvmtiEnv&amp;#39;s &amp;quot;belong&amp;quot; to what JavaAgent. This mapping now lets us report the Java-relevant context (name, options) and measure the time it takes for the JavaAgent to initialize.&lt;br/&gt;
&lt;br/&gt;
When implementing this capability, it was necessary to refactor the code used to represent agents, AgentLibrary. The previous implementation was located primarily in arguments.cpp, and threads.cpp but also jvmtiExport.cpp.&lt;br/&gt;
&lt;br/&gt;
The refactoring isolates the relevant logic into two new modules, prims/agent.hpp and prims/agentList.hpp. Breaking out this code from their older places will help reduce the sizes of oversized arguments.cpp and threads.cpp.&lt;br/&gt;
&lt;br/&gt;
The previous two lists that maintained &amp;quot;agents&amp;quot; (JVMTI) and &amp;quot;libraries&amp;quot; (Xrun) were not thread-safe for concurrent iterations. A single list that allows for concurrent iterations is therefore introduced.</comment>
                            <comment id="14559108" author="roboduke" created="Fri, 10 Feb 2023 03:21:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12460&quot;&gt;https://git.openjdk.org/jdk/pull/12460&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-07 18:43:32 +0000</comment>
                            <comment id="14387490" author="egahlin" created="Thu, 10 Dec 2020 01:44:21 -0800"  >This is a good idea, should have been implemented ten years ago. &lt;br/&gt;
&lt;br/&gt;
Agents loaded on the command line could be included as well. </comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5095811">JMC-8054</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5099011">JDK-8306538</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121068">JDK-8325530</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5098710">JDK-8306278</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5098719">JDK-8306282</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2qp7v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17414"><![CDATA[b19]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>