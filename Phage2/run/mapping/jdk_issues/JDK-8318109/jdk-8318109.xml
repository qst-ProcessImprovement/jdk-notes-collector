<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:43:34 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8318109] Writing JFR records while a CHT has taken its lock asserts in rank checking</title>
                <link>https://bugs.openjdk.org/browse/JDK-8318109</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
applications/kitchensink/Kitchensink.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
[2023-10-13T18:30:10.562876800Z] Gathering output for process 26612&lt;br/&gt;
[2023-10-13T18:30:10.917412600Z] Waiting for completion for process 26612&lt;br/&gt;
[2023-10-13T18:30:10.934455800Z] Waiting for completion finished for process 26612&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] #  Internal Error (c:\\sb\\prod\\1697208132\\workspace\\open\\src\\hotspot\\share\\runtime\\mutex.cpp:448), pid=39360, tid=41536&lt;br/&gt;
[stress.process.out] #  assert(false) failed: Attempting to acquire lock JfrStacktrace_lock/stackwatermark-1 out of order with lock ConcurrentHashTableResize_lock/service-1 -- possible deadlock&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # JRE version: Java(TM) SE Runtime Environment (22.0+20) (fastdebug build 22-ea+20-1513)&lt;br/&gt;
[stress.process.out] # Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-ea+20-1513, mixed mode, sharing, tiered, compressed class ptrs, z gc, windows-amd64)&lt;br/&gt;
[stress.process.out] # Core dump will be written. Default location: C:\\sb\\prod\\1697220906\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_kitchensink_Kitchensink_java\\scratch\\0\\hs_err_pid39360.mdmp&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # JFR recording file will be written. Location: C:\\sb\\prod\\1697220906\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_kitchensink_Kitchensink_java\\scratch\\0\\hs_err_pid39360.jfr&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] Unsupported internal testing APIs have been used.&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] # An error report file with more information is saved as:&lt;br/&gt;
[stress.process.out] # C:\\sb\\prod\\1697220906\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_kitchensink_Kitchensink_java\\scratch\\0\\hs_err_pid39360.log&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # If you would like to submit a bug report, please visit:&lt;br/&gt;
[stress.process.out] #   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[2023-10-13T18:31:10.986027400Z] Gathering output for process 41560&lt;br/&gt;
[2023-10-13T18:31:12.106450700Z] Waiting for completion for process 41560&lt;br/&gt;
[2023-10-13T18:31:12.106450700Z] Waiting for completion finished for process 41560&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x000001bd05db61a0):  JavaThread &amp;quot;JFR Periodic Tasks&amp;quot; daemon [_thread_in_vm, id=41536, stack(0x0000008f77900000,0x0000008f77a00000) (1024K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000008f77900000,0x0000008f77a00000]&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0xc88c31]  os::win32::platform_print_native_stack+0x101  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0xf25a0f]  VMError::report+0x147f  (vmError.cpp:1000)&lt;br/&gt;
V  [jvm.dll+0xf27f05]  VMError::report_and_die+0x645  (vmError.cpp:1819)&lt;br/&gt;
V  [jvm.dll+0xf28624]  VMError::report_and_die+0x64  (vmError.cpp:1584)&lt;br/&gt;
V  [jvm.dll+0x559ecb]  report_vm_error+0x5b  (debug.cpp:191)&lt;br/&gt;
V  [jvm.dll+0xc225ed]  Mutex::check_rank+0x22d  (mutex.cpp:447)&lt;br/&gt;
V  [jvm.dll+0xc22c93]  Mutex::lock_without_safepoint_check+0x43  (mutex.cpp:153)&lt;br/&gt;
V  [jvm.dll+0x858604]  JfrStackTraceRepository::add_trace+0x24  (jfrStackTraceRepository.cpp:202)&lt;br/&gt;
V  [jvm.dll+0x858e15]  JfrStackTraceRepository::record+0x155  (jfrStackTraceRepository.cpp:166)&lt;br/&gt;
V  [jvm.dll+0xfa7e09]  JfrEvent&amp;lt;EventZPageAllocation&amp;gt;::write_event+0x119  (jfrEvent.hpp:209)&lt;br/&gt;
V  [jvm.dll+0x10070b3]  ZPageAllocator::alloc_page+0x403  (zPageAllocator.cpp:744)&lt;br/&gt;
V  [jvm.dll+0xfe1ccf]  ZHeap::alloc_page+0x3f  (zHeap.cpp:227)&lt;br/&gt;
V  [jvm.dll+0x100467f]  ZObjectAllocator::alloc_page+0x5f  (zObjectAllocator.cpp:60)&lt;br/&gt;
V  [jvm.dll+0x10044cc]  ZObjectAllocator::alloc_object_in_shared_page+0x6c  (zObjectAllocator.cpp:94)&lt;br/&gt;
V  [jvm.dll+0x10041c6]  ZObjectAllocator::alloc_object+0x66  (zObjectAllocator.cpp:162)&lt;br/&gt;
V  [jvm.dll+0x1017ece]  ZRelocate::relocate_object+0xfe  (zRelocate.cpp:379)&lt;br/&gt;
V  [jvm.dll+0x181dc]  ZBarrier::load_barrier_on_oop_field_preloaded+0x3c  (zBarrier.inline.hpp:479)&lt;br/&gt;
V  [jvm.dll+0x2d2931]  AccessInternal::PostRuntimeDispatch&amp;lt;ZBarrierSet::AccessBarrier&amp;lt;593988,ZBarrierSet&amp;gt;,2,593988&amp;gt;::oop_access_barrier+0x31  (access.inline.hpp:86)&lt;br/&gt;
V  [jvm.dll+0x4abc3d]  WeakHandle::peek+0x3d  (weakHandle.inline.hpp:39)&lt;br/&gt;
V  [jvm.dll+0xda87b1]  ConcurrentHashTable&amp;lt;StringTableConfig,11&amp;gt;::statistics_calculate&amp;lt;SizeFunc&amp;gt;+0xc1  (concurrentHashTable.inline.hpp:1239)&lt;br/&gt;
V  [jvm.dll+0xdaaaf3]  StringTable::get_table_statistics+0x113  (stringTable.cpp:628)&lt;br/&gt;
V  [jvm.dll+0x8463e5]  JfrPeriodicEventSet::requestStringTableStatistics+0x25  (jfrPeriodic.cpp:642)&lt;br/&gt;
V  [jvm.dll+0x8321a5]  jfr_emit_event+0x85  (jfrJniMethod.cpp:231)&lt;br/&gt;
C  0x000001bd58940ce1  (no source info available)&lt;br/&gt;
&lt;br/&gt;
The last pc belongs to native nmethod (printed below).&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
J 12002  jdk.jfr.internal.JVM.emitEvent(JJJ)Z &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt; (0 bytes) @ 0x000001bd58940c46 [0x000001bd58940bc0+0x0000000000000086]&lt;br/&gt;
J 36336 c1 jdk.jfr.internal.periodic.JVMEventTask.execute(JLjdk/jfr/internal/periodic/PeriodicType;)V &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt; (50 bytes) @ 0x000001bd505c5794 [0x000001bd505c53e0+0x00000000000003b4]&lt;br/&gt;
J 36645 c2 jdk.jfr.internal.periodic.PeriodicTask.run(JLjdk/jfr/internal/periodic/PeriodicType;)V &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt; (55 bytes) @ 0x000001bd5821c8bc [0x000001bd5821c840+0x000000000000007c]&lt;br/&gt;
J 36852 c1 jdk.jfr.internal.periodic.PeriodicEvents.doPeriodic()J &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt; (349 bytes) @ 0x000001bd51940284 [0x000001bd5193edc0+0x00000000000014c4]&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.periodicTask()V+47 &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1()V+1 &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder$$Lambda+0x000001c1640e0668.run()V+4 &lt;a href=&apos;mailto:jdk.jfr@22-ea&apos;&gt;jdk.jfr@22-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x000001bd578a106f&lt;br/&gt;
Lock stack of current Java thread (top to bottom):&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
[error occurred during error reporting (printing code blobs if possible), id 0xe0000000, Internal Error (c:\sb\prod\1697208132\workspace\open\src\hotspot\share\runtime\mutex.cpp:448)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
This looks like the same failure mode that was addressed via:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317440&quot; title=&quot;Lock rank checking fails when code root set is modified with the Servicelock held after JDK-8315503&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317440&quot;&gt;&lt;strike&gt;JDK-8317440&lt;/strike&gt;&lt;/a&gt; Lock rank checking fails when code root set is modified with the Servicelock held after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8315503&quot; title=&quot;G1: Code root scan causes long GC pauses due to imbalanced iteration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8315503&quot;&gt;&lt;strike&gt;JDK-8315503&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317440&quot; title=&quot;Lock rank checking fails when code root set is modified with the Servicelock held after JDK-8315503&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317440&quot;&gt;&lt;strike&gt;JDK-8317440&lt;/strike&gt;&lt;/a&gt; is integrated in jdk-22+19-1444 and&lt;br/&gt;
this failure sighting occurred in jdk-22+20-1513-tier3.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m starting this bug off in hotspot/gc and at P2 just like &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317440&quot; title=&quot;Lock rank checking fails when code root set is modified with the Servicelock held after JDK-8315503&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317440&quot;&gt;&lt;strike&gt;JDK-8317440&lt;/strike&gt;&lt;/a&gt;.</description>
                <environment></environment>
        <key id="5112384">JDK-8318109</key>
            <summary>Writing JFR records while a CHT has taken its lock asserts in rank checking</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tschatzl">Thomas Schatzl</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>gc-pending-review</label>
                            <label>genzgc</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-hard</label>
                            <label>tier3</label>
                            <label>tier8</label>
                    </labels>
                <created>Fri, 13 Oct 2023 12:09:28 -0700</created>
                <updated>Fri, 19 Apr 2024 03:57:12 -0700</updated>
                            <resolved>Mon, 23 Oct 2023 07:02:02 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14663107" author="roboduke" created="Fri, 5 Apr 2024 00:57:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/454&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/454&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-05 07:51:48 +0000</comment>
                            <comment id="14663104" author="goetz" created="Fri, 5 Apr 2024 00:51:27 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.4-oracle.&lt;br/&gt;
Medium to low risk. Lock ordering is sensible, but it should basically affect jfr which is not that central to the JVM.&lt;br/&gt;
Clean backport. SAP nightly testing passed.</comment>
                            <comment id="14620296" author="dcubed" created="Mon, 23 Oct 2023 14:20:21 -0700"  >The fix for this bug is integrated in jdk-22+21-1629.</comment>
                            <comment id="14620176" author="dukebot" created="Mon, 23 Oct 2023 07:02:00 -0700"  >Changeset: 9f767aa4&lt;br/&gt;
Author:    Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-10-23 14:00:07 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/9f767aa44b4699ed5404b934ac751f2cdd0ba824&quot;&gt;https://git.openjdk.org/jdk/commit/9f767aa44b4699ed5404b934ac751f2cdd0ba824&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14619409" author="roboduke" created="Thu, 19 Oct 2023 00:58:36 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16242&quot;&gt;https://git.openjdk.org/jdk/pull/16242&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-18 10:28:46 +0000</comment>
                            <comment id="14618411" author="tschatzl" created="Mon, 16 Oct 2023 08:27:38 -0700"  >The problem is that current lock ranks are not set up to write out JFR stack traces while any ConcurrentHashMap is locking the resize map.&lt;br/&gt;
&lt;br/&gt;
In this case, while gathering CHT statistics, there is a relocation that triggers ZGC page allocation which causes JFR to write out data to its recording.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5127373">JDK-8330660</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126012">JDK-8329523</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5111641">JDK-8317440</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121005">JDK-8326092</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33h7v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17412"><![CDATA[b21]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>