<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:38:49 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8320602] Lock contention in SchemaDVFactory.getInstance()</title>
                <link>https://bugs.openjdk.org/browse/JDK-8320602</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
OpenJDK Runtime Environment (build 21+35-2513)                  &lt;br/&gt;
OpenJDK 64-Bit Server VM (build 21+35-2513, mixed mode, sharing)&lt;br/&gt;
&lt;br/&gt;
Observed under Linux (Ubuntu 20.04 LTS), can also be reproduced on other platforms.&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
We observed lock contention on the synchronized method SchemaDVFactory.getInstance() when parsing/validating many XML InputStreams with parallel threads using JAXB unmarshallers with XML Schema validation.&lt;br/&gt;
&lt;br/&gt;
In our use case, we were not able to parse/validate more than ~3,000 files per second, although the CPU load of a Xeon(R) W-2195 CPU (18 Cores+HT) was only about 30%. Performance even degraded when increasing the number of threads used.&lt;br/&gt;
&lt;br/&gt;
Profiling with VisualVM and YourKit clearly indicated lock congestion on the synchronized method SchemaDVFactory.getInstance().&lt;br/&gt;
&lt;br/&gt;
We observed that the problem does *not* occur when using the external Xerces2 library for XML Schema validation. Note that in Xerces2, the synchronized keyword (also for getInstance(String factoryClass)) were removed in 2007 with a commit message indicating they observed similar multithreading issues as we did:&lt;br/&gt;
&lt;a href=&quot;https://svn.apache.org/viewvc/xerces/java/trunk/src/org/apache/xerces/impl/dv/SchemaDVFactory.java?revision=558582&amp;view=markup&quot;&gt;https://svn.apache.org/viewvc/xerces/java/trunk/src/org/apache/xerces/impl/dv/SchemaDVFactory.java?revision=558582&amp;amp;view=markup&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
1. Create Schema instance from XSD using SchemaFactory (in our case, the schema is quite complex)&lt;br/&gt;
2. Create (single) JAXBContext&lt;br/&gt;
3. Repeatedly start threads to create a multithreaded CPU load. In each thread, create an unmarshaller from the JAXBContext using JAXBContext.createUnmarshaller(), enable schema validation with Unmarshaller.setSchema() and parse an Input Stream (in our use case, ~20..100kb XML)&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
CPU load should reach ~100% when creating enough threads. Profilers should show that threads are either working or sleeping/parked.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
CPU load does not reach ~100%, not even 50%, no matter how many threads are running. Profilers show that threads spend a lot of time waiting for locks.&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
see solution in Xerces2, as they were able to remove the synchronized keyword without losing functionality&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5115284">JDK-8320602</key>
            <summary>Lock contention in SchemaDVFactory.getInstance()</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="joehw">Joe Wang</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-sqe</label>
                            <label>webbug</label>
                    </labels>
                <created>Wed, 22 Nov 2023 06:11:32 -0800</created>
                <updated>Tue, 16 Jul 2024 00:46:56 -0700</updated>
                            <resolved>Mon, 27 Nov 2023 22:51:06 -0800</resolved>
                                    <version>21.0.1</version>
                                    <fixVersion>22</fixVersion>
                                    <component>xml</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14689290" author="mbaesken" created="Thu, 11 Jul 2024 22:51:48 -0700"  >jdk11u-dev backport request&lt;br/&gt;
I would like to have the patch in OpenJDK 11u-dev as well, for parity with Oracle JDK. The backport is clean and low risk.</comment>
                            <comment id="14689288" author="mbaesken" created="Thu, 11 Jul 2024 22:48:16 -0700"  >jdk17u-dev backport request&lt;br/&gt;
I would like to have the patch in OpenJDK 17u-dev as well, for parity with Oracle JDK. The backport is clean and low risk.</comment>
                            <comment id="14689086" author="roboduke" created="Thu, 11 Jul 2024 06:51:53 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2851&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2851&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-11 13:46:13 +0000</comment>
                            <comment id="14689085" author="roboduke" created="Thu, 11 Jul 2024 06:48:31 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2706&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2706&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-11 13:43:21 +0000</comment>
                            <comment id="14678460" author="roboduke" created="Mon, 3 Jun 2024 11:10:14 -0700"  >[jdk21u-fix-request] Approval Request from Neethu Prasad&lt;br/&gt;
Backport fix to jdk21 to avoid lock contention in SchemaDVFactory.getInstance(); applies cleanly; All tests passed; Risk is low: Similar change was made in upstream xerces lib 17 years ago.</comment>
                            <comment id="14677858" author="roboduke" created="Fri, 31 May 2024 08:43:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/632&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/632&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 15:36:51 +0000</comment>
                            <comment id="14629380" author="dukebot" created="Mon, 27 Nov 2023 22:51:05 -0800"  >Changeset: 0678253b&lt;br/&gt;
Author:    Joe Wang &amp;lt;&lt;a href=&apos;mailto:joehw@openjdk.org&apos;&gt;joehw@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-28 06:48:22 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0678253bffca91775d29d2942f48c806ab4d2cab&quot;&gt;https://git.openjdk.org/jdk/commit/0678253bffca91775d29d2942f48c806ab4d2cab&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14629161" author="joehw" created="Mon, 27 Nov 2023 10:59:45 -0800"  >Note for testing: run the existing XML tests or tier2 to verify that there&amp;#39;s no regression.</comment>
                            <comment id="14629116" author="roboduke" created="Mon, 27 Nov 2023 09:31:41 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16829&quot;&gt;https://git.openjdk.org/jdk/pull/16829&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-27 17:24:35 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131022">JDK-8333551</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5133770">JDK-8335964</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134003">JDK-8336158</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134004">JDK-8336159</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134015">JDK-8336169</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134257">JDK-8336386</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134301">JDK-8336426</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17048"><![CDATA[linux_ubuntu]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33ypf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="288"><![CDATA[javax.xml.validation]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>