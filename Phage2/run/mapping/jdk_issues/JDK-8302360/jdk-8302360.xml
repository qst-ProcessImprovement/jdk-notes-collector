<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:47:30 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302360] Atomic*.compareAndExchange Javadoc unclear</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302360</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Atomic*.compareAndExchange Javadoc is omitting what the contract of the method return value is in the case of a failed comparison.&lt;br/&gt;
&lt;br/&gt;
Example:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Returns:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the witness value, which will be the same as the expected value if successful&amp;quot;</description>
                <environment></environment>
        <key id="5094010">JDK-8302360</key>
            <summary>Atomic*.compareAndExchange Javadoc unclear</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="5" iconUrl="https://bugs.openjdk.org/images/jbsImages/p5.png">P5</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vklang">Viktor Klang</assignee>
                                    <reporter username="vklang">Viktor Klang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Feb 2023 12:35:41 -0800</created>
                <updated>Thu, 16 Mar 2023 00:18:31 -0700</updated>
                            <resolved>Thu, 9 Mar 2023 16:33:47 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14565695" author="dukebot" created="Thu, 9 Mar 2023 16:33:46 -0800"  >Changeset: d06308c5&lt;br/&gt;
Author:    Viktor Klang &amp;lt;&lt;a href=&apos;mailto:viktor.klang@oracle.com&apos;&gt;viktor.klang@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Martin Buchholz &amp;lt;&lt;a href=&apos;mailto:martin@openjdk.org&apos;&gt;martin@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-10 00:31:04 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/d06308c54a6f3782565eae343778436013205e21&quot;&gt;https://git.openjdk.org/jdk/commit/d06308c54a6f3782565eae343778436013205e21&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14564655" author="roboduke" created="Mon, 6 Mar 2023 05:33:29 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12880&quot;&gt;https://git.openjdk.org/jdk/pull/12880&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-06 13:23:59 +0000</comment>
                            <comment id="14561364" author="JIRAUSER20508" created="Mon, 20 Feb 2023 02:35:08 -0800"  >Personally I think either capitalizing &amp;quot;Witness Value&amp;quot; or putting an &amp;lt;em&amp;gt; around it would be an improvement, since it is a contextually defined concept.</comment>
                            <comment id="14561265" author="dholmes" created="Sun, 19 Feb 2023 17:25:22 -0800"  >I&amp;#39;m inclined to say this is &amp;quot;not an issue&amp;quot; and any attempt at &amp;quot;clarification&amp;quot; here will potentially just make things worse.&lt;br/&gt;
&lt;br/&gt;
The key thing with the return documentation is that it tells you what is returned and what constitutes success of the method - and the existing wording does exactly that.</comment>
                            <comment id="14561123" author="smarks" created="Fri, 17 Feb 2023 10:40:04 -0800"  >Note that the same wording appears in a bunch of places in the atomic classes: Boolean, Integer/Array, Long/Array, Reference/Array, times three for each of the plain, acquire, and release flavors.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m generally in favor of updating the specifications if it improves clarity without reducing accuracy and precision. Some of the wording suggested here has been fine.&lt;br/&gt;
&lt;br/&gt;
On the other hand I still am a bit skeptical (though not entirely opposed) about whether this is worth it. If somebody doesn&amp;#39;t understand how the general compareAndExchange stuff works, will adjusting the wording here actually help? Maybe a brief explainer or some example code, e.g. in the package docs, would be more helpful. But only if this is a real problem.</comment>
                            <comment id="14560832" author="dholmes" created="Thu, 16 Feb 2023 14:25:25 -0800"  >In the failure case the returned value could be any value in the set of values that the field could be set to by the program logic.&lt;br/&gt;
&lt;br/&gt;
Perhaps this would be clearer:&lt;br/&gt;
&lt;br/&gt;
Returns:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;the witness value. If this equals the expected value then the operation was successful.&lt;br/&gt;
&lt;br/&gt;
?</comment>
                            <comment id="14560623" author="JIRAUSER20508" created="Thu, 16 Feb 2023 02:31:10 -0800"  >[~smarks] [~dholmes]&lt;br/&gt;
I think those are fair comments! The reason I opened this issue was that it was confusing when reading it (even if one knows what the operation does), but I can concede that it might be related to not being a native English-speaker. That &amp;quot;witness value&amp;quot; is a glossary term perhaps needs more highlighting&#8212;capitalize it &amp;quot;Witness Value&amp;quot; or adding &amp;lt;em&amp;gt; around it in the return clause of the Javadoc to make it clearer that it is defined elsewhere than the @return section?&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m fine with anything which makes these things easier to understand for people who are learning them, spelling out the &amp;quot;failure case return value&amp;quot; should ideally be stricter than &amp;quot;some other value&amp;quot; because that, to me, sounds like it is allowed to return a value picked at random. But that might be just me!</comment>
                            <comment id="14560534" author="smarks" created="Wed, 15 Feb 2023 20:26:59 -0800"  >[~vklang] The spec is complete if one already understands what compareAndExchange operations generally do. If one doesn&amp;#39;t already understand them, this family of methods probably isn&amp;#39;t the place to explain it. Is it really necessary to change this? If you think it is, then something like what [~dholmes] suggested, e.g.,&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Returns:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the witness value, which will be the same as the expected value if successful, or some other value if unsuccessful&amp;quot;&lt;br/&gt;
</comment>
                            <comment id="14560510" author="dholmes" created="Wed, 15 Feb 2023 14:48:44 -0800"  >It returns the witness value on both success and failure. There is no omission. The additional &amp;quot;which will be the same as the expected value if successful&amp;quot; just clarifies what the witness value will be in the successful case. In the unsuccessful case the witness value will be something other than the &amp;quot;expected value&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
&amp;quot;witness value&amp;quot; is already defined:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Atomically sets the value to {@code newValue} if the current value,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* referred to as the &amp;lt;em&amp;gt;witness value&amp;lt;/em&amp;gt;, {@code == expectedValue},&lt;br/&gt;
</comment>
                            <comment id="14560325" author="JIRAUSER20508" created="Wed, 15 Feb 2023 04:24:53 -0800"  >[~smarks] Wdyt about the following:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* @return the witness value, which is the current value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* at the time of the operation.&lt;br/&gt;
&lt;br/&gt;
I think that is short, to the point, and doesn&amp;#39;t introduce branching in the explanation (explaining the implications of the value if it is a success or a failure).</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30cvf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="215"><![CDATA[java.util.concurrent]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>