<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:36:24 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8311548] AArch64: [ZGC] Many tests fail with &quot;assert(allocates2(pc)) failed: not in CodeBuffer memory&quot; on some CPUs</title>
                <link>https://bugs.openjdk.org/browse/JDK-8311548</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>==================&lt;br/&gt;
Problem&lt;br/&gt;
==================&lt;br/&gt;
&lt;br/&gt;
When testing jtreg cases under &amp;quot;test/hotspot/jtreg/compiler, test/hotspot/jtreg/gc&amp;quot;, we got many ZGC related test failures on Thunder X CPU and Thunder X2 CPU.&lt;br/&gt;
&lt;br/&gt;
==================&lt;br/&gt;
Here lists the failed test cases.&lt;br/&gt;
==================&lt;br/&gt;
&lt;br/&gt;
compiler/gcbarriers/TestZGCBarrierElision.java#id0&lt;br/&gt;
compiler/gcbarriers/TestZGCBarrierElision.java#id1&lt;br/&gt;
compiler/gcbarriers/UnsafeIntrinsicsTest.java#ZGenerationalDebug&lt;br/&gt;
compiler/loopopts/TestRangeCheckPredicatesControl.java#ZGenerational&lt;br/&gt;
compiler/loopstripmining/TestNoWarningLoopStripMiningIterSet.java#ZGenerational&lt;br/&gt;
compiler/uncommontrap/TestDeoptOOM.java#ZGenerational&lt;br/&gt;
compiler/vectorapi/VectorRebracket128Test.java#ZGenerational &lt;br/&gt;
gc/TestReferenceClearDuringReferenceProcessing.java#ZGenerational&lt;br/&gt;
gc/TestSystemGC.java#ZGenerational&lt;br/&gt;
gc/stress/gcbasher/TestGCBasherWithZ.java#id0&lt;br/&gt;
gc/stress/gcbasher/TestGCBasherWithZ.java#id2&lt;br/&gt;
gc/stress/gcold/TestGCOldWithZ.java#id0&lt;br/&gt;
gc/stringdedup/TestStringDeduplicationAgeThreshold.java#ZGenerational&lt;br/&gt;
gc/stringdedup/TestStringDeduplicationFullGC.java#ZGenerational&lt;br/&gt;
gc/stringdedup/TestStringDeduplicationInterned.java#ZGenerational&lt;br/&gt;
gc/stringdedup/TestStringDeduplicationPrintOptions.java#ZGenerational&lt;br/&gt;
gc/stringdedup/TestStringDeduplicationTableResize.java#ZGenerational&lt;br/&gt;
gc/stringdedup/TestStringDeduplicationYoungGC.java#ZGenerational&lt;br/&gt;
gc/z/TestAllocateHeapAt.java&lt;br/&gt;
gc/z/TestAlwaysPreTouch.java&lt;br/&gt;
gc/z/TestGarbageCollectorMXBean.java&lt;br/&gt;
gc/z/TestMemoryMXBean.java&lt;br/&gt;
gc/z/TestMemoryManagerMXBean.java&lt;br/&gt;
gc/z/TestNoUncommit.java&lt;br/&gt;
gc/z/TestPageCacheFlush.java&lt;br/&gt;
gc/z/TestRelocateInPlace.java&lt;br/&gt;
gc/z/TestSmallHeap.java&lt;br/&gt;
gc/z/TestUncommit.java&lt;br/&gt;
gc/z/TestZForceDiscontiguousHeapReservations.java&lt;br/&gt;
gc/z/TestZNMT.java &lt;br/&gt;
&lt;br/&gt;
==================&lt;br/&gt;
Error message:&lt;br/&gt;
==================&lt;br/&gt;
&lt;br/&gt;
----------System.out:(17/813)----------&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (~/jdk_build/jdk_src/src/hotspot/share/asm/codeBuffer.hpp:200), pid=108369, tid=108373&lt;br/&gt;
#  assert(allocates2(pc)) failed: not in CodeBuffer memory: 0x0000ffff9c921100 &amp;lt;= 0x0000ffff9c934c04 &amp;lt;= 0x0000ffff9c934c00&lt;br/&gt;
#&lt;br/&gt;
# JRE version:  (22.0) (fastdebug build )&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 22-internal-git-0916e6a60, mixed mode, sharing, compressed class ptrs, z gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x45413c]  Instruction_aarch64::~Instruction_aarch64()+0xbc&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: /tmp/core.108369&lt;br/&gt;
&lt;br/&gt;
==================&lt;br/&gt;
Backtrace info&lt;br/&gt;
==================&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000ffffada02000,0x0000ffffadc00000],  sp=0x0000ffffadbfcb50,  free space=2026k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x4542bc]  Instruction_aarch64::~Instruction_aarch64()+0xbc  (codeBuffer.hpp:200)&lt;br/&gt;
V  [libjvm.so+0x121a154]  MacroAssembler::pop(unsigned int, Register)+0x174  (assembler_aarch64.hpp:1489)&lt;br/&gt;
V  [libjvm.so+0x195e300]  ZCopyRuntimeCallSpill::restore()+0x3a0  (macroAssembler_aarch64.hpp:465)&lt;br/&gt;
V  [libjvm.so+0x19575b0]  copy_load_barrier(MacroAssembler*, Register, Address, Register)+0x120  (zBarrierSetAssembler_aarch64.cpp:438)&lt;br/&gt;
V  [libjvm.so+0x1957ab4]  copy_load_barrier(MacroAssembler*, FloatRegister, Address, Register, Register, FloatRegister)+0x3e4  (zBarrierSetAssembler_aarch64.cpp:511)&lt;br/&gt;
V  [libjvm.so+0x195cd24]  ZBarrierSetAssembler::copy_load_at(MacroAssembler*, unsigned long, BasicType, unsigned long, FloatRegister, FloatRegister, Address, Register, Register, FloatRegister)+0x234  (zBarrierSetAssembler_aarch64.cpp:734)&lt;br/&gt;
V  [libjvm.so+0x16ccf6c]  StubGenerator::ArrayCopyBarrierSetHelper::copy_load_at_32(FloatRegister, FloatRegister, Address)+0xac  (stubGenerator_aarch64.cpp:736)&lt;br/&gt;
V  [libjvm.so+0x16e42f4]  StubGenerator::copy_memory(unsigned long, BasicType, bool, Register, Register, Register, int)+0x684  (stubGenerator_aarch64.cpp:1241)&lt;br/&gt;
V  [libjvm.so+0x16e5ab0]  StubGenerator::generate_conjoint_copy(int, bool, bool, unsigned char*, unsigned char**, char const*, bool)+0x320  (stubGenerator_aarch64.cpp:1579)&lt;br/&gt;
V  [libjvm.so+0x16ed7c8]  StubGenerator::generate_arraycopy_stubs()+0x448  (stubGenerator_aarch64.cpp:1810)&lt;br/&gt;
V  [libjvm.so+0x16c8c40]  StubGenerator_generate(CodeBuffer*, StubCodeGenerator::StubsKind)+0x53c  (stubGenerator_aarch64.cpp:8292)&lt;br/&gt;
V  [libjvm.so+0x16f304c]  initialize_stubs(StubCodeGenerator::StubsKind, int, int, char const*, char const*, char const*)+0x11c  (stubRoutines.cpp:234)&lt;br/&gt;
V  [libjvm.so+0x16f41ec]  StubRoutines::initialize_final_stubs()+0x56c  (stubRoutines.cpp:318)&lt;br/&gt;
V  [libjvm.so+0xd671b0]  init_globals2()+0x70  (init.cpp:180)&lt;br/&gt;
V  [libjvm.so+0x17ac1c8]  Threads::create_vm(JavaVMInitArgs*, bool*)+0x318  (threads.cpp:564)&lt;br/&gt;
V  [libjvm.so+0xec5ecc]  JNI_CreateJavaVM+0x7c  (jni.cpp:3577)&lt;br/&gt;
C  [libjli.so+0x3ebc]  JavaMain+0x7c  (java.c:1506)&lt;br/&gt;
C  [libjli.so+0x73bc]  ThreadJavaMain+0xc  (java_md.c:650)&lt;br/&gt;
C  [libc.so.6+0x7d5c8] &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
==================&lt;br/&gt;
Some notes&lt;br/&gt;
==================&lt;br/&gt;
1. we didn&amp;#39;t see the failures in other CPUs, including Neoverse N1 and N2.&lt;br/&gt;
&lt;br/&gt;
2. the failure can also be reproduced in Thunder X and X2 via the following test command&lt;br/&gt;
&lt;br/&gt;
`./jdk/bin/java -XX:+UseZGC -XX:+ZGenerational --version `&lt;br/&gt;
&lt;br/&gt;
3. from the backtrace, we can see, it&amp;#39;s an assembler failure and the VM failed during generating &amp;quot;final stubs&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
4. based on my investigation, the root cause should be that VM flag &amp;quot;AvoidUnalignedAccesses&amp;quot; is enabled by default on CPUs like Thunder X and X2. Hence, more instructions would be generated especially with ZGC. As a result, the buffer size for final stubs overflows.&lt;br/&gt;
&lt;br/&gt;
This failure should be also reproduced on all(or almost) AArch64 CPUs with the following command:&lt;br/&gt;
&lt;br/&gt;
`./jdk/bin/java -XX:+UseZGC -XX:+ZGenerational -XX:+AvoidUnalignedAccesses --version`&lt;br/&gt;
&lt;br/&gt;
Note that I verified this on Neoverse N1 and N2.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5104878">JDK-8311548</key>
            <summary>AArch64: [ZGC] Many tests fail with &quot;assert(allocates2(pc)) failed: not in CodeBuffer memory&quot; on some CPUs</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="haosun">Hao Sun</assignee>
                                    <reporter username="haosun">Hao Sun</reporter>
                        <labels>
                            <label>genzgc</label>
                            <label>hgupdate-sync</label>
                    </labels>
                <created>Wed, 5 Jul 2023 20:17:58 -0700</created>
                <updated>Tue, 25 Jul 2023 04:31:15 -0700</updated>
                            <resolved>Mon, 10 Jul 2023 15:01:48 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14594864" author="roboduke" created="Mon, 10 Jul 2023 15:14:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21/pull/108&quot;&gt;https://git.openjdk.org/jdk21/pull/108&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-10 22:08:41 +0000</comment>
                            <comment id="14594861" author="dukebot" created="Mon, 10 Jul 2023 15:01:47 -0700"  >Changeset: 4b1403d0&lt;br/&gt;
Author:    Hao Sun &amp;lt;&lt;a href=&apos;mailto:haosun@openjdk.org&apos;&gt;haosun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-07-10 22:00:31 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4b1403d06b99b91ddd89ad6e54669b0595f1f8e5&quot;&gt;https://git.openjdk.org/jdk/commit/4b1403d06b99b91ddd89ad6e54669b0595f1f8e5&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14594397" author="roboduke" created="Thu, 6 Jul 2023 23:44:14 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14800&quot;&gt;https://git.openjdk.org/jdk/pull/14800&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-07 06:38:10 +0000</comment>
                            <comment id="14594147" author="haosun" created="Wed, 5 Jul 2023 20:25:54 -0700"  >==================&lt;br/&gt;
Note-1:&lt;br/&gt;
==================&lt;br/&gt;
this failure was introduced with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8307058&quot; title=&quot;Implementation of Generational ZGC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8307058&quot;&gt;&lt;strike&gt;JDK-8307058&lt;/strike&gt;&lt;/a&gt; (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8307058&quot;&gt;https://bugs.openjdk.org/browse/JDK-8307058&lt;/a&gt;).&lt;br/&gt;
I verified that the failure occurred with the commit of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8307058&quot; title=&quot;Implementation of Generational ZGC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8307058&quot;&gt;&lt;strike&gt;JDK-8307058&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Hence, I set &amp;quot; Affects Version/s&amp;quot; as &amp;quot;21, 22&amp;quot;, and set &amp;quot;Introduced In Version&amp;quot; as &amp;quot;21&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
==================&lt;br/&gt;
Note-2:&lt;br/&gt;
==================&lt;br/&gt;
As I mentioned in the &amp;quot;Description&amp;quot; session, the VM would crash on the AArch64 CPUs with the following command&lt;br/&gt;
&lt;br/&gt;
`./jdk/bin/java -XX:+UseZGC -XX:+ZGenerational -XX:+AvoidUnalignedAccesses --version`&lt;br/&gt;
&lt;br/&gt;
Hence, I put the &amp;quot;priority&amp;quot; of this JBS as &amp;quot;P2&amp;quot; bug.&lt;br/&gt;
&lt;br/&gt;
Please correct me if I misunderstood something. Thanks.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5105219">JDK-8311863</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5106404">JDK-8312898</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5099682">JDK-8307058</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32717:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>