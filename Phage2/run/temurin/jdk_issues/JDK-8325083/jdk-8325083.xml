<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:45:44 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8325083] jdk/incubator/vector/Double512VectorTests.java crashes in Assembler::vex_prefix_and_encode</title>
                <link>https://bugs.openjdk.org/browse/JDK-8325083</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>jdk/incubator/vector/Double512VectorTests.java ran with stress flags crashes with &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/0db9c48f-6638-40d0-9a4b-bd9cc7533eb8-S9889/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/c11ca34c-7241-4cfd-b61c-9310da87fdc1/runs/e4f2c547-e0e4-4107-868e-1e866173efb3/workspace/open/src/hotspot/cpu/x86/assembler_x86.cpp:11644), pid=1945384, tid=1945401&lt;br/&gt;
#  assert(((!attributes-&amp;gt;uses_vl()) || (attributes-&amp;gt;get_vector_len() == AVX_512bit) || (!_legacy_mode_vl) || (attributes-&amp;gt;is_legacy_mode()))) failed: XMM register should be 0-15&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0+33) (fastdebug build 22-ea+33-2356)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-ea+33-2356, mixed mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x642f2b]  Assembler::vex_prefix_and_encode(int, int, int, Assembler::VexSimdPrefix, Assembler::VexOpcode, InstructionAttr*)+0x28b&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Host: hostname, Intel(R) Xeon(R) Platinum 8358 CPU @ 2.60GHz, 12 cores, 23G, Oracle Linux Server release 9.2&lt;br/&gt;
Time: Thu Feb  1 03:59:08 2024 UTC elapsed time: 42.077166 seconds (0d 0h 0m 42s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f30a0347b60):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=1945401, stack(0x00007f308c90f000,0x00007f308ca0f000) (1024K)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:42077 4610 %  b        Double512VectorTests::unsliceDouble512VectorTestsMasked @ 120 (212 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f308c90f000,0x00007f308ca0f000],  sp=0x00007f308ca0a8b0,  free space=1006k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x642f2b]  Assembler::vex_prefix_and_encode(int, int, int, Assembler::VexSimdPrefix, Assembler::VexOpcode, InstructionAttr*)+0x28b  (assembler_x86.cpp:11644)&lt;br/&gt;
V  [libjvm.so+0x65a203]  Assembler::simd_prefix_and_encode(XMMRegister, XMMRegister, XMMRegister, Assembler::VexSimdPrefix, Assembler::VexOpcode, InstructionAttr*) [clone .constprop.0]+0x113  (assembler_x86.cpp:11691)&lt;br/&gt;
V  [libjvm.so+0x65e2c7]  Assembler::vpmovsxbd(XMMRegister, XMMRegister, int)+0x77  (assembler_x86.cpp:5017)&lt;br/&gt;
V  [libjvm.so+0x822144]  C2_MacroAssembler::vconvert_b2x(BasicType, XMMRegister, XMMRegister, int)+0x84  (c2_MacroAssembler_x86.cpp:2587)&lt;br/&gt;
V  [libjvm.so+0x40b21b]  vcastBtoXNode::emit(CodeBuffer&amp;amp;, PhaseRegAlloc*) const+0x10b  (x86.ad:7028)&lt;br/&gt;
V  [libjvm.so+0x14cadb6]  PhaseOutput::scratch_emit_size(Node const*)+0x376  (output.cpp:3366)&lt;br/&gt;
V  [libjvm.so+0x14c34fa]  PhaseOutput::shorten_branches(unsigned int*)+0x34a  (output.cpp:544)&lt;br/&gt;
V  [libjvm.so+0x14d4d6a]  PhaseOutput::Output()+0xa1a  (output.cpp:345)&lt;br/&gt;
V  [libjvm.so+0x9ed2b3]  Compile::Code_Gen()+0x483  (compile.cpp:3011)&lt;br/&gt;
V  [libjvm.so+0x9efdca]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1c2a  (compile.cpp:890)&lt;br/&gt;
V  [libjvm.so+0x83bd37]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x1e7  (c2compiler.cpp:134)&lt;br/&gt;
V  [libjvm.so+0x9fb5fc]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x92c  (compileBroker.cpp:2299)&lt;br/&gt;
V  [libjvm.so+0x9fc288]  CompileBroker::compiler_thread_loop()+0x468  (compileBroker.cpp:1958)&lt;br/&gt;
V  [libjvm.so+0xeba75c]  JavaThread::thread_main_inner()+0xcc  (javaThread.cpp:721)&lt;br/&gt;
V  [libjvm.so+0x17a1236]  Thread::call_run()+0xb6  (thread.cpp:221)&lt;br/&gt;
V  [libjvm.so+0x14ab5a7]  thread_native_entry(Thread*)+0x127  (os_linux.cpp:789)&lt;br/&gt;
Registers:&lt;br/&gt;
RAX=0x00007f30a74b7000, RBX=0x0000000000000011, RCX=0x00007f30a6b5e4f1, RDX=0x00007f30a6bd3640&lt;br/&gt;
RSP=0x00007f308ca0a8b0, RBP=0x00007f308ca0a8f0, RSI=0x0000000000002d7c, RDI=0x00007f30a6bd2bb0&lt;br/&gt;
R8 =0x0000000000000001, R9 =0x0000000000000002, R10=0x0000000000000000, R11=0x0000000000000000&lt;br/&gt;
R12=0x0000000000000008, R13=0x0000000000000000, R14=0x00007f308ca0a901, R15=0x0000000000000001&lt;br/&gt;
RIP=0x00007f30a573ff2b, EFLAGS=0x0000000000010246, CSGSFS=0x002b000000000033, ERR=0x0000000000000006&lt;br/&gt;
&amp;nbsp;&amp;nbsp;TRAPNO=0x000000000000000e&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Register to memory mapping:&lt;br/&gt;
&lt;br/&gt;
RAX=0x00007f30a74b7000 in mmap&amp;#39;d memory region [0x00007f30a74b7000 - 0x00007f30a74b8000], tag mtInternal&lt;br/&gt;
RBX=0x0000000000000011 is an unknown value&lt;br/&gt;
RCX=0x00007f30a6b5e4f1: &amp;lt;offset 0x0000000001a614f1&amp;gt; in /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+33-2356/linux-x64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so at 0x00007f30a50fd000&lt;br/&gt;
RDX=0x00007f30a6bd3640: &amp;lt;offset 0x0000000001ad6640&amp;gt; in /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+33-2356/linux-x64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so at 0x00007f30a50fd000&lt;br/&gt;
RSP=0x00007f308ca0a8b0 is pointing into the stack for thread: 0x00007f30a0347b60&lt;br/&gt;
RBP=0x00007f308ca0a8f0 is pointing into the stack for thread: 0x00007f30a0347b60&lt;br/&gt;
RSI=0x0000000000002d7c is an unknown value&lt;br/&gt;
RDI=0x00007f30a6bd2bb0: &amp;lt;offset 0x0000000001ad5bb0&amp;gt; in /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+33-2356/linux-x64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so at 0x00007f30a50fd000&lt;br/&gt;
R8 =0x0000000000000001 is an unknown value&lt;br/&gt;
R9 =0x0000000000000002 is an unknown value&lt;br/&gt;
R10=0x0 is null&lt;br/&gt;
R11=0x0 is null&lt;br/&gt;
R12=0x0000000000000008 is an unknown value&lt;br/&gt;
R13=0x0 is null&lt;br/&gt;
R14=0x00007f308ca0a901 is pointing into the stack for thread: 0x00007f30a0347b60&lt;br/&gt;
R15=0x0000000000000001 is an unknown value&lt;br/&gt;
&lt;br/&gt;
Top of Stack: (sp=0x00007f308ca0a8b0)&lt;br/&gt;
0x00007f308ca0a8b0:   00007f308ca0a920 00007f30a573fe9f&lt;br/&gt;
0x00007f308ca0a8c0:   0000000000000000 0000000000000008&lt;br/&gt;
0x00007f308ca0a8d0:   0000000000000002 00007f308ca0a9f0&lt;br/&gt;
0x00007f308ca0a8e0:   00007f308ca0a960 0000000000000001&lt;br/&gt;
0x00007f308ca0a8f0:   00007f308ca0a950 00007f30a5757203&lt;br/&gt;
0x00007f308ca0a900:   00007f308ca0a960 00007f30a5757132&lt;br/&gt;
0x00007f308ca0a910:   00007f308ca0a990 0000000800000011&lt;br/&gt;
0x00007f308ca0a920:   00007f30187777a0 00007f308ca0a9f0&lt;br/&gt;
0x00007f308ca0a930:   0000000000000007 0000000000000002&lt;br/&gt;
0x00007f308ca0a940:   00007f308ca0a9f0 00007f30a71c8284&lt;br/&gt;
0x00007f308ca0a950:   00007f308ca0a9a0 00007f30a575b2c7&lt;br/&gt;
0x00007f308ca0a960:   0001000001010000 0000001700000001&lt;br/&gt;
0x00007f308ca0a970:   0000000000000004 0000000000000000&lt;br/&gt;
0x00007f308ca0a980:   00007f308ca0a9f0 00007f30a659c503&lt;br/&gt;
0x00007f308ca0a990:   00007f308ca0b2c0 0000000000000011&lt;br/&gt;
0x00007f308ca0a9a0:   00007f308ca0a9d0 00007f30a591f144&lt;br/&gt;
0x00007f308ca0a9b0:   0000000000000004 00007f308ca0a9f0&lt;br/&gt;
0x00007f308ca0a9c0:   00007f30184e0558 00007f308ca0b0c0&lt;br/&gt;
0x00007f308ca0a9d0:   00007f308ca0aa50 00007f30a550821b&lt;br/&gt;
0x00007f308ca0a9e0:   00007f0000000010 0000000800000002&lt;br/&gt;
0x00007f308ca0a9f0:   00007f30a70792a8 00007f308ca0abc0&lt;br/&gt;
0x00007f308ca0aa00:   00007f308ca0ac98 0101010100000000&lt;br/&gt;
0x00007f308ca0aa10:   00007f308ca0a960 00007f308ca0ad28&lt;br/&gt;
0x00007f308ca0aa20:   00007f308ca0ab50 00007f30184e0558&lt;br/&gt;
0x00007f308ca0aa30:   00007f308ca0ab50 00007f308ca0b2c0&lt;br/&gt;
0x00007f308ca0aa40:   0000000000000002 00007f308ca0ac18&lt;br/&gt;
0x00007f308ca0aa50:   00007f308ca0ad70 00007f30a65c7db6&lt;br/&gt;
0x00007f308ca0aa60:   00000000000008e0 00007f308ca0ab68&lt;br/&gt;
0x00007f308ca0aa70:   0000000000000000 0000000000000000&lt;br/&gt;
0x00007f308ca0aa80:   00007f30ffffffff 00007f308ca0abc0&lt;br/&gt;
0x00007f308ca0aa90:   00007f308ca0ac98 0101010100000000&lt;br/&gt;
0x00007f308ca0aaa0:   0000000000000000 0000000000000000 &lt;br/&gt;
&lt;br/&gt;
Instructions: (pc=0x00007f30a573ff2b)&lt;br/&gt;
0x00007f30a573fe2b:   0f 1f 44 00 00 48 8d 0d 4d 84 a8 01 8b 09 85 c9&lt;br/&gt;
0x00007f30a573fe3b:   0f 8f 5e ff ff ff 0f 1f 80 00 00 00 00 83 fb 0f&lt;br/&gt;
0x00007f30a573fe4b:   41 0f 9f c6 41 83 fa 0f 41 0f 9f c5 41 83 fc 0f&lt;br/&gt;
0x00007f30a573fe5b:   44 88 75 cc 0f 9f c1 45 89 ef 41 08 cf 75 05 45&lt;br/&gt;
0x00007f30a573fe6b:   84 f6 74 41 45 84 db 75 88 48 83 ec 08 c6 46 05&lt;br/&gt;
0x00007f30a573fe7b:   01 0f b6 c9 0f b6 d2 41 51 45 89 e9 0f b6 f0 41&lt;br/&gt;
0x00007f30a573fe8b:   50 41 83 e1 01 41 52 44 8b 45 cc 41 83 e0 01 e8&lt;br/&gt;
0x00007f30a573fe9b:   41 11 fe ff 48 83 c4 20 e9 7e fe ff ff 0f 1f 84&lt;br/&gt;
0x00007f30a573feab:   00 00 00 00 00 45 84 db 0f 85 49 fe ff ff e9 e1&lt;br/&gt;
0x00007f30a573febb:   fe ff ff 66 90 c6 46 01 01 83 39 02 0f 8e 3e fe&lt;br/&gt;
0x00007f30a573fecb:   ff ff 48 8d 0d b0 83 a8 01 44 8b 31 45 85 f6 0f&lt;br/&gt;
0x00007f30a573fedb:   8f 22 fe ff ff 44 0f b6 5e 03 45 84 db 0f 84 14&lt;br/&gt;
0x00007f30a573feeb:   fe ff ff 83 7e 08 02 0f 84 50 ff ff ff 80 7f 1e&lt;br/&gt;
0x00007f30a573fefb:   00 0f 85 dd fe ff ff e9 41 ff ff ff 48 8d 05 02&lt;br/&gt;
0x00007f30a573ff0b:   f1 a0 01 48 8d 0d dc e5 41 01 48 8d 15 24 37 49&lt;br/&gt;
0x00007f30a573ff1b:   01 be 7c 2d 00 00 48 8d 3d 88 2c 49 01 48 8b 00&lt;br/&gt;
0x00007f30a573ff2b:   c6 00 58 31 c0 e8 4b 90 45 00 90 66 2e 0f 1f 84&lt;br/&gt;
0x00007f30a573ff3b:   00 00 00 00 00 55 48 89 e5 41 57 41 56 41 55 49&lt;br/&gt;
0x00007f30a573ff4b:   89 fd 41 54 41 89 d4 53 89 f3 48 83 ec 38 48 8d&lt;br/&gt;
0x00007f30a573ff5b:   05 24 83 a8 01 8b 30 85 f6 7f 15 48 8d 05 c3 b7&lt;br/&gt;
0x00007f30a573ff6b:   a3 01 48 8b 00 a9 00 00 80 00 0f 84 ab 00 00 00&lt;br/&gt;
0x00007f30a573ff7b:   66 0f 6f 05 dd df 63 01 48 63 c9 4c 8d 35 f4 ca&lt;br/&gt;
0x00007f30a573ff8b:   65 01 48 8b 05 6c fa 63 01 4a 8d 3c 31 c7 45 b8&lt;br/&gt;
0x00007f30a573ff9b:   00 00 00 00 0f 11 45 a8 48 89 45 a0 48 c7 45 c0&lt;br/&gt;
0x00007f30a573ffab:   00 00 00 00 e8 3c 1a 06 00 49 63 fc 4c 01 f7 41&lt;br/&gt;
0x00007f30a573ffbb:   89 c7 e8 2e 1a 06 00 48 63 fb 4c 01 f7 41 89 c4&lt;br/&gt;
0x00007f30a573ffcb:   e8 20 1a 06 00 48 83 ec 08 44 89 f9 45 31 c0 89&lt;br/&gt;
0x00007f30a573ffdb:   c6 48 8d 45 a0 41 b9 02 00 00 00 44 89 e2 50 4c&lt;br/&gt;
0x00007f30a573ffeb:   89 ef e8 ae fc ff ff 49 8b 7d 08 be f2 00 00 00&lt;br/&gt;
0x00007f30a573fffb:   0c c0 89 c2 e8 1c 30 fd ff 48 8b 45 c0 5a 59 48&lt;br/&gt;
0x00007f30a574000b:   85 c0 74 08 48 c7 40 20 00 00 00 00 48 8d 65 d8&lt;br/&gt;
0x00007f30a574001b:   5b 41 5c 41 5d 41 5e 41 5f 5d c3 48 8d 05 e3 ef &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Stack slot to memory mapping:&lt;br/&gt;
&lt;br/&gt;
stack at sp + 0 slots: 0x00007f308ca0a920 is pointing into the stack for thread: 0x00007f30a0347b60&lt;br/&gt;
stack at sp + 1 slots: 0x00007f30a573fe9f: &amp;lt;offset 0x0000000000642e9f&amp;gt; in /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+33-2356/linux-x64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so at 0x00007f30a50fd000&lt;br/&gt;
stack at sp + 2 slots: 0x0 is null&lt;br/&gt;
stack at sp + 3 slots: 0x0000000000000008 is an unknown value&lt;br/&gt;
stack at sp + 4 slots: 0x0000000000000002 is an unknown value&lt;br/&gt;
stack at sp + 5 slots: 0x00007f308ca0a9f0 is pointing into the stack for thread: 0x00007f30a0347b60&lt;br/&gt;
stack at sp + 6 slots: 0x00007f308ca0a960 is pointing into the stack for thread: 0x00007f30a0347b60&lt;br/&gt;
stack at sp + 7 slots: 0x0000000000000001 is an unknown value&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The list of flags:&lt;br/&gt;
&amp;nbsp;-ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -server -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressCCP -XX:StressSeed=148015699 -XX:UseAVX=3 -XX:+UseKNLSetting</description>
                <environment></environment>
        <key id="5120507">JDK-8325083</key>
            <summary>jdk/incubator/vector/Double512VectorTests.java crashes in Assembler::vex_prefix_and_encode</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbhateja">Jatin Bhateja</assignee>
                                    <reporter username="epavlova">Ekaterina Pavlova</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>intermittent</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>tier3</label>
                            <label>vector</label>
                    </labels>
                <created>Wed, 31 Jan 2024 20:20:52 -0800</created>
                <updated>Thu, 1 Aug 2024 01:56:07 -0700</updated>
                            <resolved>Tue, 28 May 2024 19:20:35 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14683124" author="roboduke" created="Thu, 20 Jun 2024 01:30:13 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.25-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14682943" author="roboduke" created="Wed, 19 Jun 2024 05:37:45 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/763&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/763&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-19 12:31:38 +0000</comment>
                            <comment id="14676981" author="dukebot" created="Tue, 28 May 2024 19:20:34 -0700"  >Changeset: 01060ad4&lt;br/&gt;
Author:    Jatin Bhateja &amp;lt;&lt;a href=&apos;mailto:jbhateja@openjdk.org&apos;&gt;jbhateja@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-05-29 02:18:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/01060ad4ab18581aa46bc16e64c7f12a591a682b&quot;&gt;https://git.openjdk.org/jdk/commit/01060ad4ab18581aa46bc16e64c7f12a591a682b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14676236" author="roboduke" created="Sun, 26 May 2024 23:11:17 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19407&quot;&gt;https://git.openjdk.org/jdk/pull/19407&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-27 06:06:47 +0000</comment>
                            <comment id="14676209" author="jbhateja" created="Sun, 26 May 2024 19:37:19 -0700"  >Reproduced with following command line:&lt;br/&gt;
java -Djdk.test.lib.random.seed=8013880336010281063 --add-modules=jdk.incubator.vector -XX:-TieredCompilation     -ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -server -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressCCP -XX:StressSeed=148015699 -XX:UseAVX=3 -XX:+UseKNLSetting -Xbatch org.testng.TestNG -methods Double512VectorTests.unsliceDouble512VectorTestsMasked&amp;#39;&amp;#39;&lt;br/&gt;
&lt;br/&gt;
We need to constrain the register class of vectorb2x pattern.&lt;br/&gt;
&lt;br/&gt;
Will float the patch for fix.</comment>
                            <comment id="14666841" author="thartmann" created="Mon, 22 Apr 2024 01:33:48 -0700"  >We&amp;#39;ve only seen this four times since February, so it seems to be highly intermittent. [~jbhateja] did you try running it in a loop without a fixed StressSeed?</comment>
                            <comment id="14664980" author="kvn" created="Fri, 12 Apr 2024 11:24:35 -0700"  >The test has also `-Xbatch` flag which is used when run with `jtreg` command.</comment>
                            <comment id="14664974" author="kvn" created="Fri, 12 Apr 2024 11:17:22 -0700"  >Looks like it ran in container/VM with HotSpot seeing only these flags set (avx512f, avx512cd) based on attached hs_err file:&lt;br/&gt;
CPU: total 12 (initial active 12) (6 cores per cpu, 2 threads per core) family 6 model 106 stepping 6 microcode 0x1, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, avx512f, avx512cd, sha, fma, clflush, hv, rdtscp, rdpid, f16c, pku, ospke&lt;br/&gt;
</comment>
                            <comment id="14664873" author="jbhateja" created="Fri, 12 Apr 2024 02:10:25 -0700"  >Hi Tobias, I am not able to reproduce the issue even with jdk-22+33.&lt;br/&gt;
Can you try once more. &lt;br/&gt;
&lt;br/&gt;
I used following options specified in bug report.&lt;br/&gt;
&lt;br/&gt;
The list of flags:&lt;br/&gt;
&amp;nbsp;-ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -server -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressCCP -XX:StressSeed=148015699 -XX:UseAVX=3 -XX:+UseKNLSetting</comment>
                            <comment id="14647715" author="thartmann" created="Thu, 8 Feb 2024 07:32:30 -0800"  >Jatin, could you please have a look? Thanks.</comment>
                            <comment id="14645941" author="thartmann" created="Thu, 1 Feb 2024 02:22:49 -0800"  >Also reproduces with latest JDK 23.</comment>
                            <comment id="14645905" author="thartmann" created="Thu, 1 Feb 2024 00:21:15 -0800"  >Looks similar to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8309660&quot; title=&quot;C2: failed: XMM register should be 0-15 (UseKNLSetting and ConvF2HF)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8309660&quot;&gt;&lt;strike&gt;JDK-8309660&lt;/strike&gt;&lt;/a&gt; which also failed with -XX:+UseKNLSetting. Code was introduced by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8286972&quot; title=&quot;Support the new loop induction variable related PopulateIndex IR node on x86&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8286972&quot;&gt;&lt;strike&gt;JDK-8286972&lt;/strike&gt;&lt;/a&gt;. Paging [~jbhateja], [~epeter].&lt;br/&gt;
&lt;br/&gt;
ILW = Assert during C2 compilation, single test with stress flags and -XX:+UseKNLSetting, no workaround but disable compilation or AVX = HLM = P3</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131638">JDK-8334072</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5132253">JDK-8334606</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108090" name="hs_err_bug8325083.log" size="122613" author="epavlova" created="Wed, 31 Jan 2024 20:22:00 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34tyz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>