<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:50:08 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8314020] Print instruction blocks in byte units</title>
                <link>https://bugs.openjdk.org/browse/JDK-8314020</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When following up on JVM crashes in the field, we frequently want to disassemble the &amp;quot;Instructions:&amp;quot; block in hs_err. Unfortunately, some architectures print out the instructions in 4-byte chunks, which is affected by platform endianness. The simple scripts would then fail to parse the instruction stream, because they have no assumptions about the endianness. &lt;br/&gt;
&lt;br/&gt;
For example, here is an attempt to decode a piece of AArch64 &amp;quot;Instructions:&amp;quot; block:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
% cat asm.txt; xxd -r asm.txt &amp;gt; asm.bin; hexdump -C asm.bin; objdump -D -m aarch64 -b binary asm.bin &lt;br/&gt;
924cfce4g 382268bf 12800000 f9400881 8b020422&lt;br/&gt;
924cfcf4g 39000440 17ffffaa 52800002 528000a1&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|&lt;br/&gt;
*&lt;br/&gt;
924cfce0  00 00 00 00 38 22 68 bf  12 80 00 00 f9 40 08 81  |....8&amp;quot;h......@..|&lt;br/&gt;
924cfcf0  8b 02 04 22 39 00 04 40  17 ff ff aa 52 80 00 02  |...&amp;quot;9..@....R...|&lt;br/&gt;
924cfd00  52 80 00 a1                                       |R...|&lt;br/&gt;
924cfd04&lt;br/&gt;
&lt;br/&gt;
asm.bin:     file format binary&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Disassembly of section .data:&lt;br/&gt;
&lt;br/&gt;
0000000000000000 &amp;lt;.data&amp;gt;:&lt;br/&gt;
	...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfce4:	bf682238 	.inst	0xbf682238 ; undefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfce8:	00008012 	.inst	0x00008012 ; undefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcec:	810840f9 	.inst	0x810840f9 ; undefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcf0:	2204028b 	.inst	0x2204028b ; undefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcf4:	40040039 	.inst	0x40040039 ; undefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcf8:	aaffff17 	orn	x23, x24, xzr, ror #63&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcfc:	02008052 	.inst	0x02008052 ; undefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfd00:	a1008052 	.inst	0xa1008052 ; undefined&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Note how `382268bf` is written out in the original dump, and that value is big-endian for AArch64. But `xxd` then treats this as just a sequence of bytes, which effectively writes it down to binary file as little-endian, and then the decoding breaks.&lt;br/&gt;
&lt;br/&gt;
Of course, one can convert the endianness, assuming there are 4-byte blocks in instruction stream for AArch64, and then the decoding would work:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
$ hexdump -v -e &amp;#39;1/4 &amp;quot;%08x&amp;quot;&amp;#39; -e &amp;#39;&amp;quot;\n&amp;quot;&amp;#39; asm.bin | xxd -r -p &amp;gt; asm.reversed.bin&lt;br/&gt;
$ objdump -D -m aarch64 -b binary asm.reversed.bin&lt;br/&gt;
&lt;br/&gt;
asm.reversed.bin:     file format binary&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Disassembly of section .data:&lt;br/&gt;
&lt;br/&gt;
0000000000000000 &amp;lt;.data&amp;gt;:&lt;br/&gt;
	...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfce4:	382268bf 	strb	wzr, [x5, x2]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfce8:	12800000 	mov	w0, #0xffffffff            	// #-1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcec:	f9400881 	ldr	x1, [x4, #16]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcf0:	8b020422 	add	x2, x1, x2, lsl #1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcf4:	39000440 	strb	w0, [x2, #1]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcf8:	17ffffaa 	b	0x924cfba0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfcfc:	52800002 	mov	w2, #0x0                   	// #0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;924cfd00:	528000a1 	mov	w1, #0x5                   	// #5&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
...but that is rather cumbersome.&lt;br/&gt;
&lt;br/&gt;
It would be easier to dump the &amp;quot;Instructions:&amp;quot; block in byte unit, so that endianness does not even enter the picture here, and the hex dump would just follow the natural order of bytes in the dump.&lt;br/&gt;
&lt;br/&gt;
x86 already does the byte-unit dump, since it has a variable-size encoding. The ease of debugging would be improved for fixed-size encoding here too.</description>
                <environment></environment>
        <key id="5107715">JDK-8314020</key>
            <summary>Print instruction blocks in byte units</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shade">Aleksey Shipilev</assignee>
                                    <reporter username="shade">Aleksey Shipilev</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>hs_err</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Wed, 9 Aug 2023 02:42:06 -0700</created>
                <updated>Fri, 27 Oct 2023 09:20:34 -0700</updated>
                            <resolved>Wed, 16 Aug 2023 00:04:55 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14621708" author="eastigeevich" created="Fri, 27 Oct 2023 09:19:39 -0700"  >In case of AArch64, this is a regression as a result of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8245986&quot;&gt;https://bugs.openjdk.org/browse/JDK-8245986&lt;/a&gt;.</comment>
                            <comment id="14606820" author="shade" created="Sun, 27 Aug 2023 23:19:24 -0700"  >Fix Request (17u)&lt;br/&gt;
&lt;br/&gt;
Same reason as for 21u. Patch does not apply cleanly due to context differences that are easy to resolve. 17u PR acked by Paul. Tests pass.</comment>
                            <comment id="14606010" author="roboduke" created="Wed, 23 Aug 2023 00:09:44 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1686&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1686&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-23 07:01:44 +0000</comment>
                            <comment id="14605253" author="shade" created="Mon, 21 Aug 2023 02:04:54 -0700"  >Fix Request (21u)&lt;br/&gt;
&lt;br/&gt;
Improves post-mortem diagnostics. Applies cleanly. Builds/tests pass.</comment>
                            <comment id="14604392" author="roboduke" created="Wed, 16 Aug 2023 06:03:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/63&quot;&gt;https://git.openjdk.org/jdk21u/pull/63&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-16 12:59:18 +0000</comment>
                            <comment id="14604263" author="dukebot" created="Wed, 16 Aug 2023 00:04:54 -0700"  >Changeset: a602624e&lt;br/&gt;
Author:    Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-16 07:02:48 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a602624ef46908456052146d50467c60efa636c3&quot;&gt;https://git.openjdk.org/jdk/commit/a602624ef46908456052146d50467c60efa636c3&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14603034" author="roboduke" created="Wed, 9 Aug 2023 10:47:57 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15211&quot;&gt;https://git.openjdk.org/jdk/pull/15211&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-09 17:40:43 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5108786">JDK-8314947</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5109197">JDK-8315307</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5020157">JDK-8245986</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32off:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>