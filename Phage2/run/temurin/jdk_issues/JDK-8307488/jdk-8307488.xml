<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:13:40 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307488] Incorrect weight of the first ObjectAllocationSample JFR event</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307488</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When profiling a production application with JFR, we discovered that some allocation samples have abnormally large &amp;#39;weight&amp;#39;, e.g. an AtomicBoolean allocation was assigned the weight of 17.3 GiB. About 80 of total 26K ObjectAllocationSamples weighed more than 1 GiB each and those samples completely distorted the overall allocation profile.&lt;br/&gt;
&lt;br/&gt;
It turns out that if JFR recording is enabled at runtime, the first sampled allocation in each thread &amp;quot;accumulates&amp;quot; all previous allocations happened in this thread before the recording.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m attaching WrongAllocationWeight.java that demonstrates the problem. The program allocates 2GB Java objects then starts JFR recording. The first allocation sample in that recording will have the weight more than 2GB.</description>
                <environment></environment>
        <key id="5100164">JDK-8307488</key>
            <summary>Incorrect weight of the first ObjectAllocationSample JFR event</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mgronlun">Markus Gr&#246;nlund</assignee>
                                    <reporter username="apangin">Andrei Pangin</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>noreg-hard</label>
                    </labels>
                <created>Thu, 4 May 2023 13:01:00 -0700</created>
                <updated>Fri, 22 Aug 2025 03:22:29 -0700</updated>
                            <resolved>Mon, 29 May 2023 03:55:16 -0700</resolved>
                                    <version>17.0.7</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14585333" author="dukebot" created="Mon, 29 May 2023 03:55:15 -0700"  >Changeset: 7cf6eecd&lt;br/&gt;
Author:    Markus Gr&amp;#xF6;nlund &amp;lt;&lt;a href=&apos;mailto:mgronlun@openjdk.org&apos;&gt;mgronlun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-29 10:53:08 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/7cf6eecdc8e6be627111a08c4db330413506bfd2&quot;&gt;https://git.openjdk.org/jdk/commit/7cf6eecdc8e6be627111a08c4db330413506bfd2&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14584605" author="roboduke" created="Thu, 25 May 2023 10:48:25 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14158&quot;&gt;https://git.openjdk.org/jdk/pull/14158&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-25 17:42:04 +0000</comment>
                            <comment id="14579514" author="egahlin" created="Fri, 5 May 2023 14:41:22 -0700"  >Can explain this issue:&lt;br/&gt;
&lt;a href=&quot;https://stackoverflow.com/questions/69718446/how-to-make-sense-of-the-new-java-flight-recorder-objectallocationsample-event&quot;&gt;https://stackoverflow.com/questions/69718446/how-to-make-sense-of-the-new-java-flight-recorder-objectallocationsample-event&lt;/a&gt;</comment>
                            <comment id="14579513" author="egahlin" created="Fri, 5 May 2023 14:38:50 -0700"  >Impact High (incorrect data)&lt;br/&gt;
Likelihood Low (only happens with JFR in the first chunk)&lt;br/&gt;
Workaround High (no known workaround)&lt;br/&gt;
&lt;br/&gt;
ILW = HMH =&amp;gt; P2</comment>
                            <comment id="14579191" author="apangin" created="Thu, 4 May 2023 13:10:34 -0700"  >An allocation sample weight is calculated as `allocated_bytes - _last_allocated_bytes` where `allocated_bytes` is a cumulative per-thread counter: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/197d0cc6031cb470f1bd7678796593ff1bf440ca/src/hotspot/share/jfr/support/jfrObjectAllocationSample.cpp#L38&quot;&gt;https://github.com/openjdk/jdk/blob/197d0cc6031cb470f1bd7678796593ff1bf440ca/src/hotspot/share/jfr/support/jfrObjectAllocationSample.cpp#L38&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The problem is that _last_allocated_bytes is updated only after ObjectAllocationSample event is committed, so when there is no active JFR recording, _last_allocated_bytes remains zero.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5164993">JDK-8362573</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103710" name="WrongAllocationWeight.java" size="1182" author="apangin" created="Thu, 4 May 2023 13:00:51 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31e4j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>