<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:40:54 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8308746] C2 IR test failures for TestFpMinMaxReductions.java with SSE2</title>
                <link>https://bugs.openjdk.org/browse/JDK-8308746</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The test was recently added &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8287087&quot; title=&quot;C2: perform SLP reduction analysis on-demand&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8287087&quot;&gt;&lt;strike&gt;JDK-8287087&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
[~jbhateja] found it:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/pull/13493#issuecomment-1560459854&quot;&gt;https://github.com/openjdk/jdk/pull/13493#issuecomment-1560459854&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I can reproduce it like this:&lt;br/&gt;
&lt;br/&gt;
make test TEST=&amp;quot;test/hotspot/jtreg/compiler/intrinsics/math/TestFpMinMaxReductions.java&amp;quot; CONF=linux-x64-slowdebug JTREG=&amp;quot;RETAIN=all;JOBS=8;TIMEOUT_FACTOR=8;JAVA_OPTIONS=-XX:UseSSE=2&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
See output below:&lt;br/&gt;
&lt;br/&gt;
Failed IR Rules (12) of Methods (12)&lt;br/&gt;
------------------------------------&lt;br/&gt;
1) Method &amp;quot;private static double compiler.intrinsics.math.TestFpMinMaxReductions.testDoubleMax()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MAX_D_REG#_&amp;quot;, &amp;quot;1&amp;quot;}, applyIfAnd={}, failOn={&amp;quot;_#MAX_D_REDUCTION_REG#_&amp;quot;}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(maxD_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 = 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
2) Method &amp;quot;private static double compiler.intrinsics.math.TestFpMinMaxReductions.testDoubleMaxReduction()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MAX_D_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(maxD_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
3) Method &amp;quot;private static double compiler.intrinsics.math.TestFpMinMaxReductions.testDoubleMin()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_D_REG#_&amp;quot;, &amp;quot;1&amp;quot;}, applyIfAnd={}, failOn={&amp;quot;_#MIN_D_REDUCTION_REG#_&amp;quot;}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minD_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 = 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
4) Method &amp;quot;private static double compiler.intrinsics.math.TestFpMinMaxReductions.testDoubleMinReduction()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_D_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minD_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
5) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMax()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MAX_F_REG#_&amp;quot;, &amp;quot;1&amp;quot;}, applyIfAnd={}, failOn={&amp;quot;_#MAX_F_REDUCTION_REG#_&amp;quot;}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(maxF_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 = 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
6) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMaxReduction()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MAX_F_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(maxF_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
7) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMin()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_F_REG#_&amp;quot;, &amp;quot;1&amp;quot;}, applyIfAnd={}, failOn={&amp;quot;_#MIN_F_REDUCTION_REG#_&amp;quot;}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minF_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 = 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
8) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMinReduction()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_F_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minF_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
9) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMinReductionGlobalAccumulator()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_F_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minF_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
10) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMinReductionInOuterLoop()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_F_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minF_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
11) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMinReductionNonCounted()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_F_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minF_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!&lt;br/&gt;
&lt;br/&gt;
12) Method &amp;quot;private static float compiler.intrinsics.math.TestFpMinMaxReductions.testFloatMinReductionPartiallyUnrolled()&amp;quot; - [Failed IR rules: 1]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(applyIfCPUFeatureAnd={}, phase={DEFAULT}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#MIN_F_REDUCTION_REG#_&amp;quot;, &amp;quot;&amp;gt;= 1&amp;quot;}, applyIfAnd={}, failOn={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;Final Code&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- counts: Graph contains wrong number of nodes:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Constraint 1: &amp;quot;(\d+(\s){2}(minF_reduction_reg.*)+(\s){2}===.*)&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Failed comparison: [found] 0 &amp;gt;= 1 [given]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- No nodes matched!</description>
                <environment></environment>
        <key id="5101678">JDK-8308746</key>
            <summary>C2 IR test failures for TestFpMinMaxReductions.java with SSE2</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rcastanedalo">Roberto Castaneda Lozano</assignee>
                                    <reporter username="epeter">Emanuel Peter</reporter>
                        <labels>
                            <label>c2</label>
                            <label>noreg-self</label>
                            <label>oracle-triage-21</label>
                            <label>regression</label>
                    </labels>
                <created>Tue, 23 May 2023 23:58:22 -0700</created>
                <updated>Wed, 31 May 2023 23:26:14 -0700</updated>
                            <resolved>Thu, 25 May 2023 04:09:57 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14584456" author="dukebot" created="Thu, 25 May 2023 04:09:55 -0700"  >Changeset: 5a0a238f&lt;br/&gt;
Author:    Roberto Casta&amp;#xF1;eda Lozano &amp;lt;&lt;a href=&apos;mailto:rcastanedalo@openjdk.org&apos;&gt;rcastanedalo@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-25 11:07:10 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/5a0a238f67ae2a7757611881c5c713149cefe3c0&quot;&gt;https://git.openjdk.org/jdk/commit/5a0a238f67ae2a7757611881c5c713149cefe3c0&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14584411" author="roboduke" created="Thu, 25 May 2023 02:35:09 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14141&quot;&gt;https://git.openjdk.org/jdk/pull/14141&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-25 07:04:54 +0000</comment>
                            <comment id="14584012" author="chagedorn" created="Wed, 24 May 2023 00:37:56 -0700"  >ILW = IR test failure with SSE &amp;lt; 4, single test, use SSE = 4; MLM = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5075332">JDK-8287087</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31naz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>