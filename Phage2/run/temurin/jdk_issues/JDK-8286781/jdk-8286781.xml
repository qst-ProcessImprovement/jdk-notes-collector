<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:56:35 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8286781] Replace the deprecated/obsolete gethostbyname and inet_addr calls</title>
                <link>https://bugs.openjdk.org/browse/JDK-8286781</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Originally this was aimed at just Windows: Avoid using deprecated names from winsock2.h&lt;br/&gt;
&lt;br/&gt;
&amp;gt; We currently suppress warnings for uses of some functions in winsock2.h (before &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8286262&quot; title=&quot;Windows: Cleanup deprecation warning suppression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8286262&quot;&gt;&lt;strike&gt;JDK-8286262&lt;/strike&gt;&lt;/a&gt; by globally suppressing deprecation warnings, after by defining &lt;br/&gt;
&amp;gt; _WINSOCK_DEPRECATED_NO_WARNINGS).  It might be better to update our code to not use the deprecated names and remove the warning suppression.&lt;br/&gt;
&lt;br/&gt;
but it turns out that gethostbyname is also marked as obsolete on Linux and is not part of Posix anyway! So we can replace its use by getaddrinfo which is supported on Windows and Posix.&lt;br/&gt;
&lt;br/&gt;
inet_addr is also deprecated on Windows and considered superceded in Posix by inet_pton.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5074952">JDK-8286781</key>
            <summary>Replace the deprecated/obsolete gethostbyname and inet_addr calls</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dholmes">David Holmes</assignee>
                                    <reporter username="kbarrett">Kim Barrett</reporter>
                        <labels>
                            <label>cleanup</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>noreg-cleanup</label>
                            <label>os</label>
                            <label>starter</label>
                    </labels>
                <created>Sun, 15 May 2022 09:37:32 -0700</created>
                <updated>Sat, 8 Jun 2024 02:43:19 -0700</updated>
                            <resolved>Tue, 7 Mar 2023 14:58:22 -0800</resolved>
                                    <version>19</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14679343" author="roboduke" created="Wed, 5 Jun 2024 19:12:12 -0700"  >[jdk11u-fix-request] Approval Request from fitzsim&lt;br/&gt;
This backport is ready to be approved.</comment>
                            <comment id="14677930" author="roboduke" created="Fri, 31 May 2024 13:37:24 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2732&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2732&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 20:33:34 +0000</comment>
                            <comment id="14675423" author="roboduke" created="Wed, 22 May 2024 10:47:35 -0700"  >[jdk17u-fix-request] Approval Request from fitzsim&lt;br/&gt;
This is ready, unless the maintainer considers it necessary to test IdealGraphViewer on Windows and macOS.</comment>
                            <comment id="14674955" author="roboduke" created="Tue, 21 May 2024 08:53:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2487&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2487&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-21 15:49:26 +0000</comment>
                            <comment id="14565167" author="dukebot" created="Tue, 7 Mar 2023 14:58:21 -0800"  >Changeset: d7298245&lt;br/&gt;
Author:    David Holmes &amp;lt;&lt;a href=&apos;mailto:dholmes@openjdk.org&apos;&gt;dholmes@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-07 22:56:33 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/d7298245d6759f62e253b5cf0df975db17fdbf82&quot;&gt;https://git.openjdk.org/jdk/commit/d7298245d6759f62e253b5cf0df975db17fdbf82&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14564239" author="roboduke" created="Thu, 2 Mar 2023 14:43:10 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12842&quot;&gt;https://git.openjdk.org/jdk/pull/12842&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-02 22:35:17 +0000</comment>
                            <comment id="14564236" author="dholmes" created="Thu, 2 Mar 2023 14:16:49 -0800"  >[~djelinski] pointed out that getaddrinfo can resolve both IP addresses and host names so the two step approach used in networkStream::connect is not necessary and we can do away with os::get_host_by_name() completely.</comment>
                            <comment id="14563663" author="dholmes" created="Tue, 28 Feb 2023 16:56:07 -0800"  >Turns out there are other deprecated winsock2 functions that were not being reported due to the earlier problem with gethostbyname. inet_addr in netStream::connect is also deprecated, as is the inet_ntoa I used to add debug logging.</comment>
                            <comment id="14563310" author="dholmes" created="Mon, 27 Feb 2023 23:10:47 -0800"  >Turns out that these functions are obsolete on linux too:&lt;br/&gt;
&lt;br/&gt;
man gethostbyname:&lt;br/&gt;
&amp;nbsp;...&lt;br/&gt;
&amp;nbsp;The gethostbyname*() and gethostbyaddr*() functions are obsolete.  Applications should use getaddrinfo(3) and getnameinfo(3) instead.&lt;br/&gt;
&lt;br/&gt;
The replacement API is exactly the same as used for Windows, so we can potentially have a platform independent solution here if all Posix platforms support it.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve updated the bug title and description to reflect this.</comment>
                            <comment id="14560535" author="dholmes" created="Wed, 15 Feb 2023 20:39:34 -0800"  >Conversion is not straight-forward as the os::get_host_by_name is specified to return a  &amp;quot;struct hostent*&amp;quot;, but the Windows API doesn&amp;#39;t use that struct. That means we either have to change the API at a higher-level, or else recreate a hostent from the information from GetAddrInfo.</comment>
                            <comment id="14553383" author="dholmes" created="Sun, 22 Jan 2023 23:28:25 -0800"  >[2023-01-23T06:54:54,365Z] c:\sb\prod\1674456475\workspace\open\src\hotspot\os\windows\os_windows.cpp(5478): error C2220: the following warning is treated as an error&lt;br/&gt;
[2023-01-23T06:54:54,365Z] c:\sb\prod\1674456475\workspace\open\src\hotspot\os\windows\os_windows.cpp(5478): warning C4996: &amp;#39;gethostbyname&amp;#39;: Use getaddrinfo() or GetAddrInfoW() instead or define _WINSOCK_DEPRECATED_NO_WARNINGS to disable deprecated API warnings&lt;br/&gt;
&lt;br/&gt;
This is caused by:&lt;br/&gt;
&lt;br/&gt;
struct hostent* os::get_host_by_name(char* name) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return (struct hostent*)gethostbyname(name);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The suggested replacement is:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfow&quot;&gt;https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfow&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The only client of this call is in ./share/utilities/ostream.cpp&lt;br/&gt;
&lt;br/&gt;
bool networkStream::connect(const char *ip, short port) {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;struct sockaddr_in server;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;server.sin_family = AF_INET;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;server.sin_port = htons(port);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;server.sin_addr.s_addr = inet_addr(ip);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (server.sin_addr.s_addr == (uint32_t)-1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;struct hostent* host = os::get_host_by_name((char*)ip);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (host != nullptr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memcpy(&amp;amp;server.sin_addr, host-&amp;gt;h_addr_list[0], host-&amp;gt;h_length);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;int result = os::connect(_socket, (struct sockaddr*)&amp;amp;server, sizeof(struct sockaddr_in));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return (result &amp;gt;= 0);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Converting to the new API will take some further investigation.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5130211">JDK-8332848</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131376">JDK-8333838</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5074287">JDK-8286262</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2x4l7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17339"><![CDATA[b13]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>