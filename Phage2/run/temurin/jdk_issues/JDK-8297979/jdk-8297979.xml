<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:32:27 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8297979] ZGC: Ensure consistent MemoryUsage from MemoryMXBean.getHeapMemoryUsage()</title>
                <link>https://bugs.openjdk.org/browse/JDK-8297979</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A lot of lowmem tests fails with &lt;br/&gt;
&lt;br/&gt;
----------System.out:(63/4598)----------&lt;br/&gt;
Stress time: 300 seconds&lt;br/&gt;
Stress iterations factor: 1&lt;br/&gt;
Stress threads factor: 1&lt;br/&gt;
Stress runs factor: 1&lt;br/&gt;
Max memory: 1038090240&lt;br/&gt;
Sleep time: 500&lt;br/&gt;
Iterations: 0&lt;br/&gt;
Number of threads: 24&lt;br/&gt;
Run GC thread: false&lt;br/&gt;
Run mem diag thread: false&lt;br/&gt;
Run forever: false&lt;br/&gt;
MemoryMonitor   &amp;gt; Test mode:	access to MBean through MBeanServer&lt;br/&gt;
MemoryMonitor   &amp;gt; MBeanServer:	DEFAULT&lt;br/&gt;
MemoryMonitor   &amp;gt; Memory:	mixed	(This setting is used in lowmem* tests only)&lt;br/&gt;
MemoryMonitor   &amp;gt; Monitoring:	polling	(This setting is used in lowmem* tests only)&lt;br/&gt;
MemoryMonitor   &amp;gt; Threshold:	collection	(This setting is used in lowmem* tests only)&lt;br/&gt;
MemoryMonitor   &amp;gt; Timeout:	30	(This setting is used in lowmem* tests only)&lt;br/&gt;
MemoryMonitor   &amp;gt; Changing threshold, pool: java.lang:name=ZHeap,type=MemoryPool, nullnull, new threshold: 204472320&lt;br/&gt;
MemoryMonitor   &amp;gt; Collection threshold is set, pool: java.lang:name=ZHeap,type=MemoryPool, usage: init = 8388608(8192K) used = 18874368(18432K) committed = 390070272(380928K) max = 1038090240(1013760K), threshold: 204472320&lt;br/&gt;
Starting Thread[#60,Thread[#36,Thread-2,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#61,Thread[#37,Thread-3,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#62,Thread[#38,Thread-4,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#63,Thread[#39,Thread-5,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#64,Thread[#40,Thread-6,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#65,Thread[#41,Thread-7,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#66,Thread[#42,Thread-8,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#67,Thread[#43,Thread-9,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#68,Thread[#44,Thread-10,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#69,Thread[#45,Thread-11,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#70,Thread[#46,Thread-12,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#71,Thread[#47,Thread-13,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#72,Thread[#48,Thread-14,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#73,Thread[#49,Thread-15,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#74,Thread[#50,Thread-16,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#75,Thread[#51,Thread-17,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#76,Thread[#52,Thread-18,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#77,Thread[#53,Thread-19,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#78,Thread[#54,Thread-20,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#79,Thread[#55,Thread-21,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#80,Thread[#56,Thread-22,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#81,Thread[#57,Thread-23,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#82,Thread[#58,Thread-24,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Starting Thread[#83,Thread[#59,Thread-25,5,MainThreadGroup],5,MainThreadGroup]&lt;br/&gt;
Exception in &lt;br/&gt;
Thread[#44,Thread-10,5,MainThreadGroup]&lt;br/&gt;
MemoryMonitor   &amp;gt; Crossing is noticed, pool: java.lang:name=ZHeap,type=MemoryPool, usage: init = 8388608(8192K) used = 58720256(57344K) committed = 727711744(710656K) max = 1038090240(1013760K), count: 1&lt;br/&gt;
java.lang.IllegalArgumentException: used = 517996544 should be &amp;lt;= committed = 513802240&lt;br/&gt;
	at java.management/java.lang.management.MemoryUsage.&amp;lt;init&amp;gt;(MemoryUsage.java:162)&lt;br/&gt;
	at java.management/sun.management.MemoryImpl.getMemoryUsage0(Native Method)&lt;br/&gt;
	at java.management/sun.management.MemoryImpl.getHeapMemoryUsage(MemoryImpl.java:72)&lt;br/&gt;
	at nsk.monitoring.stress.lowmem.lowmem001$HeapStresser.run(lowmem001.java:162)&lt;br/&gt;
	at nsk.share.runner.ThreadsRunner$ManagedThread.run(ThreadsRunner.java:128)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
MemoryMonitor   &amp;gt; Changing threshold, pool: java.lang:name=ZHeap,type=MemoryPool, nullnull, new threshold: 620756992&lt;br/&gt;
MemoryMonitor   &amp;gt; Collection threshold is set, pool: java.lang:name=ZHeap,type=MemoryPool, usage: init = 8388608(8192K) used = 727711744(710656K) committed = 727711744(710656K) max = 1038090240(1013760K), threshold: 620756992&lt;br/&gt;
Failures summary:&lt;br/&gt;
java.lang.IllegalArgumentException: used = 517996544 should be &amp;lt;= committed = 513802240&lt;br/&gt;
	at java.management/java.lang.management.MemoryUsage.&amp;lt;init&amp;gt;(MemoryUsage.java:162)&lt;br/&gt;
	at java.management/sun.management.MemoryImpl.getMemoryUsage0(Native Method)&lt;br/&gt;
	at java.management/sun.management.MemoryImpl.getHeapMemoryUsage(MemoryImpl.java:72)&lt;br/&gt;
	at nsk.monitoring.stress.lowmem.lowmem001$HeapStresser.run(lowmem001.java:162)&lt;br/&gt;
	at nsk.share.runner.ThreadsRunner$ManagedThread.run(ThreadsRunner.java:128)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
----------System.err:(14/771)----------&lt;br/&gt;
nsk.share.TestFailure: Test exit code: 97&lt;br/&gt;
	at nsk.share.test.Tests$TestRunner.execute(Tests.java:90)&lt;br/&gt;
	at nsk.share.test.Tests$TestRunner.run(Tests.java:96)&lt;br/&gt;
	at nsk.share.gc.GC.runTest(GC.java:114)&lt;br/&gt;
	at nsk.monitoring.stress.lowmem.lowmem001.main(lowmem001.java:56)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: nsk.share.TestFailure: Test exit code: 97&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: nsk.share.TestFailure: Test exit code: 97&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5088740">JDK-8297979</key>
            <summary>ZGC: Ensure consistent MemoryUsage from MemoryMXBean.getHeapMemoryUsage()</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sjohanss">Stefan Johansson</assignee>
                                    <reporter username="lmesnik">Leonid Mesnik</reporter>
                        <labels>
                            <label>problemlist</label>
                            <label>zgc</label>
                    </labels>
                <created>Thu, 1 Dec 2022 12:25:40 -0800</created>
                <updated>Wed, 21 Dec 2022 17:11:20 -0800</updated>
                            <resolved>Fri, 16 Dec 2022 00:07:24 -0800</resolved>
                                    <version>20</version>
                                    <fixVersion>20</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                                                            <comments>
                            <comment id="14545938" author="dukebot" created="Fri, 16 Dec 2022 00:07:22 -0800"  >Changeset: c47e64e4&lt;br/&gt;
Author:    Stefan Johansson &amp;lt;&lt;a href=&apos;mailto:sjohanss@openjdk.org&apos;&gt;sjohanss@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2022-12-16 08:06:09 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk20/commit/c47e64e4f3be80f434dd4dea9b6e8d282b2c2b32&quot;&gt;https://git.openjdk.org/jdk20/commit/c47e64e4f3be80f434dd4dea9b6e8d282b2c2b32&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14545663" author="roboduke" created="Thu, 15 Dec 2022 02:16:28 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk20/pull/39&quot;&gt;https://git.openjdk.org/jdk20/pull/39&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-15 10:09:22 +0000</comment>
                            <comment id="14542005" author="lmesnik" created="Thu, 1 Dec 2022 12:27:43 -0800"  >Tests&lt;br/&gt;
vmTestbase/nsk/monitoring/stress/lowmem/*&lt;br/&gt;
&lt;br/&gt;
were never executed with ZGC before, so it is not regression. Need to check if ZGC might not synced commited/used memory so verification fails.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5089949">JDK-8298963</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                                        </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5088743">JDK-8297982</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zgnf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17413"><![CDATA[b29]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>