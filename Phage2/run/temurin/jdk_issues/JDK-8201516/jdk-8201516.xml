<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:38:48 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8201516] DebugNonSafepoints generates incorrect information</title>
                <link>https://bugs.openjdk.org/browse/JDK-8201516</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>FULL PRODUCT VERSION :&lt;br/&gt;
Reproduced on 1.8.0_121, 1.8.0_144, 1.8.0_162 e.g.:&lt;br/&gt;
&lt;br/&gt;
java version &amp;quot;1.8.0_144&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.8.0_144-b01)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
FULL OS VERSION :&lt;br/&gt;
Linux 3.10.0-514.36.5.el7.x86_64 #1 SMP Thu Dec 28 21:42:18 EST 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;br/&gt;
&lt;br/&gt;
Also reproduced on macOS High Sierra 10.13.3&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
When application is started with -XX:+DebugNonSafepoints parameter the debug information is incorrect: mapping between code memory address and BCI/Java code is wrong. This causes profilers that depend on DebugNonSafepoints, including Flight Recorder, to attribute CPU time to wrong Java code. Please note that this problem is not caused by using profiler prone to safepoint bias or skid. The debug information is incorrect.&lt;br/&gt;
Some operations can make this problem to &amp;quot;go away&amp;quot; e.g. connecting with JVisualVM or Flight recorder completing recording and writing it down to disk.&lt;br/&gt;
&lt;br/&gt;
The Java bug submission for is too short to include all information so I created a writeup here: &lt;a href=&quot;https://github.com/jodzga/debugnonsafepoints-problem&quot;&gt;https://github.com/jodzga/debugnonsafepoints-problem&lt;/a&gt;&lt;br/&gt;
It includes a sample test program, outputs and results of experiments that hopefully will help identify and fix the bug.&lt;br/&gt;
&lt;br/&gt;
THE PROBLEM WAS REPRODUCIBLE WITH -Xint FLAG: Did not try&lt;br/&gt;
&lt;br/&gt;
THE PROBLEM WAS REPRODUCIBLE WITH -server FLAG: Did not try&lt;br/&gt;
&lt;br/&gt;
REPRODUCIBILITY :&lt;br/&gt;
This bug can be reproduced always.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4957618">JDK-8201516</key>
            <summary>DebugNonSafepoints generates incorrect information</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thartmann">Tobias Hartmann</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>10-wnf</label>
                            <label>8-wnf</label>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>datadog-interest</label>
                            <label>dcsfai</label>
                            <label>diagnostics</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk20u-fix-SQE-ok-next</label>
                            <label>jdk20u-fix-request</label>
                            <label>jdk20u-fix-yes</label>
                            <label>jfr</label>
                            <label>oracle-triage-12</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Tue, 10 Apr 2018 11:06:27 -0700</created>
                <updated>Tue, 13 Jun 2023 22:53:25 -0700</updated>
                            <resolved>Mon, 6 Mar 2023 23:00:29 -0800</resolved>
                                    <version>8</version>
                    <version>10</version>
                    <version>11</version>
                    <version>17</version>
                    <version>19</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>20</watches>
                                                                                                                <comments>
                            <comment id="14587383" author="roboduke" created="Tue, 6 Jun 2023 09:19:17 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/1936&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/1936&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-06 16:11:26 +0000</comment>
                            <comment id="14587379" author="goetz" created="Tue, 6 Jun 2023 09:13:59 -0700"  >Fix request [11u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 11.0.20-oracle.&lt;br/&gt;
A C2 change, but a rather simple change not adressing code generation in any way, so low risk.&lt;br/&gt;
I had to adapt the code to syntax used in 11. &lt;br/&gt;
The test does not work in 11 due to lack of test infrastructure.&lt;br/&gt;
SAP nighlty testing passed.</comment>
                            <comment id="14574939" author="roboduke" created="Tue, 18 Apr 2023 19:49:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1268&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1268&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-19 02:42:42 +0000</comment>
                            <comment id="14574342" author="roboduke" created="Mon, 17 Apr 2023 11:24:42 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1255&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1255&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-17 18:16:46 +0000</comment>
                            <comment id="14574341" author="phh" created="Mon, 17 Apr 2023 11:10:24 -0700"  >I don&amp;#39;t see a 17u PR.</comment>
                            <comment id="14574253" author="apangin" created="Mon, 17 Apr 2023 10:30:48 -0700"  >Fix request 17u.&lt;br/&gt;
Improves profiling quality. Low risk. Already backported to 17.0.8-oracle.&lt;br/&gt;
The patch applies cleanly.</comment>
                            <comment id="14570382" author="roboduke" created="Wed, 29 Mar 2023 04:53:14 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk20u/pull/40&quot;&gt;https://git.openjdk.org/jdk20u/pull/40&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-29 11:44:13 +0000</comment>
                            <comment id="14570368" author="thartmann" created="Wed, 29 Mar 2023 04:44:59 -0700"  >Fix Request (JDK 20u)&lt;br/&gt;
Resolves an with incorrect debug information in C2 compiled code. The fix is low risk, was already backported to Oracle JDK 17u / 11u and tested in the JDK 21 and 17u / 11u CIs. The backport applies cleanly.</comment>
                            <comment id="14565271" author="thartmann" created="Wed, 8 Mar 2023 02:52:51 -0800"  >Thanks [~xliu]. I&amp;#39;ve seen that comment and came to the same conclusion.</comment>
                            <comment id="14565231" author="xliu" created="Tue, 7 Mar 2023 23:01:12 -0800"  >hi, Tobias , &lt;br/&gt;
When come to set_default_node_nodes(), I notices Aleksey mentioned late_inliner in the comment. CallGenerator::do_late_inline_helper() does change C::_default_node_notes and never changes it back. &lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
I bring it up in case it falls through the cracks. In my understanding, it&amp;#39;s fine because the new nodes after it are from the late-inlined methods. It&amp;#39;s impossible to introduce new nodes from current method like Parse::at_exits(). so we don&amp;#39;t need to worry about it. &lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
</comment>
                            <comment id="14564963" author="dukebot" created="Mon, 6 Mar 2023 23:00:28 -0800"  >Changeset: 94eda53d&lt;br/&gt;
Author:    Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-07 06:59:23 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/94eda53d98e5011cc613d031ff8941e254eb666b&quot;&gt;https://git.openjdk.org/jdk/commit/94eda53d98e5011cc613d031ff8941e254eb666b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14563833" author="roboduke" created="Wed, 1 Mar 2023 06:21:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12806&quot;&gt;https://git.openjdk.org/jdk/pull/12806&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-01 14:12:34 +0000</comment>
                            <comment id="14563485" author="thartmann" created="Tue, 28 Feb 2023 08:24:02 -0800"  >I attached a simple test (Test2.java), where debug information is completely broken for the byte stores.&lt;br/&gt;
&lt;br/&gt;
java -XX:CompileCommand=quiet -XX:CompileCommand=compileonly,Test2::test -XX:-TieredCompilation -Xbatch -XX:CompileCommand=print,Test2::test  -XX:CompileCommand=inline,Test2::* Test2.java&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f16dcd4cd44:   movb   $0x3,0x7b(%r10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f16dcd4cd49:   mov    %r12b,0x78(%r10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f16dcd4cd4d:   movb   $0x1,0x79(%r10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f16dcd4cd52:   movb   $0x2,0x7a(%r10)              ;*synchronization entry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:test@-1&apos;&gt;test@-1&lt;/a&gt; (line 37)&lt;br/&gt;
&lt;br/&gt;
And with -XX:-RenumberLiveNodes:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f57c9188a44:   movb   $0x3,0x7b(%r10)              ;*putstatic b3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:useful3@1&apos;&gt;useful3@1&lt;/a&gt; (line 22)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:useful2@0&apos;&gt;useful2@0&lt;/a&gt; (line 26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:useful1@0&apos;&gt;useful1@0&lt;/a&gt; (line 31)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:test@9&apos;&gt;test@9&lt;/a&gt; (line 40)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f57c9188a49:   mov    %r12b,0x78(%r10)             ;*putstatic b0 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:test@13&apos;&gt;test@13&lt;/a&gt; (line 41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f57c9188a4d:   movb   $0x1,0x79(%r10)              ;*putstatic b1 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:useful1@4&apos;&gt;useful1@4&lt;/a&gt; (line 32)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:test@9&apos;&gt;test@9&lt;/a&gt; (line 40)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f57c9188a52:   movb   $0x2,0x7a(%r10)              ;*putstatic b2 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:useful2@4&apos;&gt;useful2@4&lt;/a&gt; (line 27)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:useful1@0&apos;&gt;useful1@0&lt;/a&gt; (line 31)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test2::&lt;a href=&apos;mailto:test@9&apos;&gt;test@9&lt;/a&gt; (line 40)&lt;br/&gt;
&lt;br/&gt;
The problem is that RenumberLiveNodes updates node indices but not the C-&amp;gt;_node_note_array side table that contains node index to debug info mappings.</comment>
                            <comment id="14563417" author="thartmann" created="Tue, 28 Feb 2023 06:19:07 -0800"  >Thanks Dean. I think I&amp;#39;ll leave the bci as is for this fix because it&amp;#39;s kind of independent and there are more issues. For example, we also print &amp;quot;synchronization entry&amp;quot; at method entry, even if there is no synchronization. I&amp;#39;ll file a follow up RFE to investigate. Here&amp;#39;s a prototype fix with a regression test: &lt;a href=&quot;https://github.com/openjdk/jdk/compare/master...TobiHartmann:jdk:JDK-8201516&quot;&gt;https://github.com/openjdk/jdk/compare/master...TobiHartmann:jdk:JDK-8201516&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I now had a closer look at the reproducer that the original reporter of this bug provided and there are more issues. It looks like -XX:+RenumberLiveNodes (default) severely screws up the debug information. In fact, it does not even handle debug information at all, looks like a regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8129847&quot; title=&quot;Compiling methods generated by Nashorn triggers high memory usage in C2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8129847&quot;&gt;&lt;strike&gt;JDK-8129847&lt;/strike&gt;&lt;/a&gt;. I&amp;#39;ll investigate more and get back with a fix.</comment>
                            <comment id="14562876" author="dlong" created="Sat, 25 Feb 2023 00:55:54 -0800"  >(2) sounds best to me.  I think do_exits() should set the bci to UnwindBci on entry, because the unlock hasn&amp;#39;t happened yet for synchronized methods.  Later on in the do_synch section, we set bci again:&lt;br/&gt;
&lt;br/&gt;
1077        ex_jvms-&amp;gt;set_bci(   InvocationEntryBci);&lt;br/&gt;
&lt;br/&gt;
but I&amp;#39;m not sure what that should be changed to, maybe AfterBci or AfterExceptionBci?&lt;br/&gt;
</comment>
                            <comment id="14562693" author="thartmann" created="Fri, 24 Feb 2023 07:26:11 -0800"  >[~dlong], we could do that but that won&amp;#39;t solve the problem. The problem is that Parse::Parse calls C-&amp;gt;set_default_node_notes(caller_nn) before do_exits which essentially resets the JVMState to the caller state. We then set the BCI to InvocationEntryBci in the *caller* JVMState. Any new node that is emitted in do_exits, in this case it&amp;#39;s a MemBarRelease, will have that JVMState attached and NonSafepointEmitter::observe_instruction -&amp;gt; DebugInformationRecorder::describe_scope will then use that information when emitting debug info.&lt;br/&gt;
&lt;br/&gt;
The resulting debug info is misleading because it suggests that we are at the beginning of the caller method. Also, we are not &amp;quot;synchronizing&amp;quot; anything here:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fe6ace7b863: movl $0x2a,0xc(%r10) ;*synchronization entry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@-1&apos;&gt;test@-1&lt;/a&gt; (line 40)&lt;br/&gt;
&lt;br/&gt;
I think we have two options:&lt;br/&gt;
&lt;br/&gt;
(1) Disable set_parse_bci(InvocationEntryBci) and simply go with the current caller bci:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd31d188ae3: movl $0x2a,0xc(%r10) ;*invokespecial &amp;lt;init&amp;gt; {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@8&apos;&gt;test@8&lt;/a&gt; (line 40)&lt;br/&gt;
&lt;br/&gt;
This is the same debug info we would emit in the non-final fields case.&lt;br/&gt;
&lt;br/&gt;
(2) Move C-&amp;gt;set_default_node_notes(caller_nn) below do_exits() in Parse::Parse (see attached MoveSetDefaultNodeNotes.patch):&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fbc39188563: movl $0x2a,0xc(%r10) ;*synchronization entry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test$MyClass::&amp;lt;init&amp;gt;@-1 (line 31)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@8&apos;&gt;test@8&lt;/a&gt; (line 40)&lt;br/&gt;
&lt;br/&gt;
In case of (2), using AfterBci probably makes more sense:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f8d9066e563: movl $0x2a,0xc(%r10) ;* method exit (unlocked if synchronized)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test$MyClass::&amp;lt;init&amp;gt;@-2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@8&apos;&gt;test@8&lt;/a&gt; (line 40)&lt;br/&gt;
&lt;br/&gt;
I would prefer (2). What do you think?</comment>
                            <comment id="14562572" author="dlong" created="Thu, 23 Feb 2023 15:25:37 -0800"  >Would it make sense to use a different BCI for exit code?  We could use the new values introduced by JVMCI: AfterBci, UnwindBci, AfterExceptionBci.</comment>
                            <comment id="14562452" author="thartmann" created="Thu, 23 Feb 2023 06:33:02 -0800"  >The debug information is carried by the MemBarRelease added by Parse::do_exits for constructors that write final/stable fields:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;95  MemBarRelease  === 39 1 51 1 1 1  [[ 96 97 ]]  !jvms: Test::test @ bci:-1 (line 37)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;415  MemBarRelease  === 358 1 375 1 1 1  [[ 416 417 ]]  !jvms: Test::test @ bci:-1 (line 37)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;663  MemBarRelease  === 612 1 623 1 1 1  [[ 664 665 ]]  !jvms: Test::test @ bci:-1 (line 37)&lt;br/&gt;
&lt;br/&gt;
They have an empty encoding on x86.&lt;br/&gt;
&lt;br/&gt;
I think we can at least move the set_parse_bci(InvocationEntryBci) down to after emitting the MemBarRelease.</comment>
                            <comment id="14562450" author="thartmann" created="Thu, 23 Feb 2023 06:16:36 -0800"  >Sorry for the delay, [~jbachorik]. I finally got the time to look into this. Unfortunately, I don&amp;#39;t seem to have access to your POC but I was able to come up with a simple reproducer (see attached Test.java).&lt;br/&gt;
&lt;br/&gt;
java -XX:CompileCommand=compileonly,Test::test -XX:CompileCommand=print,Test::test -XX:CompileCommand=quiet -Xbatch -XX:-TieredCompilation Test.java&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188ac7:   movabs $0x800218230,%r11            ;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188ad1:   mov    0xb8(%r11),%r11&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188ad8:   mov    %r11,(%r10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188adb:   movl   $0x218230,0x8(%r10)          ;*new {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@2&apos;&gt;test@2&lt;/a&gt; (line 12)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;;; B3: #	out( B68 B4 ) &amp;lt;- in( B55 B2 )  Freq: 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188ae3:   movl   $0x2a,0xc(%r10)              ;*synchronization entry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@-1&apos;&gt;test@-1&lt;/a&gt; (line 12)&lt;br/&gt;
[...]&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188c1c:   movabs $0x800218230,%r11            ;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188c26:   mov    0xb8(%r11),%r11&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188c2d:   mov    %r11,(%r10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188c30:   movl   $0x218230,0x8(%r10)          ;*new {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@14&apos;&gt;test@14&lt;/a&gt; (line 13)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;;; B13: #	out( B63 B14 ) &amp;lt;- in( B57 B12 )  Freq: 0,999996&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188c38:   movl   $0x2a,0xc(%r10)              ;*synchronization entry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@-1&apos;&gt;test@-1&lt;/a&gt; (line 12)&lt;br/&gt;
[...]&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188d29:   movabs $0x800218230,%r10            ;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188d33:   mov    0xb8(%r10),%r10&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188d3a:   mov    %r10,0x0(%r13)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188d3e:   movl   $0x218230,0x8(%r13)          ;*new {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@26&apos;&gt;test@26&lt;/a&gt; (line 14)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;;; B20: #	out( B64 B21 ) &amp;lt;- in( B59 B19 )  Freq: 0,999994&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f5eb1188d46:   movl   $0x2a,0xc(%r13)              ;*synchronization entry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@-1&apos;&gt;test@-1&lt;/a&gt; (line 12)&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;synchronization entry&amp;quot; debug info comes from the final field initializing store in the MyClass constructor. Parse::do_exits() does set_parse_bci(InvocationEntryBci). Disabling that, &amp;quot;fixes&amp;quot; the issue:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f6ce9188ac7:   movabs $0x800218230,%r11            ;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f6ce9188ad1:   mov    0xb8(%r11),%r11&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f6ce9188ad8:   mov    %r11,(%r10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f6ce9188adb:   movl   $0x218230,0x8(%r10)          ;*new {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@2&apos;&gt;test@2&lt;/a&gt; (line 12)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;;   {metadata(&amp;#39;Test$MyClass&amp;#39;)}&lt;br/&gt;
&amp;nbsp;;; B3: #	out( B68 B4 ) &amp;lt;- in( B55 B2 )  Freq: 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f6ce9188ae3:   movl   $0x2a,0xc(%r10)              ;*invokespecial &amp;lt;init&amp;gt; {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@8&apos;&gt;test@8&lt;/a&gt; (line 12)&lt;br/&gt;
&lt;br/&gt;
I will investigate further.</comment>
                            <comment id="14532843" author="jbachorik" created="Thu, 27 Oct 2022 06:30:58 -0700"  >&amp;gt; Even with DebugNonSafepoints enabled, there is often simply no debug information available for a specific pc in compiled code&lt;br/&gt;
&lt;br/&gt;
This is not the case I described in &lt;a href=&quot;https://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2022-February/053280.html&quot;&gt;https://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2022-February/053280.html&lt;/a&gt; - not sure if I need to open a different ticket to track that but the problem there is incorrect emission of &amp;#39;*synchronization entry&amp;#39; debug info. I provided also a PoC app which can be run and the problem can be found in the assembly printout.&lt;br/&gt;
&lt;br/&gt;
So it is a different case than missing debug info. As I said before - I totally understand JIT can not provide debug info for all instructions but I would expect it not to produce completely wrong debug info.&lt;br/&gt;
</comment>
                            <comment id="14495372" author="thartmann" created="Wed, 11 May 2022 07:57:59 -0700"  >Even with DebugNonSafepoints enabled, there is often simply no debug information available for a specific pc in compiled code. In that case JfrGetCallTrace::find_top_frame -&amp;gt; CompiledMethod::pc_desc_near will approximate and simply use *any* PcDesc after the current pc (see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8281677&quot; title=&quot;Invalid stack traces in JFR when approximating due to a lack of debug information in compiled code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8281677&quot;&gt;JDK-8281677&lt;/a&gt;, which I closed as duplicate, for details).</comment>
                            <comment id="14476191" author="jbachorik" created="Thu, 10 Feb 2022 03:00:56 -0800"  >I can accept ambiguity due to extensive code shape transformations necessary to provide the best available optimization.&lt;br/&gt;
&lt;br/&gt;
I can also accept missing debug info in cases where C2 simply can not provide it.&lt;br/&gt;
&lt;br/&gt;
But what I have hard time accepting is plainly wrong debug information - eg. the matter of attributing the cost of the prologue of the inlined methods to the prologue of the inlining method, emphasised by the fact that eg. JFR will further attribute the prologue costs to the first bytecode instruction of the inlining method. This leads to really surprising and confusing profiles and the user would be probably much better off not enabling `DebugNonSafepoints` flag but she is advised otherwise in &lt;a href=&quot;https://docs.oracle.com/javacomponents/jmc-5-5/jfr-runtime-guide/about.htm#JFRRT111&quot;&gt;https://docs.oracle.com/javacomponents/jmc-5-5/jfr-runtime-guide/about.htm#JFRRT111&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14475466" author="jrose" created="Tue, 8 Feb 2022 10:17:54 -0800"  >The reporter&amp;#39;s posting includes this statement: &amp;quot;The problem is that we used -XX:+DebugNonSafepoints flag so we should expect result to be more accurate.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
It seems to me that shows a fundamental misconception.  That flag produces more PC to BCI mappings in the optimized code, so you get a more precise view of what&amp;#39;s going on, but (paradoxically) it is not a more accurate view.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/Accuracy_and_precision&quot;&gt;https://en.wikipedia.org/wiki/Accuracy_and_precision&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
In fact, the most accurate view will be a &amp;quot;macroscopic&amp;quot; view which does not provide fine details that might be in error.  The more &amp;quot;microscopic&amp;quot; view shows information that may often be helpful, but must also sometimes be misleading.  (A helpful analogy might be Heisenberg uncertainty, which is also a case where precision and accuracy are incompatible with each other.)&lt;br/&gt;
&lt;br/&gt;
So it&amp;#39;s not clear that this bug could be *fully* fixed, even in principle.  After C2 has done inlining, value numbering, reordering, and other ad hoc transformations, the mapping back from machine instructions to bytecode instructions (method+BCI) is necessarily going to be ambiguous or approximate.&lt;br/&gt;
&lt;br/&gt;
Conversely, if precise and accurate machine-to-bytecode mappings are demanded by the user, that inherently limits the optimizations that C2 can perform.  That&amp;#39;s why turning off inlining helps with this problem, although it will generally hurt performance.  Suppose value numbering (e.g., of a field load or even a method call) collapses two BCIs into one PC:  If the user cannot accept this, then the alternative is to compute the value twice and store it in two registers, which is obviously going to affect performance.&lt;br/&gt;
&lt;br/&gt;
All that said, the PC-to-BCI mapping done by C2, even though on a best-efforts basis, can surely be improved and better maintained.  I think the key information we would need to do the best job here is not broad reports about &amp;quot;incorrect data&amp;quot;, but rather a clear standard for quality of service for this facility.  That&amp;#39;s an area of research, actually.  It would be helpful if anyone could recommend papers on how to assign source locations to optimized code, in such a way as to preserve a much value for the user as possible, despite inevitable loss of accuracy.&lt;br/&gt;
</comment>
                            <comment id="14475294" author="shade" created="Tue, 8 Feb 2022 00:19:13 -0800"  >Looks to me, this is C2 problem with debugging info with inlining. The reproducer with JMH -prof perfasm starts to look better with -XX:-Inline or -XX:-DebugInlinedCalls. There is also a suspicious set_default_node_notes() in CallGenerator::do_late_inline_helper(), which is not set back to caller node nodes after we are done...</comment>
                            <comment id="14475271" author="thartmann" created="Mon, 7 Feb 2022 23:07:56 -0800"  >Another report:&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2022-February/053280.html&quot;&gt;https://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2022-February/053280.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Raising priority.</comment>
                            <comment id="14173733" author="rraghavan" created="Fri, 20 Apr 2018 04:18:48 -0700"  >ILW = Wrong debug, diagnostics info; only with -XX:+DebugNonSafepoints; &amp;#39;some operations&amp;#39; as mentioned in JBS description = MLM = P4</comment>
                            <comment id="14172297" author="scfitch" created="Tue, 17 Apr 2018 09:39:31 -0700"  >No plans to address for JDK 8 or 10 unless additional concerns become clear.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14171249" author="fmatte" created="Thu, 12 Apr 2018 18:41:22 -0700"  >Thanks for the detailed description of the issue mentioned https:/github.com/jodzga/debugnonsafepoints-problem&lt;br/&gt;
After analyzing test.jfr (attached) it does look like issue with usage of  &amp;quot;-XX:+DebugNonSafepoints&amp;quot; flag.&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5097362">JDK-8305143</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5097378">JDK-8305159</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5097866">JDK-8305561</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5099032">JDK-8306559</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5099664">JDK-8307040</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5103121">JDK-8309983</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4833465">JDK-8129847</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095306">JDK-8303451</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102784" name="MoveSetDefaultNodeNotes.patch" size="1826" author="thartmann" created="Fri, 24 Feb 2023 07:21:25 -0800"/>
                            <attachment id="102767" name="Test.java" size="1696" author="thartmann" created="Thu, 23 Feb 2023 06:09:34 -0800"/>
                            <attachment id="102829" name="Test2.java" size="1054" author="thartmann" created="Tue, 28 Feb 2023 08:20:51 -0800"/>
                            <attachment id="76044" name="test.jfr" size="807424" author="fmatte" created="Thu, 12 Apr 2018 18:38:30 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2dfcj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17339"><![CDATA[b13]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>