<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:43:44 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306476] CDS ArchiveHeapTestClass.java test asserts when vm_exit is called on VM thread</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306476</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK21 CI:&lt;br/&gt;
&lt;br/&gt;
runtime/cds/appcds/cacheObject/ArchiveHeapTestClass.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s snippets from the hs_err_pid file:&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/System/Volumes/Data/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S65008/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/43400d5d-58a9-4063-b829-40c489be60da/runs/2503f40a-bd21-4674-9378-ad50808570e5/workspace/open/src/hotspot/share/runtime/mutex.cpp:57), pid=1197, tid=15107&lt;br/&gt;
#  fatal error: VM thread could block on lock that may be held by a JavaThread during safepoint: Heap_lock&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+19) (fastdebug build 21-ea+19-LTS-1562)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+19-LTS-1562, interpreted mode, tiered, compressed oops, compressed class ptrs, g1 gc, bsd-aarch64)&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x000000014260e6b0):  VMThread &amp;quot;VM Thread&amp;quot; [stack: 0x000000016e1f4000,0x000000016e3f7000] [id=15107]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000016e1f4000,0x000000016e3f7000],  sp=0x000000016e3f5ab0,  free space=2054k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0x12b76ac]  VMError::report_and_die(int, char const*, char const*, char*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x4bc  (mutex.cpp:57)&lt;br/&gt;
V  [libjvm.dylib+0x670818]  report_fatal(VMErrorType, char const*, int, char const*, ...)+0x88&lt;br/&gt;
V  [libjvm.dylib+0xf02dd0]  Mutex::check_safepoint_state(Thread*)+0x5c&lt;br/&gt;
V  [libjvm.dylib+0xf033a4]  Mutex::lock(Thread*)+0x68&lt;br/&gt;
V  [libjvm.dylib+0x995654]  vm_exit(int)+0x110&lt;br/&gt;
V  [libjvm.dylib+0x916bd0]  KlassSubGraphInfo::check_allowed_klass(InstanceKlass*)+0xa0&lt;br/&gt;
V  [libjvm.dylib+0x9167d8]  KlassSubGraphInfo::add_subgraph_object_klass(Klass*)+0x724&lt;br/&gt;
V  [libjvm.dylib+0x91355c]  HeapShared::archive_reachable_objects_from(int, KlassSubGraphInfo*, oop, bool)+0x7f8&lt;br/&gt;
V  [libjvm.dylib+0x91c6bc]  void WalkOopAndArchiveClosure::do_oop_work&amp;lt;narrowOop&amp;gt;(narrowOop*)+0x42c&lt;br/&gt;
V  [libjvm.dylib+0x920edc]  void ObjArrayKlass::oop_oop_iterate&amp;lt;narrowOop, WalkOopAndArchiveClosure&amp;gt;(oop, WalkOopAndArchiveClosure*)+0x2b0&lt;br/&gt;
V  [libjvm.dylib+0x920b98]  void OopOopIterateDispatch&amp;lt;WalkOopAndArchiveClosure&amp;gt;::Table::oop_oop_iterate&amp;lt;ObjArrayKlass, narrowOop&amp;gt;(WalkOopAndArchiveClosure*, oop, Klass*)+0x4c&lt;br/&gt;
V  [libjvm.dylib+0x9199a0]  void oopDesc::oop_iterate&amp;lt;WalkOopAndArchiveClosure&amp;gt;(WalkOopAndArchiveClosure*)+0x118&lt;br/&gt;
V  [libjvm.dylib+0x913600]  HeapShared::archive_reachable_objects_from(int, KlassSubGraphInfo*, oop, bool)+0x89c&lt;br/&gt;
V  [libjvm.dylib+0x919be8]  HeapShared::archive_reachable_objects_from_static_field(InstanceKlass*, char const*, int, char const*, bool)+0x210&lt;br/&gt;
V  [libjvm.dylib+0x915bd0]  HeapShared::archive_object_subgraphs(ArchivableStaticFieldInfo*, bool, bool)+0x11c&lt;br/&gt;
V  [libjvm.dylib+0x9153a8]  HeapShared::copy_open_objects()+0x10c&lt;br/&gt;
V  [libjvm.dylib+0x914e3c]  HeapShared::archive_objects(GrowableArray&amp;lt;MemRegion&amp;gt;*, GrowableArray&amp;lt;MemRegion&amp;gt;*, GrowableArray&amp;lt;ArchiveHeapBitmapInfo&amp;gt;*, GrowableArray&amp;lt;ArchiveHeapBitmapInfo&amp;gt;*)+0x2f0&lt;br/&gt;
V  [libjvm.dylib+0xead268]  VM_PopulateDumpSharedSpace::dump_java_heap_objects(GrowableArray&amp;lt;Klass*&amp;gt;*)+0x510&lt;br/&gt;
V  [libjvm.dylib+0xeacbb8]  VM_PopulateDumpSharedSpace::doit()+0xe0&lt;br/&gt;
V  [libjvm.dylib+0x12bed40]  VM_Operation::evaluate()+0x1cc&lt;br/&gt;
V  [libjvm.dylib+0x12e529c]  VMThread::evaluate_operation(VM_Operation*)+0x198&lt;br/&gt;
V  [libjvm.dylib+0x12e5dec]  VMThread::inner_execute(VM_Operation*)+0x334&lt;br/&gt;
V  [libjvm.dylib+0x12e4edc]  VMThread::loop()+0xc4&lt;br/&gt;
V  [libjvm.dylib+0x12e4ca0]  VMThread::run()+0xd0&lt;br/&gt;
V  [libjvm.dylib+0x11f0c34]  Thread::call_run()+0x134&lt;br/&gt;
V  [libjvm.dylib+0xf731e8]  thread_native_entry(Thread*)+0x160&lt;br/&gt;
C  [libsystem_pthread.dylib+0x726c]  _pthread_start+0x94&lt;br/&gt;
VM_Operation (0x000000016d7aeb70): PopulateDumpSharedSpace, mode: safepoint, requested by thread 0x000000014280ea10</description>
                <environment></environment>
        <key id="5098937">JDK-8306476</key>
            <summary>CDS ArchiveHeapTestClass.java test asserts when vm_exit is called on VM thread</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="matsaave">Matias Saavedra Silva</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>tier2</label>
                    </labels>
                <created>Wed, 19 Apr 2023 13:45:52 -0700</created>
                <updated>Mon, 1 May 2023 10:07:05 -0700</updated>
                            <resolved>Mon, 24 Apr 2023 07:16:09 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14576073" author="dukebot" created="Mon, 24 Apr 2023 07:16:07 -0700"  >Changeset: 62acc882&lt;br/&gt;
Author:    Matias Saavedra Silva &amp;lt;&lt;a href=&apos;mailto:matsaave@openjdk.org&apos;&gt;matsaave@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-24 14:13:53 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/62acc882bff32da287ac3ea22ebe43b90a724489&quot;&gt;https://git.openjdk.org/jdk/commit/62acc882bff32da287ac3ea22ebe43b90a724489&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14575771" author="roboduke" created="Fri, 21 Apr 2023 09:16:14 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13583&quot;&gt;https://git.openjdk.org/jdk/pull/13583&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-21 16:09:07 +0000</comment>
                            <comment id="14575459" author="iklam" created="Thu, 20 Apr 2023 09:42:26 -0700"  >&amp;gt; It is a pity so many of the CDS dump actions terminate on error directly rather than having some kind of error propagation.&lt;br/&gt;
&lt;br/&gt;
I filed &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306580&quot; title=&quot;Propagate CDS dumping errors instead of directly exiting the VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8306580&quot;&gt;&lt;strike&gt;JDK-8306580&lt;/strike&gt;&lt;/a&gt; &amp;quot;Propagate CDS dumping errors instead of directly exiting the VM&amp;quot;, but it may be difficult to implement because much of the CDS code runs inside the VM thread.</comment>
                            <comment id="14575249" author="dholmes" created="Wed, 19 Apr 2023 23:37:20 -0700"  >It is a pity so many of the CDS dump actions terminate on error directly rather than having some kind of error propagation.&lt;br/&gt;
&lt;br/&gt;
Maybe vm_direct_exit() is more appropriate here than low-level os::_exit()?</comment>
                            <comment id="14575223" author="iklam" created="Wed, 19 Apr 2023 19:46:37 -0700"  >This is related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8303422&quot; title=&quot;Use common functions to exit the VM for -Xshare:dump and CDS errors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8303422&quot;&gt;&lt;strike&gt;JDK-8303422&lt;/strike&gt;&lt;/a&gt;: Use common functions to exit the VM for -Xshare:dump and CDS errors, which changed KlassSubGraphInfo::check_allowed_klass() from calling os::_exit() to MetaspaceShared::unrecoverable_writing_error(), which calls vm_exit().&lt;br/&gt;
&lt;br/&gt;
At this point, we are running inside the VM Thread.&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s probably not safe to call vm_exit() inside the VM Thread. Perhaps MetaspaceShared::unrecoverable_writing_error() should be changed to use os::_exit() instead.</comment>
                            <comment id="14575194" author="dholmes" created="Wed, 19 Apr 2023 14:54:25 -0700"  >[~iklam] and [~ccheung]: Have to assume this is caused by the recent changes to the CDS exit paths (but I can&amp;#39;t locate that bug at the moment).</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5099061">JDK-8306583</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5099057">JDK-8306580</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i316zf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>