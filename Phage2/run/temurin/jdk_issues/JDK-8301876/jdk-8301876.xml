<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:35:16 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301876] Crash in DumpTimeClassInfo::add_verification_constraint</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301876</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>This happens in pre-21-b9  builds in our startup perf tests, this runs on linux-x64.&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f677259f39e, pid=736196, tid=736217&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+9) (build 21-ea+9-LTS-639)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21-ea+9-LTS-639, mixed mode, emulated-client, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x70e39e]  DumpTimeClassInfo::add_verification_constraint(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool)+0x2e&lt;br/&gt;
#&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: -XX:-UsePerfData -XX:CICompilerCount=2 -XX:TieredStopAtLevel=1 -XX:ArchiveClassesAtExit=App.jsa netty-startup-1.24-SNAPSHOT.jar&lt;br/&gt;
&lt;br/&gt;
Host: AMD EPYC 7J13 64-Core Processor, 6 cores, 9G, Oracle Linux Server release 8.7&lt;br/&gt;
Time: Mon Feb  6 15:03:39 2023 UTC elapsed time: 1.047766 seconds (0d 0h 0m 1s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f676c5df750):  JavaThread &amp;quot;nioEventLoopGroup-2-1&amp;quot; [_thread_in_vm, id=736217, stack(0x00007f6746808000,0x00007f6746909000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f6746808000,0x00007f6746909000],  sp=0x00007f67469025f0,  free space=1001k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x70e39e]  DumpTimeClassInfo::add_verification_constraint(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool)+0x2e&lt;br/&gt;
V  [libjvm.so+0xe356ed]  SystemDictionaryShared::add_verification_constraint(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool)+0x7d&lt;br/&gt;
V  [libjvm.so+0xed182b]  VerificationType::is_reference_assignable_from(VerificationType const&amp;amp;, ClassVerifier*, bool, JavaThread*) const+0x16b&lt;br/&gt;
V  [libjvm.so+0xede191]  ClassVerifier::verify_exception_handler_table(unsigned int, char*, int&amp;amp;, int&amp;amp;, JavaThread*)+0x351&lt;br/&gt;
V  [libjvm.so+0xee0472]  ClassVerifier::verify_method(methodHandle const&amp;amp;, JavaThread*)+0x1d2&lt;br/&gt;
V  [libjvm.so+0xee7cfa]  ClassVerifier::verify_class(JavaThread*)+0xea&lt;br/&gt;
V  [libjvm.so+0xee812a]  Verifier::verify(InstanceKlass*, bool, JavaThread*)+0x32a&lt;br/&gt;
V  [libjvm.so+0x896e52]  InstanceKlass::link_class_impl(JavaThread*)+0x432&lt;br/&gt;
V  [libjvm.so+0x9a69c4]  get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, JavaThread*) [clone .constprop.0]+0xd4&lt;br/&gt;
V  [libjvm.so+0x9a6ed2]  JVM_GetClassDeclaredConstructors+0x92&lt;br/&gt;
j  java.lang.Class.getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor;+0 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Class.privateGetDeclaredConstructors(Z)[Ljava/lang/reflect/Constructor;+52 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Class.getConstructor0([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;+14 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Class.getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;+24 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.reflect.Proxy$ProxyBuilder.build()Ljava/lang/reflect/Constructor;+16 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.reflect.Proxy.lambda$getProxyConstructor$0(Ljava/lang/ClassLoader;Ljdk/internal/loader/AbstractClassLoaderValue$Sub;)Ljava/lang/reflect/Constructor;+15 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.reflect.Proxy$$Lambda$76+0x0000000801076708.apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+8 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.loader.AbstractClassLoaderValue$Memoizer.get()Ljava/lang/Object;+75 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.loader.AbstractClassLoaderValue.computeIfAbsent(Ljava/lang/ClassLoader;Ljava/util/function/BiFunction;)Ljava/lang/Object;+63 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.reflect.Proxy.getProxyConstructor(Ljava/lang/Class;Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;+40 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.reflect.Proxy.newProxyInstance(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;+22 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  sun.reflect.annotation.AnnotationParser$1.run()Ljava/lang/annotation/Annotation;+33 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
J 1269 c1 sun.reflect.annotation.AnnotationParser.parseAnnotation2(Ljava/nio/ByteBuffer;Ljdk/internal/reflect/ConstantPool;Ljava/lang/Class;Z[Ljava/lang/Class;)Ljava/lang/annotation/Annotation; &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt; (275 bytes) @ 0x00007f67656b24ac [0x00007f67656b1ea0+0x000000000000060c]&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5093444">JDK-8301876</key>
            <summary>Crash in DumpTimeClassInfo::add_verification_constraint</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="iklam">Ioi Lam</assignee>
                                    <reporter username="ecaspole">Eric Caspole</reporter>
                        <labels>
                            <label>cds</label>
                            <label>jdk20-defer-request</label>
                            <label>jdk20-defer-yes</label>
                            <label>jdk20u-fix-SQE-ok</label>
                            <label>jdk20u-fix-request</label>
                            <label>jdk20u-fix-yes</label>
                            <label>regression</label>
                    </labels>
                <created>Mon, 6 Feb 2023 07:07:38 -0800</created>
                <updated>Thu, 29 Jun 2023 14:33:55 -0700</updated>
                            <resolved>Wed, 8 Feb 2023 20:55:28 -0800</resolved>
                                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                                <comments>
                            <comment id="14563200" author="roboduke" created="Mon, 27 Feb 2023 13:04:44 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk20u/pull/9&quot;&gt;https://git.openjdk.org/jdk20u/pull/9&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-27 20:16:53 +0000</comment>
                            <comment id="14558968" author="iklam" created="Thu, 9 Feb 2023 13:50:09 -0800"  >Fix request for 20u:&lt;br/&gt;
Applies cleanly and tests are passed.</comment>
                            <comment id="14558710" author="iklam" created="Wed, 8 Feb 2023 20:53:22 -0800"  >Changeset: dc6d52ce&lt;br/&gt;
Author: Ioi Lam &amp;lt;&lt;a href=&apos;mailto:iklam@openjdk.org&apos;&gt;iklam@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date: 2023-02-09 00:30:07 +0000&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/commit/dc6d52cea54eb8c8793dd0f46002c28ec43d9d2c&quot;&gt;https://git.openjdk.org/jdk/commit/dc6d52cea54eb8c8793dd0f46002c28ec43d9d2c&lt;/a&gt;</comment>
                            <comment id="14558708" author="iklam" created="Wed, 8 Feb 2023 20:53:09 -0800"  >Fix was pushed while main bug was targeted to 20. Reset the main bug to fixed in 21 and copied the Robo Duke entry here.</comment>
                            <comment id="14558675" author="kvn" created="Wed, 8 Feb 2023 16:20:29 -0800"  >JDK 20 deferral request approved.&lt;br/&gt;
&lt;br/&gt;
Yes, let backport it into update release.&lt;br/&gt;
</comment>
                            <comment id="14558151" author="roboduke" created="Tue, 7 Feb 2023 23:32:52 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12467&quot;&gt;https://git.openjdk.org/jdk/pull/12467&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-08 07:26:13 +0000</comment>
                            <comment id="14558098" author="iklam" created="Tue, 7 Feb 2023 17:22:31 -0800"  >JDK 20 deferral justification:&lt;br/&gt;
&lt;br/&gt;
With product build:&lt;br/&gt;
&lt;br/&gt;
Latest JDK 20 product build (b34) - does not crash (1000 runs)&lt;br/&gt;
JDK 21 product build (b05) - does not crash (1000 runs)&lt;br/&gt;
JDK 21 product build (b06) - crashes almost immediately - this is first promoted build with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299074&quot; title=&quot;nmethod marked for deoptimization is not deoptimized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299074&quot;&gt;&lt;strike&gt;JDK-8299074&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Because JDK 20 RDP2 is ending soon, and this bug doesn&amp;#39;t seem to affect the product build of JDK 20, I think it&amp;#39;s more prudent to fix this bug first in JDK 21, and then backport to JDK 20.1 after more careful testing.</comment>
                            <comment id="14558095" author="iklam" created="Tue, 7 Feb 2023 17:07:00 -0800"  >I can confirm that the crash happens easily in JDK 20-b09 (the first build with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8290739&quot; title=&quot;Simplify storage of dump-time class information&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8290739&quot;&gt;&lt;strike&gt;JDK-8290739&lt;/strike&gt;&lt;/a&gt;) but not in b08&lt;br/&gt;
&lt;br/&gt;
x=1; while b09/jdk-20/fastdebug/bin/java -XX:-UsePerfData -XX:CICompilerCount=2 -XX:TieredStopAtLevel=1 -XX:ArchiveClassesAtExit=App.jsa -jar netty-startup-1.24-SNAPSHOT.jar; do x=$(expr $x + 1); echo; echo ======================$x; echo; done&lt;br/&gt;
&lt;br/&gt;
The above crashes in the first few iterations:&lt;br/&gt;
&lt;br/&gt;
vs&lt;br/&gt;
&lt;br/&gt;
x=1; while b08/jdk-20/fastdebug/bin/java -XX:-UsePerfData -XX:CICompilerCount=2 -XX:TieredStopAtLevel=1 -XX:ArchiveClassesAtExit=App.jsa -jar netty-startup-1.24-SNAPSHOT.jar; do x=$(expr $x + 1); echo; echo ======================$x; echo; done&lt;br/&gt;
&lt;br/&gt;
The above doesn&amp;#39;t crash after 100 iterations</comment>
                            <comment id="14558033" author="mwthomps" created="Tue, 7 Feb 2023 11:14:52 -0800"  >ILW=HMM=P2</comment>
                            <comment id="14558020" author="iklam" created="Tue, 7 Feb 2023 10:47:56 -0800"  >The class that causes the crash is a generated proxy class whose name starts with &amp;quot;jdk/proxy2/$Proxy&amp;quot;. It gets removed from the _dumptime_table after the dynamic dump has finished. However, before the VM exits, there&amp;#39;s a brief period where some Java code might be executed which tries to use the _dumptime_table.&lt;br/&gt;
&lt;br/&gt;
The fix is to avoid removing such entries from the table:&lt;br/&gt;
&lt;br/&gt;
@@ -1449,11 +1453,11 @@ class CloneDumpTimeClassTable: public StackObj {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert(_cloned_table != nullptr, &amp;quot;_cloned_table is nullptr&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;void do_entry(InstanceKlass* k, DumpTimeClassInfo&amp;amp; info) {&lt;br/&gt;
-    if (!info.is_excluded()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bool created;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_cloned_table-&amp;gt;put_if_absent(k, info, &amp;amp;created);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert(created, &amp;quot;must be&amp;quot;);&lt;br/&gt;
-    }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;};&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
The problem probably predates &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8290739&quot; title=&quot;Simplify storage of dump-time class information&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8290739&quot;&gt;&lt;strike&gt;JDK-8290739&lt;/strike&gt;&lt;/a&gt;, but this changeset probably made the crash more likely.&lt;br/&gt;
</comment>
                            <comment id="14557900" author="thartmann" created="Tue, 7 Feb 2023 00:57:42 -0800"  >I narrowed it down to JDK 20 b09, this is a regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8290739&quot; title=&quot;Simplify storage of dump-time class information&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8290739&quot;&gt;&lt;strike&gt;JDK-8290739&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14557878" author="thartmann" created="Tue, 7 Feb 2023 00:00:38 -0800"  >[~ccheung], how did you narrow this down to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299074&quot; title=&quot;nmethod marked for deoptimization is not deoptimized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299074&quot;&gt;&lt;strike&gt;JDK-8299074&lt;/strike&gt;&lt;/a&gt;? I can also reproduce the assert with JDK 21 b5, which does not include the fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299074&quot; title=&quot;nmethod marked for deoptimization is not deoptimized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299074&quot;&gt;&lt;strike&gt;JDK-8299074&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/workspace/open/src/hotspot/share/cds/dumpTimeClassInfo.cpp:202), pid=413119, tid=413146&lt;br/&gt;
#  assert(p != __null) failed: we must not see any non-shared InstanceKlass* that&amp;#39;s not stored with SystemDictionaryShared::init_dumptime_info&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+5) (fastdebug build 21-ea+5-LTS-271)&lt;br/&gt;
</comment>
                            <comment id="14557872" author="thartmann" created="Mon, 6 Feb 2023 23:46:42 -0800"  >When trying to reproduce, I&amp;#39;m hitting an assert right away:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/oracle/jdk/open/src/hotspot/share/cds/dumpTimeClassInfo.cpp:202), pid=404999, tid=405026&lt;br/&gt;
#  assert(p != nullptr) failed: we must not see any non-shared InstanceKlass* that&amp;#39;s not stored with SystemDictionaryShared::init_dumptime_info&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0) (fastdebug build 21-internal-LTS-2023-02-07-0730119.tobias...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-internal-LTS-2023-02-07-0730119.tobias..., mixed mode, emulated-client, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xcec397]  DumpTimeSharedClassTable::get_info(InstanceKlass*)+0x157&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f50e98bd000,0x00007f50e99be000],  sp=0x00007f50e99b7540,  free space=1001k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xcec397]  DumpTimeSharedClassTable::get_info(InstanceKlass*)+0x157  (dumpTimeClassInfo.cpp:202)&lt;br/&gt;
V  [libjvm.so+0x1a3cdd4]  SystemDictionaryShared::get_info(InstanceKlass*)+0x54  (systemDictionaryShared.cpp:192)&lt;br/&gt;
V  [libjvm.so+0x1a3f0e8]  SystemDictionaryShared::add_verification_constraint(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool)+0x48  (systemDictionaryShared.cpp:699)&lt;br/&gt;
V  [libjvm.so+0x1b42c9a]  VerificationType::is_reference_assignable_from(VerificationType const&amp;amp;, ClassVerifier*, bool, JavaThread*) const+0x2da  (verificationType.cpp:113)&lt;br/&gt;
V  [libjvm.so+0x1b5176c]  ClassVerifier::verify_exception_handler_table(unsigned int, char*, int&amp;amp;, int&amp;amp;, JavaThread*)+0x25c  (verifier.cpp:1895)&lt;br/&gt;
V  [libjvm.so+0x1b53545]  ClassVerifier::verify_method(methodHandle const&amp;amp;, JavaThread*)+0x205  (verifier.cpp:733)&lt;br/&gt;
V  [libjvm.so+0x1b59893]  ClassVerifier::verify_class(JavaThread*)+0x283  (verifier.cpp:642)&lt;br/&gt;
V  [libjvm.so+0x1b5a3a7]  Verifier::verify(InstanceKlass*, bool, JavaThread*)+0x617  (verifier.cpp:198)&lt;br/&gt;
V  [libjvm.so+0x100a1c4]  InstanceKlass::link_class_impl(JavaThread*)+0x1f4  (instanceKlass.cpp:752)</comment>
                            <comment id="14557870" author="thartmann" created="Mon, 6 Feb 2023 23:26:50 -0800"  >As [~rehn] pointed out in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299074&quot; title=&quot;nmethod marked for deoptimization is not deoptimized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299074&quot;&gt;&lt;strike&gt;JDK-8299074&lt;/strike&gt;&lt;/a&gt;, it seems that the fix triggers more handshakes during startup, so it might well be that it just reveals an existing race condition.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5095181">JDK-8303348</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093706">JDK-8302110</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095093">JDK-8303268</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5079702">JDK-8290739</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5046173">JDK-8264735</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17418"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22023">20</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i309dn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>