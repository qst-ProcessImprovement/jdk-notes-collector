<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:24:18 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-4512626] Non-editable JTextArea provides no visual indication of keyboard focus</title>
                <link>https://bugs.openjdk.org/browse/JDK-4512626</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Non-editable JTextAreas do not have any visual indication of keyboard focus. This makes it impossible for users to know where the focus has gone. This is particular problematic for keyboard-only users, because the JTextArea swallows Tab and Return. The user must know the focus is on this component in order to figure out they Control-Tab is needed to move out of the component.&lt;br/&gt;
&lt;br/&gt;
This problem violoates the section 508 accessibility guideslines (the first half of the quote below):&lt;br/&gt;
&lt;br/&gt;
&amp;quot;A well-defined on-screen indication of the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;current focus shall be provided that moves&lt;br/&gt;
&amp;nbsp;&amp;nbsp;among interactive interface elements as the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;input focus changes. The focus shall be&lt;br/&gt;
&amp;nbsp;&amp;nbsp;programmatically exposed so that assistive&lt;br/&gt;
&amp;nbsp;&amp;nbsp;technology can track focus and focus&lt;br/&gt;
&amp;nbsp;&amp;nbsp;changes.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Non-editable JTextAreas are often used for instruction text at the top of a dialog box or wizard page. A non-focusable JTextArea could be used instead, but this makes the instruction text unfocusable for screen readers as well. This setup would violate the second part of the 508 rule as quoted above.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
###@###.### 2001-10-12&lt;br/&gt;
Note that this affects uneditable JTextFields as well, and possibly other components.&lt;br/&gt;
Comments copied from &lt;a href=&quot;http://bugs.openjdk.java.net/show_bug.cgi?id=100229&quot;&gt;http://bugs.openjdk.java.net/show_bug.cgi?id=100229&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Description From Dietmar Hechensteiner 2012-02-21 05:49:23 PDT&lt;br/&gt;
&lt;br/&gt;
Created an attachment (id=257) [details]&lt;br/&gt;
Patch against openjdk7/jdk&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4512626&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4512626&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Summary:&lt;br/&gt;
Non-editable text components do not have any visual indication of keyboard&lt;br/&gt;
focus. This makes it impossible for users to know where the focus has gone. The&lt;br/&gt;
user must know the focus is on this component in order to figure out they&lt;br/&gt;
Control-Tab is needed to move out of the component.&lt;br/&gt;
&lt;br/&gt;
Description of the change:&lt;br/&gt;
Instead of binding the caret visibility to &amp;quot;enabled &amp;amp;&amp;amp; editable&amp;quot; only &amp;quot;enabled&amp;quot;&lt;br/&gt;
was choosen, as it provides a visual indication of the focus.&lt;br/&gt;
&lt;br/&gt;
Comment #1 From Tim Bell 2012-07-11 15:40:00 PDT&lt;br/&gt;
&lt;br/&gt;
Closing.  This is SUNBUG 4512626.  The information here will be transferred to&lt;br/&gt;
that report.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4350456">JDK-4512626</key>
            <summary>Non-editable JTextArea provides no visual indication of keyboard focus</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kizune">Alexander Zuev</assignee>
                                    <reporter username="duke">J. Duke</reporter>
                        <labels>
                            <label>a11y</label>
                            <label>accessibility</label>
                            <label>bugdb_34470414</label>
                            <label>for</label>
                            <label>noreg-hard</label>
                            <label>sn_127</label>
                            <label>sn_132</label>
                            <label>sn_133</label>
                            <label>sn_134</label>
                            <label>swing-text</label>
                            <label>text</label>
                            <label>vpat</label>
                    </labels>
                <created>Tue, 9 Oct 2001 15:20:00 -0700</created>
                <updated>Mon, 25 Nov 2024 13:33:16 -0800</updated>
                            <resolved>Mon, 19 Dec 2022 14:18:23 -0800</resolved>
                                    <version>1.3.0</version>
                    <version>1.3.1</version>
                    <version>1.4.0</version>
                    <version>5.0</version>
                    <version>6</version>
                                    <fixVersion>20</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14546874" author="dcubed" created="Tue, 20 Dec 2022 09:08:28 -0800"  >This fix was backed out using:&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299123&quot; title=&quot;[BACKOUT] 4512626 Non-editable JTextArea provides no visual indication of keyboard focus&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299123&quot;&gt;&lt;strike&gt;JDK-8299123&lt;/strike&gt;&lt;/a&gt; [BACKOUT] 4512626 Non-editable JTextArea provides no visual indication of keyboard focus</comment>
                            <comment id="14546663" author="dukebot" created="Mon, 19 Dec 2022 14:18:22 -0800"  >Changeset: 3e17e3c1&lt;br/&gt;
Author:    Alexander Zuev &amp;lt;&lt;a href=&apos;mailto:kizune@openjdk.org&apos;&gt;kizune@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2022-12-19 22:16:56 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk20/commit/3e17e3c1c12d71461213bf15cdb72d4d93c88460&quot;&gt;https://git.openjdk.org/jdk20/commit/3e17e3c1c12d71461213bf15cdb72d4d93c88460&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14544920" author="roboduke" created="Mon, 12 Dec 2022 14:39:28 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk20/pull/21&quot;&gt;https://git.openjdk.org/jdk20/pull/21&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-12 22:33:51 +0000</comment>
                            <comment id="14541127" author="roboduke" created="Mon, 28 Nov 2022 23:38:36 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11408&quot;&gt;https://git.openjdk.org/jdk/pull/11408&lt;/a&gt;&lt;br/&gt;
Date: 2022-11-29 07:30:32 +0000</comment>
                            <comment id="14541117" author="kizune" created="Mon, 28 Nov 2022 22:39:43 -0800"  >he unfocused non-editable JTextArea can not be distinguished from the focused one. In addition the cared while being invisible remain functional - one can use it with the arrow keys or mouse and use appropriate shortcuts to select text around the caret. So not only it violates the a11y rules by not displaying the focus status in any way but also an inconvenient related to the selecting text and using arrow keys to scroll text within the scroll area - without having the visual clue on the caret position it is unclear when text will start scrolling instead of moving the invisible caret to the corresponding border of the text area.&lt;br/&gt;
&lt;br/&gt;
The proposed fix is to make caret visible but non-blinking, indicating by that that the editing is not possible. The blink rate is to be preserved in case of the custom blink rate on the component that has its editable state changed in runtime. </comment>
                            <comment id="13950609" author="ptbrunet" created="Tue, 31 May 2016 15:13:12 -0700"  >Some thoughts on the above commentary:&lt;br/&gt;
- In some cases static text, i.e. JLabel, should be used by the application developer, not a non-editable text field or text area.  Screen readers have means to read static text.  Static text does not need to be focusable.&lt;br/&gt;
- One valid scenario is when the text area/field can change state (read only vs editable) depending on other controls.  In this case then the proper solution would be to have a focus highlight around the control and a flashing caret (and the ability to use the keyboard to select and copy text).</comment>
                            <comment id="12563031" author="darcy" created="Mon, 23 Jul 2012 00:52:44 -0700"  >BT2:SUGGESTED FIX&lt;br/&gt;
&lt;br/&gt;
See attached patch from OpenJDK bugzilla.</comment>
                            <comment id="12563033" author="shickeysunw" created="Mon, 12 Sep 2005 11:22:03 -0700"  >BT2:EVALUATION&lt;br/&gt;
&lt;br/&gt;
Also affects JSpinner - see bug 6322745.</comment>
                            <comment id="12563034" author="shickeysunw" created="Wed, 3 Aug 2005 07:15:58 -0700"  >BT2:EVALUATION&lt;br/&gt;
&lt;br/&gt;
While showing a caret may not be the solution (although I strongly believe it is after considering other native platforms - it&amp;#39;s needed to enable copying text) this remains an accessibility issue that needs to be addressed. Re-opening.</comment>
                            <comment id="12563035" author="idk" created="Thu, 28 Jul 2005 08:22:11 -0700"  >BT2:EVALUATION&lt;br/&gt;
&lt;br/&gt;
I am not sure we need to provide such indication by default.&lt;br/&gt;
If such indication is needed developer might set caret to visible for example:&lt;br/&gt;
textComponent.getCaret().setVisible(true);&lt;br/&gt;
&lt;br/&gt;
closing as &amp;quot;will not fix&amp;quot;</comment>
                            <comment id="12563039" author="defectconv" created="Wed, 29 Sep 2004 23:18:45 -0700"  >BT2:CONVERTED DATA&lt;br/&gt;
&lt;br/&gt;
BugTraq+ Release Management Values&lt;br/&gt;
&lt;br/&gt;
COMMIT TO FIX:&lt;br/&gt;
mustang&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="12563037" author="defectconv" created="Wed, 29 Sep 2004 22:48:54 -0700"  >BT2:EVALUATION&lt;br/&gt;
&lt;br/&gt;
This does not fit the merlin show-stopper criteria and is therefore being downgraded in priority. I am also changing it to an RFE because I think we&amp;#39;ll need to invent a way to show focus on a non-editable text component.&lt;br/&gt;
###@###.### 2001-10-11&lt;br/&gt;
&lt;br/&gt;
I now beleive the correct way to show focus on a non-editable text component is to show the flashing caret. This will both give a visual indication of focus and allow the user to select text via the keyboard. I am now restoring the priority, changing back to a bug, and attempting to fit this fix into merlin.&lt;br/&gt;
###@###.### 2001-10-15&lt;br/&gt;
&lt;br/&gt;
There are multiple changes that can be made to address this problem. The first suggestion is to draw some type of rectangle within the bounds of the component to give an indication of focus. A couple of things should be said about such a fix. One, it can only be made in the Metal look and feel since the others must match their associated platforms. Two, if it is to be done, it should be done for all JTextComponents. The complication is that some of these components, such as JTextArea, JTextPane, and JEditorPane, exist most of the time inside a JScrollPane. This prevents us from simply adding a custom border around the component itself. It would somehow need to install such a border on the surrounding scrollpane. Whatever the solution, there is no time to put such a change into merlin. This type of change will have to be re-investigated, with input of the User Experience Team, for a later release.&lt;br/&gt;
&lt;br/&gt;
Another partial solution has been investigated for this problem. The fix is to show a flashing caret whenever a JTextComponent has focus. This brings with it multiple benefits. First, it allows all users to move around and select text within a component, editable or not. Second, it gives some type of indication of focus. Some have suggested that a flashing caret in a non-editable text component is misleading. It may be so, but it IS a technique used by Motif and Windows. Unfortunately, we&amp;#39;ve determined that such a change brings with it complications. JEditorPane is a JTextComponent often used to display HTML in a browser-like way. JavaHelp for instance uses it in this manner. If we were to make this change, all applications that use non-editable JEditorPanes would suddenly have a flashing caret. Such a side effect might be okay if we could provide a mechanism to turn off the caret. Unfortunately, this would require an API change. As a result of this discovery, we&amp;#39;ve decided that we cannot make this change until a later release.&lt;br/&gt;
&lt;br/&gt;
We have decided that we are unable to provide a good solution for this problem for merlin. This bug should stay open and will be addressed when possible, but for now it must be downgraded in priority per merlin criteria.&lt;br/&gt;
###@###.### 2001-10-16&lt;br/&gt;
&lt;br/&gt;
The fix described above will require API change and will have to wait until Tiger.&lt;br/&gt;
###@###.### 2002-03-01&lt;br/&gt;
&lt;br/&gt;
Name: anR10225			Date: 02/27/2004&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Currently the focus traversing behavior of the uneditable text&lt;br/&gt;
area is fixed. I.e. pressing Tab is not consumed by the focused&lt;br/&gt;
uneditable text area.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MS Windows indicates the focus of uneditable text component by&lt;br/&gt;
displaying a flashing caret. We could make the same thing with&lt;br/&gt;
JTextField, JPasswordField, JFormattedTextField and JTextArea.&lt;br/&gt;
For Windows LAF we could make this without API changes just by&lt;br/&gt;
overriding createCaret() in corresponding UI classes.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The same thing we could made with Metal LAF by the same way.&lt;br/&gt;
Here we may also make the caret visible in uneditable components&lt;br/&gt;
but non-flashing.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
======================================================================</comment>
                            <comment id="12563038" author="shickeysunw" created="Mon, 15 Oct 2001 17:00:00 -0700"  >BT2:WORK AROUND&lt;br/&gt;
&lt;br/&gt;
There are multiple work arounds available depending on the route one chooses to take. To show a flashing caret in the component when it has focus, simply add a focus listener to the component to set the caret to visible on focusGained(). This is exactly what DefaultCaret does except that it currently only does so when isEditable() is true.&lt;br/&gt;
&lt;br/&gt;
To take the other approach, which is to paint some type of rectangle around the component, one could extend the component or provide a custom UI class that paints the component differently if it has focus. This is the benefit of pluggable look and feel.&lt;br/&gt;
###@###.### 2001-10-16</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5090109">JDK-8299104</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="4237446">JDK-4703291</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4236954">JDK-4514256</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4239378">JDK-4991606</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4240016">JDK-5100939</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4241036">JDK-6322745</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5090130">JDK-8299123</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5090081">JDK-8299077</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5129632">JDK-8333846</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5089489">JDK-8298602</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10001" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Imported</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Sep 2012 21:34:24 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10002" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Indexed</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 28 Jul 2012 04:52:33 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h9tz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100738</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17413"><![CDATA[b29]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="206"><![CDATA[javax.swing]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17002"><![CDATA[Fix failed]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>