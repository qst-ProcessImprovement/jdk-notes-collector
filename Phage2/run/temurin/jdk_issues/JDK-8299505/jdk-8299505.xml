<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:20:13 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299505] findVirtual on array classes incorrectly restricts the receiver type</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299505</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Calling lookup.findVirtual(int[].class, &amp;quot;clone&amp;quot;, MethodType.methodType(Object.class)) with a lookup that is not in the package java.lang will give a MethodHandle with the type (&amp;lt;lookup.lookupClass()&amp;gt;)Ljava/lang/Object; instead of ([I)Ljava/lang/Object;&lt;br/&gt;
&lt;br/&gt;
Using the publicLookup works correctly because its lookupClass is java.lang.Object. This is why the tests added in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8001105&quot; title=&quot;findVirtual of Object[].clone produces internal error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8001105&quot;&gt;&lt;strike&gt;JDK-8001105&lt;/strike&gt;&lt;/a&gt; pass.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/c2e3d7284814cd6b49f44b4de18e0f92310422b0/src/java.base/share/classes/java/lang/invoke/MethodHandles.java#L3940&quot;&gt;https://github.com/openjdk/jdk/blob/c2e3d7284814cd6b49f44b4de18e0f92310422b0/src/java.base/share/classes/java/lang/invoke/MethodHandles.java#L3940&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Additionally, you can use a lookup from Lookup.in(Class) and it will give you a MethodHandle to clone an object that doesn&amp;#39;t have a public clone method, or implement Clonable, however this is not particularly useful because JVM_Clone will throw CloneNotSupported if it doesn&amp;#39;t implement Clonable&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run the following class&lt;br/&gt;
&lt;br/&gt;
import java.lang.invoke.MethodHandle;&lt;br/&gt;
import java.lang.invoke.MethodHandles;&lt;br/&gt;
import java.lang.invoke.MethodType;&lt;br/&gt;
&lt;br/&gt;
class Scratch&lt;br/&gt;
{&lt;br/&gt;
	public static void main(String[] args) throws Throwable&lt;br/&gt;
	{&lt;br/&gt;
		MethodHandles.Lookup lookup = MethodHandles.lookup();&lt;br/&gt;
		MethodHandle mh = lookup.findVirtual(int[].class, &amp;quot;clone&amp;quot;, MethodType.methodType(Object.class));&lt;br/&gt;
		System.out.println(mh.type());&lt;br/&gt;
		mh.invoke(new int[]{});&lt;br/&gt;
	}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
it should print `(int[])Object` and complete normally&lt;br/&gt;
ACTUAL -&lt;br/&gt;
it prints `(Scratch)Object` and throws a ClassCastException&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import java.lang.invoke.MethodHandle;&lt;br/&gt;
import java.lang.invoke.MethodHandles;&lt;br/&gt;
import java.lang.invoke.MethodType;&lt;br/&gt;
&lt;br/&gt;
class Scratch&lt;br/&gt;
{&lt;br/&gt;
	public static void main(String[] args) throws Throwable&lt;br/&gt;
	{&lt;br/&gt;
		MethodHandles.Lookup lookup = MethodHandles.lookup();&lt;br/&gt;
		MethodHandle mh = lookup.findVirtual(int[].class, &amp;quot;clone&amp;quot;, MethodType.methodType(Object.class));&lt;br/&gt;
		mh.invoke(new int[]{});&lt;br/&gt;
	}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Use a publicLookup, or a lookup from a class in java.lang&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5090495">JDK-8299505</key>
            <summary>findVirtual on array classes incorrectly restricts the receiver type</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="liach">Chen Liang</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>amazon-interest</label>
                            <label>dcsaw</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Sat, 31 Dec 2022 00:56:07 -0800</created>
                <updated>Sun, 4 Jun 2023 20:16:36 -0700</updated>
                            <resolved>Wed, 31 May 2023 09:30:17 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>19</version>
                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14586046" author="dukebot" created="Wed, 31 May 2023 09:30:16 -0700"  >Changeset: 78aa5f3f&lt;br/&gt;
Author:    Chen Liang &amp;lt;&lt;a href=&apos;mailto:liach@openjdk.org&apos;&gt;liach@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Mandy Chung &amp;lt;&lt;a href=&apos;mailto:mchung@openjdk.org&apos;&gt;mchung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-31 16:28:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/78aa5f3fc1c7fc7929e0d2b5d94da0827483b7c5&quot;&gt;https://git.openjdk.org/jdk/commit/78aa5f3fc1c7fc7929e0d2b5d94da0827483b7c5&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14585817" author="mchung" created="Tue, 30 May 2023 16:33:16 -0700"  >&amp;gt; While the language behavior is that T[].clone is ()T[], the actual method in bytecode is clone()Ljava/lang/Object; and the method handle should reflect that, returning ([T)Ljava/lang/Object;, especially if looked up with methodType(Object.class) &lt;br/&gt;
&lt;br/&gt;
Agreed.  Method handle invocation follows the bytecode behavior and so the return type is not adjusted.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14579573" author="roboduke" created="Sat, 6 May 2023 11:23:56 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13855&quot;&gt;https://git.openjdk.org/jdk/pull/13855&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-06 18:15:56 +0000</comment>
                            <comment id="14579212" author="JIRAUSER20011" created="Thu, 4 May 2023 14:06:40 -0700"  >When looking for T[].clone, lookup always delegate the declaring class to Object. However, clone is protected in Object, so findVirtual might have lost the original T[] receiver class information and resolves for a super.clone() instead for the lookup class. This is somewhat similar to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8155106&quot; title=&quot;MHs.Lookup.findConstructor returns handles for array classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8155106&quot;&gt;&lt;strike&gt;JDK-8155106&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14548847" author="pnarayanaswa" created="Wed, 4 Jan 2023 21:05:07 -0800"  >Additional Information from submitter:&lt;br/&gt;
============================&lt;br/&gt;
&amp;gt; findVirtual on an array type to look up the &amp;quot;clone&amp;quot; method should return a method handle of method type &amp;quot;()T[]&amp;quot;. &lt;br/&gt;
&lt;br/&gt;
While the language behavior is that T[].clone is ()T[], the actual method in bytecode is clone()Ljava/lang/Object; and the method handle should reflect that, returning ([T)Ljava/lang/Object;, especially if looked up with methodType(Object.class)</comment>
                            <comment id="14548539" author="mchung" created="Tue, 3 Jan 2023 17:43:00 -0800"  >All arrays are considered to implement the interface Cloneable and that the return type of the clone method of an array type T[] is T[] where T is any reference or primitive type.   findVirtual on an array type to look up the &amp;quot;clone&amp;quot; method should return a method handle of method type &amp;quot;()T[]&amp;quot;.</comment>
                            <comment id="14548223" author="tongwan" created="Mon, 2 Jan 2023 21:42:32 -0800"  >The observations on Windows 10:&lt;br/&gt;
JDK 8: Failed, observed ClassCastException.&lt;br/&gt;
JDK 11: Failed.&lt;br/&gt;
JDK 17: Failed.&lt;br/&gt;
JDK 19: Failed.&lt;br/&gt;
JDK 20ea+23: Failed.</comment>
                    </comments>
                    <attachments>
                            <attachment id="102182" name="Scratch.java" size="455" author="tongwan" created="Mon, 2 Jan 2023 21:43:39 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zr6j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="213"><![CDATA[java.lang.invoke]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>