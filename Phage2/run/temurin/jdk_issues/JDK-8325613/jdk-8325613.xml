<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:03:59 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8325613] CTW: Stale method cleanup requires GC after Sweeper removal</title>
                <link>https://bugs.openjdk.org/browse/JDK-8325613</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I was surprised to see that CTW times have regressed considerably in recent JDKs. For example, Linux x86_64 fastdebug time is extremely bad:&lt;br/&gt;
&lt;br/&gt;
$ time CONF=linux-x86_64-server-fastdebug make test TEST=&amp;quot;applications/ctw/modules/java_base.java&amp;quot;&lt;br/&gt;
real 26m13s&lt;br/&gt;
user 71m22s&lt;br/&gt;
sys 185m55s&lt;br/&gt;
&lt;br/&gt;
For comparison, the same run in current 17u-dev does it in:&lt;br/&gt;
real 2m24s&lt;br/&gt;
user 7m32s&lt;br/&gt;
sys 0m18s&lt;br/&gt;
&lt;br/&gt;
A brief profiling shows the code spends lot of time spinning for deoptimization here: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/1358850aa63a2874031ca33eba278432fd09d6ab/src/hotspot/share/runtime/deoptimization.cpp#L193-L195&quot;&gt;https://github.com/openjdk/jdk/blob/1358850aa63a2874031ca33eba278432fd09d6ab/src/hotspot/share/runtime/deoptimization.cpp#L193-L195&lt;/a&gt; -- code added by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8300926&quot; title=&quot;Several startup regressions  ~6-70% in 21-b6 all platforms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8300926&quot;&gt;&lt;strike&gt;JDK-8300926&lt;/strike&gt;&lt;/a&gt; in JDK 21. CTW runner deoptimizes methods often to let newer versions of the method to compile.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8300926&quot; title=&quot;Several startup regressions  ~6-70% in 21-b6 all platforms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8300926&quot;&gt;&lt;strike&gt;JDK-8300926&lt;/strike&gt;&lt;/a&gt; likely explains why &amp;quot;sys&amp;quot; time is this bad: CTW runner executes multiple threads, most of them spending time in kernel yielding. Adding -XX:ActiveProcessorCount=1 helps to avoid this:&lt;br/&gt;
&lt;br/&gt;
$ time CONF=linux-x86_64-server-fastdebug make test TEST=&amp;quot;applications/ctw/modules/java_base.java&amp;quot; TEST_VM_OPTS=&amp;quot;-XX:ActiveProcessorCount=1&amp;quot;&lt;br/&gt;
real 31m42s&lt;br/&gt;
user 32m31s&lt;br/&gt;
sys 0m17s&lt;br/&gt;
&lt;br/&gt;
If we cannot figure out if &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8300926&quot; title=&quot;Several startup regressions  ~6-70% in 21-b6 all platforms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8300926&quot;&gt;&lt;strike&gt;JDK-8300926&lt;/strike&gt;&lt;/a&gt; could be made better, maybe we should be running CTW with 1 thread by default, and rely on external parallelism to utilize resources better.&lt;br/&gt;
&lt;br/&gt;
Note that &amp;quot;real&amp;quot; time is still bad. It might have some relation to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8290025&quot; title=&quot;Remove the Sweeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8290025&quot;&gt;&lt;strike&gt;JDK-8290025&lt;/strike&gt;&lt;/a&gt;, which removed the sweeper, and that now relies on GC to unload the methods promptly. We might be running into the same issue we fixed earlier when Sweeper was present (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8238247&quot; title=&quot;CTW runner should sweep nmethods more aggressively&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8238247&quot;&gt;&lt;strike&gt;JDK-8238247&lt;/strike&gt;&lt;/a&gt;). Might need to call GC explicitly now?</description>
                <environment></environment>
        <key id="5121182">JDK-8325613</key>
            <summary>CTW: Stale method cleanup requires GC after Sweeper removal</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shade">Aleksey Shipilev</assignee>
                                    <reporter username="shade">Aleksey Shipilev</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>ctw</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok-next</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>oracle-interest</label>
                            <label>oracle-triage-23</label>
                    </labels>
                <created>Mon, 12 Feb 2024 01:36:11 -0800</created>
                <updated>Wed, 8 Jan 2025 04:14:25 -0800</updated>
                            <resolved>Thu, 14 Mar 2024 03:28:42 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14658044" author="roboduke" created="Mon, 18 Mar 2024 03:13:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/370&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/370&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-18 09:55:26 +0000</comment>
                            <comment id="14658043" author="roboduke" created="Mon, 18 Mar 2024 03:12:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/104&quot;&gt;https://git.openjdk.org/jdk22u/pull/104&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-18 09:52:07 +0000</comment>
                            <comment id="14658042" author="roboduke" created="Mon, 18 Mar 2024 03:11:00 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve CTW testing times. CTW tests pass, and much faster with the patch applied. Have been running in my CI for several days without problems. The benefit for testing time is so large I would like to have it in our dev repositories sooner. Risk is low, test only fix.</comment>
                            <comment id="14658039" author="roboduke" created="Mon, 18 Mar 2024 03:10:02 -0700"  >[jdk22u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve CTW testing times. CTW tests pass, and much faster with the patch applied. Risk is low, test only fix.</comment>
                            <comment id="14657365" author="dukebot" created="Thu, 14 Mar 2024 03:28:41 -0700"  >Changeset: 1281e18f&lt;br/&gt;
Author:    Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-14 10:26:49 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1281e18f1447848d7eb5e3bde508ac002b4c390d&quot;&gt;https://git.openjdk.org/jdk/commit/1281e18f1447848d7eb5e3bde508ac002b4c390d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14656897" author="roboduke" created="Tue, 12 Mar 2024 12:38:14 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18249&quot;&gt;https://git.openjdk.org/jdk/pull/18249&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-12 19:11:42 +0000</comment>
                            <comment id="14656779" author="shade" created="Tue, 12 Mar 2024 05:29:24 -0700"  >I think both issues are basically due to Sweeper removal. The deopt is slow due to lots of stale methods. The spinning on deopt mutex from multiple threads is a side effect of this, and tuning down the thread count only mitigates contention on that mutex, not the actual issue with deopts being slow.&lt;br/&gt;
&lt;br/&gt;
After &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8290025&quot; title=&quot;Remove the Sweeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8290025&quot;&gt;&lt;strike&gt;JDK-8290025&lt;/strike&gt;&lt;/a&gt;, we need to somehow get GCs to clean up the cruft to make quicker progress.</comment>
                            <comment id="14648251" author="thartmann" created="Mon, 12 Feb 2024 03:21:31 -0800"  >ILW = Slow deoptimization and/or sweeping, only reported with CTW testing, no workaround = MLH = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5124576">JDK-8328476</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124857">JDK-8328712</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5125359">JDK-8329159</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5092266">JDK-8300926</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5009663">JDK-8238247</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5078872">JDK-8290025</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34y4r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17352"><![CDATA[b15]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>