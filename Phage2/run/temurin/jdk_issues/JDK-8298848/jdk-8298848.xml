<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:54:51 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8298848] C2: clone all of (CmpP (LoadKlass (AddP down at split if</title>
                <link>https://bugs.openjdk.org/browse/JDK-8298848</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>This is related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297933&quot; title=&quot;[REDO] Compiler should only use verified interface types for optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297933&quot;&gt;&lt;strike&gt;JDK-8297933&lt;/strike&gt;&lt;/a&gt; and only triggers with it:&lt;br/&gt;
&lt;br/&gt;
The crash occurs because a (If (Bool (CmpP (LoadKlass ..))))&lt;br/&gt;
only has a single projection. It lost the other projection because of&lt;br/&gt;
a CheckCastPP that becomes top. Initially the pattern is, in pseudo&lt;br/&gt;
code,:&lt;br/&gt;
&lt;br/&gt;
if (obj.klass == some_class) {&lt;br/&gt;
obj = CheckCastPP#1(obj);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
obj itself is a CheckCastPP that&amp;#39;s pinned at a dominating if. That&lt;br/&gt;
dominating if goes through split through phi. The LoadKlass for the&lt;br/&gt;
pseudo code above also has control set to the dominating if being&lt;br/&gt;
transformed. This result in:&lt;br/&gt;
&lt;br/&gt;
if (phi1 == some_class) {&lt;br/&gt;
obj = CheckCastPP#1(phi2);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
with phi1 = (Phi (LoadKlass obj) (LoadKlass obj)) and phi2 = (Phi obj obj)&lt;br/&gt;
with obj = (CheckCastPP#2 obj&amp;#39;)&lt;br/&gt;
&lt;br/&gt;
PhiNode::Ideal() transforms phi2 into a new CheckCastPP:&lt;br/&gt;
(CheckCastPP#3 obj&amp;#39; obj&amp;#39;) with control set to the region right above&lt;br/&gt;
the if in the pseudo code above. There happens to be another&lt;br/&gt;
CheckCastPP at the same control which casts obj&amp;#39; to a narrower&lt;br/&gt;
type. So the new CheckCastPP#3 is replaced by that one (because of&lt;br/&gt;
ConstraintCastNode::dominating_cast())and pseudo code becomes:&lt;br/&gt;
&lt;br/&gt;
if (phi1 == some_class) {&lt;br/&gt;
obj = CheckCastPP#1(CheckCastPP#4(obj&amp;#39;));&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
and then:&lt;br/&gt;
&lt;br/&gt;
if (phi1 == some_class) {&lt;br/&gt;
obj = top;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
because the types of the 2 CheckCastPPs conflict. That would be ok if:&lt;br/&gt;
&lt;br/&gt;
phi1 == some_class&lt;br/&gt;
&lt;br/&gt;
would constant fold. It would if the test was:&lt;br/&gt;
&lt;br/&gt;
if (CheckCastPP#4(obj&amp;#39;).klass == some_klass) {&lt;br/&gt;
&lt;br/&gt;
but because of split if, the (CmpP (LoadKlass ..)) and the&lt;br/&gt;
CheckCastPP#1 ended up with 2 different object inputs that then were&lt;br/&gt;
transformed differently. The fix I propose is to have split if clone the entire:&lt;br/&gt;
&lt;br/&gt;
(Bool (CmpP (LoadKlass (AddP ..))))&lt;br/&gt;
&lt;br/&gt;
down the same way (Bool (CmpP ..)) is cloned down. After split if, the&lt;br/&gt;
pseudo code becomes:&lt;br/&gt;
&lt;br/&gt;
if (phi.klass == some_class) {&lt;br/&gt;
obj = CheckCastPP#1(phi);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The bug can&amp;#39;t occur because the CheckCastPP and (CmpP (LoadKlass ..))&lt;br/&gt;
operate on the same phi input. The change in split_if.cpp implements&lt;br/&gt;
that.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5089769">JDK-8298848</key>
            <summary>C2: clone all of (CmpP (LoadKlass (AddP down at split if</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="roland">Roland Westrelin</reporter>
                        <labels>
                            <label>c2</label>
                            <label>oracle-triage-11</label>
                            <label>oracle-triage-17</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Thu, 15 Dec 2022 01:12:25 -0800</created>
                <updated>Mon, 6 Feb 2023 00:16:12 -0800</updated>
                            <resolved>Thu, 5 Jan 2023 01:35:22 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14548925" author="dukebot" created="Thu, 5 Jan 2023 01:35:21 -0800"  >Changeset: 87238470&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-05 09:33:14 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/872384707e89d03ede655aad16f360dc94f10152&quot;&gt;https://git.openjdk.org/jdk/commit/872384707e89d03ede655aad16f360dc94f10152&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14545675" author="roboduke" created="Thu, 15 Dec 2022 03:04:12 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11689&quot;&gt;https://git.openjdk.org/jdk/pull/11689&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-15 10:53:37 +0000</comment>
                            <comment id="14545668" author="chagedorn" created="Thu, 15 Dec 2022 02:29:01 -0800"  >ILW = Segfault in split if but only happens with new code added by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297933&quot; title=&quot;[REDO] Compiler should only use verified interface types for optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297933&quot;&gt;&lt;strike&gt;JDK-8297933&lt;/strike&gt;&lt;/a&gt; (not in mainline, yet), never observed without &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297933&quot; title=&quot;[REDO] Compiler should only use verified interface types for optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297933&quot;&gt;&lt;strike&gt;JDK-8297933&lt;/strike&gt;&lt;/a&gt;, -XX:-SplitIfBlocks = MLM = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5087974">JDK-8297345</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5088685">JDK-8297933</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zn0b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>