<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:59:17 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8288204] GVN Crash: assert() failed: correct memory chain</title>
                <link>https://bugs.openjdk.org/browse/JDK-8288204</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Arch: x86_64&lt;br/&gt;
OS: Ubuntu 20.04.4 LTS&lt;br/&gt;
HotSpot&lt;br/&gt;
- openjdk version &amp;quot;17.0.5-internal&amp;quot; 2022-10-18&lt;br/&gt;
- OpenJDK Runtime Environment (fastdebug build 17.0.5-internal+0-adhoc.simon.my-jdk17u)&lt;br/&gt;
- OpenJDK 64-Bit Server VM (fastdebug build 17.0.5-internal+0-adhoc.simon.my-jdk17u, mixed mode, sharing)&lt;br/&gt;
javac: javac 17.0.5-internal&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Note, this is found in OpenJDK 17.0.5 (internal; &lt;a href=&quot;https://github.com/openjdk/jdk17u-dev;&quot;&gt;https://github.com/openjdk/jdk17u-dev;&lt;/a&gt; commit 041924ab).&lt;br/&gt;
&lt;br/&gt;
The following is part of the log:&lt;br/&gt;
```&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/zdata/congli/my-jdk17u/src/hotspot/share/opto/memnode.cpp:226), pid=2320806, tid=2321039&lt;br/&gt;
#  assert(phase-&amp;gt;C-&amp;gt;get_alias_index(t) == phase-&amp;gt;C-&amp;gt;get_alias_index(t_adr)) failed: correct memory chain&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (17.0.5) (fastdebug build 17.0.5-internal+0-adhoc.congli.my-jdk17u)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 17.0.5-internal+0-adhoc.congli.my-jdk17u, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x14393eb]  MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*)+0x1ab&lt;br/&gt;
#&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: -Xmx1G -Xbatch Test&lt;br/&gt;
&lt;br/&gt;
Host: amdsuplus3.inf.ethz.ch, AMD Ryzen Threadripper 3990X 64-Core Processor, 128 cores, 251G, Ubuntu 20.04.4 LTS&lt;br/&gt;
Time: Thu Jun  9 18:31:10 2022 CEST elapsed time: 0.533573 seconds (0d 0h 0m 0s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f93085e6e50):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=2321039, stack(0x00007f92d33fc000,0x00007f92d34fd000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    533   53 % !b  4       Test::mainTest @ 152 (220 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f92d33fc000,0x00007f92d34fd000],  sp=0x00007f92d34f8300,  free space=1008k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x14393eb]  MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*)+0x1ab&lt;br/&gt;
V  [libjvm.so+0x1440ed3]  LoadNode::Ideal(PhaseGVN*, bool)+0x313&lt;br/&gt;
V  [libjvm.so+0x1611818]  PhaseIterGVN::transform_old(Node*)+0xb8&lt;br/&gt;
V  [libjvm.so+0x160a6de]  PhaseIterGVN::optimize()+0x7e&lt;br/&gt;
V  [libjvm.so+0xa49319]  Compile::Optimize()+0xa49&lt;br/&gt;
V  [libjvm.so+0xa4b1b6]  Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)+0x1306&lt;br/&gt;
V  [libjvm.so+0x873806]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x646&lt;br/&gt;
V  [libjvm.so+0xa5ce99]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x1029&lt;br/&gt;
V  [libjvm.so+0xa5dc88]  CompileBroker::compiler_thread_loop()+0x678&lt;br/&gt;
V  [libjvm.so+0x1a0b846]  JavaThread::thread_main_inner()+0x266&lt;br/&gt;
V  [libjvm.so+0x1a11a44]  Thread::call_run()+0x104&lt;br/&gt;
V  [libjvm.so+0x158987c]  thread_native_entry(Thread*)+0x10c&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
1. javac Test.java&lt;br/&gt;
2. java -Xbatch -Xmx1G Test&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
No crashes&lt;br/&gt;
ACTUAL -&lt;br/&gt;
Crashed&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
class Test {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;int N;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;double[] dArrFld;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;int[] iArrFld;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;int iMeth() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;double dArr[] = new double[N];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long meth_res = Double.doubleToLongBits(checkSum(dArr));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (int) meth_res;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;void mainTest(String[] strArr1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i = 47864, i27 = 0, i32, i37 = 39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;short s4 = 21959;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;float f4;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i ^= iMeth();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (; ; ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (i32 = 1; i32 &amp;lt; 46; i32++) i27 += s4;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (f4 = 1; f4 &amp;lt; 1; ++f4) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dArrFld[(int) f4] = 53586;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iArrFld[i37] *= 92.656F;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dArrFld = double1array(N, 2.89809);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (++i37 &amp;lt; 46);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int ax$5 = 4; ax$5 &amp;lt; 6167; )&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long[] ax$3 = {1};&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int ax$2 = 0; ax$2 &amp;lt; 100000; ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (long duration : ax$3) {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String ax$0 = &amp;quot;test&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ax$0 = ax$0 + ax$0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ax$0 = ax$0 + ax$0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (Throwable ax$4) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void main(String[] strArr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Test _instance = new Test();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_instance.mainTest(strArr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static double checkSum(double[] a) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;double sum = 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int j = 0; j &amp;lt; a.length; j++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += (a[j] / (j + 1) + a[j] % (j + 1));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return sum;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static double[] double1array(int sz, double seed) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;double[] ret = new double[sz];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;init(ret, seed);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return ret;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void init(double[] a, double seed) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int j = 0; j &amp;lt; a.length; j++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a[j] = (j % 2 == 0) ? seed + j : seed - j;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5076635">JDK-8288204</key>
            <summary>GVN Crash: assert() failed: correct memory chain</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yyang">Yi Yang</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>c2</label>
                            <label>dcsswa</label>
                            <label>hgupdate-sync</label>
                            <label>oracle-triage-11</label>
                            <label>oracle-triage-20</label>
                            <label>oraclejdk-na</label>
                            <label>reproducer-no</label>
                            <label>webbug</label>
                    </labels>
                <created>Thu, 9 Jun 2022 09:37:35 -0700</created>
                <updated>Tue, 28 Mar 2023 02:15:09 -0700</updated>
                            <resolved>Mon, 2 Jan 2023 23:26:20 -0800</resolved>
                                    <version>17.0.3</version>
                    <version>18</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14548291" author="dukebot" created="Tue, 3 Jan 2023 05:12:35 -0800"  >Changeset: a6a903d4&lt;br/&gt;
Author:    Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-03 08:21:22 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a6a903d4b627bde85a311336ce25a7f5e25cf664&quot;&gt;https://git.openjdk.org/jdk/commit/a6a903d4b627bde85a311336ce25a7f5e25cf664&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14548241" author="thartmann" created="Mon, 2 Jan 2023 23:26:20 -0800"  >Fix was pushed while main bug was targeted to JDK 20. Reset the main bug to fixed in 21 and copied the Robo Duke entry here.</comment>
                            <comment id="14548240" author="thartmann" created="Mon, 2 Jan 2023 23:25:28 -0800"  >Changeset: 04591595&lt;br/&gt;
Author: Yi Yang &amp;lt;&lt;a href=&apos;mailto:yyang@openjdk.org&apos;&gt;yyang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date: 2022-12-26 02:16:06 +0000&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/commit/04591595374e84cfbfe38d92bff4409105b28009&quot;&gt;https://git.openjdk.org/jdk/commit/04591595374e84cfbfe38d92bff4409105b28009&lt;/a&gt;</comment>
                            <comment id="14548238" author="roboduke" created="Mon, 2 Jan 2023 23:23:43 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk20/pull/80&quot;&gt;https://git.openjdk.org/jdk20/pull/80&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-03 07:16:09 +0000</comment>
                            <comment id="14548236" author="thartmann" created="Mon, 2 Jan 2023 23:16:33 -0800"  >This bug was targeted for JDK 20 but the fix was pushed into the JDK 21 repository. I&amp;#39;m backporting the fix to JDK 20.</comment>
                            <comment id="14516149" author="roboduke" created="Sat, 6 Aug 2022 00:41:00 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/9777&quot;&gt;https://git.openjdk.org/jdk/pull/9777&lt;/a&gt;&lt;br/&gt;
Date: 2022-08-05 15:23:45 +0000</comment>
                            <comment id="14514257" author="yyang" created="Sun, 31 Jul 2022 19:25:15 -0700"  >I did a quick investigation, it seems that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8267687&quot; title=&quot;ModXNode::Ideal optimization is better than Parse::do_irem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8267687&quot;&gt;&lt;strike&gt;JDK-8267687&lt;/strike&gt;&lt;/a&gt; don&amp;#39;t cause this crash, it only revealed this crash. This crash is likely related to EA. I&amp;#39;ll be back after more investigations.</comment>
                            <comment id="14513294" author="thartmann" created="Wed, 27 Jul 2022 03:48:14 -0700"  >[~yyang], this seems to be a regression introduced by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8267687&quot; title=&quot;ModXNode::Ideal optimization is better than Parse::do_irem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8267687&quot;&gt;&lt;strike&gt;JDK-8267687&lt;/strike&gt;&lt;/a&gt;. Could you please have a look?</comment>
                            <comment id="14513292" author="thartmann" created="Wed, 27 Jul 2022 03:45:52 -0700"  >I narrowed it down to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8267687&quot; title=&quot;ModXNode::Ideal optimization is better than Parse::do_irem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8267687&quot;&gt;&lt;strike&gt;JDK-8267687&lt;/strike&gt;&lt;/a&gt; in JDK 17 b26.</comment>
                            <comment id="14512320" author="thartmann" created="Mon, 25 Jul 2022 05:29:33 -0700"  >After backing out &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8272735&quot; title=&quot;Add missing SubL node transformations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8272735&quot;&gt;&lt;strike&gt;JDK-8272735&lt;/strike&gt;&lt;/a&gt;, I can reproduce this with latest JDK 20.</comment>
                            <comment id="14512001" author="thartmann" created="Fri, 22 Jul 2022 06:24:58 -0700"  >This does not reproduce anymore after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8272735&quot; title=&quot;Add missing SubL node transformations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8272735&quot;&gt;&lt;strike&gt;JDK-8272735&lt;/strike&gt;&lt;/a&gt; in JDK 19 b14.</comment>
                            <comment id="14510880" author="thartmann" created="Tue, 19 Jul 2022 10:15:18 -0700"  >I can reproduce this with JDK 17.0.5-ea+3-LTS-161 and JDK 18.0.2, attached is a simplified test (Test-1.java).</comment>
                            <comment id="14505287" author="dlong" created="Fri, 24 Jun 2022 17:03:32 -0700"  >ILW = assert in debug build; submitter can reproduce; no workaround = MMH = P3</comment>
                            <comment id="14505009" author="sswsharm" created="Fri, 24 Jun 2022 00:07:21 -0700"  >Issue is not reproduced on either GA or fastdebug Oracle JDK builds with the updated testcase.&lt;br/&gt;
&lt;br/&gt;
OS: Linux(ubuntu 20.04)&lt;br/&gt;
JDK 8u333 : Pass&lt;br/&gt;
JDK 11.0.15.1: Pass&lt;br/&gt;
JDK 17.0.3.1: Pass&lt;br/&gt;
JDK 18.0.1.1: Pass&lt;br/&gt;
&lt;br/&gt;
Since it is reproducible by the submitter in OpenJDK builds, reopening the issue for the community to look at it.</comment>
                            <comment id="14504303" author="pnarayanaswa" created="Wed, 22 Jun 2022 01:35:58 -0700"  >Additional Information from submitter&lt;br/&gt;
===========================&lt;br/&gt;
The provided `Test.java` is a reduced version of the original. &lt;br/&gt;
&lt;br/&gt;
If you cannot reproduce the crash, please download the original one (Test.java.orig) and try again from this link: &amp;lt;attached&amp;gt;&lt;br/&gt;
The crash may occur after running the program for 1-2 min. So please be patient when reproducing.</comment>
                            <comment id="14502108" author="dlong" created="Fri, 10 Jun 2022 17:22:40 -0700"  >I can&amp;#39;t reproduce it with a OpenJDK 17.0.5 build either.  Maybe there is something about the hardware features that is triggering it.</comment>
                            <comment id="14501926" author="sswsharm" created="Fri, 10 Jun 2022 04:09:01 -0700"  >Issue is not reproduced on either GA or fastdebug build. Crash is not observed.&lt;br/&gt;
&lt;br/&gt;
OS: Linux(ubuntu 20.04)&lt;br/&gt;
JDK 8u333 : Pass&lt;br/&gt;
JDK 11.0.15.1: Pass&lt;br/&gt;
JDK 17.0.3.1: Pass&lt;br/&gt;
JDK 18.0.1.1: Pass&lt;br/&gt;
&lt;br/&gt;
Moving it to JDK for further analysis.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5090582">JDK-8299511</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5090402">JDK-8299347</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5094735">JDK-8303000</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5050352">JDK-8267687</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="100040" name="Test-1.java" size="952" author="thartmann" created="Tue, 19 Jul 2022 10:14:42 -0700"/>
                            <attachment id="99476" name="Test.java" size="1387" author="sswsharm" created="Fri, 10 Jun 2022 04:06:23 -0700"/>
                            <attachment id="99640" name="hotspot-bug-56.tar.gz" size="61481" author="pnarayanaswa" created="Wed, 22 Jun 2022 01:35:25 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17438"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="21108">17</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17048"><![CDATA[linux_ubuntu]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2xeyb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17314"><![CDATA[b04]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>