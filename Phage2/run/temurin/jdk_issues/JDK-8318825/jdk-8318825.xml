<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 22:37:47 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8318825] runThese failed with &quot;unable to create native thread: possibly out of memory or process/resource limits reached&quot; </title>
                <link>https://bugs.openjdk.org/browse/JDK-8318825</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
applications/runthese/RunThese8H.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
Stress process failed. See stress.process.err/stress.process.out files for details. The tail of stress stdout is:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The tail of stress stderr is:&lt;br/&gt;
wn Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
Thread: Thread[#7925,ForkJoinPool-1-worker-11,5,CarrierThreads]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.VirtualThread.mount(VirtualThread.java:348)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.VirtualThread.runContinuation(VirtualThread.java:231)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.VirtualThread$$Lambda/0x0000000135597ce0.run(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)&lt;br/&gt;
Thread: Thread[#904795,pool-472-thread-1,5,main]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
Thread: Thread[#7900,Thread-2108,5,main]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;javasoft.sqe.tests.api.java.lang.management.ThreadMXBean.FindDeadlockedThreads.lambda$test01$0(FindDeadlockedThreads.java:71)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;javasoft.sqe.tests.api.java.lang.management.ThreadMXBean.FindDeadlockedThreads$$Lambda/0x0000000134e768e8.run(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
Thread: Thread[#853672,InnocuousThread-24,5,InnocuousThreadGroup]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:420)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:281)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:113)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
Thread: Thread[#1783169, ,5,group]&lt;br/&gt;
Thread: Thread[#982613,Thread-136921,5,main]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.park(LockSupport.java:221)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:754)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1099)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:230)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;javasoft.sqe.tests.api.java.lang.management.ThreadMXBean.GetThreadCpuTime.lambda$test01$2(GetThreadCpuTime.java:65)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;javasoft.sqe.tests.api.java.lang.management.ThreadMXBean.GetThreadCpuTime$$Lambda/0x000000013644e5a8.run(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
Thread: Thread[#853664,InnocuousThread-16,5,InnocuousThreadGroup]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.KQueue.poll(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.KQueuePort$EventHandlerTask.poll(KQueuePort.java:200)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:287)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:113)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
Thread: Thread[#853669,InnocuousThread-21,5,InnocuousThreadGroup]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:420)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:281)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:113)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
Thread: Thread[#45,RunThese-TestRunner-Thread-0,5,main]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.dumpThreads(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.getAllStackTraces(Thread.java:2488)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;app//applications.kitchensink.process.stress.modules.JckStressModule$TestRunner.runTest(JckStressModule.java:333)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;app//applications.kitchensink.process.stress.modules.JckStressModule$TestRunner.run(JckStressModule.java:234)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
Thread: Thread[#56,RunThese-TestRunner-Thread-11,5,main]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait(Object.java:375)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.join(Thread.java:2039)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;app//applications.kitchensink.process.stress.modules.JckStressModule$TestRunner.runTest(JckStressModule.java:320)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;app//applications.kitchensink.process.stress.modules.JckStressModule$TestRunner.run(JckStressModule.java:234)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
Thread: Thread[#853671,InnocuousThread-23,5,InnocuousThreadGroup]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:420)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:281)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:113)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
======= End of StackTrace Dump =====&lt;br/&gt;
FatalError [13] Unexpected issues while starting new thread for test javasoft.sqe.tests.api.java.lang.Thread.SleepDuration_positiveMs. Error: unable to create native thread: possibly out of memory or process/resource limits reached&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The tail of stress stdout is:&lt;br/&gt;
For random generator using seed: 1052072573885100046&lt;br/&gt;
To re-run test with same seed value please add &amp;quot;-Djdk.test.lib.random.seed=1052072573885100046&amp;quot; to command line.&lt;br/&gt;
Stress process main method is started.&lt;br/&gt;
----------System.err:(800/93073)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
result: Failed. Unexpected exit from test [exit code: 74]&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m starting this bug in hotspot/test so that [~lmesnik] can take a&lt;br/&gt;
look at this failure mode which is rather strange.</description>
                <environment></environment>
        <key id="5113200">JDK-8318825</key>
            <summary>runThese failed with &quot;unable to create native thread: possibly out of memory or process/resource limits reached&quot; </summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stefank">Stefan Karlsson</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>hgupdate-sync</label>
                            <label>intermittent</label>
                            <label>jdk11u-na</label>
                            <label>jdk17u-na</label>
                            <label>jdk21u-na</label>
                            <label>tier5</label>
                            <label>tier8</label>
                    </labels>
                <created>Wed, 25 Oct 2023 07:05:38 -0700</created>
                <updated>Sun, 23 Feb 2025 23:46:48 -0800</updated>
                            <resolved>Thu, 18 Jan 2024 01:13:37 -0800</resolved>
                                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14641618" author="dcubed" created="Thu, 18 Jan 2024 07:56:02 -0800"  >[~stefank]&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Lets start over with a clean slate after my fix as been integrated.&lt;br/&gt;
&lt;br/&gt;
Sounds like a wonderful plan! Thanks for finding and fixing this issue!</comment>
                            <comment id="14641465" author="stefank" created="Thu, 18 Jan 2024 01:04:56 -0800"  >[~dcubed] We have a few different JBS issues with various descriptions that are all caused by the same issue. I&amp;#39;m going to integrate a fix for this and close those as duplicates. Lets start over with a clean slate after my fix as been integrated.</comment>
                            <comment id="14641148" author="stefank" created="Wed, 17 Jan 2024 05:50:47 -0800"  >I dug some more into the MacOS failures and I think they *are* caused by the huge number of threads: I finally found the same error message in the err stress.dump.err file. It indicates a failure in the test api/java_lang/Thread/Builder/Name.java. This tests seems to run a cross-product of various arguments and then use that to create threads and check their names. Some of the tests even start these threads. My guess is that on Linux we manage to capture a state where we have this huge amount of threads, while on MacOS the threads finishes before we manage to get the hs_err snapshot.&lt;br/&gt;
&lt;br/&gt;
I think it would be best if we excluded some of these tests. I just need to figure out how coarse-grained I should make the excludes.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5119343">JDK-8324122</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120929">JDK-8325418</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121831">JDK-8326167</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121832">JDK-8326168</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121833">JDK-8326169</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121905">JDK-8326231</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33m8j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17335"><![CDATA[b07]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="225"><![CDATA[test]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>