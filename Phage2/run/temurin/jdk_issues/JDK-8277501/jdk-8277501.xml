<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:48:28 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8277501] Revisit PathFileObject.getCharContent and friends</title>
                <link>https://bugs.openjdk.org/browse/JDK-8277501</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>PathFileObject.getCharContent reads the input stream into a byte buffer using BaseFileManager.makeByteBuffer. Coding such functionality is not trivial. For example, deciding on whether to read or not, must not solely depend on the result of calling available() on an input stream. To fix this and avoid other possible problems, we could use a method like InputStream.readAllBytes.&lt;br/&gt;
&lt;br/&gt;
One problem with readAllBytes here is that it returns a byte array. This byte array will either need to be wrapped into a new byte buffer or its contents would need to be transferred into an existing byte buffer.&lt;br/&gt;
&lt;br/&gt;
Currently an input stream is manually read in a pooled byte buffer.</description>
                <environment></environment>
        <key id="5063118">JDK-8277501</key>
            <summary>Revisit PathFileObject.getCharContent and friends</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="prappo">Pavel Rappo</assignee>
                                    <reporter username="prappo">Pavel Rappo</reporter>
                        <labels>
                            <label>noreg-cleanup</label>
                    </labels>
                <created>Fri, 19 Nov 2021 17:01:13 -0800</created>
                <updated>Wed, 5 Apr 2023 23:17:48 -0700</updated>
                            <resolved>Fri, 31 Mar 2023 16:19:27 -0700</resolved>
                                    <version>18</version>
                                    <fixVersion>21</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14571087" author="dukebot" created="Fri, 31 Mar 2023 16:19:26 -0700"  >Changeset: 8eb4e7e0&lt;br/&gt;
Author:    Archie L. Cobbs &amp;lt;&lt;a href=&apos;mailto:archie.cobbs@gmail.com&apos;&gt;archie.cobbs@gmail.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Vicente Romero &amp;lt;&lt;a href=&apos;mailto:vromero@openjdk.org&apos;&gt;vromero@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-31 23:17:56 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/8eb4e7e07e9211aabcb0f22696e9c572dac7a59f&quot;&gt;https://git.openjdk.org/jdk/commit/8eb4e7e07e9211aabcb0f22696e9c572dac7a59f&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14562899" author="roboduke" created="Sat, 25 Feb 2023 16:21:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12755&quot;&gt;https://git.openjdk.org/jdk/pull/12755&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-26 00:16:43 +0000</comment>
                            <comment id="14562897" author="JIRAUSER20702" created="Sat, 25 Feb 2023 14:45:10 -0800"  >What about this idea? I was working on com.sun.tools.javac.util.ByteBuffer recently for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302514&quot; title=&quot;Misleading error generated when empty class file encountered&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302514&quot;&gt;&lt;strike&gt;JDK-8302514&lt;/strike&gt;&lt;/a&gt; so that&amp;#39;s where this comes from.&lt;br/&gt;
&lt;br/&gt;
Warning: the following is confusing due to there being two classes named &amp;quot;ByteBuffer&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Notation:&lt;br/&gt;
&lt;br/&gt;
* util.ByteBuffer = com.sun.tools.javac.util.ByteBuffer&lt;br/&gt;
* nio.ByteBuffer = java.nio.ByteBuffer&lt;br/&gt;
&lt;br/&gt;
The idea would be:&lt;br/&gt;
&lt;br/&gt;
* Store a util.ByteBuffer instead of a nio.ByteBuffer in the byteBufferCache&lt;br/&gt;
* Use util.ByteBuffer.appendStream() (new &amp;amp; improved!) to read in the file content&lt;br/&gt;
* Add a new method util.ByteBuffer.toByteBuffer() which returns a nio.ByteBuffer view of the data via nio.ByteBuffer.wrap()&lt;br/&gt;
* Refactor/simplify BaseFileManager.makeByteBuffer() accordingly</comment>
                            <comment id="14459674" author="prappo" created="Fri, 19 Nov 2021 17:08:51 -0800"  >I stumbled upon this in the context of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8276892&quot; title=&quot;Provide a way to emulate exceptional situations in FileManager when using JavadocTester&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8276892&quot;&gt;&lt;strike&gt;JDK-8276892&lt;/strike&gt;&lt;/a&gt; while trying to find out if IOException thrown from FileObject.getCharContent can be _emulated_.</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2v4jf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="212"><![CDATA[javac]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>