<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:40:56 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306428] RunThese30M.java crashed with assert(early-&gt;flag() == current-&gt;flag() || early-&gt;flag() == mtNone)</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306428</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test: applications/runthese/RunThese30M.java&lt;br/&gt;
VM Options: -XX:+CreateCoredumpOnCrash -XX:+UseZGC&lt;br/&gt;
Build: jdk-20.0.2+3-37&lt;br/&gt;
OS: windows-x64-debug&lt;br/&gt;
Reproducibility: Very Low, has been seen only 2 times. See mach5 link in comments&lt;br/&gt;
&lt;br/&gt;
Crash log:&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (c:\\sb\\prod\\1681837168\\workspace\\open\\src\\hotspot\\share\\services\\memReporter.cpp:823), pid=38432, tid=40768&lt;br/&gt;
#  assert(early-&amp;gt;flag() == current-&amp;gt;flag() || early-&amp;gt;flag() == mtNone) failed: Expect the same flag, but Shared class space != Metaspace&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0.2+3) (fastdebug build 20.0.2-ea+3-37)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20.0.2-ea+3-37, mixed mode, sharing, tiered, compressed class ptrs, z gc, windows-amd64)&lt;br/&gt;
# Core dump will be written. Default location: C:\\sb\\prod\\1681845714\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_runthese_RunThese30M_java\\scratch\\0\\hs_err_pid38432.mdmp&lt;br/&gt;
#&lt;br/&gt;
# JFR recording file will be written. Location: C:\\sb\\prod\\1681845714\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_runthese_RunThese30M_java\\scratch\\0\\hs_err_pid38432.jfr&lt;br/&gt;
#&lt;br/&gt;
Unsupported internal testing APIs have been used.&lt;br/&gt;
&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# C:\\sb\\prod\\1681845714\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_runthese_RunThese30M_java\\scratch\\0\\hs_err_pid38432.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;</description>
                <environment></environment>
        <key id="5098878">JDK-8306428</key>
            <summary>RunThese30M.java crashed with assert(early-&gt;flag() == current-&gt;flag() || early-&gt;flag() == mtNone)</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gziemski">Gerard Ziemski</assignee>
                                    <reporter username="vagarwal">Vikrant Agarwal</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>nmt</label>
                            <label>sqebug</label>
                    </labels>
                <created>Tue, 18 Apr 2023 23:24:09 -0700</created>
                <updated>Tue, 4 Jul 2023 23:27:54 -0700</updated>
                            <resolved>Sat, 27 May 2023 11:30:58 -0700</resolved>
                                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14591631" author="mdoerr" created="Fri, 23 Jun 2023 04:55:34 -0700"  >Fix Request (17u):&lt;br/&gt;
Should get backported for parity with 17.0.9-oracle. Doesn&amp;#39;t apply cleanly, but resolution is trivial (already reviewed). (It even applies cleanly if we include &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8271406&quot; title=&quot;Kitchensink failed with &amp;quot;assert(early-&amp;gt;flag() == current-&amp;gt;flag()) failed: Should be the same&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8271406&quot;&gt;&lt;strike&gt;JDK-8271406&lt;/strike&gt;&lt;/a&gt;.)</comment>
                            <comment id="14591418" author="roboduke" created="Thu, 22 Jun 2023 08:24:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1491&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1491&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-22 15:16:27 +0000</comment>
                            <comment id="14585041" author="dukebot" created="Sat, 27 May 2023 11:30:57 -0700"  >Changeset: ca54f4e0&lt;br/&gt;
Author:    Gerard Ziemski &amp;lt;&lt;a href=&apos;mailto:gziemski@openjdk.org&apos;&gt;gziemski@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-27 18:28:49 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ca54f4e007ab0f13bec9aaf995d34c0ab3ba6452&quot;&gt;https://git.openjdk.org/jdk/commit/ca54f4e007ab0f13bec9aaf995d34c0ab3ba6452&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14584963" author="roboduke" created="Fri, 26 May 2023 10:36:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14052&quot;&gt;https://git.openjdk.org/jdk/pull/14052&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-18 22:25:13 +0000</comment>
                            <comment id="14582942" author="gziemski" created="Fri, 19 May 2023 09:19:56 -0700"  >&amp;nbsp;[~stuefe] How about we approach this case as allowed and handle correspondingly &lt;a href=&quot;https://github.com/openjdk/jdk/pull/14052&quot;&gt;https://github.com/openjdk/jdk/pull/14052&lt;/a&gt;</comment>
                            <comment id="14582805" author="stuefe" created="Thu, 18 May 2023 22:54:06 -0700"  >[~gziemski] I don&amp;#39;t think there is a good way to detect that. What may help would be a verification in MemBaseline that checks that it consists of non-overlapping and monotonous memory regions. Because if we had an error where we released old memory but forgot to unregister it from NMT, we could end up with two (I think there may be checks in other places, but in MemBaseLine I find no such verification)</comment>
                            <comment id="14582705" author="gziemski" created="Thu, 18 May 2023 13:07:14 -0700"  >Thank you [~stuefe] that makes sense.&lt;br/&gt;
&lt;br/&gt;
So, if it&amp;#39;s allowed for memory to appear as one type in one snapshot, but another type in a later snapshot (because the memory can be allocated as one type, then freed, then allocated as different type in the exact same place), is there an easy way to detect that?&lt;br/&gt;
&lt;br/&gt;
If we track the size, not just the ptr, then we could use the size when assuming that this is the same memory chunk? That still does not guarantee that the memory wasn&amp;#39;t freed/reallocated.&lt;br/&gt;
&lt;br/&gt;
I agree, however, that we need to drop the assert testing the flag type between snapshot (unless we can verify that it wasn&amp;#39;t freed between the snapshots).</comment>
                            <comment id="14582542" author="stuefe" created="Wed, 17 May 2023 23:30:36 -0700"  >[~gziemski] My bet on what happens would be:&lt;br/&gt;
&lt;br/&gt;
- there had been an mmap from CDS, now removed&lt;br/&gt;
- now there is a metaspace mmap, which happens to be at exactly the same position (explaining the intermittant and very rare occurrence)&lt;br/&gt;
- the callstack for both allocations happen to look equal. This could happen because either the 4 lowest frames of both mmap sites are identical (NativeCallStack has only 4 frames) or maybe callstack walking just did not work. So we enter the third branch in MemDetailDiffReporter::diff_virtual_memory_sites(), at line 784.&lt;br/&gt;
&lt;br/&gt;
Your test to print out the callstacks should be revealing. But I think the assert could maybe just removed, since what I outlined above can just happen. Since callstacks are just 4 bytes, we cannot have asserts that depend on them being different, since callstacks from different sites could always be mushed together.</comment>
                            <comment id="14581329" author="gziemski" created="Fri, 12 May 2023 14:32:44 -0700"  >I don&amp;#39;t see how &amp;quot;VirtualMemoryAllocationSite&amp;quot; can change its flag, unless something catastrophic happens like memory gets overwritten, but in the spirit of the fix &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8271406&quot; title=&quot;Kitchensink failed with &amp;quot;assert(early-&amp;gt;flag() == current-&amp;gt;flag()) failed: Should be the same&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8271406&quot;&gt;&lt;strike&gt;JDK-8271406&lt;/strike&gt;&lt;/a&gt; I would like to add the printout of the actual stack to determine which flag is wrong, &amp;quot;early-&amp;gt;flag()&amp;quot; or &amp;quot;current-&amp;gt;flag()&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Something like:&lt;br/&gt;
&lt;br/&gt;
void MemDetailDiffReporter::diff_virtual_memory_site(const VirtualMemoryAllocationSite* early,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;const VirtualMemoryAllocationSite* current) const {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if ((early-&amp;gt;flag() != current-&amp;gt;flag()) || (current-&amp;gt;flag() == mtNone) || (early-&amp;gt;flag() == mtNone)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tty-&amp;gt;print(&amp;quot;Detected an anomaly in MemDetailDiffReporter::diff_virtual_memory_site:&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;early-&amp;gt;call_stack()-&amp;gt;print_on(tty);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;current-&amp;gt;call_stack()-&amp;gt;print_on(tty);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(current-&amp;gt;flag() != mtNone &amp;amp;&amp;amp; early-&amp;gt;flag() != mtNone,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;Expect the flag not to be mtNone, but %s or %s is.&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NMTUtil::flag_to_name(early-&amp;gt;flag()), NMTUtil::flag_to_name(current-&amp;gt;flag()));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(early-&amp;gt;flag() == current-&amp;gt;flag(),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;Expect the same flag, but %s != %s&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NMTUtil::flag_to_name(early-&amp;gt;flag()), NMTUtil::flag_to_name(current-&amp;gt;flag()));&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;diff_virtual_memory_site(current-&amp;gt;call_stack(), current-&amp;gt;reserved(), current-&amp;gt;committed(),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;early-&amp;gt;reserved(), early-&amp;gt;committed(), current-&amp;gt;flag());&lt;br/&gt;
}&lt;br/&gt;
</comment>
                            <comment id="14579240" author="gziemski" created="Thu, 4 May 2023 15:13:08 -0700"  >Can&amp;#39;t be &amp;quot;MemTracker::record_virtual_memory_type(rs.base(), mtMetaspace); &amp;quot; because we have this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (reserved_rgn-&amp;gt;flag() != flag) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert(reserved_rgn-&amp;gt;flag() == mtNone, &amp;quot;Overwrite memory type (should be mtNone, is: \&amp;quot;%s\&amp;quot;)&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NMTUtil::flag_to_name(reserved_rgn-&amp;gt;flag()));&lt;br/&gt;
&lt;br/&gt;
which doesn&amp;#39;t get triggered.</comment>
                            <comment id="14579192" author="gziemski" created="Thu, 4 May 2023 13:12:57 -0700"  >I am trying to think how a tag could possibly get changed from &amp;quot;Shared class space&amp;quot; to &amp;quot;Metaspace&amp;quot;...&lt;br/&gt;
&lt;br/&gt;
The are several places where &amp;quot;mtMetaspace&amp;quot; tag is used, but usually it&amp;#39;s where we instantiate a c++ template like:&lt;br/&gt;
&lt;br/&gt;
CHeapObj&amp;lt;mtMetaspace&amp;gt;&lt;br/&gt;
&lt;br/&gt;
so none of those are suspect.&lt;br/&gt;
&lt;br/&gt;
There is, however, this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;MemTracker::record_virtual_memory_type(rs.base(), mtMetaspace);&lt;br/&gt;
&lt;br/&gt;
in &amp;quot;VirtualSpaceNode::create_node()&amp;quot;, so potentially we might be allowed to change the tag type here if things go wrong?</comment>
                            <comment id="14579190" author="gziemski" created="Thu, 4 May 2023 13:05:49 -0700"  >The assert:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert(memflags == header-&amp;gt;flags(), &amp;quot;weird NMT flags mismatch (new:\&amp;quot;%s\&amp;quot; != old:\&amp;quot;%s\&amp;quot;)\n&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NMTUtil::flag_to_name(memflags), NMTUtil::flag_to_name(header-&amp;gt;flags()));&lt;br/&gt;
&lt;br/&gt;
wasn&amp;#39;t triggered, so it&amp;#39;s probably not a case of reallocation (resize) with a wrong flag.&lt;br/&gt;
&lt;br/&gt;
Need to see what &amp;quot;early-&amp;gt;flag()&amp;quot; and &amp;quot;current-&amp;gt;flag()&amp;quot; are and how they possibly can get out of sync.</comment>
                            <comment id="14576697" author="mseledtsov" created="Tue, 25 Apr 2023 08:27:02 -0700"  >ILW = HLM = P3</comment>
                            <comment id="14575235" author="iklam" created="Wed, 19 Apr 2023 22:23:01 -0700"  >The failed assert was added by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8271406&quot; title=&quot;Kitchensink failed with &amp;quot;assert(early-&amp;gt;flag() == current-&amp;gt;flag()) failed: Should be the same&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8271406&quot;&gt;&lt;strike&gt;JDK-8271406&lt;/strike&gt;&lt;/a&gt; (which had a similar rare crash).&lt;br/&gt;
&lt;br/&gt;
void MemDetailDiffReporter::diff_virtual_memory_site(const VirtualMemoryAllocationSite* early,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;const VirtualMemoryAllocationSite* current) const {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(early-&amp;gt;flag() == current-&amp;gt;flag() || early-&amp;gt;flag() == mtNone,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;Expect the same flag, but %s != %s&amp;quot;, NMTUtil::flag_to_name(early-&amp;gt;flag()),NMTUtil::flag_to_name(current-&amp;gt;flag()));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;diff_virtual_memory_site(current-&amp;gt;call_stack(), current-&amp;gt;reserved(), current-&amp;gt;committed(),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;early-&amp;gt;reserved(), early-&amp;gt;committed(), current-&amp;gt;flag());&lt;br/&gt;
}</comment>
                            <comment id="14575232" author="dholmes" created="Wed, 19 Apr 2023 21:50:33 -0700"  >From crash log:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00000224f60a6420):  JavaThread &amp;quot;Attach Listener&amp;quot; daemon [_thread_in_vm, id=40768, stack(0x0000007e14100000,0x0000007e14200000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000007e14100000,0x0000007e14200000]&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0xbfe771]  os::win32::platform_print_native_stack+0xf1  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0xe809a0]  VMError::report+0x10c0  (vmError.cpp:813)&lt;br/&gt;
V  [jvm.dll+0xe825de]  VMError::report_and_die+0x6ce  (vmError.cpp:1593)&lt;br/&gt;
V  [jvm.dll+0xe82d24]  VMError::report_and_die+0x64  (vmError.cpp:1352)&lt;br/&gt;
V  [jvm.dll+0x5719b7]  report_vm_error+0xb7  (debug.cpp:286)&lt;br/&gt;
V  [jvm.dll+0xb40ff3]  MemDetailDiffReporter::diff_virtual_memory_sites+0x1e3  (memReporter.cpp:761)&lt;br/&gt;
V  [jvm.dll+0xbb8cac]  NMTDCmd::report_diff+0x15c  (nmtDCmd.cpp:175)&lt;br/&gt;
V  [jvm.dll+0xbb8885]  NMTDCmd::execute+0x245  (nmtDCmd.cpp:136)&lt;br/&gt;
V  [jvm.dll+0x5f844f]  DCmd::parse_and_execute+0x2df  (diagnosticFramework.cpp:409)&lt;br/&gt;
V  [jvm.dll+0x2f87d8]  jcmd+0x68  (attachListener.cpp:204)&lt;br/&gt;
V  [jvm.dll+0x2f8b11]  attach_listener_thread_entry+0x2a1  (attachListener.cpp:427)&lt;br/&gt;
V  [jvm.dll+0x7eb752]  JavaThread::thread_main_inner+0x282  (javaThread.cpp:710)&lt;br/&gt;
V  [jvm.dll+0xdfb923]  Thread::call_run+0x253  (thread.cpp:229)&lt;br/&gt;
V  [jvm.dll+0xbfd088]  thread_native_entry+0xb8  (os_windows.cpp:547)</comment>
                            <comment id="14575231" author="dholmes" created="Wed, 19 Apr 2023 21:49:44 -0700"  >The first failure was June 2022, and now we have this case.</comment>
                            <comment id="14575133" author="dcubed" created="Wed, 19 Apr 2023 09:18:54 -0700"  >The test program is closed, but the crashing code is open&lt;br/&gt;
so I&amp;#39;m changing this from confidential -&amp;gt; open. The bug&amp;#39;s&lt;br/&gt;
history does not show anything Oracle internal.</comment>
                            <comment id="14575006" author="stefank" created="Wed, 19 Apr 2023 02:45:59 -0700"  >Seems to be an NMT problem with CDS. Pushing this to RT.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5103196">JDK-8310045</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5103981">JDK-8310739</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5055344">JDK-8271406</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i316mb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>