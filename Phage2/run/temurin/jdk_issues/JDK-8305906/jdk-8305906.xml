<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:56:05 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8305906] HttpClient may use incorrect key when finding pooled HTTP/2 connection for IPv6 address</title>
                <link>https://bugs.openjdk.org/browse/JDK-8305906</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The java.net.http.HttpClient internally uses pooled connections. When pooling HTTP/2 connections, the key used includes the InetAddress.getHostString() of the peer. When looking up a pooled connection for incoming requests, the client uses the request URI&amp;#39;s getHost() method to lookup the connection.&lt;br/&gt;
&lt;br/&gt;
When IPv6 addesses are involved, URI.getHost() method, as noted in its API documentation, returns an IP address wrapped in square brackets. On the other hand, the InetAddress.getHostString(), doesn&amp;#39;t use square brackets to represent the IP address.&lt;br/&gt;
&lt;br/&gt;
This thus leads to a mismatch in the keys used to store the connection and retrieve the connection, effectively leading to a cache miss on lookup.</description>
                <environment></environment>
        <key id="5098293">JDK-8305906</key>
            <summary>HttpClient may use incorrect key when finding pooled HTTP/2 connection for IPv6 address</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jpai">Jaikiran Pai</assignee>
                                    <reporter username="jpai">Jaikiran Pai</reporter>
                        <labels>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                    </labels>
                <created>Wed, 12 Apr 2023 05:51:36 -0700</created>
                <updated>Mon, 3 Jun 2024 03:47:17 -0700</updated>
                            <resolved>Wed, 7 Jun 2023 02:46:14 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14665173" author="roboduke" created="Mon, 15 Apr 2024 02:27:09 -0700"  >[jdk11u-fix-request] Approval Request from Varada M&lt;br/&gt;
test is passing with updated jtreg and PR is clean.</comment>
                            <comment id="14652764" author="dfuchs" created="Tue, 27 Feb 2024 06:19:20 -0800"  >Hi [~goetz] in JDK 17 Http2TestServer::serverAuthority returns &amp;quot;localhost:&amp;lt;port&amp;gt;&amp;quot; when the server is bound to the loopback. &lt;br/&gt;
That makes it susceptible to connection failure when running on machines with custom localhost configuration.&lt;br/&gt;
Somewhere along the road we changed it to use getHostAddress() instead (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8305900&quot; title=&quot;Use loopback IP addresses in security policy files of httpclient tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8305900&quot;&gt;&lt;strike&gt;JDK-8305900&lt;/strike&gt;&lt;/a&gt;). That&amp;#39;s a bigger change - which IIRC requires changes to tests .policy files etc... and would impact most HTTP/2 tests. So we didn&amp;#39;t backport that. &lt;br/&gt;
Instead we felt it would be safer to just change the URI in the backported ConnectionReuseTest.</comment>
                            <comment id="14652758" author="goetz" created="Tue, 27 Feb 2024 05:54:27 -0800"  >Hi [~jpai] and [~dfuchs], thanks for your help! The attached diff fixes the issue, even without &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8278312&quot; title=&quot;Update SimpleSSLContext keystore to use SANs for localhost IP addresses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8278312&quot;&gt;&lt;strike&gt;JDK-8278312&lt;/strike&gt;&lt;/a&gt;. I backported 8278312 anyways.&lt;br/&gt;
But what is the difference between 21 and 17? With 21, the test passes out-of-the-box, but with 17 I need the diff. &lt;br/&gt;
I guess I need to make a 17-only change with it?&lt;br/&gt;
(Also, I managed to paste the stacktrace to the comment above. For some reason it did not grok the [::1]: parts.)</comment>
                            <comment id="14652259" author="goetz" created="Mon, 26 Feb 2024 07:07:36 -0800"  >Hi [~jpai]&lt;br/&gt;
Yes, I first had the stack trace in there, but then tried to shorten it to make it better readable. Now JBS refuses to save the comment.&lt;br/&gt;
Your description makes sense. I will to try the patch in our nightly tests, I cannot reproduce the issue locally ad-hoc.&lt;br/&gt;
Thanks for the quick reply, good to know it is only a test issue.</comment>
                            <comment id="14652257" author="dfuchs" created="Mon, 26 Feb 2024 07:04:39 -0800"  >[~goetz] You may encounter issues if &amp;quot;localhost&amp;quot; is used in the request URI, your server binds to IPv6 loopback, and the machine&amp;#39;s /etc/hosts associates &amp;quot;localhost&amp;quot; with the IPv4 loopback (or conversely). There are two ways to fix this: &lt;br/&gt;
1. make sure the machine local configuration doesn&amp;#39;t change how &amp;quot;localhost&amp;quot; is resolved - I believe it should resolve to the IPv4 loopback by default and to the IPv6 loopback if -Djava.net.preferIPv6Addresses=true is defined. &lt;br/&gt;
2. stop using &amp;quot;localhost&amp;quot; in the URI, use either [::1] or 127.0.0.1 in the URI. But then for TLS connection you might need to check that ::1 and 127.0.0.1 are defined as SANs aliases for localhost in the server certificate.&lt;br/&gt;
You may need to backport &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8278312&quot; title=&quot;Update SimpleSSLContext keystore to use SANs for localhost IP addresses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8278312&quot;&gt;&lt;strike&gt;JDK-8278312&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
It may be that ConnectionReuseTest requires &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8278312&quot; title=&quot;Update SimpleSSLContext keystore to use SANs for localhost IP addresses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8278312&quot;&gt;&lt;strike&gt;JDK-8278312&lt;/strike&gt;&lt;/a&gt; either way.</comment>
                            <comment id="14652256" author="jpai" created="Mon, 26 Feb 2024 06:57:05 -0800"  >Hello [~goetz], did you mean to include the error message in that comment? I don&amp;#39;t see any. In our CI we did see intermittent failures related to usage of &amp;quot;localhost&amp;quot; which would end up picking IPv4 IP address, when the test was expecting IPv6. To prevent those intermittent failures, the test will have to use IP addresses as request URLs. For that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8278312&quot;&gt;https://bugs.openjdk.org/browse/JDK-8278312&lt;/a&gt; would need to be backported and then you might want to apply the attached patch (intermittent-failures-fix.diff) to this ConnectionReuseTest.&lt;br/&gt;
&lt;br/&gt;
Can you see if the backport of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8278312&quot;&gt;https://bugs.openjdk.org/browse/JDK-8278312&lt;/a&gt; and this additional patch works fine on the systems where this is currently failing?</comment>
                            <comment id="14652250" author="goetz" created="Mon, 26 Feb 2024 06:25:18 -0800"  >Hi [~jpai]  &lt;br/&gt;
since this backport we see problems in our secondary tests. Both jdk17u and sapmachine tests with build +4 show this issue:&lt;br/&gt;
&lt;br/&gt;
IPSupport - IPv4: true&lt;br/&gt;
IPSupport - IPv6: true&lt;br/&gt;
preferIPv4Stack: false&lt;br/&gt;
preferIPv6Addresses: true&lt;br/&gt;
STARTED    ConnectionReuseTest::testConnReuse [1] &lt;a href=&quot;https://localhost:51579/&quot;&gt;https://localhost:51579/&lt;/a&gt;&lt;br/&gt;
java.net.ConnectException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:573)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:123)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at ConnectionReuseTest.testConnReuse(ConnectionReuseTest.java:147)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:568)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... snip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:840)&lt;br/&gt;
Caused by: java.net.ConnectException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.common.Utils.toConnectException(Utils.java:1055)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:198)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.checkRetryConnect(PlainHttpConnection.java:230)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$1(PlainHttpConnection.java:206)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 1 more&lt;br/&gt;
Caused by: java.nio.channels.ClosedChannelException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:195)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.ch.SocketChannelImpl.beginConnect(SocketChannelImpl.java:760)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:848)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$0(PlainHttpConnection.java:183)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:185)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 9 more&lt;br/&gt;
FAILED     ConnectionReuseTest::testConnReuse [1] &lt;a href=&quot;https://localhost:51579/&quot;&gt;https://localhost:51579/&lt;/a&gt;&lt;br/&gt;
STARTED    ConnectionReuseTest::testConnReuse [2] &lt;a href=&quot;http://localhost:35769/&quot;&gt;http://localhost:35769/&lt;/a&gt;&lt;br/&gt;
java.net.ConnectException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:573)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:123)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at ConnectionReuseTest.testConnReuse(ConnectionReuseTest.java:147)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:568)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... snip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:840)&lt;br/&gt;
Caused by: java.net.ConnectException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.common.Utils.toConnectException(Utils.java:1055)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:198)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.checkRetryConnect(PlainHttpConnection.java:230)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$1(PlainHttpConnection.java:206)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 1 more&lt;br/&gt;
Caused by: java.nio.channels.ClosedChannelException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:195)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.ch.SocketChannelImpl.beginConnect(SocketChannelImpl.java:760)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:848)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$0(PlainHttpConnection.java:183)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:185)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 9 more&lt;br/&gt;
FAILED     ConnectionReuseTest::testConnReuse [2] &lt;a href=&quot;http://localhost:35769/&quot;&gt;http://localhost:35769/&lt;/a&gt;&lt;br/&gt;
STARTED    ConnectionReuseTest::testConnReuse [3] http://[ : : 1 ] : 35769/&lt;br/&gt;
TestServer: New connection from Socket[addr=/0:0:0:0:0:0:0:1,port=48744,localport=35769]&lt;br/&gt;
TestServer: GET /&lt;br/&gt;
Server: creating input stream for stream 1&lt;br/&gt;
Using handler for: /&lt;br/&gt;
Sent response headers 200&lt;br/&gt;
TestServer: GET /&lt;br/&gt;
Server: got END_STREAM for stream 3&lt;br/&gt;
Using handler for: /&lt;br/&gt;
Sent response headers 200&lt;br/&gt;
TestServer: GET /&lt;br/&gt;
Server: got END_STREAM for stream 5&lt;br/&gt;
Using handler for: /&lt;br/&gt;
Sent response headers 200&lt;br/&gt;
TestServer: GET /&lt;br/&gt;
Server: got END_STREAM for stream 7&lt;br/&gt;
Using handler for: /&lt;br/&gt;
Sent response headers 200&lt;br/&gt;
TestServer: GET /&lt;br/&gt;
Server: got END_STREAM for stream 9&lt;br/&gt;
Using handler for: /&lt;br/&gt;
Sent response headers 200&lt;br/&gt;
SUCCESSFUL ConnectionReuseTest::testConnReuse [3] http://[ : : 1 ] :35769/&lt;br/&gt;
Server stopping 0 connections&lt;br/&gt;
Server stopping 1 connections&lt;br/&gt;
Server connection to /[0:0:0:0:0:0:0:1]:48744 stopping. 5 streams&lt;br/&gt;
TestServer: Connection writer stopping&lt;br/&gt;
JavaTest Message: JUnit Platform Failure(s): 2&lt;br/&gt;
&lt;br/&gt;
[ JUnit Containers: found 5, started 5, succeeded 5, failed 0, aborted 0, skipped 0]&lt;br/&gt;
[ JUnit Tests: found 3, started 3, succeeded 1, failed 2, aborted 0, skipped 0]&lt;br/&gt;
&lt;br/&gt;
java.lang.Exception: JUnit test failure&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.JUnitRunner.runWithJUnitPlatform(JUnitRunner.java:149)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:95)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:61)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:568)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:840)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception: JUnit test failure&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed. main threw exception: java.lang.Exception: JUnit test failure</comment>
                            <comment id="14650335" author="roboduke" created="Sun, 18 Feb 2024 23:58:53 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2531&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2531&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-19 07:55:30 +0000</comment>
                            <comment id="14640085" author="goetz" created="Sun, 14 Jan 2024 23:34:42 -0800"  >[17u-fix-yes]&lt;br/&gt;
Approvel of lates PR #2121.  I ran that through SAPs testing.</comment>
                            <comment id="14639818" author="jpai" created="Fri, 12 Jan 2024 05:25:07 -0800"  >jdk17u-fix-request - requesting a backport of this fix to JDK 17. This backport was attempted a couple of times by others but since the test in mainline uses test library APIs and locations which are different in 17u, the backport wasn&amp;#39;t clean. I&amp;#39;ve opened &lt;a href=&quot;https://github.com/openjdk/jdk17u-dev/pull/2121&quot;&gt;https://github.com/openjdk/jdk17u-dev/pull/2121&lt;/a&gt; which uses JDK 17 specific test library APIs in the test case.</comment>
                            <comment id="14639817" author="roboduke" created="Fri, 12 Jan 2024 05:25:07 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2121&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2121&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-11 11:28:46 +0000</comment>
                            <comment id="14628591" author="roboduke" created="Wed, 22 Nov 2023 22:24:03 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1984&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1984&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-23 06:17:56 +0000</comment>
                            <comment id="14592883" author="JIRAUSER20004" created="Thu, 29 Jun 2023 15:41:56 -0700"  >[jdk17u, jdk11u] fix requests&lt;br/&gt;
&lt;br/&gt;
I would like to backport these changes to fix this issue on older versions, as we have observed it failing there. Testing looks good; risk is low. The change applies cleanly.</comment>
                            <comment id="14588212" author="roboduke" created="Fri, 9 Jun 2023 09:30:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/1941&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/1941&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-09 16:25:13 +0000</comment>
                            <comment id="14588210" author="roboduke" created="Fri, 9 Jun 2023 09:25:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1419&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1419&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-09 16:20:19 +0000</comment>
                            <comment id="14587584" author="dukebot" created="Wed, 7 Jun 2023 02:46:13 -0700"  >Changeset: 3ccb3c0e&lt;br/&gt;
Author:    Jaikiran Pai &amp;lt;&lt;a href=&apos;mailto:jpai@openjdk.org&apos;&gt;jpai@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-07 09:44:14 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3ccb3c0e09f9a414229d3f76031f3fc8f271c936&quot;&gt;https://git.openjdk.org/jdk/commit/3ccb3c0e09f9a414229d3f76031f3fc8f271c936&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14573538" author="roboduke" created="Thu, 13 Apr 2023 04:18:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13456&quot;&gt;https://git.openjdk.org/jdk/pull/13456&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-13 11:13:07 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5118843">JDK-8323666</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5121735">JDK-8326088</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130888">JDK-8333430</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5064183">JDK-8278312</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108380" name="intermittent-failures-fix.diff" size="5327" author="jpai" created="Mon, 26 Feb 2024 07:20:28 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3130j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="193"><![CDATA[java.net]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>