<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:57:46 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8316392] compiler/interpreter/TestVerifyStackAfterDeopt.java failed with SIGBUS in PcDescContainer::find_pc_desc_internal</title>
                <link>https://bugs.openjdk.org/browse/JDK-8316392</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
compiler/interpreter/TestVerifyStackAfterDeopt.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(6/811)----------&lt;br/&gt;
command: main -XX:+IgnoreUnrecognizedVMOptions -XX:TieredStopAtLevel=1 -XX:AllocatePrefetchLines=1 -XX:AllocateInstancePrefetchLines=1 -XX:AllocatePrefetchStepSize=16 -XX:AllocatePrefetchDistance=1 -XX:MinTLABSize=1k -XX:TLABSize=1k -XX:+DeoptimizeALot -XX:+VerifyStack compiler.interpreter.TestVerifyStackAfterDeopt&lt;br/&gt;
reason: User specified action: run main/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:TieredStopAtLevel=1 -XX:AllocatePrefetchLines=1 -XX:AllocateInstancePrefetchLines=1 -XX:AllocatePrefetchStepSize=16 -XX:AllocatePrefetchDistance=1 -XX:MinTLABSize=1k -XX:TLABSize=1k -XX:+DeoptimizeALot -XX:+VerifyStack compiler.interpreter.TestVerifyStackAfterDeopt &lt;br/&gt;
started: Sat Sep 16 11:46:03 GMT 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
finished: Sat Sep 16 11:46:10 GMT 2023&lt;br/&gt;
elapsed time (seconds): 6.778&lt;br/&gt;
----------configuration:(0/0)----------&lt;br/&gt;
----------System.out:(19/1143)----------&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGBUS (0xa) at pc=0x00000001077fcf6c, pid=83896, tid=6915&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0+16) (fastdebug build 22-ea+16-1142)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-ea+16-1142, compiled mode, emulated-client, sharing, tiered, compressed class ptrs, g1 gc, bsd-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.dylib+0xff4f6c]  PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;amp;)+0x76c&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: core.83896&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /System/Volumes/Data/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S176544/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/bd0a4977-ec35-4387-8f72-a036635a283d/runs/93184247-9afb-4c48-848f-f631c880deda/testoutput/test-support/jtreg_open_test_hotspot_jtreg_tier1_compiler_2/scratch/3/hs_err_pid83896.log&lt;br/&gt;
[0.216s][warning][os] Loading hsdis library failed&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
----------System.err:(1/90)----------&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM warning: AllocatePrefetchDistance must be multiple of 8&lt;br/&gt;
----------rerun:(52/7087)*----------&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x000000011d80c010):  JavaThread &amp;quot;main&amp;quot;             [_thread_in_Java, id=6915, stack(0x000000016b6b8000,0x000000016b8bb000) (2060K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000016b6b8000,0x000000016b8bb000],  sp=0x000000016b8b7b80,  free space=2046k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0xff4f6c]  PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;amp;)+0x76c&lt;br/&gt;
V  [libjvm.dylib+0x639dac]  CompiledMethod::scope_desc_at(unsigned char*)+0x70&lt;br/&gt;
V  [libjvm.dylib+0x7db870]  frame::describe(FrameValues&amp;amp;, int, RegisterMap const*)+0x84c&lt;br/&gt;
V  [libjvm.dylib+0xa46b4c]  JavaThread::print_frame_layout(int, bool)+0x264&lt;br/&gt;
V  [libjvm.dylib+0x6e8ac0]  Deoptimization::unpack_frames(JavaThread*, int)+0x1f8&lt;br/&gt;
v  ~DeoptimizationBlob 0x0000000110a81120&lt;br/&gt;
j  java.lang.invoke.MethodTypeForm.&amp;lt;init&amp;gt;(Ljava/lang/invoke/MethodType;)V+235 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
J 219 c1 java.lang.invoke.MethodType.makeImpl(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (109 bytes) @ 0x0000000110bbf448 [0x0000000110bbf000+0x0000000000000448]&lt;br/&gt;
J 273 c1 java.lang.invoke.MethodType.methodType(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (69 bytes) @ 0x0000000110c01a98 [0x0000000110c01940+0x0000000000000158]&lt;br/&gt;
J 210 c1 java.lang.invoke.MethodTypeForm.canonicalize(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (59 bytes) @ 0x0000000110bb9304 [0x0000000110bb9200+0x0000000000000104]&lt;br/&gt;
J 219 c1 java.lang.invoke.MethodType.makeImpl(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (109 bytes) @ 0x0000000110bbf3d8 [0x0000000110bbf000+0x00000000000003d8]&lt;br/&gt;
J 272 c1 java.lang.invoke.MethodType.insertParameterTypes(I[Ljava/lang/Class;)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (121 bytes) @ 0x0000000110c00918 [0x0000000110c00540+0x00000000000003d8]&lt;br/&gt;
J 271 c1 java.lang.invoke.MethodType.invokerType()Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (9 bytes) @ 0x0000000110c000f8 [0x0000000110c00040+0x00000000000000b8]&lt;br/&gt;
j  java.lang.invoke.DirectMethodHandle.makePreparedFieldLambdaForm(BZI)Ljava/lang/invoke/LambdaForm;+434 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
J 234 c1 java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(BZLjava/lang/Class;)Ljava/lang/invoke/LambdaForm; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (48 bytes) @ 0x0000000110bd238c [0x0000000110bd2280+0x000000000000010c]&lt;br/&gt;
J 230 c1 java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(Ljava/lang/invoke/MemberName;)Ljava/lang/invoke/LambdaForm; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (180 bytes) @ 0x0000000110bcea94 [0x0000000110bce940+0x0000000000000154]&lt;br/&gt;
J 226 c1 java.lang.invoke.DirectMethodHandle.make(BLjava/lang/Class;Ljava/lang/invoke/MemberName;Ljava/lang/Class;)Ljava/lang/invoke/DirectMethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (275 bytes) @ 0x0000000110bc9ae8 [0x0000000110bc9840+0x00000000000002a8]&lt;br/&gt;
J 225 c1 java.lang.invoke.DirectMethodHandle.make(Ljava/lang/Class;Ljava/lang/invoke/MemberName;)Ljava/lang/invoke/DirectMethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (21 bytes) @ 0x0000000110bc925c [0x0000000110bc91c0+0x000000000000009c]&lt;br/&gt;
J 157 c1 java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(BLjava/lang/Class;Ljava/lang/invoke/MemberName;Z)Ljava/lang/invoke/MethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (67 bytes) @ 0x0000000110b92bc4 [0x0000000110b92ac0+0x0000000000000104]&lt;br/&gt;
J 153 c1 java.lang.invoke.MethodHandles$Lookup.unreflectField(Ljava/lang/reflect/Field;Z)Ljava/lang/invoke/MethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (126 bytes) @ 0x0000000110b90be4 [0x0000000110b909c0+0x0000000000000224]&lt;br/&gt;
J 152 c1 java.lang.invoke.MethodHandles$Lookup.unreflectGetter(Ljava/lang/reflect/Field;)Ljava/lang/invoke/MethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (7 bytes) @ 0x0000000110b905f4 [0x0000000110b90540+0x00000000000000b4]&lt;br/&gt;
j  java.lang.invoke.MethodHandleImpl$1.unreflectField(Ljava/lang/reflect/Field;Z)Ljava/lang/invoke/MethodHandle;+18 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.reflect.MethodHandleAccessorFactory.newFieldAccessor(Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessorImpl;+63 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
J 104 c1 jdk.internal.reflect.ReflectionFactory.newFieldAccessor(Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessor; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (80 bytes) @ 0x0000000110b76fcc [0x0000000110b76e40+0x000000000000018c]&lt;br/&gt;
J 103 c1 java.lang.reflect.Field.acquireFieldAccessor()Ljdk/internal/reflect/FieldAccessor; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (46 bytes) @ 0x0000000110b76668 [0x0000000110b76580+0x00000000000000e8]&lt;br/&gt;
J 88 c1 java.lang.reflect.Field.getInt(Ljava/lang/Object;)I &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (39 bytes) @ 0x0000000110b6cd7c [0x0000000110b6cbc0+0x00000000000001bc]&lt;br/&gt;
j  java.lang.invoke.MethodHandleNatives.verifyConstants()Z+48 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.invoke.MethodHandleNatives.&amp;lt;clinit&amp;gt;()V+85 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00000001109a816c&lt;br/&gt;
V  [libjvm.dylib+0xa0af28]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x65c&lt;br/&gt;
V  [libjvm.dylib+0x9c0080]  InstanceKlass::call_class_initializer(JavaThread*)+0x3e8&lt;br/&gt;
V  [libjvm.dylib+0x9bd294]  InstanceKlass::initialize_impl(JavaThread*)+0x918&lt;br/&gt;
V  [libjvm.dylib+0x9bc904]  InstanceKlass::initialize(JavaThread*)+0x30&lt;br/&gt;
V  [libjvm.dylib+0x13164f8]  Threads::initialize_jsr292_core_classes(JavaThread*)+0x52c&lt;br/&gt;
V  [libjvm.dylib+0x1316e1c]  Threads::create_vm(JavaVMInitArgs*, bool*)+0x8d8&lt;br/&gt;
V  [libjvm.dylib+0xb2b380]  JNI_CreateJavaVM+0x70&lt;br/&gt;
C  [libjli.dylib+0xa650]  JavaMain+0x104&lt;br/&gt;
C  [libjli.dylib+0xd4c4]  ThreadJavaMain+0xc&lt;br/&gt;
C  [libsystem_pthread.dylib+0x726c]  _pthread_start+0x94&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
v  ~DeoptimizationBlob 0x0000000110a810f4&lt;br/&gt;
j  java.lang.invoke.MethodTypeForm.&amp;lt;init&amp;gt;(Ljava/lang/invoke/MethodType;)V+235 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
J 219 c1 java.lang.invoke.MethodType.makeImpl(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (109 bytes) @ 0x0000000110bbf448 [0x0000000110bbf000+0x0000000000000448]&lt;br/&gt;
J 273 c1 java.lang.invoke.MethodType.methodType(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (69 bytes) @ 0x0000000110c01a98 [0x0000000110c01940+0x0000000000000158]&lt;br/&gt;
J 210 c1 java.lang.invoke.MethodTypeForm.canonicalize(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (59 bytes) @ 0x0000000110bb9304 [0x0000000110bb9200+0x0000000000000104]&lt;br/&gt;
J 219 c1 java.lang.invoke.MethodType.makeImpl(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (109 bytes) @ 0x0000000110bbf3d8 [0x0000000110bbf000+0x00000000000003d8]&lt;br/&gt;
J 272 c1 java.lang.invoke.MethodType.insertParameterTypes(I[Ljava/lang/Class;)Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (121 bytes) @ 0x0000000110c00918 [0x0000000110c00540+0x00000000000003d8]&lt;br/&gt;
J 271 c1 java.lang.invoke.MethodType.invokerType()Ljava/lang/invoke/MethodType; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (9 bytes) @ 0x0000000110c000f8 [0x0000000110c00040+0x00000000000000b8]&lt;br/&gt;
j  java.lang.invoke.DirectMethodHandle.makePreparedFieldLambdaForm(BZI)Ljava/lang/invoke/LambdaForm;+434 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
J 234 c1 java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(BZLjava/lang/Class;)Ljava/lang/invoke/LambdaForm; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (48 bytes) @ 0x0000000110bd238c [0x0000000110bd2280+0x000000000000010c]&lt;br/&gt;
J 230 c1 java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(Ljava/lang/invoke/MemberName;)Ljava/lang/invoke/LambdaForm; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (180 bytes) @ 0x0000000110bcea94 [0x0000000110bce940+0x0000000000000154]&lt;br/&gt;
J 226 c1 java.lang.invoke.DirectMethodHandle.make(BLjava/lang/Class;Ljava/lang/invoke/MemberName;Ljava/lang/Class;)Ljava/lang/invoke/DirectMethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (275 bytes) @ 0x0000000110bc9ae8 [0x0000000110bc9840+0x00000000000002a8]&lt;br/&gt;
J 225 c1 java.lang.invoke.DirectMethodHandle.make(Ljava/lang/Class;Ljava/lang/invoke/MemberName;)Ljava/lang/invoke/DirectMethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (21 bytes) @ 0x0000000110bc925c [0x0000000110bc91c0+0x000000000000009c]&lt;br/&gt;
J 157 c1 java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(BLjava/lang/Class;Ljava/lang/invoke/MemberName;Z)Ljava/lang/invoke/MethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (67 bytes) @ 0x0000000110b92bc4 [0x0000000110b92ac0+0x0000000000000104]&lt;br/&gt;
J 153 c1 java.lang.invoke.MethodHandles$Lookup.unreflectField(Ljava/lang/reflect/Field;Z)Ljava/lang/invoke/MethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (126 bytes) @ 0x0000000110b90be4 [0x0000000110b909c0+0x0000000000000224]&lt;br/&gt;
J 152 c1 java.lang.invoke.MethodHandles$Lookup.unreflectGetter(Ljava/lang/reflect/Field;)Ljava/lang/invoke/MethodHandle; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (7 bytes) @ 0x0000000110b905f4 [0x0000000110b90540+0x00000000000000b4]&lt;br/&gt;
j  java.lang.invoke.MethodHandleImpl$1.unreflectField(Ljava/lang/reflect/Field;Z)Ljava/lang/invoke/MethodHandle;+18 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.reflect.MethodHandleAccessorFactory.newFieldAccessor(Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessorImpl;+63 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
J 104 c1 jdk.internal.reflect.ReflectionFactory.newFieldAccessor(Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessor; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (80 bytes) @ 0x0000000110b76fcc [0x0000000110b76e40+0x000000000000018c]&lt;br/&gt;
J 103 c1 java.lang.reflect.Field.acquireFieldAccessor()Ljdk/internal/reflect/FieldAccessor; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (46 bytes) @ 0x0000000110b76668 [0x0000000110b76580+0x00000000000000e8]&lt;br/&gt;
J 88 c1 java.lang.reflect.Field.getInt(Ljava/lang/Object;)I &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (39 bytes) @ 0x0000000110b6cd7c [0x0000000110b6cbc0+0x00000000000001bc]&lt;br/&gt;
j  java.lang.invoke.MethodHandleNatives.verifyConstants()Z+48 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.invoke.MethodHandleNatives.&amp;lt;clinit&amp;gt;()V+85 &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00000001109a816c&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 10 (SIGBUS), si_code: 1 (BUS_ADRALN), si_addr: 0x0000000110bbedb8&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m starting this bug off in hotspot/compiler for initial triage since&lt;br/&gt;
it is a compiler test.</description>
                <environment></environment>
        <key id="5110448">JDK-8316392</key>
            <summary>compiler/interpreter/TestVerifyStackAfterDeopt.java failed with SIGBUS in PcDescContainer::find_pc_desc_internal</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tholenstein">Tobias Holenstein</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-22</label>
                            <label>problemlist</label>
                            <label>regression</label>
                            <label>tier8</label>
                    </labels>
                <created>Sat, 16 Sep 2023 10:45:44 -0700</created>
                <updated>Mon, 22 Jan 2024 07:24:14 -0800</updated>
                            <resolved>Tue, 14 Nov 2023 08:19:12 -0800</resolved>
                                    <version>17.0.9</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                                                            <comments>
                            <comment id="14636051" author="roboduke" created="Thu, 21 Dec 2023 08:57:42 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2074&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2074&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-21 16:51:02 +0000</comment>
                            <comment id="14636048" author="goetz" created="Thu, 21 Dec 2023 08:44:22 -0800"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.11-oracle.&lt;br/&gt;
Medium risk, compiler change but small and limited to one platform.&lt;br/&gt;
Clean backport from 21.0.3.&lt;br/&gt;
SAP nightly testing passed.</comment>
                            <comment id="14634429" author="goetz" created="Thu, 14 Dec 2023 12:10:24 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.3-oracle.&lt;br/&gt;
Medium risk, compiler change but small and limited to one platform.  Fixes an issue also backported to 17.&lt;br/&gt;
Clean backport except for ProblemList. &lt;br/&gt;
SAP nighlty testing passed.&lt;br/&gt;
</comment>
                            <comment id="14634426" author="roboduke" created="Thu, 14 Dec 2023 11:51:18 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/32&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/32&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-14 19:44:49 +0000</comment>
                            <comment id="14626201" author="dukebot" created="Tue, 14 Nov 2023 08:19:11 -0800"  >Changeset: 58af9aee&lt;br/&gt;
Author:    Tobias Holenstein &amp;lt;&lt;a href=&apos;mailto:tholenstein@openjdk.org&apos;&gt;tholenstein@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-14 16:17:34 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/58af9aeeb07b7a392a8fbf04ef5cb2607b7b2462&quot;&gt;https://git.openjdk.org/jdk/commit/58af9aeeb07b7a392a8fbf04ef5cb2607b7b2462&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14625641" author="roboduke" created="Mon, 13 Nov 2023 00:09:15 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16308&quot;&gt;https://git.openjdk.org/jdk/pull/16308&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-23 11:43:52 +0000</comment>
                            <comment id="14615572" author="dcubed" created="Tue, 3 Oct 2023 10:58:42 -0700"  >We currently have 14 sightings of compiler/interpreter/TestVerifyStackAfterDeopt.java&lt;br/&gt;
failing in the JDK22 CI. All of these failures are on macosx-aarch64 in -Xcomp mode&lt;br/&gt;
and I need to do something to reduce the noise even though there are discussions&lt;br/&gt;
about a possible fix.</comment>
                            <comment id="14612474" author="thartmann" created="Wed, 20 Sep 2023 00:57:09 -0700"  >Always updating the cache and running with -XX:+DeoptimizeALot -XX:+VerifyStack reproduces this reliably with any test:&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/hotspot/share/code/nmethod.cpp b/src/hotspot/share/code/nmethod.cpp&lt;br/&gt;
index 060d5ba080d..e41730f809b 100644&lt;br/&gt;
--- a/src/hotspot/share/code/nmethod.cpp&lt;br/&gt;
+++ b/src/hotspot/share/code/nmethod.cpp&lt;br/&gt;
@@ -2075,6 +2075,7 @@ PcDesc* PcDescContainer::find_pc_desc_internal(address pc, bool approximate, con&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// (This as an almost 100% hit rate.)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;PcDesc* res = _pc_desc_cache.find_pc_desc(pc_offset, approximate);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (res != nullptr) {&lt;br/&gt;
+    _pc_desc_cache.add_pc_desc(res);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert(res == linear_search(search, pc_offset, approximate), &amp;quot;cache ok&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return res;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
And FTR, I found unrelated &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316422&quot; title=&quot;TestIntegerUnsignedDivMod.java triggers &amp;quot;invalid layout&amp;quot; assert in FrameValues::validate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316422&quot;&gt;&lt;strike&gt;JDK-8316422&lt;/strike&gt;&lt;/a&gt; when investigating this.</comment>
                            <comment id="14612463" author="thartmann" created="Wed, 20 Sep 2023 00:32:11 -0700"  >ILW = SIGBUS due to missing ThreadWXEnable, with single test and -XX:+DeoptimizeALot -XX:+VerifyStack, no workaround = HLH = P2</comment>
                            <comment id="14612461" author="thartmann" created="Wed, 20 Sep 2023 00:31:00 -0700"  >Right, I agree. [~tholenstein], could you please have a look?</comment>
                            <comment id="14612445" author="dholmes" created="Wed, 20 Sep 2023 00:08:11 -0700"  >Given we don&amp;#39;t want to reinstate the WXWrite in VM_LEAF_BASE macro I presume we need to figure out where in that stack it should be added. In &lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302736&quot; title=&quot;Major performance regression in Math.log on aarch64&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302736&quot;&gt;&lt;strike&gt;JDK-8302736&lt;/strike&gt;&lt;/a&gt; they did try to account for this cache in src/hotspot/share/runtime/sharedRuntime.cpp in SharedRuntime::raw_exception_handler_for_return_address:&lt;br/&gt;
&lt;br/&gt;
// write lock needed because we might update the pc desc cache via PcDescCache::add_pc_desc&lt;br/&gt;
&amp;nbsp;&amp;nbsp;MACOS_AARCH64_ONLY(ThreadWXEnable wx(WXWrite, current));&lt;br/&gt;
&lt;br/&gt;
But this game of whack-a-mole with WXWrite really needs to stop.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14612440" author="thartmann" created="Tue, 19 Sep 2023 23:53:06 -0700"  >This fixes the issue:&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/hotspot/share/runtime/interfaceSupport.inline.hpp b/src/hotspot/share/runtime/interfaceSupport.inline.hpp&lt;br/&gt;
index 9de1f8126d1..9a87b65554a 100644&lt;br/&gt;
--- a/src/hotspot/share/runtime/interfaceSupport.inline.hpp&lt;br/&gt;
+++ b/src/hotspot/share/runtime/interfaceSupport.inline.hpp&lt;br/&gt;
@@ -260,6 +260,8 @@ class VMNativeEntryWrapper {&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;#define VM_LEAF_BASE(result_type, header)                            \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;debug_only(NoHandleMark __hm;)                                     \&lt;br/&gt;
+  MACOS_AARCH64_ONLY(ThreadWXEnable __wx2(WXWrite,                    \&lt;br/&gt;
+                                         JavaThread::current()));    \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;os::verify_stack_alignment();                                      \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;/* begin of body */&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
So it seems to be a regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302736&quot; title=&quot;Major performance regression in Math.log on aarch64&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302736&quot;&gt;&lt;strike&gt;JDK-8302736&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14612291" author="thartmann" created="Tue, 19 Sep 2023 09:34:31 -0700"  >Similar to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8304725&quot; title=&quot;AsyncGetCallTrace can cause SIGBUS on M1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8304725&quot;&gt;&lt;strike&gt;JDK-8304725&lt;/strike&gt;&lt;/a&gt;, it&amp;#39;s a missing ThreadWXEnable.</comment>
                            <comment id="14612263" author="thartmann" created="Tue, 19 Sep 2023 08:22:05 -0700"  >I can&amp;#39;t explain how (must be timing) but this is triggered by the fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8315789&quot; title=&quot;Minor HexFormat performance improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8315789&quot;&gt;&lt;strike&gt;JDK-8315789&lt;/strike&gt;&lt;/a&gt; in jdk-22+15-1135. I verified by backing out the change.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5117417">JDK-8322378</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117767">JDK-8322714</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116823">JDK-8321916</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116824">JDK-8321917</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5094211">JDK-8302736</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100587">JDK-8307817</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5111648">JDK-8317448</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i335aj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17436"><![CDATA[b24]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>