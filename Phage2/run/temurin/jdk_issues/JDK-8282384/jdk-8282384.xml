<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:52:47 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8282384] [LOOM] Need test for ThreadReference.interrupt() on a vthread</title>
                <link>https://bugs.openjdk.org/browse/JDK-8282384</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>We currently have no test that calls ThreadReference.interrupt() on a vthread. The one ThreadReference.interrupt() test I could find is the following:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/ThreadReference/interrupt/interrupt001.java&lt;br/&gt;
&lt;br/&gt;
However, it was never adapted to use the JDIThreadFactory, so the test threads are never vthreads. I took a stab at fixing it to use JDIThreadFActory, but then ran into a problem because the test relies on Thread.resume() and this is not supported for vthreads.</description>
                <environment></environment>
        <key id="5069262">JDK-8282384</key>
            <summary>[LOOM] Need test for ThreadReference.interrupt() on a vthread</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="cjplummer">Chris Plummer</reporter>
                        <labels>
                            <label>loom</label>
                            <label>noreg-self</label>
                            <label>wrapper</label>
                    </labels>
                <created>Fri, 25 Feb 2022 00:01:10 -0800</created>
                <updated>Mon, 8 May 2023 13:10:36 -0700</updated>
                            <resolved>Mon, 1 May 2023 11:15:43 -0700</resolved>
                                    <version>repo-loom</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14578046" author="dukebot" created="Mon, 1 May 2023 11:15:42 -0700"  >Changeset: ae5f678f&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-01 18:13:11 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ae5f678fbafcd643a5a74447ed718636a53f9e2b&quot;&gt;https://git.openjdk.org/jdk/commit/ae5f678fbafcd643a5a74447ed718636a53f9e2b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14577470" author="roboduke" created="Thu, 27 Apr 2023 10:51:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13696&quot;&gt;https://git.openjdk.org/jdk/pull/13696&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-27 17:42:41 +0000</comment>
                            <comment id="14577438" author="cjplummer" created="Thu, 27 Apr 2023 08:35:14 -0700"  >&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8289607&quot; title=&quot;Change hotspot/jtreg tests to not use Thread.suspend/resume&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8289607&quot;&gt;&lt;strike&gt;JDK-8289607&lt;/strike&gt;&lt;/a&gt; significantly gutted this test, and it no longer calls Thread.resume(). That might make it easier to get it working with virtual threads.</comment>
                            <comment id="14479295" author="cjplummer" created="Fri, 25 Feb 2022 00:03:15 -0800"  >Diff of my effort to get interrupt001 to use JDIThreadFactory:&lt;br/&gt;
&lt;br/&gt;
diff --git a/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/interrupt/interrupt001a.java b/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/interrupt/interrupt001a.java&lt;br/&gt;
index 8c8a2cb67f4..f3298d5795b 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/interrupt/interrupt001a.java&lt;br/&gt;
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/interrupt/interrupt001a.java&lt;br/&gt;
@@ -64,9 +64,9 @@ public class interrupt001a {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// scaffold objects&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static volatile ArgumentHandler argumentHandler = null;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-    private static interrupt001aThread thread2 = null;&lt;br/&gt;
+    private static Thread thread2 = null;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-    private static interrupt001aThread thread3 = null;&lt;br/&gt;
+    private static Thread thread3 = null;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static IOPipe pipe;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
@@ -186,14 +186,15 @@ public class interrupt001a {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.exit(exitCode + PASS_BASE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-    private static interrupt001aThread threadStart(String threadName) {&lt;br/&gt;
-        interrupt001aThread resultThread = new interrupt001aThread(threadName);&lt;br/&gt;
-        synchronized (resultThread.waitnotifyObj) {&lt;br/&gt;
+    private static Thread threadStart(String threadName) {&lt;br/&gt;
+        interrupt001aThread resultRunnable = new interrupt001aThread(threadName);&lt;br/&gt;
+        Thread resultThread = JDIThreadFactory.newThread(resultRunnable, threadName);&lt;br/&gt;
+        synchronized (resultRunnable.waitnotifyObj) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultThread.start();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log1(&amp;quot;       before:   waitnotifyObj.wait();&amp;quot;);&lt;br/&gt;
-                while (!resultThread.ready)&lt;br/&gt;
-                    resultThread.waitnotifyObj.wait();&lt;br/&gt;
+                while (!resultRunnable.ready)&lt;br/&gt;
+                    resultRunnable.waitnotifyObj.wait();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log1(&amp;quot;       after:    waitnotifyObj.wait();&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (InterruptedException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logErr(&amp;quot;Unexpected InterruptedException while waiting for start of : &amp;quot; + threadName);&lt;br/&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2w64r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17412"><![CDATA[b21]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>