<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:57:27 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8300792] Refactor examples in java.net.http to use @snippet</title>
                <link>https://bugs.openjdk.org/browse/JDK-8300792</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The API documentation of several classes in the java.net.http package could be refactored to use `@snippet` for code examples.</description>
                <environment></environment>
        <key id="5092109">JDK-8300792</key>
            <summary>Refactor examples in java.net.http to use @snippet</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dclarke">Darragh Clarke</assignee>
                                    <reporter username="dfuchs">Daniel Fuchs</reporter>
                        <labels>
                            <label>httpclient</label>
                    </labels>
                <created>Fri, 20 Jan 2023 11:12:54 -0800</created>
                <updated>Wed, 1 Mar 2023 22:56:21 -0800</updated>
                            <resolved>Mon, 27 Feb 2023 01:21:12 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14562992" author="dukebot" created="Mon, 27 Feb 2023 01:21:11 -0800"  >Changeset: 306134dc&lt;br/&gt;
Author:    Darragh Clarke &amp;lt;&lt;a href=&apos;mailto:Darragh.clarke@oracle.com&apos;&gt;Darragh.clarke@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Jaikiran Pai &amp;lt;&lt;a href=&apos;mailto:jpai@openjdk.org&apos;&gt;jpai@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-27 09:18:56 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/306134dcf9db6c44adf919fac29f5b227534bdee&quot;&gt;https://git.openjdk.org/jdk/commit/306134dcf9db6c44adf919fac29f5b227534bdee&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14561718" author="roboduke" created="Tue, 21 Feb 2023 08:01:31 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12692&quot;&gt;https://git.openjdk.org/jdk/pull/12692&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-21 15:53:37 +0000</comment>
                            <comment id="14553184" author="dfuchs" created="Fri, 20 Jan 2023 11:19:28 -0800"  >We also have a test file that tests that the code examples compile. It might be interesting to analyze how snippets can (maybe) be used to verify that the example code from the source files compiles. Whether keeping the status quo (where the test file kind of duplicate the code sample) is the best solution should be examined too.</comment>
                            <comment id="14553182" author="dfuchs" created="Fri, 20 Jan 2023 11:14:07 -0800"  >The following places could be upgraded to use `@snippet`.&lt;br/&gt;
&lt;br/&gt;
$ grep &amp;#39;&amp;lt;pre&amp;gt;&amp;#39; src/java.net.http/share/classes/java/net/http/*.java&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpClient.java: * &amp;lt;pre&amp;gt;{@code    HttpClient client = HttpClient.newBuilder()&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpClient.java: * &amp;lt;pre&amp;gt;{@code    HttpRequest request = HttpRequest.newBuilder()&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpClient.java:     * &amp;lt;pre&amp;gt;{@code    HttpClient client = HttpClient.newHttpClient();&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpClient.java:     * &amp;lt;pre&amp;gt;{@code    InetSocketAddress addr = new InetSocketAddress(&amp;quot;proxy.example.com&amp;quot;, 80);&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpRequest.java: * &amp;lt;pre&amp;gt;{@code    HttpClient client = HttpClient.newHttpClient();&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpRequest.java:     *  &amp;lt;pre&amp;gt;{@code HttpRequest.newBuilder(request, (n, v) -&amp;gt; true)}&amp;lt;/pre&amp;gt;&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpRequest.java:     *  &amp;lt;pre&amp;gt;{@code HttpRequest.newBuilder(request, (n, v) -&amp;gt; false)}&amp;lt;/pre&amp;gt;&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpRequest.java:     *  &amp;lt;pre&amp;gt;{@code HttpRequest.newBuilder(request, (name, value) -&amp;gt; !name.equalsIgnoreCase(&amp;quot;Foo-Bar&amp;quot;))}&amp;lt;/pre&amp;gt;&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpRequest.java:     *  &amp;lt;pre&amp;gt;{@code    // Request body from a String&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java: * &amp;lt;pre&amp;gt;{@code    HttpResponse&amp;lt;String&amp;gt; response = client&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:     * &amp;lt;pre&amp;gt;{@code   HttpRequest request = HttpRequest.newBuilder()&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:     * &amp;lt;pre&amp;gt;{@code   HttpRequest request = HttpRequest.newBuilder()&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:     * &amp;lt;pre&amp;gt;{@code    // Receives the response body as a String&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:         * &amp;lt;pre&amp;gt; {@code  TextSubscriber subscriber = new TextSubscriber();&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:         * &amp;lt;pre&amp;gt; {@code  TextSubscriber subscriber = ...;  // accumulates bytes and transforms them into a String&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:         * &amp;lt;pre&amp;gt; {@code  // A PrintSubscriber that implements Flow.Subscriber&amp;lt;String&amp;gt;&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:         * &amp;lt;pre&amp;gt; {@code  // A LineParserSubscriber that implements Flow.Subscriber&amp;lt;String&amp;gt;&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:     * &amp;lt;pre&amp;gt;{@code    // Streams the response body to a File&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:         * @implNote This is equivalent to calling &amp;lt;pre&amp;gt;{@code&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/HttpResponse.java:         * &amp;lt;pre&amp;gt; {@code  public static &amp;lt;W&amp;gt; BodySubscriber&amp;lt;Supplier&amp;lt;W&amp;gt;&amp;gt; asJSON(Class&amp;lt;W&amp;gt; targetType) {&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:     * &amp;lt;pre&amp;gt;{@code     WebSocket.Listener listener = new WebSocket.Listener() {&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:         * &amp;lt;pre&amp;gt;{@code     webSocket.request(1); }&amp;lt;/pre&amp;gt;&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:         * &amp;lt;pre&amp;gt;{@code     webSocket.request(1);&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:         * &amp;lt;pre&amp;gt;{@code     webSocket.request(1);&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:         * &amp;lt;pre&amp;gt;{@code     webSocket.request(1);&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:         * &amp;lt;pre&amp;gt;{@code     webSocket.request(1);&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:         * &amp;lt;pre&amp;gt;{@code     public CompletionStage&amp;lt;?&amp;gt; onClose(WebSocket webSocket,&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:     * &amp;lt;pre&amp;gt;{@code     CompletableFuture&amp;lt;WebSocket&amp;gt; webSocket = ...&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:     * &amp;lt;pre&amp;gt;{@code     MyAlarm alarm = new MyAlarm(webSocket::abort);&lt;br/&gt;
src/java.net.http/share/classes/java/net/http/WebSocket.java:     * &amp;lt;pre&amp;gt;{@code     WebSocket.Listener listener = new WebSocket.Listener() {&lt;br/&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30157:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="193"><![CDATA[java.net]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>