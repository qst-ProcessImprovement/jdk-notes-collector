<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:31:46 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299956] [BACKOUT] 8297487: G1 Remark: no need to keep alive oop constants of nmethods on stack</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299956</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Several crashes have been observed after integration of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297487&quot; title=&quot;G1 Remark: no need to keep alive oop constants of nmethods on stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297487&quot;&gt;&lt;strike&gt;JDK-8297487&lt;/strike&gt;&lt;/a&gt;. We need to back it out.&lt;br/&gt;
&lt;br/&gt;
tools/javac/tree/JavacTreeScannerTest.java &lt;br/&gt;
tools/javac/modules/JavaBaseTest.java&lt;br/&gt;
tools/javac/launcher/SourceLauncherTest.java&lt;br/&gt;
tools/javac/tree/SourceDocTreeScannerTest.java&lt;br/&gt;
tools/javac/preview/classReaderTest/TooNewMajorVersionTest.java&lt;br/&gt;
tools/javac/TryWithResources/InterruptedExceptionTest.java&lt;br/&gt;
tools/javac/generics/inference/7086601/T7086601b.java&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (sharedRuntime.cpp:1457), pid=144752, tid=176160&lt;br/&gt;
#  guarantee(caller_cb != NULL &amp;amp;&amp;amp; caller_cb-&amp;gt;is_compiled()) failed: must be called from compiled method&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+5) (build 21-ea+5-LTS-244)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21-ea+5-LTS-244, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)&lt;br/&gt;
# Core dump will be written. Default location: C:\sb\prod\1673434684\testoutput\test-support\jtreg_open_test_langtools_tier1\scratch\4_1\hs_err_pid144752.mdmp&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000eb52900000,0x000000eb52a00000]&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0x6b03ea]  os::win32::platform_print_native_stack+0xca  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0x8388ca]  VMError::report+0xc1a  (vmError.cpp:813)&lt;br/&gt;
V  [jvm.dll+0x83a4c5]  VMError::report_and_die+0x675  (vmError.cpp:1593)&lt;br/&gt;
V  [jvm.dll+0x83ab77]  VMError::report_and_die+0x47  (vmError.cpp:1352)&lt;br/&gt;
V  [jvm.dll+0x2791da]  report_vm_error+0x8a  (debug.cpp:286)&lt;br/&gt;
V  [jvm.dll+0x719829]  SharedRuntime::resolve_sub_helper+0xd9  (sharedRuntime.cpp:1457)&lt;br/&gt;
V  [jvm.dll+0x71931b]  SharedRuntime::resolve_helper+0x3b  (sharedRuntime.cpp:1337)&lt;br/&gt;
V  [jvm.dll+0x719d82]  SharedRuntime::resolve_virtual_call_C+0x32  (sharedRuntime.cpp:1698)&lt;br/&gt;
C  0x0000020a0f584486&lt;br/&gt;
&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
v  ~RuntimeStub::resolve_virtual_call 0x0000020a0f584486&lt;br/&gt;
C  0x0000020a10c46e14&lt;br/&gt;
C  0x0000000320008131&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffdeb723031, pid=17456, tid=54652&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+5) (build 21-ea+5-LTS-244)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21-ea+5-LTS-244, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [jvm.dll+0x253031]  vframeStreamCommon::next+0x211&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: C:\sb\prod\1673434720\testoutput\test-support\jtreg_open_test_langtools_tier1\scratch\5\hs_err_pid17456.mdmp&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000185e200000,0x000000185e300000],  sp=0x000000185e2fd2b0,  free space=1012k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0x253031]  vframeStreamCommon::next+0x211  (vframe.inline.hpp:103)&lt;br/&gt;
V  [jvm.dll+0x473df1]  JVM_GetStackAccessControlContext+0x361  (jvm.cpp:1309)&lt;br/&gt;
C  0x000001af8fafce81&lt;br/&gt;
&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
J 748  java.security.AccessController.getStackAccessControlContext()Ljava/security/AccessControlContext; &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt; (0 bytes) @ 0x000001af8fafcdee [0x000001af8fafcda0+0x000000000000004e]&lt;br/&gt;
J 21075 c2 com.sun.tools.javac.file.JavacFileManager.getClassLoader(Ljavax/tools/JavaFileManager$Location;)Ljava/lang/ClassLoader; &lt;a href=&apos;mailto:jdk.compiler@21-ea&apos;&gt;jdk.compiler@21-ea&lt;/a&gt; (105 bytes) @ 0x000001af90f85860 [0x000001af90f836c0+0x00000000000021a0]&lt;br/&gt;
j  com.sun.tools.javac.main.DelegatingJavaFileManager.getClassLoader(Ljavax/tools/JavaFileManager$Location;)Ljava/lang/ClassLoader;+6 &lt;a href=&apos;mailto:jdk.compiler@21-ea&apos;&gt;jdk.compiler@21-ea&lt;/a&gt;&lt;br/&gt;
J 16098 c1 com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorLoader()V &lt;a href=&apos;mailto:jdk.compiler@21-ea&apos;&gt;jdk.compiler@21-ea&lt;/a&gt; (175 bytes) @ 0x000001af8a78e5ac [0x000001af8a78e0e0+0x00000000000004cc]&lt;br/&gt;
J 20808 c1 com.sun.tools.javac.processing.JavacProcessingEnvironment.&amp;lt;init&amp;gt;(Lcom/sun/tools/javac/util/Context;)V &lt;a href=&apos;mailto:jdk.compiler@21-ea&apos;&gt;jdk.compiler@21-ea&lt;/a&gt; (391 bytes) @ 0x000001af8882ffec [0x000001af88829360+0x0000000000006c8c]&lt;br/&gt;
J 19317 c1 com.sun.tools.javac.processing.JavacProcessingEnvironment.instance(Lcom/sun/tools/javac/util/Context;)Lcom/sun/tools/javac/processing/JavacProcessingEnvironment; &lt;a href=&apos;mailto:jdk.compiler@21-ea&apos;&gt;jdk.compiler@21-ea&lt;/a&gt; (25 bytes) @ 0x000001af88bdf93c [0x000001af88bdf560+0x00000000000003dc]&lt;br/&gt;
j  com.sun.tools.javac.api.BasicJavacTask.initPlugins(Ljava/util/Set;)V+148 &lt;a href=&apos;mailto:jdk.compiler@21-ea&apos;&gt;jdk.compiler@21-ea&lt;/a&gt;&lt;br/&gt;
C  0x000001af90854a80&lt;br/&gt;
C  0xdcb0680820079a0b&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffef7f72936, pid=9728, tid=35532&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+5) (build 21-ea+5-LTS-244)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21-ea+5-LTS-244, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [jvm.dll+0x132936]  BarrierSetNMethod::supports_entry_barrier+0x6&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: C:\sb\prod\1673434043\testoutput\test-support\jtreg_open_test_langtools_tier1\scratch\2\hs_err_pid9728.mdmp&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000005360800000,0x0000005360900000],  sp=0x00000053608fe6b0,  free space=1017k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0x132936]  BarrierSetNMethod::supports_entry_barrier+0x6  (barrierSetNMethod.cpp:48)&lt;br/&gt;
V  [jvm.dll+0x132b45]  BarrierSetNMethod::guard_value+0x15  (barrierSetNMethod_x86.cpp:189)&lt;br/&gt;
V  [jvm.dll+0x132884]  BarrierSetNMethod::nmethod_stub_entry_barrier+0x44  (barrierSetNMethod.cpp:170)&lt;br/&gt;
C  0x000001b2716986c9&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007fa4c11ed83d, pid=3880793, tid=3911017&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+5) (build 21-ea+5-LTS-244)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21-ea+5-LTS-244, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x52b83d]  frame::sender(RegisterMap*) const+0x1ed&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fa4916e0000,0x00007fa4917e1000],  sp=0x00007fa4917dc430,  free space=1009k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x52b83d]  frame::sender(RegisterMap*) const+0x1ed  (frame_x86.inline.hpp:244)&lt;br/&gt;
V  [libjvm.so+0x8d284c]  java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;amp;, JavaThread*)+0xb7c  (javaClasses.cpp:2695)&lt;br/&gt;
V  [libjvm.so+0x8d2d6f]  java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;amp;)+0x5f  (javaClasses.cpp:2782)&lt;br/&gt;
V  [libjvm.so+0x99262b]  JVM_FillInStackTrace+0xcb  (jvm.cpp:505)&lt;br/&gt;
C  [libjava.so+0x146e2]  Java_java_lang_Throwable_fillInStackTrace+0x12  (Throwable.c:49)&lt;br/&gt;
J 5571  java.lang.Throwable.fillInStackTrace(I)Ljava/lang/Throwable; &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt; (0 bytes) @ 0x00007fa4ac384fd9 [0x00007fa4ac384f20+0x00000000000000b9]</description>
                <environment></environment>
        <key id="5091115">JDK-8299956</key>
            <summary>[BACKOUT] 8297487: G1 Remark: no need to keep alive oop constants of nmethods on stack</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="1" iconUrl="https://bugs.openjdk.org/images/jbsImages/p1.png">P1</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thartmann">Tobias Hartmann</assignee>
                                    <reporter username="thartmann">Tobias Hartmann</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>regression</label>
                    </labels>
                <created>Wed, 11 Jan 2023 03:23:52 -0800</created>
                <updated>Tue, 11 Jul 2023 05:23:22 -0700</updated>
                            <resolved>Wed, 11 Jan 2023 04:41:41 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14555376" author="rrich" created="Mon, 30 Jan 2023 02:17:49 -0800"  >I cannot reproduce the issues anymore since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8300915&quot; title=&quot;G1: incomplete SATB because nmethod entry barriers don&amp;#39;t get armed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8300915&quot;&gt;&lt;strike&gt;JDK-8300915&lt;/strike&gt;&lt;/a&gt; is fixed.</comment>
                            <comment id="14550572" author="thartmann" created="Wed, 11 Jan 2023 22:36:27 -0800"  >Hi Richard,&lt;br/&gt;
I was able to reliably reproduce this by running full open/test/langtools/:tier1 with a product build on Linux x64 and Windows x64 in around 4/100 runs. Please note that it only reproduced for me with a full run of that task (*not* by only running one the failing tests). I&amp;#39;ve seen this before and it&amp;#39;s most likely due to timing/warmup/profiling/code cache pressure differences when multiple tests are executed in the same VM. I narrowed it down to our CI build that included your change and then also manually verified by reverting the change. I can reproduce it with your change but not without.&lt;br/&gt;
&lt;br/&gt;
Also, the backout did help. We did not observe these issues anymore.&lt;br/&gt;
&lt;br/&gt;
I can still reproduce this with your change, so if you want me to run some experiments, let me know (we can follow-up by email).</comment>
                            <comment id="14550447" author="dcubed" created="Wed, 11 Jan 2023 11:12:46 -0800"  >This [BACKOUT] was integrated in jdk-21+5-261.</comment>
                            <comment id="14550446" author="dcubed" created="Wed, 11 Jan 2023 11:11:55 -0800"  >Here&amp;#39;s a log file snippet from the jdk-21+5-252-tier4 sighting:&lt;br/&gt;
&lt;br/&gt;
tools/javac/processing/TestWarnErrorCount.java&lt;br/&gt;
&lt;br/&gt;
----------stdout:(18/1320)----------&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGILL (0x4) at pc=0x0000fffc52ab5554, pid=70475, tid=82601&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+5) (fastdebug build 21-ea+5-LTS-252)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+5-LTS-252, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# C  0x0000fffc52ab5554&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/0c72054a-24ab-4dbb-944f-97f9341a1b96-S151514/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/1ab80dfd-041d-4011-8aa5-22b5b6df80f8/runs/baea33b5-2c11-496f-a204-29d6769b775e/testoutput/test-support/jtreg_open_test_langtools_tier1/scratch/2/core.70475)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /opt/mach5/mesos/work_dir/slaves/0c72054a-24ab-4dbb-944f-97f9341a1b96-S151514/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/1ab80dfd-041d-4011-8aa5-22b5b6df80f8/runs/baea33b5-2c11-496f-a204-29d6769b775e/testoutput/test-support/jtreg_open_test_langtools_tier1/scratch/2/hs_err_pid70475.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
result: Error. Agent communication error: java.io.EOFException; check console log for any additional details&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000fffc6066c500):  JavaThread &amp;quot;AgentVMThread&amp;quot; [_thread_in_Java, id=82601, stack(0x0000fffc1ade0000,0x0000fffc1afe0000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000fffc1ade0000,0x0000fffc1afe0000],  sp=0x0000fffc1afdd4e0,  free space=2037k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
C  0x0000fffc52ab5554&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 4 (SIGILL), si_code: 1 (ILL_ILLOPC), si_addr: 0x0000fffc52ab5554</comment>
                            <comment id="14550377" author="rrich" created="Wed, 11 Jan 2023 07:47:52 -0800"  >Hi Tobias,&lt;br/&gt;
I don&amp;#39;t see a connection between the attached crash logs and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297487&quot; title=&quot;G1 Remark: no need to keep alive oop constants of nmethods on stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297487&quot;&gt;&lt;strike&gt;JDK-8297487&lt;/strike&gt;&lt;/a&gt;. Also that change was very thoroughly tested on all platforms, fastdebug/release without any failures.&lt;br/&gt;
I tried to reproduce with `time make test TEST=test/langtools/tools/javac` but so far without success.&lt;br/&gt;
I checked out the original commit of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297487&quot; title=&quot;G1 Remark: no need to keep alive oop constants of nmethods on stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297487&quot;&gt;&lt;strike&gt;JDK-8297487&lt;/strike&gt;&lt;/a&gt; for this.&lt;br/&gt;
Can you help and explain how you reproduced the issue?&lt;br/&gt;
Did the BACKOUT actually help at all?&lt;br/&gt;
Thanks, Richard.</comment>
                            <comment id="14550314" author="dukebot" created="Wed, 11 Jan 2023 04:41:39 -0800"  >Changeset: d15285f9&lt;br/&gt;
Author:    Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-11 12:39:50 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/d15285f948c5414028790e25b4497d28775eeb54&quot;&gt;https://git.openjdk.org/jdk/commit/d15285f948c5414028790e25b4497d28775eeb54&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14550293" author="roboduke" created="Wed, 11 Jan 2023 03:38:33 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11941&quot;&gt;https://git.openjdk.org/jdk/pull/11941&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-11 11:27:43 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5092255">JDK-8300915</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5094124">JDK-8302462</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5088137">JDK-8297487</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102278" name="hs_err_pid1706541.log" size="396728" author="thartmann" created="Wed, 11 Jan 2023 04:34:20 -0800"/>
                            <attachment id="102279" name="hs_err_pid820588.log" size="114322" author="thartmann" created="Wed, 11 Jan 2023 04:34:20 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zv0b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>