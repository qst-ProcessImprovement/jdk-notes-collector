<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:48:54 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302491] NoClassDefFoundError omits the original cause of an error</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302491</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>If StackOverflowError causes NoClassDefFoundError, the original SOE is swallowed and isn&amp;#39;t reported in the stack trace.&lt;br/&gt;
&lt;br/&gt;
The issue happens in specific circumstances, when the class initialization procedure detects an error in class instantiation, tries to throw NCDFE with a correctly discovered cause (an original SOE), and catches another SOE when it tries to get the cause.&lt;br/&gt;
&lt;br/&gt;
The reproducer is attached as jtreg test to the proposed fix.&lt;br/&gt;
&lt;br/&gt;
Testing shows that the issue exists in versions 11, 13, 17, and 19.</description>
                <environment></environment>
        <key id="5094155">JDK-8302491</key>
            <summary>NoClassDefFoundError omits the original cause of an error</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="inakonechnyy">Ilarion Nakonechnyy</assignee>
                                    <reporter username="inakonechnyy">Ilarion Nakonechnyy</reporter>
                        <labels>
                            <label>classloading</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk20u-fix-SQE-ok-next</label>
                            <label>jdk20u-fix-request</label>
                            <label>jdk20u-fix-yes</label>
                    </labels>
                <created>Tue, 14 Feb 2023 09:34:36 -0800</created>
                <updated>Sun, 4 Jun 2023 22:41:15 -0700</updated>
                            <resolved>Mon, 13 Mar 2023 10:27:36 -0700</resolved>
                                    <version>11</version>
                    <version>13</version>
                    <version>17</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14573806" author="JIRAUSER19200" created="Fri, 14 Apr 2023 04:31:40 -0700"  >Fix request 20u&lt;br/&gt;
Risk: low.&lt;br/&gt;
Tested with tier1 and tier2 tests.</comment>
                            <comment id="14573717" author="roboduke" created="Thu, 13 Apr 2023 17:26:12 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk20u/pull/55&quot;&gt;https://git.openjdk.org/jdk20u/pull/55&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-14 00:20:03 +0000</comment>
                            <comment id="14573525" author="clanger" created="Thu, 13 Apr 2023 02:58:31 -0700"  >[~inakonechnyy], could you please also backport this to jdk20u as well? I&amp;#39;d like to see it there as the fix is brand new and this could give it a little more coverage.</comment>
                            <comment id="14570962" author="JIRAUSER19200" created="Fri, 31 Mar 2023 05:07:29 -0700"  >Fix request 17u.&lt;br/&gt;
&lt;br/&gt;
The backporting of this patch enhances the workflow of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8048190&quot; title=&quot;NoClassDefFoundError omits original ExceptionInInitializerError&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8048190&quot;&gt;&lt;strike&gt;JDK-8048190&lt;/strike&gt;&lt;/a&gt; by expanding the range of scenarios in which the root cause of a NoClassDefFoundError can be accurately reported. &lt;br/&gt;
Risk: low, as the patch only corrects the process of creating ExceptionInInitializerError for a specific scenario.&lt;br/&gt;
The patch does not apply cleanly, a small adjustment has been done.&lt;br/&gt;
Tested with tier1 and tier2 tests.</comment>
                            <comment id="14570219" author="goetz" created="Tue, 28 Mar 2023 23:04:56 -0700"  >You miss a risk assessment.  Please use the usual heading in your comment. Do some more testing. Tier1 is already done by the GitHub actions and only a basic sanitiy check.</comment>
                            <comment id="14570153" author="roboduke" created="Tue, 28 Mar 2023 13:18:40 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1226&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1226&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-28 20:13:41 +0000</comment>
                            <comment id="14570152" author="JIRAUSER19200" created="Tue, 28 Mar 2023 13:10:02 -0700"  >As the linked issue was ported to downstream, I&amp;#39;d like to backport the fix to the 17 and 11 versions. &lt;br/&gt;
Fix to 17 isn&amp;#39;t applied cleanly. Run tier1 tests, passed ok on Mac OS. </comment>
                            <comment id="14566361" author="dukebot" created="Mon, 13 Mar 2023 10:27:34 -0700"  >Changeset: 56851075&lt;br/&gt;
Author:    Ilarion Nakonechnyy &amp;lt;&lt;a href=&apos;mailto:inakonechnyy@openjdk.org&apos;&gt;inakonechnyy@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Coleen Phillimore &amp;lt;&lt;a href=&apos;mailto:coleenp@openjdk.org&apos;&gt;coleenp@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-13 17:26:25 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/5685107579f0f00b5eae881311315cec34c1ddcb&quot;&gt;https://git.openjdk.org/jdk/commit/5685107579f0f00b5eae881311315cec34c1ddcb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14564868" author="JIRAUSER19200" created="Mon, 6 Mar 2023 13:07:38 -0800"  >The small and nice stacktrace with proper cause for SOE case, that was implemented in the first iteration of proposed fix:&lt;br/&gt;
&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: Could not initialize class java.lang.invoke.MethodHandleImpl$AsVarargsCollector&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.sql/java.sql.DriverManager.ensureDriversInitialized(DriverManager.java:628)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.sql/java.sql.DriverManager.getDrivers(DriverManager.java:427)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdbc.repro.DriverA.&amp;lt;init&amp;gt;(DriverA.java:22)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdbc.repro.DriverRepro.main(DriverRepro.java:12)&lt;br/&gt;
Caused by: java.lang.StackOverflowError&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 4 more&lt;br/&gt;
&lt;br/&gt;
can&amp;#39;t be achieved in such a straightforward way: return the original Throwable (SOE in this particular case), if EIIE can&amp;#39;t be created because of another SOE during the java call.&lt;br/&gt;
&lt;br/&gt;
Why - is described in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8048190&quot; title=&quot;NoClassDefFoundError omits original ExceptionInInitializerError&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8048190&quot;&gt;&lt;strike&gt;JDK-8048190&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14561867" author="dholmes" created="Tue, 21 Feb 2023 20:52:00 -0800"  >Just to clarify the exact scenario here, this is what happens with class initialization errors.&lt;br/&gt;
&lt;br/&gt;
If C.&amp;lt;clinit&amp;gt; throws an exception E of any kind, it is caught,  a representation of it is stored away for future reference as the &amp;quot;initialization error&amp;quot; and the class C is marked as erroneous.&lt;br/&gt;
&lt;br/&gt;
If the E is a subclass of Error then it is rethrown directly; otherwise an ExceptionInInitializerError is created with E as its cause, and that is thrown.&lt;br/&gt;
&lt;br/&gt;
Once the class C has been marked erroneous subsequent attempts to use it, that require it to be initialized, will result in throwing NCDFE with the &amp;quot;initialization error&amp;quot; as the cause.&lt;br/&gt;
&lt;br/&gt;
If initialization of a C&amp;#39;s superclasses, or super interfaces, throws an exception E of any kind, then E is caught, a representation stored away for future reference as the &amp;quot;initialization error&amp;quot;, C is marked erroneous and E is rethrown. (Note: no EIIE wrapper in this case.)&lt;br/&gt;
&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
The way in which a representation of E is created for the &amp;quot;initialization error&amp;quot; is as follows (this code is in the very badly named `Throwable::get_cause_with_stack_trace` method).&lt;br/&gt;
&lt;br/&gt;
1. An upcall to Java is performed to get the stacktrace for E&lt;br/&gt;
2. A message string is created consisting of E&amp;#39;s type name, the thread name and E&amp;#39;s message string&lt;br/&gt;
3. A new ExceptionInInitializerError instance is created using the message string from #2.&lt;br/&gt;
4. The stacktrace of the new exception is set with the stacktrace from step #1.&lt;br/&gt;
&lt;br/&gt;
Both steps 1 and 3 can trigger secondary exceptions.&lt;br/&gt;
&lt;br/&gt;
If step 1 throws an exception it remains pending and we return null.&lt;br/&gt;
If step 3 throws an exception it is not pending, but is actually produced in place of the requested EIIE instance. But that exception is ignored and we again return null.&lt;br/&gt;
&lt;br/&gt;
If the process of creating the &amp;quot;initialization error&amp;quot; representation leaves an exception pending, or returns null, then any exception is cleared and no initializaton error is recorded for class C. In that case any future NCDFE pertaining to C will have a null cause and we have lost all information that E originally occurred.&lt;br/&gt;
&lt;br/&gt;
This PR wants to try to ensure we produce the initialization error as expected with its references to E&amp;#39;s name, message and stacktrace.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14560112" author="roboduke" created="Tue, 14 Feb 2023 14:03:34 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12566&quot;&gt;https://git.openjdk.org/jdk/pull/12566&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-14 21:58:01 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5098355">JDK-8305956</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5098899">JDK-8306448</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5099675">JDK-8307051</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5101877">JDK-8308912</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4732749">JDK-8048190</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5102022">JDK-8309034</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30drn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>