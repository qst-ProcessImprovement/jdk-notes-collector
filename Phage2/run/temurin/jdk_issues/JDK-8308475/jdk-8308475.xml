<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:37:36 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8308475] Make the thread dump files generated by jcmd Thread.dump_to_file jtreg failure handler action easily accessible</title>
                <link>https://bugs.openjdk.org/browse/JDK-8308475</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Right now when a test times out, the failure handler configurations in test/failure_handler/src/share/conf/common.properties runs (among many other commands), the &amp;quot;jcmd Thread.dump_to_file&amp;quot; command. This generates the thread dumps and writes it to a file. However, that generated file isn&amp;#39;t easily accessible through the processes.html file that gets generated by this timeout handler action.&lt;br/&gt;
&lt;br/&gt;
Now that we have been running some jobs in our CI with virtual threads, it would make debugging easier if these thread dump file are easily accessible (since these are the only thread dumps that display the virtual threads).</description>
                <environment></environment>
        <key id="5101384">JDK-8308475</key>
            <summary>Make the thread dump files generated by jcmd Thread.dump_to_file jtreg failure handler action easily accessible</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jpai">Jaikiran Pai</assignee>
                                    <reporter username="jpai">Jaikiran Pai</reporter>
                        <labels>
                            <label>noreg-other</label>
                    </labels>
                <created>Sun, 21 May 2023 01:40:35 -0700</created>
                <updated>Thu, 7 Nov 2024 20:27:25 -0800</updated>
                            <resolved>Thu, 25 May 2023 02:26:38 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>infrastructure</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14584409" author="dukebot" created="Thu, 25 May 2023 02:26:37 -0700"  >Changeset: 426ebf4f&lt;br/&gt;
Author:    Jaikiran Pai &amp;lt;&lt;a href=&apos;mailto:jpai@openjdk.org&apos;&gt;jpai@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-25 09:23:48 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/426ebf4fe930aa966dd5a0ebefbbeae107a8d223&quot;&gt;https://git.openjdk.org/jdk/commit/426ebf4fe930aa966dd5a0ebefbbeae107a8d223&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14583073" author="roboduke" created="Sun, 21 May 2023 02:24:58 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14071&quot;&gt;https://git.openjdk.org/jdk/pull/14071&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-21 09:19:47 +0000</comment>
                            <comment id="14583072" author="jpai" created="Sun, 21 May 2023 02:18:41 -0700"  >Right now we have the jdk.test.failurehandler.jtreg.GatherProcessInfoTimeoutHandler which is a com.sun.javatest.regtest.TimeoutHandler implementation. This implementation currently is configured through property files (test/failure_handler/src/share/conf/common.properties, test/failure_handler/src/share/conf/mac.properties and such), to orchestrate the commands that are run to gather various information after a test times out. These commands are called actions. The GatherProcessInfoTimeoutHandler runs each of these commands against the test process that timed out and generates a processes.html file. This HTML file has links to the output of each of these commands. For each such command, the processes.html has a link and the output generated by the command is made available inline on the page.&lt;br/&gt;
&lt;br/&gt;
This is suitable for most commands which generate the output on the STDOUT/STDERR when the command is run (consider &amp;quot;jstack &amp;lt;pid&amp;gt;&amp;quot; for example, which writes out the stacktrace to STDOUT). Such output is easily accessible right in the processes.html whenever the correspoding commands hyperlink is clicked.&lt;br/&gt;
&lt;br/&gt;
There however are certain set of commands which could be used as failure handler actions and which generate the output in a file. Consider the case of &amp;quot;jcmd &amp;lt;pid&amp;gt; Thread.dump_to_file &amp;lt;file&amp;gt;&amp;quot;. When this command is run it generates a file containing the pid&amp;#39;s thread dump. In its current form this file isn&amp;#39;t (easily) available for access whenever the failure handler completes. That is because the current GatherProcessInfoTimeoutHandler only has the ability to write out the text output generated by the command(s) to the processes.html.&lt;br/&gt;
&lt;br/&gt;
The proposed enhancement now introduces a new configuration that is made available for all commands to declare that upon successful completion of the command, the command is going to generate one or more files as artifacts. GatherProcessInfoTimeoutHandler upon seeing this declaration will, in addition to continue writing out the text output generated by these commands to processes.html, will also generate an inline hyperlink to each of these artifacts. The hyperlinks will be available and visible, right at the end of the command&amp;#39;s text output and these hyperlinks will point to the corresponding artifact that was generated by the command. &lt;br/&gt;
&lt;br/&gt;
An example of such usage is:&lt;br/&gt;
&lt;br/&gt;
jcmd.thread.dump_to_file.args=%p Thread.dump_to_file -format=json JavaThread.dump.%p&lt;br/&gt;
jcmd.thread.dump_to_file.params.successArtifacts=JavaThread.dump.%p&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;successArtifacts&amp;quot; is the new action parameter that is being introduced for failure handler actions. The value for this is a comma separated value of file paths. In the above example, the jcmd.thread.dump_to_file action alias is configured to generate the thread dump to a file called JavaThread.dump.%p (%p is the pid that will be replaced by GatherProcessInfoTimeoutHandler at runtime). If 12345 is the process id of the test process against which this timeout action will be run, then the successful completion of this command will generate the JavaThread.dump.12345 file. The GatherProcessInfoTimeoutHandler upon seeing the (new) successArtifacts declaration will create a inline hyperlink, in processes.html, to the JavaThread.dump.12345 file.&lt;br/&gt;
&lt;br/&gt;
While at this, an additional feature has also been introduced in the GatherProcessInfoTimeoutHandler implementation. A new %iterCount token has been introduced that can now be used in these configuration files. There are certain actions/commands that can already be configured to repeat more than once. For example, currently the jstack task is configured to run 6 times:&lt;br/&gt;
&lt;br/&gt;
jstack.app=jstack&lt;br/&gt;
jstack.args=-e -l %p&lt;br/&gt;
jstack.params.repeat=6&lt;br/&gt;
&lt;br/&gt;
to generate the threads dumps 6 times against the process.&lt;br/&gt;
There can be other commands which too might want to be repeated multiple times. For example, the &amp;quot;jcmd Thread.dump_to_file&amp;quot; command which too generates the thread dumps could be run more than once and each time you would want to write to a different file and yet have some representation in the name of the file to indicate what process that dump represents. You can now do that by using the %iterCount. Here&amp;#39;s an example, where the &amp;quot;jcmd &amp;lt;pid&amp;gt; Thread.dump_to_file &amp;lt;file&amp;gt;&amp;quot; is configured to repeat 6 times:&lt;br/&gt;
&lt;br/&gt;
jcmd.thread.dump_to_file.args=%p Thread.dump_to_file -format=json JavaThread.dump.%p.%iterCount&lt;br/&gt;
jcmd.thread.dump_to_file.params.repeat=6&lt;br/&gt;
jcmd.thread.dump_to_file.params.successArtifacts=JavaThread.dump.%p.%iterCount&lt;br/&gt;
&lt;br/&gt;
Notice the use of %iterCount in the example above. If 12345 is the pid of the test process that timed out, then the action above will repeat the &amp;quot;jcmd Thread.dump_to_file&amp;quot; command 6 times and will generate files JavaThread.dump.12345.0, JavaThread.dump.12345.1, JavaThread.dump.12345.2, so on through JavaThread.dump.12345.5. Addtionally, since the &amp;quot;successArtifacts&amp;quot; is configured to generate links to these generated files, the GatherProcessInfoTimeoutHandler will create hyperlinks to each of the JavaThread.dump.12345.0 through JavaThread.dump.12345.5 files. Note that %iterCount starts with the initial value of 0. Furthermore, the token %iterCount can also be used when the action isn&amp;#39;t configured to be repeated. In such cases, the token will be replaced with a value of 0.&lt;br/&gt;
&lt;br/&gt;
The implementaion of these changes is made available in this PR &lt;a href=&quot;https://github.com/openjdk/jdk/pull/14071&quot;&gt;https://github.com/openjdk/jdk/pull/14071&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5111085">JDK-8316946</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31lhn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>