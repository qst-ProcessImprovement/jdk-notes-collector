<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:55:52 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8329995] Restricted access to `/proc` can cause JFR initialization to crash</title>
                <link>https://bugs.openjdk.org/browse/JDK-8329995</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>We received a bug report from one of our customers about their application crashing when they enable Datadog profiler.&lt;br/&gt;
&lt;br/&gt;
The crash stack trace is as follows:&lt;br/&gt;
---&lt;br/&gt;
C  [libc.so.6+0xf53cd]  readdir+0x2d&lt;br/&gt;
V  [libjvm.so+0x6d5a20]  JfrOSInterface::initialize()+0xe0&lt;br/&gt;
V  [libjvm.so+0x6e4a32]  JfrRecorder::create_components()+0x1b2&lt;br/&gt;
V  [libjvm.so+0x6e4b9d]  JfrRecorder::create(bool)+0x1d&lt;br/&gt;
V  [libjvm.so+0x6ce717]  jfr_create_jfr+0x187&lt;br/&gt;
j  jdk.jfr.internal.JVM.createJFR(Z)Z+0&lt;br/&gt;
j  jdk.jfr.internal.JVM.createNativeJFR()V+3&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.&amp;lt;init&amp;gt;()V+48&lt;br/&gt;
j  jdk.jfr.FlightRecorder.getFlightRecorder()Ljdk/jfr/FlightRecorder;+25&lt;br/&gt;
j  jdk.jfr.Recording.&amp;lt;init&amp;gt;(Ljava/util/Map;)V+4&lt;br/&gt;
j  jdk.jfr.Recording.&amp;lt;init&amp;gt;()V+8&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
The crash is not specific to our profiler - any attempt to start JFR will trigger it.&lt;br/&gt;
The customer is using SELinux in a very restrictive setup. Eg. they deny access to `/proc` directory. &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The issue is that in os_perf_linux.cpp (&lt;a href=&quot;https://github.com/openjdk/jdk/blob/bab70193ddaae66a1f9039b0f1af1a0dc0e39cf9/src/hotspot/os/linux/os_perf_linux.cpp#L848&quot;&gt;https://github.com/openjdk/jdk/blob/bab70193ddaae66a1f9039b0f1af1a0dc0e39cf9/src/hotspot/os/linux/os_perf_linux.cpp#L848&lt;/a&gt;) an attempt to open  `/proc` dir is made but no error is expected. &lt;br/&gt;
Therefore, it that call fails, the `_dir` variable will be NULL and the subsequent call to `readdir(_dir)` (&lt;a href=&quot;https://github.com/openjdk/jdk/blob/bab70193ddaae66a1f9039b0f1af1a0dc0e39cf9/src/hotspot/os/linux/os_perf_linux.cpp#L829&quot;&gt;https://github.com/openjdk/jdk/blob/bab70193ddaae66a1f9039b0f1af1a0dc0e39cf9/src/hotspot/os/linux/os_perf_linux.cpp#L829&lt;/a&gt;) will crash.</description>
                <environment>&lt;p&gt;SELinux&lt;/p&gt;</environment>
        <key id="5126560">JDK-8329995</key>
            <summary>Restricted access to `/proc` can cause JFR initialization to crash</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbachorik">Jaroslav Bachor&#237;k</assignee>
                                    <reporter username="jbachorik">Jaroslav Bachor&#237;k</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>datadog-interest</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Tue, 9 Apr 2024 23:32:05 -0700</created>
                <updated>Mon, 30 Sep 2024 04:38:41 -0700</updated>
                            <resolved>Tue, 23 Apr 2024 05:17:34 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14679118" author="roboduke" created="Wed, 5 Jun 2024 04:04:24 -0700"  >[jdk11u-fix-request] Approval Request from Neethu Prasad&lt;br/&gt;
Backport fix to jdk11 to avoid JFR initialization crash when /proc is not accessible; changes are similar but does not apply cleanly due to usage of NULL keyword instead nullptr in older JDK versions.; All tests passed; Risk is low: there are no follow-up bug since mainline integration 2 months ago.</comment>
                            <comment id="14678465" author="roboduke" created="Mon, 3 Jun 2024 11:13:17 -0700"  >[jdk21u-fix-request] Approval Request from Neethu Prasad&lt;br/&gt;
Backport fix to jdk21 to avoid JFR initialization crash when /proc is not accessible; applies cleanly; All tests passed; Risk is low: there are no follow-up bug since mainline integration 2 months ago.</comment>
                            <comment id="14678463" author="roboduke" created="Mon, 3 Jun 2024 11:13:02 -0700"  >[jdk17u-fix-request] Approval Request from Neethu Prasad&lt;br/&gt;
Backport fix to jdk17 to avoid JFR initialization crash when /proc is not accessible; changes are similar but does not apply cleanly due to usage of NULL keyword instead nullptr in JDK 17.; All tests passed; Risk is low: there are no follow-up bug since mainline integration 2 months ago.</comment>
                            <comment id="14677934" author="roboduke" created="Fri, 31 May 2024 14:15:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2733&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2733&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 21:09:01 +0000</comment>
                            <comment id="14677933" author="roboduke" created="Fri, 31 May 2024 14:13:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2516&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2516&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 21:07:41 +0000</comment>
                            <comment id="14677862" author="roboduke" created="Fri, 31 May 2024 08:56:50 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/634&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/634&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 15:47:44 +0000</comment>
                            <comment id="14667414" author="dukebot" created="Tue, 23 Apr 2024 05:17:33 -0700"  >Changeset: a92ad039&lt;br/&gt;
Author:    Jaroslav Bachorik &amp;lt;&lt;a href=&apos;mailto:jbachorik@openjdk.org&apos;&gt;jbachorik@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-23 12:14:57 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a92ad03946d296510c8c2ac18278608e8032b3f3&quot;&gt;https://git.openjdk.org/jdk/commit/a92ad03946d296510c8c2ac18278608e8032b3f3&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14665075" author="roboduke" created="Sun, 14 Apr 2024 02:01:31 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18775&quot;&gt;https://git.openjdk.org/jdk/pull/18775&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-14 08:53:05 +0000</comment>
                            <comment id="14664354" author="jbachorik" created="Wed, 10 Apr 2024 04:27:54 -0700"  >Yes, but those places are probably doing the proper error management (eg. expecting `/proc` to be inaccessible) - otherwise the customer could not be running their application at all. But how it is, they are having issues only with JFR because the code in question will not set `_dir` variable (it will remain null) and then will try to use `_dir` in readdir() unconditionally, causing SIGSEG</comment>
                            <comment id="14664277" author="dholmes" created="Wed, 10 Apr 2024 00:27:49 -0700"  >There are other places in the VM that expect /proc access</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131021">JDK-8333550</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131230">JDK-8333726</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131600">JDK-8334039</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140076">JDK-8341022</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140082">JDK-8341026</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140089">JDK-8341034</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140141">JDK-8341073</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17019"><![CDATA[other]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35unf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>