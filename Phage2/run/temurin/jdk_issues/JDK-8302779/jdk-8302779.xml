<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:56:17 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302779] HelidonAppTest.java fails with &quot;assert(_cb == CodeCache::find_blob(pc())) failed: Must be the same&quot; or SIGSEGV</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302779</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK21 CI:&lt;br/&gt;
&lt;br/&gt;
applications/helidonapp/HelidonAppTest.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a log file snippet from the windows-x64 sighting:&lt;br/&gt;
&lt;br/&gt;
The tail of stress stdout is:&lt;br/&gt;
For random generator using seed: -2693253877557377341&lt;br/&gt;
To re-run test with same seed value please add &amp;quot;-Djdk.test.lib.random.seed=-2693253877557377341&amp;quot; to command line.&lt;br/&gt;
Stress process main method is started.&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (c:\\sb\\prod\\1676585231\\workspace\\open\\src\\hotspot\\cpu\\x86\\frame_x86.inline.hpp:385), pid=31248, tid=25848&lt;br/&gt;
#  assert(_cb == CodeCache::find_blob(pc())) failed: Must be the same&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+11) (fastdebug build 21-ea+11-LTS-809)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+11-LTS-809, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)&lt;br/&gt;
# Core dump will be written. Default location: C:\\sb\\prod\\1676617263\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_helidonapp_HelidonAppTest_java\\scratch\\0\\hs_err_pid31248.mdmp&lt;br/&gt;
#&lt;br/&gt;
# JFR recording file will be written. Location: C:\\sb\\prod\\1676617263\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_helidonapp_HelidonAppTest_java\\scratch\\0\\hs_err_pid31248.jfr&lt;br/&gt;
#&lt;br/&gt;
Unsupported internal testing APIs have been used.&lt;br/&gt;
&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# C:\\sb\\prod\\1676617263\\testoutput\\test-support\\jtreg_closed_test_hotspot_jtreg_applications_helidonapp_HelidonAppTest_java\\scratch\\0\\hs_err_pid31248.log&lt;br/&gt;
&lt;br/&gt;
[error occurred during error reporting (), id 0xe0000000, Internal Error (c:\\sb\\prod\\1676585231\\workspace\\open\\src\\hotspot\\share\\runtime\\mutex.cpp:57)]&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
----------System.err:(211/27663)*----------&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000019f1008db00):  VMThread &amp;quot;VM Thread&amp;quot; [stack: 0x000000358e100000,0x000000358e200000] [id=25848]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000358e100000,0x000000358e200000]&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0xbf7c01]  os::win32::platform_print_native_stack+0xf1  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0xe70ec0]  VMError::report+0x10c0  (vmError.cpp:813)&lt;br/&gt;
V  [jvm.dll+0xe72afe]  VMError::report_and_die+0x6ce  (vmError.cpp:1593)&lt;br/&gt;
V  [jvm.dll+0xe73244]  VMError::report_and_die+0x64  (vmError.cpp:1352)&lt;br/&gt;
V  [jvm.dll+0x576d86]  report_vm_error+0x96  (debug.cpp:181)&lt;br/&gt;
V  [jvm.dll+0x3fb6d1]  frame::sender_raw+0x1c1  (frame_x86.inline.hpp:385)&lt;br/&gt;
V  [jvm.dll+0x7ea899]  JavaThread::metadata_do+0xf9  (javaThread.cpp:1421)&lt;br/&gt;
V  [jvm.dll+0xdf5d24]  Threads::metadata_do+0xb4  (threads.cpp:1346)&lt;br/&gt;
V  [jvm.dll+0xb586ab]  MetadataOnStackMark::MetadataOnStackMark+0x11b  (metadataOnStackMark.cpp:66)&lt;br/&gt;
V  [jvm.dll+0x9ff326]  VM_RedefineClasses::doit+0x96  (jvmtiRedefineClasses.cpp:262)&lt;br/&gt;
V  [jvm.dll+0xe7a4f8]  VM_Operation::evaluate+0xc8  (vmOperations.cpp:72)&lt;br/&gt;
V  [jvm.dll+0xe7c0dc]  VMThread::evaluate_operation+0x9c  (vmThread.cpp:282)&lt;br/&gt;
V  [jvm.dll+0xe7c816]  VMThread::inner_execute+0x256  (vmThread.cpp:431)&lt;br/&gt;
V  [jvm.dll+0xe7cb80]  VMThread::run+0x150  (vmThread.cpp:175)&lt;br/&gt;
V  [jvm.dll+0xde5ea3]  Thread::call_run+0x253  (thread.cpp:229)&lt;br/&gt;
V  [jvm.dll+0xbf6538]  os::win32::thread_native_entry+0xb8  (os_windows.cpp:550)&lt;br/&gt;
C  [ucrtbase.dll+0x2268a]&lt;br/&gt;
C  [KERNEL32.DLL+0x17974]&lt;br/&gt;
C  [ntdll.dll+0x5a0b1]&lt;br/&gt;
&lt;br/&gt;
VM_Operation (0x000000358f0fed10): RedefineClasses, mode: safepoint, requested by thread 0x0000019f1114cad0&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Please note that the windows-x64 crash above is different than the&lt;br/&gt;
macosx-x64 crash below:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a log file snippet from the macosx-x64 crash:&lt;br/&gt;
&lt;br/&gt;
The tail of stress stdout is:&lt;br/&gt;
For random generator using seed: -2693253877557377341&lt;br/&gt;
To re-run test with same seed value please add &amp;quot;-Djdk.test.lib.random.seed=-2693253877557377341&amp;quot; to command line.&lt;br/&gt;
Stress process main method is started.&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x0000000000000000, pid=92554, tid=33539&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+11) (fastdebug build 21-ea+11-LTS-809)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+11-LTS-809, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, bsd-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# &lt;br/&gt;
[error occurred during error reporting (printing problematic frame), id 0xe0000000, Internal Error (/System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S84884/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/dd857bcb-0874-431c-8be1-131d6448d003/runs/23b8b037-5a50-4109-bca8-8b1719b592b5/workspace/open/src/hotspot/cpu/x86/frame_x86.inline.hpp:62)]&lt;br/&gt;
# Core dump will be written. Default location: core.92554&lt;br/&gt;
#&lt;br/&gt;
# JFR recording file will be written. Location: /System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S84886/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/4f5ae565-bb45-4d73-98fc-6d4c3b598aa6/runs/31169f6b-7075-4000-b0fa-67b165549523/testoutput/test-support/jtreg_closed_test_hotspot_jtreg_applications_helidonapp_HelidonAppTest_java/scratch/0/hs_err_pid92554.jfr&lt;br/&gt;
#&lt;br/&gt;
Unsupported internal testing APIs have been used.&lt;br/&gt;
&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S84886/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/4f5ae565-bb45-4d73-98fc-6d4c3b598aa6/runs/31169f6b-7075-4000-b0fa-67b165549523/testoutput/test-support/jtreg_closed_test_hotspot_jtreg_applications_helidonapp_HelidonAppTest_java/scratch/0/hs_err_pid92554.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
----------System.err:(188/31508)----------&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the calling thread&amp;#39;s stack (not much there):&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007fd27d31fe10):  JavaThread &amp;quot;ForkJoinPool-1-worker-6&amp;quot; daemon [_thread_in_Java, id=33539, stack(0x0000700003f2a000,0x000070000402a000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000700003f2a000,0x000070000402a000]&lt;br/&gt;
[error occurred during error reporting (printing stack bounds), id 0xe0000000, Internal Error (/System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S84884/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/dd857bcb-0874-431c-8be1-131d6448d003/runs/23b8b037-5a50-4109-bca8-8b1719b592b5/workspace/open/src/hotspot/cpu/x86/frame_x86.inline.hpp:62)]&lt;br/&gt;
&lt;br/&gt;
[error occurred during error reporting (printing native stack (with source info)), id 0xe0000000, Internal Error (/System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S84884/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/dd857bcb-0874-431c-8be1-131d6448d003/runs/23b8b037-5a50-4109-bca8-8b1719b592b5/workspace/open/src/hotspot/cpu/x86/frame_x86.inline.hpp:62)]&lt;br/&gt;
&lt;br/&gt;
Retrying call stack printing without source information...&lt;br/&gt;
&lt;br/&gt;
[error occurred during error reporting (retry printing native stack (no source info)), id 0xe0000000, Internal Error (/System/Volumes/Data/mesos/work_dir/slaves/91e16c40-06d4-468a-9fc3-7198a5bb7d5a-S84884/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/dd857bcb-0874-431c-8be1-131d6448d003/runs/23b8b037-5a50-4109-bca8-8b1719b592b5/workspace/open/src/hotspot/cpu/x86/frame_x86.inline.hpp:62)]&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x0000000000000000&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
In the windows-x64 failure, the VMThread crashed and in the&lt;br/&gt;
macosx-x64 failure, &amp;quot;ForkJoinPool-1-worker-6&amp;quot; crashed.&lt;br/&gt;
Both crashes happened in frame code.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m starting this bug in hotspot/runtime for initial triage.</description>
                <environment></environment>
        <key id="5094506">JDK-8302779</key>
            <summary>HelidonAppTest.java fails with &quot;assert(_cb == CodeCache::find_blob(pc())) failed: Must be the same&quot; or SIGSEGV</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="pchilanomate">Patricio Chilano Mateo</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>loom</label>
                            <label>problemlist</label>
                            <label>test-bigapps-Helidon</label>
                            <label>tier5</label>
                    </labels>
                <created>Fri, 17 Feb 2023 07:28:41 -0800</created>
                <updated>Thu, 16 Mar 2023 00:18:29 -0700</updated>
                            <resolved>Thu, 9 Mar 2023 14:55:23 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14565679" author="dukebot" created="Thu, 9 Mar 2023 14:55:21 -0800"  >Changeset: 8b740b46&lt;br/&gt;
Author:    Patricio Chilano Mateo &amp;lt;&lt;a href=&apos;mailto:pchilanomate@openjdk.org&apos;&gt;pchilanomate@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-09 22:53:44 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/8b740b46091c853c7cb66c361deda6dfbb2cedc8&quot;&gt;https://git.openjdk.org/jdk/commit/8b740b46091c853c7cb66c361deda6dfbb2cedc8&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14565155" author="roboduke" created="Tue, 7 Mar 2023 14:31:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12911&quot;&gt;https://git.openjdk.org/jdk/pull/12911&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-07 22:14:39 +0000</comment>
                            <comment id="14563665" author="pchilanomate" created="Tue, 28 Feb 2023 17:08:41 -0800"  >We have two enterspecial and doYield nmethods because the Continuation class was redefined. The old enterspecial/doYield are replaced by new methods during redefinition [1]. Those new methods will not have the entry points set though, since enterspecial/doYield are actually linked the first time they are resolved. After the redefinition, the next time a thread calls enterspecial/doYield the nmethods will be generated again. &lt;br/&gt;
&lt;br/&gt;
The issue is that ContinuationEntry::to_frame(), which is called to create the frame representing enterspecial, calls the frame constructor passing the value of a static local variable for the _cb argument, which is only set the first time the method is called, but it uses the updated _return_pc value from the new CodeBlob for the _pc argument. [2]&lt;br/&gt;
&lt;br/&gt;
Here is the sequence that leads to the crash:&lt;br/&gt;
&lt;br/&gt;
1 - Some virtual thread workload runs and enterspecial/doYield are resolved, i.e the nmethods are generated.&lt;br/&gt;
2-  Redefinition happens for class Continuation.&lt;br/&gt;
3 - Some virtual thread calls enterspecial/doYield so the nmethods are generated again (different CodeBlobs!)&lt;br/&gt;
4 - There is a deoptimization request that leads to a handshake against all JavaThreads.&lt;br/&gt;
5 - One of those JavaThreads is a carrier thread that has a virtual thread mounted so while walking the stack we eventually reach the enterspecial frame.&lt;br/&gt;
6 - To create the frame for enterspecial we call Continuation::continuation_bottom_sender(), which in turn calls ContinuationEntry::to_frame().&lt;br/&gt;
7 -  We create the enterspecial frame with _cb pointing to the old CodeBlob but a _pc associated with the new CodeBlob.&lt;br/&gt;
8 - Then when getting the sender of enterspecial, we hit the assert: assert(_cb == CodeCache::find_blob(pc()), &amp;quot;Must be the same&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
We don&amp;#39;t really need that &amp;quot;cb&amp;quot; static local because we already have _enter_special available. But in any case using the updated value for the CodeBlob is not enough, because it is clear now that set_enter() can be called concurrently with to_frame() (with redefinition in the picture).&lt;br/&gt;
Probably the best thing would be to prevent the Continuation class from being redefined, or at least keep&amp;#xA0;the already generated enterspecial/doYield nmethods.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/src/hotspot/share/prims/jvmtiRedefineClasses.cpp#L4280&quot;&gt;https://github.com/openjdk/jdk/blob/master/src/hotspot/share/prims/jvmtiRedefineClasses.cpp#L4280&lt;/a&gt; &lt;br/&gt;
[2] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/src/hotspot/cpu/x86/continuationEntry_x86.inline.hpp#L35&quot;&gt;https://github.com/openjdk/jdk/blob/master/src/hotspot/cpu/x86/continuationEntry_x86.inline.hpp#L35&lt;/a&gt;</comment>
                            <comment id="14563214" author="coleenp" created="Mon, 27 Feb 2023 14:02:15 -0800"  >From my crash log.  There are two.&lt;br/&gt;
&lt;br/&gt;
R8 =0x0000149b8d0d1790 is at entry_point+-432 in (nmethod*)0x0000149b8d0d1790&lt;br/&gt;
Compiled method (n/a)  440476 9109     n 0       jdk.internal.vm.Continuation::enterSpecial (native)&lt;br/&gt;
&amp;nbsp;total in heap  [0x0000149b8d0d1790,0x0000149b8d0d1ba0] = 1040&lt;br/&gt;
&amp;nbsp;relocation     [0x0000149b8d0d18f0,0x0000149b8d0d1940] = 80&lt;br/&gt;
&amp;nbsp;main code      [0x0000149b8d0d1940,0x0000149b8d0d1b80] = 576&lt;br/&gt;
&amp;nbsp;stub code      [0x0000149b8d0d1b80,0x0000149b8d0d1ba0] = 32&lt;br/&gt;
...&lt;br/&gt;
R15=0x0000149b8cc2b390 is at entry_point+-432 in (nmethod*)0x0000149b8cc2b390&lt;br/&gt;
Compiled method (n/a)  440476 2924     n 0       jdk.internal.vm.Continuation::enterSpecial (native)&lt;br/&gt;
&amp;nbsp;total in heap  [0x0000149b8cc2b390,0x0000149b8cc2b7a0] = 1040&lt;br/&gt;
&amp;nbsp;relocation     [0x0000149b8cc2b4f0,0x0000149b8cc2b540] = 80&lt;br/&gt;
&amp;nbsp;main code      [0x0000149b8cc2b540,0x0000149b8cc2b780] = 576&lt;br/&gt;
&amp;nbsp;stub code      [0x0000149b8cc2b780,0x0000149b8cc2b7a0] = 32&lt;br/&gt;
</comment>
                            <comment id="14562811" author="coleenp" created="Fri, 24 Feb 2023 13:30:29 -0800"  >&lt;br/&gt;
385	  CodeBlob* volatile pc_cb = CodeCache::find_blob(pc());&lt;br/&gt;
386	  assert(_cb == CodeCache::find_blob(pc()), &amp;quot;Must be the same&amp;quot;);&lt;br/&gt;
387	  if (_cb != NULL) return sender_for_compiled_frame(map);&lt;br/&gt;
&lt;br/&gt;
(gdb) print pc_cb&lt;br/&gt;
$1 = (CodeBlob * volatile) 0x149b8d0d1790&lt;br/&gt;
(gdb) print _cb&lt;br/&gt;
$2 = (CodeBlob *) 0x149b8cc2b390&lt;br/&gt;
(gdb) print *pc_cb&lt;br/&gt;
$3 = {_vptr.CodeBlob = 0x149ba5b449e8 &amp;lt;vtable for nmethod+16&amp;gt;, _code_begin = 0x149b8d0d1940 &amp;quot;A\200\277\240\005&amp;quot;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;_code_end = 0x149b8d0d1ba0 &amp;#39;\314&amp;#39; &amp;lt;repeats 199 times&amp;gt;, &amp;lt;incomplete sequence \314&amp;gt;..., _content_begin = 0x149b8d0d1940 &amp;quot;A\200\277\240\005&amp;quot;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;_data_end = 0x149b8d0d1ba0 &amp;#39;\314&amp;#39; &amp;lt;repeats 199 times&amp;gt;, &amp;lt;incomplete sequence \314&amp;gt;..., &lt;br/&gt;
&amp;nbsp;&amp;nbsp;_relocation_begin = 0x149b8d0d18f0 &amp;quot;\003|y\245\200\001\233\024\016\070\016\062\253\&amp;quot;\005\200\223\&amp;quot;\005\200\n2\005\200\003|x\245\260\372\233\024\025\070\016\062\003|x\245\260\372\233\024=8\016\062E2\016\062\f&amp;quot;, _relocation_end = 0x149b8d0d1940 &amp;quot;A\200\277\240\005&amp;quot;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;_oop_maps = 0x1471cc0096f0, _name = 0x149ba563ef7f &amp;quot;native nmethod&amp;quot;, _size = 1040, _header_size = 352, _frame_complete_offset = 251, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;_data_offset = 1040, _frame_size = 10, _caller_must_gc_arguments = false, _is_compiled = true, _type = compiler_none, _asm_remarks = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_remarks = 0x1471cc082870}, _dbg_strings = {_strings = 0x1471cc081c30}}&lt;br/&gt;
(gdb) print (char*)((nmethod*)pc_cb)-&amp;gt;_method-&amp;gt;_name-&amp;gt;_body&lt;br/&gt;
$4 = 0x149b840161d6 &amp;quot;enterSpecial&amp;quot;, &amp;#39;\361&amp;#39; &amp;lt;repeats 21 times&amp;gt;, &amp;lt;incomplete sequence \361&amp;gt;&lt;br/&gt;
(gdb) print (char*)((nmethod*)_cb)-&amp;gt;_method-&amp;gt;_name-&amp;gt;_body&lt;br/&gt;
$5 = 0x149b840161d6 &amp;quot;enterSpecial&amp;quot;, &amp;#39;\361&amp;#39; &amp;lt;repeats 21 times&amp;gt;, &amp;lt;incomplete sequence \361&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Why are we pointing to the wrong enterSpecial in the frame?  _pc points to one, _cb points to the other.</comment>
                            <comment id="14562757" author="coleenp" created="Fri, 24 Feb 2023 09:51:57 -0800"  >&amp;quot;assert(_cb == CodeCache::find_blob(pc())) failed&amp;quot;&lt;br/&gt;
(gdb) print _cb&lt;br/&gt;
$3 = (CodeBlob *) 0x151e08c5f990&lt;br/&gt;
(gdb) print CodeCache::find_blob(_pc)&lt;br/&gt;
$4 = (CodeBlob *) 0x151e09539d10&lt;br/&gt;
&lt;br/&gt;
They&amp;#39;re different but they have the same name&lt;br/&gt;
&lt;br/&gt;
(gdb) print (char*)((nmethod*)_cb)-&amp;gt;_method-&amp;gt;_name-&amp;gt;_body&lt;br/&gt;
$11 = 0x151e1c03d1d6 &amp;quot;enterSpecial&amp;quot;, &amp;#39;\361&amp;#39; &amp;lt;repeats 21 times&amp;gt;, &amp;lt;incomplete sequence \361&amp;gt;&lt;br/&gt;
(gdb) print (char*)((nmethod*)0x151e09539d10)-&amp;gt;_method-&amp;gt;_name-&amp;gt;_body&lt;br/&gt;
$12 = 0x151e1c03d1d6 &amp;quot;enterSpecial&amp;quot;, &amp;#39;\361&amp;#39; &amp;lt;repeats 21 times&amp;gt;, &amp;lt;incomplete sequence \361&amp;gt;&lt;br/&gt;
&lt;br/&gt;
(gdb) print *((nmethod*)_cb)&lt;br/&gt;
$15 = {&amp;lt;CompiledMethod&amp;gt; = {&amp;lt;CodeBlob&amp;gt; = {_vptr.CodeBlob = 0x151e209aa9e8 &amp;lt;vtable for nmethod+16&amp;gt;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_code_begin = 0x151e08c5fb60 &amp;quot;A\200\277\240\005&amp;quot;, _code_end = 0x151e08c5fee0 &amp;#39;\314&amp;#39; &amp;lt;repeats 32 times&amp;gt;, &amp;quot;\a&amp;quot;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_content_begin = 0x151e08c5fb60 &amp;quot;A\200\277\240\005&amp;quot;, _data_end = 0x151e08c5fee0 &amp;#39;\314&amp;#39; &amp;lt;repeats 32 times&amp;gt;, &amp;quot;\a&amp;quot;, &lt;br/&gt;
(gdb) print *((nmethod*)0x151e09539d10)&lt;br/&gt;
$14 = {&amp;lt;CompiledMethod&amp;gt; = {&amp;lt;CodeBlob&amp;gt; = {_vptr.CodeBlob = 0x151e209aa9e8 &amp;lt;vtable for nmethod+16&amp;gt;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_code_begin = 0x151e09539ee0 &amp;quot;A\200\277\240\005&amp;quot;, _code_end = 0x151e0953a260 &amp;#39;\314&amp;#39; &amp;lt;repeats 32 times&amp;gt;, &amp;quot;\006&amp;quot;, &lt;br/&gt;
&lt;br/&gt;
Does look like a loom problem.  I don&amp;#39;t know why there are two.&lt;br/&gt;
&lt;br/&gt;
it&amp;#39;s easy to reproduce.  Adding watchers.</comment>
                            <comment id="14562709" author="coleenp" created="Fri, 24 Feb 2023 08:21:00 -0800"  >V  [jvm.dll+0xbf7b71]  os::win32::platform_print_native_stack+0xf1  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0xe70ad0]  VMError::report+0x10c0  (vmError.cpp:813)&lt;br/&gt;
V  [jvm.dll+0xe7270e]  VMError::report_and_die+0x6ce  (vmError.cpp:1593)&lt;br/&gt;
V  [jvm.dll+0xe72e54]  VMError::report_and_die+0x64  (vmError.cpp:1352)&lt;br/&gt;
V  [jvm.dll+0x576d86]  report_vm_error+0x96  (debug.cpp:181)&lt;br/&gt;
V  [jvm.dll+0x3fb6d1]  frame::sender_raw+0x1c1  (frame_x86.inline.hpp:385)&lt;br/&gt;
V  [jvm.dll+0x5623c2]  monitors_on_stack+0x212  (continuationFreezeThaw.cpp:1471)&lt;br/&gt;
V  [jvm.dll+0x554500]  freeze_internal&amp;lt;Config&amp;lt;0,G1BarrierSet&amp;gt; &amp;gt;+0x360  (continuationFreezeThaw.cpp:1541)&lt;br/&gt;
V  [jvm.dll+0x5504ce]  freeze&amp;lt;Config&amp;lt;0,G1BarrierSet&amp;gt; &amp;gt;+0xee  (continuationFreezeThaw.cpp:234)&lt;br/&gt;
C  0x000001faeed7b007&lt;br/&gt;
&lt;br/&gt;
The stack looks messed up.  Also fails here.</comment>
                            <comment id="14561766" author="mseledtsov" created="Tue, 21 Feb 2023 11:14:15 -0800"  >ILW = HLM = P3</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                                <inwardlinks description="relates to">
                                                        </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102910" name="repro.zip" size="2684" author="pchilanomate" created="Tue, 7 Mar 2023 14:20:37 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30fxn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>