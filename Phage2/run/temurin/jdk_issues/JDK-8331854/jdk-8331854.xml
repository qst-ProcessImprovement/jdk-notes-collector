<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:01:56 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8331854] ubsan: copy.hpp:218:10: runtime error: addition of unsigned offset to 0x7fc2b4024518 overflowed to 0x7fc2b4024510</title>
                <link>https://bugs.openjdk.org/browse/JDK-8331854</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When building with ubsan, we see a number of overflows at this code location :&lt;br/&gt;
&lt;br/&gt;
/jdk/src/hotspot/share/utilities/copy.hpp:218:10: runtime error: addition of unsigned offset to 0x7fc2b4024518 overflowed to 0x7fc2b4024510&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x10b70896d in Copy::conjoint_words_to_higher(HeapWordImpl* const*, HeapWordImpl**, unsigned long) copy.hpp:218&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x10c4f78f1 in Node_Array::insert(unsigned int, Node*) node.cpp:2783&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x10b8a1386 in Block::insert_node(Node*, unsigned int) block.hpp:134&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x10c556630 in PhaseOutput::fill_buffer(C2_MacroAssembler*, unsigned int*) output.cpp:1792&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x10c552f6b in PhaseOutput::Output() output.cpp:367&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x10b9ba859 in Compile::Code_Gen() compile.cpp:3035&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x10b9b7cb1 in Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*) compile.cpp:896&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x10b859912 in C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) c2compiler.cpp:142&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x10b9dd4f1 in CompileBroker::invoke_compiler_on_method(CompileTask*) compileBroker.cpp:2305&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x10b9dc345 in CompileBroker::compiler_thread_loop() compileBroker.cpp:1963&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x10bfd5ebf in JavaThread::thread_main_inner() javaThread.cpp:760&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x10bfd5b62 in JavaThread::run() javaThread.cpp:745&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x10c9310d6 in Thread::call_run() thread.cpp:221&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x10c53ece4 in thread_native_entry(Thread*) os_bsd.cpp:598&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5128932">JDK-8331854</key>
            <summary>ubsan: copy.hpp:218:10: runtime error: addition of unsigned offset to 0x7fc2b4024518 overflowed to 0x7fc2b4024510</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbaesken">Matthias Baesken</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>c2</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>ubsan</label>
                    </labels>
                <created>Tue, 7 May 2024 07:58:08 -0700</created>
                <updated>Wed, 14 Aug 2024 23:56:04 -0700</updated>
                            <resolved>Wed, 5 Jun 2024 05:46:56 -0700</resolved>
                                    <version>21</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14695115" author="mbaesken" created="Thu, 1 Aug 2024 04:34:10 -0700"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14695112" author="roboduke" created="Thu, 1 Aug 2024 04:20:10 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/891&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/891&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-01 11:14:43 +0000</comment>
                            <comment id="14679153" author="dukebot" created="Wed, 5 Jun 2024 05:46:55 -0700"  >Changeset: 2c1b311f&lt;br/&gt;
Author:    Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-05 12:45:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/2c1b311f81319cee1af574526a91424c2577b78c&quot;&gt;https://git.openjdk.org/jdk/commit/2c1b311f81319cee1af574526a91424c2577b78c&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14678829" author="roboduke" created="Tue, 4 Jun 2024 09:50:42 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19541&quot;&gt;https://git.openjdk.org/jdk/pull/19541&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-04 14:11:42 +0000</comment>
                            <comment id="14677952" author="dlong" created="Fri, 31 May 2024 18:33:36 -0700"  >I missed the fact that conjoint_words_to_higher is inlined, so I&amp;#39;d go with your original check and return and don&amp;#39;t change the callers.</comment>
                            <comment id="14677791" author="mbaesken" created="Fri, 31 May 2024 05:14:14 -0700"  >should I adjust all conjoint_words_to_higher  callers or just the one revealed here by ubsan ?&lt;br/&gt;
From what I see, a byte_count == 0 would mean we do not copy anything.</comment>
                            <comment id="14677632" author="dlong" created="Thu, 30 May 2024 14:19:35 -0700"  >&amp;gt; So can we just add a check and return ?&lt;br/&gt;
&amp;gt; if (byte_count == 0) return; &lt;br/&gt;
&lt;br/&gt;
We could, as a quick fix, but I think it makes sense to fix the caller instead.  Then we can assert byte_count &amp;gt; 0 in conjoint_words_to_higher() or  assert_byte_count_ok().  Does it make sense for any copy routine to take a count of 0?</comment>
                            <comment id="14677173" author="mbaesken" created="Wed, 29 May 2024 04:37:27 -0700"  >&amp;gt;  I took a look at this, and I think the problem is actually that we are passing a 0 byte_count to conjoint_words_to_higher, which then does: ...&lt;br/&gt;
&lt;br/&gt;
A  byte_count  == 0 would mean we do not copy anything; this is at least how I understand the comment  &amp;quot;Copy word-aligned words from lower to higher addresses, not atomic on each word&amp;quot; .&lt;br/&gt;
So can we just add a check and return ?   &lt;br/&gt;
if (byte_count  == 0) return;</comment>
                            <comment id="14672503" author="chagedorn" created="Fri, 10 May 2024 03:04:28 -0700"  >Thanks Matthias, I think we need to fix it as Dean has suggested.</comment>
                            <comment id="14672500" author="mbaesken" created="Fri, 10 May 2024 02:55:57 -0700"  >[~chagedorn], I  tested with your fix proposed above but still get the ubsan error from copy.hpp conjoint_words_to_higher .</comment>
                            <comment id="14672493" author="chagedorn" created="Fri, 10 May 2024 02:29:40 -0700"  >[~dlong] I think you&amp;#39;re right - that looks suspicious and must be it! Feel free to take this over and propose a fix accordingly.</comment>
                            <comment id="14672080" author="dlong" created="Wed, 8 May 2024 12:36:17 -0700"  >[~chagedorn], I took a look at this, and I think the problem is actually that we are passing a 0 byte_count to conjoint_words_to_higher, which then does:&lt;br/&gt;
&lt;br/&gt;
218      from += count - 1;&lt;br/&gt;
&lt;br/&gt;
causing the ubsan error.</comment>
                            <comment id="14671958" author="chagedorn" created="Wed, 8 May 2024 08:14:33 -0700"  >ILW = Undefined behavior which is most likely harmless, called a lot during normal start up, no workaround = LHH = P4</comment>
                            <comment id="14671957" author="chagedorn" created="Wed, 8 May 2024 08:12:53 -0700"  >The issue is probably in the subtraction here:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Copy::conjoint_words_to_higher((HeapWord*)&amp;amp;_nodes[i], (HeapWord*)&amp;amp;_nodes[i + 1], ((_max - i - 1) * sizeof(Node*)));&lt;br/&gt;
&lt;br/&gt;
When i = 0 and we are executing i - 1 first, then we have an underflow. No compiler will probably do something fancy here but we should better fix it. We could just add braces: ((_max - i) - 1)&lt;br/&gt;
&lt;br/&gt;
We should probably also fix this in Node_Array::remove where we have the same subtraction.&lt;br/&gt;
&lt;br/&gt;
[~mbaesken] Can you build again with usban and see if that works?&lt;br/&gt;
&lt;br/&gt;
Patch:&lt;br/&gt;
diff --git a/src/hotspot/share/opto/node.cpp b/src/hotspot/share/opto/node.cpp&lt;br/&gt;
--- a/src/hotspot/share/opto/node.cpp	(revision 7a35f922f06c4649f9ea8a1fb1782b2a670311ce)&lt;br/&gt;
+++ b/src/hotspot/share/opto/node.cpp	(date 1715181029563)&lt;br/&gt;
@@ -2777,12 +2777,12 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (_nodes[_max - 1]) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grow(_max);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
-  Copy::conjoint_words_to_higher((HeapWord*)&amp;amp;_nodes[i], (HeapWord*)&amp;amp;_nodes[i + 1], ((_max - i - 1) * sizeof(Node*)));&lt;br/&gt;
+  Copy::conjoint_words_to_higher((HeapWord*)&amp;amp;_nodes[i], (HeapWord*)&amp;amp;_nodes[i + 1], (((_max - i) - 1) * sizeof(Node*)));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;_nodes[i] = n;&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;void Node_Array::remove(uint i) {&lt;br/&gt;
-  Copy::conjoint_words_to_lower((HeapWord*)&amp;amp;_nodes[i + 1], (HeapWord*)&amp;amp;_nodes[i], ((_max - i - 1) * sizeof(Node*)));&lt;br/&gt;
+  Copy::conjoint_words_to_lower((HeapWord*)&amp;amp;_nodes[i + 1], (HeapWord*)&amp;amp;_nodes[i], (((_max - i) - 1) * sizeof(Node*)));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;_nodes[_max - 1] = nullptr;&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5135852">JDK-8337741</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3698r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>