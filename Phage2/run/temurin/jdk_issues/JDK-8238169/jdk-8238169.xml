<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:22:21 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8238169] BasicDirectoryModel getDirectories and DoChangeContents.run can deadlock</title>
                <link>https://bugs.openjdk.org/browse/JDK-8238169</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Report by Adrian Nistor &amp;lt;&lt;a href=&apos;mailto:adrnisto@amazon.com&apos;&gt;adrnisto@amazon.com&lt;/a&gt;&amp;gt;.&lt;br/&gt;
&lt;br/&gt;
The code in BasicDirectoryModel.java acquires synchronization objects in different orders. One acquires DoChangeContents.this and then fileCache, the other acquires fileCache and then DoChangeContents.this.&lt;br/&gt;
&lt;br/&gt;
Acquiring synchronization objects in different orders can cause a circular wait (deadlock).&lt;br/&gt;
&lt;br/&gt;
Here is the first order: (1) first acquire DoChangeContents.this and then fileCache:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;enter public method run() at line 524&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;acquire synchronization on DoChangeContents.this at entry to run() because run() is a synchronized method --- see line 524&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;acquire synchronization on fileCache at line 528&lt;br/&gt;
&lt;br/&gt;
Here is the second order: (2) first acquire fileCache and then DoChangeContents.this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;enter public method renameFile() at line 176&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;acquire synchronization on fileCache at line 177&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;call validateFileCache() at line 179&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;call cancelRunnables() at line 157&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;call cancelRunnables(Vector) at line 397&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;call cancel() at line 392&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;acquire synchronization on DoChangeContents.this at entry to cancel() because cancel() is a synchronized method --- see line 520&lt;br/&gt;
&lt;br/&gt;
A straight-forward fix always acquires synchronization in only one order: first fileCache and then DoChangeContents.this. Swap the order of synchronized (this) and synchronized (fileCache) at lines 524 and 528.&lt;br/&gt;
&lt;br/&gt;
Removing the synchronized keyword from the method signature and replacing it with synchronized (this) ensures the same behavior.&lt;br/&gt;
&lt;br/&gt;
public void run() { &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; removed synchronized from here and moved it to synchronized (this) 2 lines below&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;synchronized(fileCache) {   &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; added this statement instead of the same statement 5 lines below&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;synchronized(this) { &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; added this instead of the synchronized keyword in the method signature 2 lines above&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (fetchID == fid &amp;amp;&amp;amp; doFire) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int remSize = (remFiles == null) ? 0 : remFiles.size();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int addSize = (addFiles == null) ? 0 : addFiles.size();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;synchronized(fileCache) {   &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; ***remove*** from here and moved it 5 lines above &lt;br/&gt;
... ... ... ... ... ... ... ... &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The downside is that the fileCache synchronized region is larger than before.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5009561">JDK-8238169</key>
            <summary>BasicDirectoryModel getDirectories and DoChangeContents.run can deadlock</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aivanov">Alexey Ivanov</assignee>
                                    <reporter username="phh">Paul Hohensee</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                    </labels>
                <created>Wed, 29 Jan 2020 07:37:51 -0800</created>
                <updated>Fri, 14 Jun 2024 09:35:03 -0700</updated>
                            <resolved>Thu, 21 Mar 2024 09:06:27 -0700</resolved>
                                    <version>11</version>
                    <version>13</version>
                    <version>14</version>
                    <version>15</version>
                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>23</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14681628" author="roboduke" created="Fri, 14 Jun 2024 00:41:07 -0700"  >[jdk11u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 11.0.25-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14681387" author="roboduke" created="Thu, 13 Jun 2024 06:00:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2768&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2768&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-13 12:53:53 +0000</comment>
                            <comment id="14680383" author="roboduke" created="Mon, 10 Jun 2024 23:29:23 -0700"  >[jdk17u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 17.0.13-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14680111" author="roboduke" created="Mon, 10 Jun 2024 02:31:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2558&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2558&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-10 09:25:57 +0000</comment>
                            <comment id="14679193" author="roboduke" created="Wed, 5 Jun 2024 07:11:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2539&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2539&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-05 14:06:32 +0000</comment>
                            <comment id="14677969" author="roboduke" created="Sat, 1 Jun 2024 02:02:35 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14677861" author="roboduke" created="Fri, 31 May 2024 08:54:05 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/633&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/633&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 15:43:11 +0000</comment>
                            <comment id="14667743" author="aivanov" created="Wed, 24 Apr 2024 08:20:36 -0700"  >Fix request: 22u&lt;br/&gt;
&lt;br/&gt;
This bug is resolved by the fix &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8325179&quot; title=&quot;Race in BasicDirectoryModel.validateFileCache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8325179&quot;&gt;&lt;strike&gt;JDK-8325179&lt;/strike&gt;&lt;/a&gt; which is already approved for 22u.&lt;br/&gt;
&lt;br/&gt;
Clean backport. Medium risk.&lt;br/&gt;
&lt;br/&gt;
Pull request: &lt;a href=&quot;https://github.com/openjdk/jdk22u/pull/164&quot;&gt;https://github.com/openjdk/jdk22u/pull/164&lt;/a&gt;</comment>
                            <comment id="14667742" author="roboduke" created="Wed, 24 Apr 2024 08:19:42 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/164&quot;&gt;https://git.openjdk.org/jdk22u/pull/164&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-24 15:12:52 +0000</comment>
                            <comment id="14659378" author="dukebot" created="Thu, 21 Mar 2024 09:06:26 -0700"  >Changeset: e66788c1&lt;br/&gt;
Author:    Alexey Ivanov &amp;lt;&lt;a href=&apos;mailto:aivanov@openjdk.org&apos;&gt;aivanov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-21 16:03:30 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e66788c16563d343f6cccd2807a251ccc6f9b64a&quot;&gt;https://git.openjdk.org/jdk/commit/e66788c16563d343f6cccd2807a251ccc6f9b64a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14654392" author="roboduke" created="Mon, 4 Mar 2024 12:31:20 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18111&quot;&gt;https://git.openjdk.org/jdk/pull/18111&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-04 20:21:30 +0000</comment>
                            <comment id="14654390" author="aivanov" created="Mon, 4 Mar 2024 12:27:22 -0800"  >This bug will be resolved by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8325179&quot; title=&quot;Race in BasicDirectoryModel.validateFileCache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8325179&quot;&gt;&lt;strike&gt;JDK-8325179&lt;/strike&gt;&lt;/a&gt; which removes the cancelRunnables method as well as removes the synchronized modifier from DoChangeContents.run.</comment>
                            <comment id="14643724" author="aivanov" created="Thu, 25 Jan 2024 04:14:41 -0800"  >&lt;a href=&quot;https://github.com/openjdk/jdk/pull/17462#issuecomment-1910079621&quot;&gt;https://github.com/openjdk/jdk/pull/17462#issuecomment-1910079621&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Does run need to be synchronised? Probably not, only reading the value of doFire needs to be.&lt;br/&gt;
&lt;br/&gt;
The following changeset should be enough to avoid the deadlock:&lt;br/&gt;
-        public synchronized void run() {&lt;br/&gt;
-            if (fetchID.get() == fid &amp;amp;&amp;amp; doFire) {&lt;br/&gt;
+        public void run() {&lt;br/&gt;
+            synchronized (this) {&lt;br/&gt;
+                if (fetchID.get() != fid || !doFire) {&lt;br/&gt;
+                    return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Then the body of the `if` is run outside `synchronized (this)` block.</comment>
                            <comment id="14314998" author="serb" created="Fri, 31 Jan 2020 12:25:47 -0800"  >Synchronization on &amp;quot;this&amp;quot; in DoChangeContents does not make any sense, the &amp;quot;run&amp;quot; method must be executed on one thread(EDT) only via SwingUtilities.invokeLater(), and &amp;quot;cancel&amp;quot; flag could be marked as volatile.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5128245">JDK-8331326</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128426">JDK-8331483</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130671">JDK-8333254</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130704">JDK-8333286</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130873">JDK-8333416</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131005">JDK-8333535</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131562">JDK-8334001</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131907">JDK-8334312</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5010078">JDK-8238568</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5120642">JDK-8325179</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2m42j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17312"><![CDATA[b16]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="206"><![CDATA[javax.swing]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>