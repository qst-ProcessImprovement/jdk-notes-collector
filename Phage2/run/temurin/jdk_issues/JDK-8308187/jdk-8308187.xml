<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:30:21 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8308187] jdi/EventSet/resume/resume008 failed with &quot;EventHandler&gt; Unexpected event: ThreadStartEvent in thread resume008-thread0&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8308187</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK21 CI:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/EventSet/resume/resume008/TestDescription.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(8/1157)----------&lt;br/&gt;
command: main nsk.jdi.EventSet.resume.resume008 -verbose -arch=linux-aarch64 -waittime=5 -debugee.vmkind=java -transport.address=dynamic -debugee.vmkeys=&amp;quot;-XX:MaxRAMPercentage=6.25 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S108105/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/a35a34da-4546-4075-bbe4-1fbd3aba8053/runs/a840585c-f648-465a-a467-55e3d3caec21/testoutput/test-support/jtreg_open_test_hotspot_jtreg_vmTestbase_nsk_jdi/tmp -Duse.JTREG_TEST_THREAD_FACTORY=Virtual -XX:+UseZGC -XX:+ZGenerational -XX:-VerifyContinuations&amp;quot;&lt;br/&gt;
reason: User specified action: run main/othervm nsk.jdi.EventSet.resume.resume008 -verbose -arch=${os.family}-${os.simpleArch} -waittime=5 -debugee.vmkind=java -transport.address=dynamic -debugee.vmkeys=&amp;quot;${test.vm.opts} ${test.java.opts}&amp;quot; &lt;br/&gt;
started: Tue May 16 07:46:35 UTC 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
Timeout information:&lt;br/&gt;
--- Timeout information end.&lt;br/&gt;
finished: Tue May 16 07:55:51 UTC 2023&lt;br/&gt;
elapsed time (seconds): 555.324&lt;br/&gt;
----------configuration:(0/0)----------&lt;br/&gt;
----------System.out:(116/8607)*----------&lt;br/&gt;
binder&amp;gt; VirtualMachineManager: version 21.0&lt;br/&gt;
binder&amp;gt; Finding connector: default&lt;br/&gt;
binder&amp;gt; LaunchingConnector:&lt;br/&gt;
binder&amp;gt;     name: com.sun.jdi.CommandLineLaunch&lt;br/&gt;
binder&amp;gt;     description: Launches target using Sun Java VM command line and attaches to it&lt;br/&gt;
binder&amp;gt;     transport: com.sun.tools.jdi.SunCommandLineLauncher$&lt;a href=&apos;mailto:2@250e0413&apos;&gt;2@250e0413&lt;/a&gt;&lt;br/&gt;
binder&amp;gt; Connector arguments:&lt;br/&gt;
binder&amp;gt;     main=nsk.share.MainWrapper Virtual nsk.jdi.EventSet.resume.resume008a \u0000-verbose\u0000 \u0000-arch=linux-aarch64\u0000 \u0000-waittime=5\u0000 \u0000-debugee.vmkind=java\u0000 \u0000-transport.address=dynamic\u0000 \u0000-debugee.vmkeys=&amp;quot;-XX:MaxRAMPercentage=6.25 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S108105/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/a35a34da-4546-4075-bbe4-1fbd3aba8053/runs/a840585c-f648-465a-a467-55e3d3caec21/testoutput/test-support/jtreg_open_test_hotspot_jtreg_vmTestbase_nsk_jdi/tmp -Duse.JTREG_TEST_THREAD_FACTORY=Virtual -XX:+UseZGC -XX:+ZGenerational -XX:-VerifyContinuations&amp;quot;\u0000 \u0000-pipe.port=41627\u0000&lt;br/&gt;
binder&amp;gt;     includevirtualthreads=y&lt;br/&gt;
binder&amp;gt;     quote=\u0000&lt;br/&gt;
binder&amp;gt;     home=/opt/mach5/mesos/work_dir/jib-master/install/jdk-21+23-1950/linux-aarch64-debug.jdk/jdk-21/fastdebug&lt;br/&gt;
binder&amp;gt;     vmexec=java&lt;br/&gt;
binder&amp;gt;     suspend=true&lt;br/&gt;
binder&amp;gt;     options=-XX:MaxRAMPercentage=6.25 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S108105/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/a35a34da-4546-4075-bbe4-1fbd3aba8053/runs/a840585c-f648-465a-a467-55e3d3caec21/testoutput/test-support/jtreg_open_test_hotspot_jtreg_vmTestbase_nsk_jdi/tmp -Duse.JTREG_TEST_THREAD_FACTORY=Virtual -XX:+UseZGC -XX:+ZGenerational -XX:-VerifyContinuations -Djdk.virtualThreadScheduler.parallelism=15&lt;br/&gt;
binder&amp;gt; Launching debugee&lt;br/&gt;
binder&amp;gt; Waiting for VM initialized&lt;br/&gt;
Initial VMStartEvent received: VMStartEvent in thread main&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:2@6f0d83fe&apos;&gt;2@6f0d83fe&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:3@7a9567e9&apos;&gt;3@7a9567e9&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:4@159f03a3&apos;&gt;4@159f03a3&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:5@f07cc68&apos;&gt;5@f07cc68&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:6@704c81a&apos;&gt;6@704c81a&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:1@a8292df&apos;&gt;1@a8292df&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: enabling remove of listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:7@56c4697&apos;&gt;7@56c4697&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:7@56c4697&apos;&gt;7@56c4697&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:1@4ec73d65&apos;&gt;1@4ec73d65&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:8@244e750a&apos;&gt;8@244e750a&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: vm.resume called&lt;br/&gt;
EventHandler&amp;gt; Received event set with policy = SUSPEND_EVENT_THREAD&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: Received event set: event set, policy:1, count:1 = {ClassPrepareEvent in thread main}&lt;br/&gt;
EventHandler&amp;gt; Event: ClassPrepareEventImpl req class prepare request  (enabled)&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: Received event(ClassPrepareEvent in thread main) for request(class prepare request  (enabled))&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:7@56c4697&apos;&gt;7@56c4697&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:1@4ec73d65&apos;&gt;1@4ec73d65&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:8@244e750a&apos;&gt;8@244e750a&lt;/a&gt;&lt;br/&gt;
debugger&amp;gt; Received ClassPrepareEvent for debuggee class: nsk.jdi.EventSet.resume.resume008a&lt;br/&gt;
binder&amp;gt; Breakpoint set:&lt;br/&gt;
	breakpoint request nsk.jdi.EventSet.resume.resume008a:77 (disabled)&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.TestDebuggerType1$&lt;a href=&apos;mailto:1@17cf5f50&apos;&gt;1@17cf5f50&lt;/a&gt;&lt;br/&gt;
debugger&amp;gt; TESTING BEGINS&lt;br/&gt;
debugger&amp;gt; RESUME DEBUGGEE VM&lt;br/&gt;
debugger&amp;gt; shouldRunAfterBreakpoint: entered&lt;br/&gt;
debugger&amp;gt; shouldRunAfterBreakpoint: waiting for breakpoint event during 1 sec.&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: debuggee started!&lt;br/&gt;
EventHandler&amp;gt; Received event set with policy = SUSPEND_ALL&lt;br/&gt;
EventHandler&amp;gt; Event: BreakpointEventImpl req breakpoint request nsk.jdi.EventSet.resume.resume008a:77 (enabled)&lt;br/&gt;
debugger&amp;gt; Received communication breakpoint event.&lt;br/&gt;
debugger&amp;gt; shouldRunAfterBreakpoint: received breakpoint event.&lt;br/&gt;
debugger&amp;gt; shouldRunAfterBreakpoint: exited with true.&lt;br/&gt;
debugger&amp;gt; :::::: case: # 0&lt;br/&gt;
debugger&amp;gt; ......waiting for new ThreadStartEvent : 0&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: enabling remove of listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:7@50953e07&apos;&gt;7@50953e07&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:7@50953e07&apos;&gt;7@50953e07&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:1@ad783f2&apos;&gt;1@ad783f2&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Adding listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:8@4afc6ae0&apos;&gt;8@4afc6ae0&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: vm.resume called&lt;br/&gt;
EventHandler&amp;gt; Received event set with policy = SUSPEND_NONE&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: Received event set: event set, policy:0, count:1 = {ThreadStartEvent in thread Cleaner-1}&lt;br/&gt;
EventHandler&amp;gt; Event: ThreadStartEventImpl req thread start request  (enabled)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee:   &amp;#39;run&amp;#39;: enter  :: threadName == resume008-thread0&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee:   &amp;#39;run&amp;#39;: exit   :: threadName == resume008-thread0&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: Received event(ThreadStartEvent in thread Cleaner-1) for request(thread start request  (enabled))&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:7@50953e07&apos;&gt;7@50953e07&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Received event set with policy = SUSPEND_NONE&lt;br/&gt;
EventHandler&amp;gt; waitForRequestedEventCommon: Received event set: event set, policy:0, count:1 = {ThreadStartEvent in thread resume008-thread0}&lt;br/&gt;
EventHandler&amp;gt; Event: ThreadStartEventImpl req thread start request  (enabled)&lt;br/&gt;
# ERROR: EventHandler&amp;gt; Unexpected event: ThreadStartEvent in thread resume008-thread0&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: EventHandler&amp;gt; Unexpected event: ThreadStartEvent in thread resume008-thread0&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:431)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:402)&lt;br/&gt;
	at nsk.share.jdi.EventHandler.complain(EventHandler.java:121)&lt;br/&gt;
	at nsk.share.jdi.EventHandler$2.eventReceived(EventHandler.java:300)&lt;br/&gt;
	at nsk.share.jdi.EventHandler.run(EventHandler.java:176)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1583)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: waitForTestCase: 0&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:1@ad783f2&apos;&gt;1@ad783f2&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:8@4afc6ae0&apos;&gt;8@4afc6ae0&lt;/a&gt;&lt;br/&gt;
debugger&amp;gt;        got new event: ThreadStartEvent in thread Cleaner-1&lt;br/&gt;
# ERROR: debugger&amp;gt; ERROR: ThreadStartEvent is not for expected thread:  Cleaner-1&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: debugger&amp;gt; ERROR: ThreadStartEvent is not for expected thread:  Cleaner-1&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:431)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:402)&lt;br/&gt;
	at nsk.share.jdi.TestDebuggerType1.complain(TestDebuggerType1.java:78)&lt;br/&gt;
	at nsk.share.jdi.TestDebuggerType1.setFailedStatus(TestDebuggerType1.java:85)&lt;br/&gt;
	at nsk.jdi.EventSet.resume.resume008.testRun(resume008.java:146)&lt;br/&gt;
	at nsk.share.jdi.TestDebuggerType1.runThis(TestDebuggerType1.java:119)&lt;br/&gt;
	at nsk.jdi.EventSet.resume.resume008.run(resume008.java:84)&lt;br/&gt;
	at nsk.jdi.EventSet.resume.resume008.main(resume008.java:79)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:311)&lt;br/&gt;
debugger&amp;gt; TESTING ENDS&lt;br/&gt;
debugger&amp;gt; Waiting for debuggee&amp;#39;s exit...&lt;br/&gt;
EventHandler&amp;gt; waitForVMDisconnect&lt;br/&gt;
Timeout refired 480 times&lt;br/&gt;
EventHandler&amp;gt; Received event set with policy = SUSPEND_NONE&lt;br/&gt;
EventHandler&amp;gt; Event: VMDisconnectEventImpl req null&lt;br/&gt;
EventHandler&amp;gt; receieved VMDisconnect&lt;br/&gt;
EventHandler&amp;gt; Removing listener nsk.share.jdi.EventHandler$&lt;a href=&apos;mailto:5@f07cc68&apos;&gt;5@f07cc68&lt;/a&gt;&lt;br/&gt;
EventHandler&amp;gt; finished&lt;br/&gt;
EventHandler&amp;gt; waitForVMDisconnect: done&lt;br/&gt;
# ERROR: debugger&amp;gt; Event handler returned unexpected exit status: 2&lt;br/&gt;
# ERROR: debugger&amp;gt; Debuggee returned unexpected exit status: 134&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
#&amp;gt;  SUMMARY: Following errors occured&lt;br/&gt;
#&amp;gt;      during test execution:&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
# ERROR: EventHandler&amp;gt; Unexpected event: ThreadStartEvent in thread resume008-thread0&lt;br/&gt;
# ERROR: debugger&amp;gt; ERROR: ThreadStartEvent is not for expected thread:  Cleaner-1&lt;br/&gt;
# ERROR: debugger&amp;gt; Event handler returned unexpected exit status: 2&lt;br/&gt;
# ERROR: debugger&amp;gt; Debuggee returned unexpected exit status: 134&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(41/9023)*----------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
This test failure reports a couple of ERRORs:&lt;br/&gt;
&lt;br/&gt;
ERROR: EventHandler&amp;gt; Unexpected event: ThreadStartEvent in thread resume008-thread0&lt;br/&gt;
&lt;br/&gt;
ERROR: debugger&amp;gt; ERROR: ThreadStartEvent is not for expected thread:  Cleaner-1&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5101025">JDK-8308187</key>
            <summary>jdi/EventSet/resume/resume008 failed with &quot;EventHandler&gt; Unexpected event: ThreadStartEvent in thread resume008-thread0&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>genzgc</label>
                            <label>intermittent</label>
                            <label>loom</label>
                            <label>noreg-self</label>
                            <label>tier5</label>
                    </labels>
                <created>Tue, 16 May 2023 06:39:53 -0700</created>
                <updated>Sat, 27 May 2023 06:38:31 -0700</updated>
                            <resolved>Thu, 18 May 2023 15:10:30 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14582751" author="cjplummer" created="Thu, 18 May 2023 17:49:01 -0700"  >The cause was &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8305083&quot; title=&quot;Remove finalize() from test/hotspot/jtreg/vmTestbase/nsk/share/ and /jpda that are used in serviceability/dcmd/framework tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8305083&quot;&gt;&lt;strike&gt;JDK-8305083&lt;/strike&gt;&lt;/a&gt;, which added the use of the Cleaner class instead of finalize() for this test suite. I missed it in my scan of potential changes since it dates back 6 days, but the failures started only 3 days ago. I just didn&amp;#39;t look far enough back.</comment>
                            <comment id="14582729" author="dukebot" created="Thu, 18 May 2023 15:10:29 -0700"  >Changeset: 4a6d6d5a&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-18 22:08:10 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4a6d6d5a59442c10a1761ce0566aab57f4c4f323&quot;&gt;https://git.openjdk.org/jdk/commit/4a6d6d5a59442c10a1761ce0566aab57f4c4f323&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14582656" author="roboduke" created="Thu, 18 May 2023 09:50:33 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14048&quot;&gt;https://git.openjdk.org/jdk/pull/14048&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-18 15:49:22 +0000</comment>
                            <comment id="14582630" author="cjplummer" created="Thu, 18 May 2023 08:18:24 -0700"  >Looks like this isn&amp;#39;t just ZGC, but even these non-ZGC failures are failing because of the creation of the Cleaner-1 thread. Something changed 3-4 days ago since there have been 4 sightings in just the past 2-3 days. I looked at the change history during that time, and didn&amp;#39;t see anything that looked Cleaner related.</comment>
                            <comment id="14582436" author="cjplummer" created="Wed, 17 May 2023 12:20:09 -0700"  >Both of the failures so far have been with the new generational ZGC. I think I know why. &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8289765&quot; title=&quot;JDI EventSet/resume/resume008 failed with &amp;quot;ERROR: suspendCounts don&amp;#39;t match for : VirtualThread-unparker&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8289765&quot;&gt;&lt;strike&gt;JDK-8289765&lt;/strike&gt;&lt;/a&gt; fixed this type of issue by improving the filtered() method, which filters out ThreadStartEvents for threads we want to ignore:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static boolean filtered(Event event) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (event instanceof ThreadStartEvent) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ThreadStartEvent tse = (ThreadStartEvent)event;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String tname = tse.thread().name();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String knownThreads[] = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;VM JFR Buffer Thread&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;JFR request timer&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;Reference Handler&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;VirtualThread-unparker&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;Common-Cleaner&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;FinalizerThread&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;ForkJoinPool&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (String s : knownThreads) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (tname.startsWith(s)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Note that it filters &amp;quot;Common-Cleaner&amp;quot; and note that in the log we have:&lt;br/&gt;
&lt;br/&gt;
# ERROR: debugger&amp;gt; ERROR: ThreadStartEvent is not for expected thread:  Cleaner-1&lt;br/&gt;
&lt;br/&gt;
So it looks like generational ZGC has introduced a new thread name that we need to filter.</comment>
                            <comment id="14581927" author="cjplummer" created="Tue, 16 May 2023 08:17:46 -0700"  >This is probably related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8289765&quot; title=&quot;JDI EventSet/resume/resume008 failed with &amp;quot;ERROR: suspendCounts don&amp;#39;t match for : VirtualThread-unparker&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8289765&quot;&gt;&lt;strike&gt;JDK-8289765&lt;/strike&gt;&lt;/a&gt;, which attempted to fix issues with unexpected ThreadStartEvents, but probably isn&amp;#39;t perfect. As I stated in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8289765&quot; title=&quot;JDI EventSet/resume/resume008 failed with &amp;quot;ERROR: suspendCounts don&amp;#39;t match for : VirtualThread-unparker&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8289765&quot;&gt;&lt;strike&gt;JDK-8289765&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;This bug has proved very hard to fix. The synchronization is fragile, and there is a lot of common library code involved with the event handling, which really makes it hard to special case these unexpected ThreadStartEvent&amp;quot;&lt;br/&gt;
&lt;br/&gt;
So it&amp;#39;s not surprising that there might be a hole in the fix. Note I see in the output:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;debugger&amp;gt; got new event: ThreadStartEvent in thread Cleaner-1&lt;br/&gt;
# ERROR: debugger&amp;gt; ERROR: ThreadStartEvent is not for expected thread: Cleaner-1 &lt;br/&gt;
&lt;br/&gt;
So it seems like an unexpected ThreadStartEvent has been received (actually the test is now suppose to expect these &amp;quot;unexpected&amp;quot; ThreadStartEvent), and the test did not properly filter it out.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5097293">JDK-8305083</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5078548">JDK-8289765</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31jfv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17436"><![CDATA[b24]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>