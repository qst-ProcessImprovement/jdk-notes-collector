<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:56:43 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8286876] NMT.test_unaliged_block_address_vm_assert fails if using clang toolchain</title>
                <link>https://bugs.openjdk.org/browse/JDK-8286876</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>`make CONF=debug test TEST=&amp;quot;gtest:NMT.test_unaliged_block_address_vm_assert&amp;quot;` fails if using the clang toolchain (`--with-toolchain-type=clang`) to build openjdk.&lt;br/&gt;
&lt;br/&gt;
ENV: Clang 14</description>
                <environment></environment>
        <key id="5075070">JDK-8286876</key>
            <summary>NMT.test_unaliged_block_address_vm_assert fails if using clang toolchain</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jsjolen">Johan Sj&#246;len</assignee>
                                    <reporter username="ayang">Albert Yang</reporter>
                        <labels>
                            <label>nmt</label>
                    </labels>
                <created>Tue, 17 May 2022 05:57:15 -0700</created>
                <updated>Wed, 8 Feb 2023 23:36:33 -0800</updated>
                            <resolved>Thu, 2 Feb 2023 02:16:43 -0800</resolved>
                                    <version>19</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14556858" author="dukebot" created="Thu, 2 Feb 2023 02:16:41 -0800"  >Changeset: 7b6ac41a&lt;br/&gt;
Author:    Johan Sj&amp;#xF6;len &amp;lt;&lt;a href=&apos;mailto:jsjolen@openjdk.org&apos;&gt;jsjolen@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-02 10:14:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/7b6ac41ab115f0fb715d32b19bec184ed53d0cd7&quot;&gt;https://git.openjdk.org/jdk/commit/7b6ac41ab115f0fb715d32b19bec184ed53d0cd7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14541994" author="roboduke" created="Thu, 1 Dec 2022 11:59:17 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11465&quot;&gt;https://git.openjdk.org/jdk/pull/11465&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-01 19:47:16 +0000</comment>
                            <comment id="14541550" author="JIRAUSER20009" created="Wed, 30 Nov 2022 04:41:04 -0800"  >Wisdom of Robbin: You shall not cast a pointer to one with a different alignment. So MallocTracker::malloc_header&amp;#39;s code ought to be problematic in itself.</comment>
                            <comment id="14540608" author="JIRAUSER20009" created="Mon, 28 Nov 2022 06:02:19 -0800"  >Switching to reinterpret_cast&amp;lt;&amp;gt; produces the same code on x64 for the reproduction given, quoting &lt;a href=&quot;https://eel.is/c++draft/expr.reinterpret.cast&quot;&gt;https://eel.is/c++draft/expr.reinterpret.cast&lt;/a&gt; :&lt;br/&gt;
&lt;br/&gt;
&amp;quot;A pointer can be explicitly converted to any integral type large enough to hold all values of its type. The mapping function is implementation-defined.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Doesn&amp;#39;t the reproduction depend on alignment? Clang knows that A must be aligned, and therefore it knows the lowest 3 bits are 0, and therefore it will always = to true.</comment>
                            <comment id="14496516" author="ayang" created="Tue, 17 May 2022 05:58:17 -0700"  >I narrowed it down to `is_aligned(this, sizeof(uint64_t))` in `MallocHeader::check_block_integrity`. In the generated assembly, this call is essentially optimized to be `true`.&lt;br/&gt;
&lt;br/&gt;
A minimal C++ snippet reproducer:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
#include &amp;lt;cstdint&amp;gt;&lt;br/&gt;
&lt;br/&gt;
struct A {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;const uint64_t _size;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;const uint32_t _mst_marker;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;const uint8_t _flags;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;const uint8_t _unused;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;uint16_t _canary;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;bool f();&lt;br/&gt;
};&lt;br/&gt;
&lt;br/&gt;
bool A::f() {&lt;br/&gt;
&amp;nbsp;return ((uintptr_t)this &amp;amp; 7) == 0;&lt;br/&gt;
};&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
$ clang++ -c -O tmp.cc; objdump -M intel --source tmp.o &amp;gt; tmp.s&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The generated assembly looks sth like:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
0000000000000000 &amp;lt;_ZN1A1fEv&amp;gt;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;0:	b0 01                	mov    al,0x1  ; &amp;lt;---- here &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;2:	c3                   	ret    &lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
According to &lt;a href=&quot;https://eel.is/c++draft/expr.static.cast:&quot;&gt;https://eel.is/c++draft/expr.static.cast:&lt;/a&gt;&lt;br/&gt;
&amp;quot;&amp;quot;&amp;quot;&lt;br/&gt;
A prvalue of type &#8220;pointer to cv1 void&#8221; can be converted to a prvalue of type &#8220;pointer to cv2 T&#8221;, where T is an object type and cv2 is the same cv-qualification as, or greater cv-qualification than, cv1.&lt;br/&gt;
If the original pointer value represents the address A of a byte in memory and A does not satisfy the alignment requirement of T, then the resulting pointer value is unspecified.&lt;br/&gt;
&amp;quot;&amp;quot;&amp;quot;&lt;br/&gt;
&lt;br/&gt;
I believe `(MallocHeader*)((char*)memblock - sizeof(MallocHeader));` in `MallocTracker::malloc_header` can be problematic.</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2x5b7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>