<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:26:20 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301612] OopLoadProxy constructor should be explicit</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301612</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The implicit conversion via constructor `OopLoadProxy(P* addr)` can cause problems when using the access API and nullptr. &lt;br/&gt;
For example code like &lt;br/&gt;
`oop o = (_obj == NULL) ? nullptr : NativeAccess&amp;lt;&amp;gt;::oop_load(_obj);`&lt;br/&gt;
will compile but is wrong and will crash. &lt;br/&gt;
This is because it will be interpreted as:&lt;br/&gt;
`oop o = static_cast&amp;lt;oop&amp;gt;((_obj == NULL) ? OopLoadProxy(nullptr) : NativeAccess&amp;lt;&amp;gt;::oop_load(_obj));`&lt;br/&gt;
while the intent of the programmer probably was:&lt;br/&gt;
`oop o = (_obj == NULL) ? (oop)nullptr : NativeAccess&amp;lt;&amp;gt;::oop_load(_obj);`&lt;br/&gt;
or more explicitly:&lt;br/&gt;
`oop o = (_obj == NULL) ? static_cast&amp;lt;oop&amp;gt;(nullptr) : static_cast&amp;lt;oop&amp;gt;(NativeAccess&amp;lt;&amp;gt;::oop_load(_obj));`&lt;br/&gt;
&lt;br/&gt;
Marking `OopLoadProxy(P* addr)` explicit will make this example, and similar code not compile. &lt;br/&gt;
&lt;br/&gt;
A side note:&lt;br/&gt;
OopLoadProxy objects have more gotchas (like evaporating loads), and is not the most ergonomic requiring explicit casts to work and compile in both debug and release. So there are probably more things that can be improved. </description>
                <environment></environment>
        <key id="5093128">JDK-8301612</key>
            <summary>OopLoadProxy constructor should be explicit</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aboldtch">Axel Boldt-Christmas</assignee>
                                    <reporter username="aboldtch">Axel Boldt-Christmas</reporter>
                        <labels>
                            <label>cleanup</label>
                    </labels>
                <created>Wed, 1 Feb 2023 04:59:27 -0800</created>
                <updated>Wed, 8 Feb 2023 23:37:08 -0800</updated>
                            <resolved>Thu, 2 Feb 2023 06:06:37 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14556904" author="dukebot" created="Thu, 2 Feb 2023 06:06:36 -0800"  >Changeset: 21c1afbc&lt;br/&gt;
Author:    Axel Boldt-Christmas &amp;lt;&lt;a href=&apos;mailto:aboldtch@openjdk.org&apos;&gt;aboldtch@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-02 14:04:22 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/21c1afbc3229e898146022935bc589bcf95aa1f7&quot;&gt;https://git.openjdk.org/jdk/commit/21c1afbc3229e898146022935bc589bcf95aa1f7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14556562" author="roboduke" created="Wed, 1 Feb 2023 06:47:42 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12364&quot;&gt;https://git.openjdk.org/jdk/pull/12364&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-01 14:41:35 +0000</comment>
                            <comment id="14556560" author="JIRAUSER20303" created="Wed, 1 Feb 2023 06:45:29 -0800"  >Adding OopLoadProxy(std::nullptr_t) = delete; has the same effect. But there should never be a case where we rely on / need implicit conversion of pointers to an OopLoadProxy. </comment>
                            <comment id="14556558" author="kbarrett" created="Wed, 1 Feb 2023 06:33:51 -0800"  >Would adding an overload for `OopLoadProxy(std::nullptr_t)` help, instead of making the conversion constructor explicit?</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i307fn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>