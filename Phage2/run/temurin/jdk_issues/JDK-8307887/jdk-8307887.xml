<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:59:13 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307887] (fs) Files.createSymbolicLink throws less specific exception when in developer mode and file already exists</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307887</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Windows 10 &amp;gt; 1703&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
The solution for issue &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8221852&quot; title=&quot;SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE should be selected at runtime, not build time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8221852&quot;&gt;&lt;strike&gt;JDK-8221852&lt;/strike&gt;&lt;/a&gt; prevents the actual error from symlink creation from being relayed to the user in the mentioned environment.&lt;br/&gt;
&lt;br/&gt;
The exception from the second attempt at symlink creation, the one with the flag allowing symlinks without elevation, is discarded unconditionally. However, Windows *appears* to check the flag/privileges situation first, and only then looks into whether the target already exists.&lt;br/&gt;
&lt;br/&gt;
Thus, the exception from the second attempt should only be discarded if it is either ERROR_PRIVILEGE_NOT_HELD (developer mode not enabled) or ERROR_INVALID_PARAMETER (flag not supported). In any other case, the new error should be relayed to the calling code instead of the original one.&lt;br/&gt;
&lt;br/&gt;
See problematic change at: &lt;a href=&quot;https://github.com/openjdk/jdk/commit/5952e2bc6496e349874d9f8748b1bfda9a7e4cc4#diff-70b8da266a5d031447f4f390981470464c400a0b012591788f17f19ca19d336fR948&quot;&gt;https://github.com/openjdk/jdk/commit/5952e2bc6496e349874d9f8748b1bfda9a7e4cc4#diff-70b8da266a5d031447f4f390981470464c400a0b012591788f17f19ca19d336fR948&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I also checked in the most recent jdk-21-ea build, and the problem persists. The symlink creation code on Windows seems unchanged since the mentioned commit.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
1. Create two files A and B by any means&lt;br/&gt;
2. Call Files.createSymbolicLink with the paths of A and B&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Exception FileAlreadyExistsException is thrown, stating that A (the would-be link) already exists.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
On Windows, the exception is FileSystemException (stating that the client is missing a required privilege), even when developer mode is enabled. The actual exception is lost.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import java.nio.file.Files;&lt;br/&gt;
import java.nio.file.Path;&lt;br/&gt;
&lt;br/&gt;
public class Test {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final var pA = Files.createTempFile(&amp;quot;link&amp;quot;, null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final var pB = Files.createTempFile(&amp;quot;target&amp;quot;, null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Files.createSymbolicLink(pA, pB);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (java.nio.file.FileAlreadyExistsException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;OK&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
The only workaround I have found is to manually check whether the target exists beforehand, but this is naturally racy.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5100627">JDK-8307887</key>
            <summary>(fs) Files.createSymbolicLink throws less specific exception when in developer mode and file already exists</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bpb">Brian Burkhalter</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcsaw</label>
                            <label>noreg-hard</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Wed, 10 May 2023 11:05:25 -0700</created>
                <updated>Mon, 12 Jun 2023 20:48:57 -0700</updated>
                            <resolved>Tue, 6 Jun 2023 08:16:05 -0700</resolved>
                                    <version>13</version>
                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14587362" author="dukebot" created="Tue, 6 Jun 2023 08:16:04 -0700"  >Changeset: d709c25c&lt;br/&gt;
Author:    Brian Burkhalter &amp;lt;&lt;a href=&apos;mailto:bpb@openjdk.org&apos;&gt;bpb@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-06 15:14:57 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/d709c25cbfdb0be007d3f800f7eddccce965809a&quot;&gt;https://git.openjdk.org/jdk/commit/d709c25cbfdb0be007d3f800f7eddccce965809a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14586433" author="roboduke" created="Thu, 1 Jun 2023 13:16:19 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14255&quot;&gt;https://git.openjdk.org/jdk/pull/14255&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-01 01:39:16 +0000</comment>
                            <comment id="14580811" author="tongwan" created="Thu, 11 May 2023 00:44:34 -0700"  >The observations on Windows 10:&lt;br/&gt;
JDK 8: Failed, Exception observed.&lt;br/&gt;
JDK 11: Failed.&lt;br/&gt;
JDK 13: Failed.&lt;br/&gt;
JDK 17: Failed.&lt;br/&gt;
JDK 20: Failed.&lt;br/&gt;
JDK 21ea+5: Failed.</comment>
                            <comment id="14580803" author="alanb" created="Thu, 11 May 2023 00:03:28 -0700"  >FileAlreadyExistsException is an optional specific exception, meaning an implementation isn&amp;#39;t require to throw this exception when the file already exists. That said, we may be able to do better here if the retry with SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE returns a useful error.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4987205">JDK-8221852</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103799" name="Test.java" size="411" author="tongwan" created="Thu, 11 May 2023 00:39:54 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19301"><![CDATA[windows_10]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31gzf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="228"><![CDATA[java.nio]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>