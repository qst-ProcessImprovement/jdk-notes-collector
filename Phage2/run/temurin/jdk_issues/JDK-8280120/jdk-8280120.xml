<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:23:26 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8280120] [IR Framework] Add attribute to @IR to enable/disable IR matching based on the architecture</title>
                <link>https://bugs.openjdk.org/browse/JDK-8280120</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>We should extend the IR framework to enable/disable certain IR tests based on the architecture the test is run on. This could be achieved by adding an additional attribute to @IR rules.&lt;br/&gt;
&lt;br/&gt;
We should at support at least AND and OR attributes and cover the following checks (can be mapped to Platform.java):&lt;br/&gt;
- 32/64 bit&lt;br/&gt;
- OS type&lt;br/&gt;
&lt;br/&gt;
We could implement the attribute either with an enum or use Strings with input verification, similarly to what we do with applyIfCPUFeature* (checked against `verifiedCPUFeatures` list).</description>
                <environment></environment>
        <key id="5066423">JDK-8280120</key>
            <summary>[IR Framework] Add attribute to @IR to enable/disable IR matching based on the architecture</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="chagedorn">Christian Hagedorn</reporter>
                        <labels>
                            <label>c2</label>
                            <label>ir-framework</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Tue, 18 Jan 2022 00:57:15 -0800</created>
                <updated>Thu, 23 Jan 2025 01:36:05 -0800</updated>
                            <resolved>Wed, 4 Oct 2023 05:00:00 -0700</resolved>
                                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14700742" author="roboduke" created="Mon, 26 Aug 2024 12:52:44 -0700"  >[jdk21u-fix-request] Approval Request from Daniel Hu&lt;br/&gt;
Adds JDK22 attribute to IR testing framework. Applies cleanly. Affected tests pass. Risk is very low: only changes to testing framework or test code.</comment>
                            <comment id="14700741" author="roboduke" created="Mon, 26 Aug 2024 12:52:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/946&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/946&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-26 17:12:57 +0000</comment>
                            <comment id="14615784" author="dukebot" created="Wed, 4 Oct 2023 04:59:59 -0700"  >Changeset: a8549b63&lt;br/&gt;
Author:    Daniel Skantz &amp;lt;&lt;a href=&apos;mailto:daniel.skantz@oracle.com&apos;&gt;daniel.skantz@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-10-04 11:58:16 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a8549b63674be433617b986f392e4ff7afef5185&quot;&gt;https://git.openjdk.org/jdk/commit/a8549b63674be433617b986f392e4ff7afef5185&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14614235" author="roboduke" created="Tue, 26 Sep 2023 23:18:53 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15938&quot;&gt;https://git.openjdk.org/jdk/pull/15938&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-27 06:12:25 +0000</comment>
                            <comment id="14573298" author="JIRAUSER20406" created="Wed, 12 Apr 2023 04:41:09 -0700"  >I think Vladimir&amp;#39;s suggestion of simpleArch is better than the regular arch, which has some redundant entries, especially as we are going to add a 32-bit/64-bit flag with this PR. So either we want Christians enum solution or the current string verification (but against simpleArch).   Maybe an enum with entries AARCH, PPC, RISCV, S390, X86 in conjunction with 32-bit/64-bit flag  and os.name would cover all use cases for now. I am not sure if there is an advantage in keeping our IR language consistent with what is used in Jtreg directives, retaining the string-based verification as for CPUFeatures (Roberto&amp;#39;s long-term idea might hint towards that, from my reading of it). &lt;br/&gt;
</comment>
                            <comment id="14573230" author="rcastanedalo" created="Tue, 11 Apr 2023 23:44:40 -0700"  >This is outside the scope of this RFE, but at some point we should investigate whether we could unify all &amp;quot;applyIf&amp;quot; attributes into a single domain-specific language where you could mix and match them. Perhaps we could use jtreg&amp;#39;s &amp;quot;@requires&amp;quot; language, which OpenJDK developers are already familiar with. I am not familiar with the code, but it would be great if we could somehow reuse jtreg&amp;#39;s implementation (&lt;a href=&quot;https://github.com/openjdk/jtreg/blob/master/src/share/classes/com/sun/javatest/regtest/config/Expr.java&quot;&gt;https://github.com/openjdk/jtreg/blob/master/src/share/classes/com/sun/javatest/regtest/config/Expr.java&lt;/a&gt;).</comment>
                            <comment id="14573227" author="chagedorn" created="Tue, 11 Apr 2023 23:23:02 -0700"  >Another thing you could possibly do is using a separate enum for the new IR attribute. Then the IR framework can just do a mapping enum -&amp;gt; Platform.xyz(). Doing it like that, you would not to specify multiple strings like &amp;quot;i386|x86&amp;quot; for x86_32. Instead, you could just use &amp;quot;PlatformInfo.X86&amp;quot; in the IR rule. This would also allow us to choose simple and intuitive enum value names and string verification is not required anymore. The only downside is that you need to keep the enum in sync with Platform.java. But I&amp;#39;d say that the options we are interested in should be quite stable. And if something is missing at some point, we can just extend the enum (we would also need to update the verification string list if using that approach). </comment>
                            <comment id="14573089" author="kvn" created="Tue, 11 Apr 2023 08:05:15 -0700"  >Can you consider using `vm.simpleArch` instead. It combines several x86 flavors into two, x64 and x86(for 32-bit)?&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/test/jtreg-ext/requires/VMProps.java#L151&quot;&gt;https://github.com/openjdk/jdk/blob/master/test/jtreg-ext/requires/VMProps.java#L151&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
It says it duplicates os.simpleArch but I did not find its definition. Why we have vm.simpleArch? Some tests use one and others an other.&lt;br/&gt;
</comment>
                            <comment id="14573043" author="JIRAUSER20406" created="Tue, 11 Apr 2023 05:28:13 -0700"  >Thanks Christian. Here is my draft: &lt;a href=&quot;https://github.com/openjdk/jdk/compare/master...danielogh:jdk:JDK-8280120-ifplatform&quot;&gt;https://github.com/openjdk/jdk/compare/master...danielogh:jdk:JDK-8280120-ifplatform&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I think some things could be discussed about this patch: copy and paste approach in IREncodingPrinter.java. Maybe have more user-friendly arch options in  IREncodingPrinter.java::verifiedPlatformFeatures  (but now they respond to what Jtreg uses, which could be good). TestPlatformFeatureCheck.java could be merged with TestCPUFeatureCheck.java.</comment>
                            <comment id="14572958" author="chagedorn" created="Mon, 10 Apr 2023 23:57:23 -0700"  >os.arch would be interesting and maybe os.name as well.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5137645">JDK-8339107</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5142996">JDK-8343501</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5084020">JDK-8294279</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5111521">JDK-8317341</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5075859">JDK-8287525</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vowb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>