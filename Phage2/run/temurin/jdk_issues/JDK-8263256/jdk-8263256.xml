<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:43:42 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8263256] Test java/net/Inet6Address/serialize/Inet6AddressSerializationTest.java fails due to dynamic reconfigurations of network interface during test</title>
                <link>https://bugs.openjdk.org/browse/JDK-8263256</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK11 CI:&lt;br/&gt;
&lt;br/&gt;
java/net/Inet6Address/serialize/Inet6AddressSerializationTest.java&lt;br/&gt;
&lt;br/&gt;
However the error message indicates that the failure should not have occurred&lt;br/&gt;
Observed error message: &lt;br/&gt;
&lt;br/&gt;
Inet6AddressSerializationTest.assertNetworkInterfaceEqual:&lt;br/&gt;
Error checking  NetworkInterface, expected:name:en0 (en0), got :name:en0 (en0)&lt;br/&gt;
&lt;br/&gt;
It appears that the expected and actual NetworkInterface are the same, yet the test still failed&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5044032">JDK-8263256</key>
            <summary>Test java/net/Inet6Address/serialize/Inet6AddressSerializationTest.java fails due to dynamic reconfigurations of network interface during test</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="msheppar">Mark Sheppard</assignee>
                                    <reporter username="ewhelan">Evan Whelan</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>sust-test-stabilization</label>
                            <label>teststabilization</label>
                            <label>tier2</label>
                    </labels>
                <created>Tue, 9 Mar 2021 07:07:16 -0800</created>
                <updated>Wed, 12 Mar 2025 00:28:31 -0700</updated>
                            <resolved>Thu, 7 Dec 2023 03:30:53 -0800</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>18</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                                                                                                            <comments>
                            <comment id="14635083" author="roboduke" created="Mon, 18 Dec 2023 08:38:04 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2056&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2056&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-15 17:24:40 +0000</comment>
                            <comment id="14634702" author="JIRAUSER20703" created="Fri, 15 Dec 2023 09:25:15 -0800"  >Fix request [17u]&lt;br/&gt;
I backport this for parity with 17.0.11-oracle and to improve testing. &lt;br/&gt;
Patch applies cleanly. &lt;br/&gt;
Testing: affected test passes and tier 1 passes with GHA. &lt;br/&gt;
</comment>
                            <comment id="14634000" author="roboduke" created="Wed, 13 Dec 2023 08:18:35 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/19&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/19&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-13 16:08:29 +0000</comment>
                            <comment id="14633998" author="roboduke" created="Wed, 13 Dec 2023 08:13:00 -0800"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve test and parity with 21.0.3-oracle. Applies cleanly. Tests pass.</comment>
                            <comment id="14632353" author="dukebot" created="Thu, 7 Dec 2023 03:30:52 -0800"  >Changeset: 0048f1da&lt;br/&gt;
Author:    Mark Sheppard &amp;lt;&lt;a href=&apos;mailto:msheppar@openjdk.org&apos;&gt;msheppar@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-12-07 11:27:42 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0048f1da4ce83b3de5d5ac074f969437f7b3024e&quot;&gt;https://git.openjdk.org/jdk/commit/0048f1da4ce83b3de5d5ac074f969437f7b3024e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14632130" author="roboduke" created="Wed, 6 Dec 2023 08:43:50 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16998&quot;&gt;https://git.openjdk.org/jdk/pull/16998&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-06 16:33:40 +0000</comment>
                            <comment id="14618027" author="msheppar" created="Fri, 13 Oct 2023 04:26:09 -0700"  >change  replaces NetworkInterface.equals with  the NetworkConfiguration.isSameInterace method call&lt;br/&gt;
&lt;br/&gt;
also to add a harware address check to isSameInterface&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static boolean isSameInterface(NetworkInterface ni1, NetworkInterface ni2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (Objects.equals(ni1, ni2)) return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Objects equals has taken care of the case where&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ni1 == ni2 so either they are both non-null or only&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// one of them is null - in which case they can&amp;#39;t be equal.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ni1 == null || ni2 == null) return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ni1.getIndex() != ni2.getIndex()) return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// check equality of mac addresses&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!Arrays.equals(getNetworkInterfaceHardwareAddress(ni1),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getNetworkInterfaceHardwareAddress(ni2))) return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return Objects.equals(ni1.getName(), ni2.getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
this is one of the deficiencies in the current NetworkInterface equals method.&lt;br/&gt;
</comment>
                            <comment id="14588533" author="dcubed" created="Mon, 12 Jun 2023 08:05:28 -0700"  >Here&amp;#39;s a log file snippet from the jdk-22+2-35-tier2 sighting:&lt;br/&gt;
&lt;br/&gt;
java/net/Inet6Address/serialize/Inet6AddressSerializationTest.java&lt;br/&gt;
&lt;br/&gt;
Deserialized Inet6Address fe80:0:0:0:6834:fcff:feff:2f3b%llw0/fe80:0:0:0:6834:fcff:feff:2f3b%llw0&lt;br/&gt;
Inet6AddressSerializationTest.assertHostNameEqual:&lt;br/&gt;
HostName equality  HostName, expected:fe80:0:0:0:6834:fcff:feff:2f3b%llw0, got :fe80:0:0:0:6834:fcff:feff:2f3b%llw0&lt;br/&gt;
Inet6AddressSerializationTest.assertHostAddressEqual:&lt;br/&gt;
HostAddress equality  HostAddress, expected: fe80:0:0:0:6834:fcff:feff:2f3b%llw0, got: fe80:0:0:0:6834:fcff:feff:2f3b%llw0&lt;br/&gt;
Inet6AddressSerializationTest.assertAddressEqual:&lt;br/&gt;
Address equality  Address, expected: [-2, -128, 0, 0, 0, 0, 0, 0, 104, 52, -4, -1, -2, -1, 47, 59], got: [-2, -128, 0, 0, 0, 0, 0, 0, 104, 52, -4, -1, -2, -1, 47, 59]&lt;br/&gt;
Inet6AddressSerializationTest.assertScopeIdEqual:&lt;br/&gt;
ScopeId equality  ScopeId, expected: 10, got: 10&lt;br/&gt;
Inet6AddressSerializationTest.assertNetworkInterfaceEqual:&lt;br/&gt;
Error checking  NetworkInterface, expected:name:llw0 (llw0), got :name:llw0 (llw0)&lt;br/&gt;
Test NetworkInterface:  name:awdl0 (awdl0)&lt;br/&gt;
Testing with /fe80:0:0:0:6834:fcff:feff:2f3b%awdl0&lt;br/&gt;
&amp;nbsp;scoped iface: name:awdl0 (awdl0)&lt;br/&gt;
&amp;nbsp;hostname: fe80:0:0:0:6834:fcff:feff:2f3b%awdl0&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;testInet6AddressSerialization:  enter &lt;br/&gt;
&lt;br/&gt;
Deserialized Inet6Address fe80:0:0:0:6834:fcff:feff:2f3b%awdl0/fe80:0:0:0:6834:fcff:feff:2f3b%awdl0&lt;br/&gt;
Inet6AddressSerializationTest.assertHostNameEqual:&lt;br/&gt;
HostName equality  HostName, expected:fe80:0:0:0:6834:fcff:feff:2f3b%awdl0, got :fe80:0:0:0:6834:fcff:feff:2f3b%awdl0&lt;br/&gt;
Inet6AddressSerializationTest.assertHostAddressEqual:&lt;br/&gt;
HostAddress equality  HostAddress, expected: fe80:0:0:0:6834:fcff:feff:2f3b%awdl0, got: fe80:0:0:0:6834:fcff:feff:2f3b%awdl0&lt;br/&gt;
Inet6AddressSerializationTest.assertAddressEqual:&lt;br/&gt;
Address equality  Address, expected: [-2, -128, 0, 0, 0, 0, 0, 0, 104, 52, -4, -1, -2, -1, 47, 59], got: [-2, -128, 0, 0, 0, 0, 0, 0, 104, 52, -4, -1, -2, -1, 47, 59]&lt;br/&gt;
Inet6AddressSerializationTest.assertScopeIdEqual:&lt;br/&gt;
ScopeId equality  ScopeId, expected: 8, got: 8&lt;br/&gt;
Inet6AddressSerializationTest.assertNetworkInterfaceEqual:&lt;br/&gt;
Error checking  NetworkInterface, expected:name:awdl0 (awdl0), got :name:awdl0 (awdl0)&lt;br/&gt;
Test NetworkInterface:  name:en6 (en6)&lt;br/&gt;
Testing with /fe80:0:0:0:aede:48ff:fe00:1122%en6&lt;br/&gt;
&amp;nbsp;scoped iface: name:en6 (en6)&lt;br/&gt;
&amp;nbsp;hostname: fe80:0:0:0:aede:48ff:fe00:1122%en6</comment>
                            <comment id="14560117" author="msheppar" created="Tue, 14 Feb 2023 14:20:24 -0800"  >proposal is to filter out awdl and llw network interfaces  from test, and to use NetworkConfiguration:: isSameInterface to replace NetworkInterface::equals call. Also, to add a MAC address equality check to isSameInterface</comment>
                            <comment id="14559994" author="msheppar" created="Tue, 14 Feb 2023 06:49:14 -0800"  >These dynamic network interface config changes are transient conditions. They are a condition that exists, as such a simple approach is: If the NetworkInterface:: equals fails, log the failure and retry the serialisation check on that interface &lt;br/&gt;
&lt;br/&gt;
Alternatively, if macOS awdl and llw are now subject to dynamic reconfiguration, then it merits that they are filtered out ( as suggested by dfuchs).&lt;br/&gt;
&lt;br/&gt;
The test still has to cope with IPv6 auto conf on a various hosts.</comment>
                            <comment id="14559829" author="alanb" created="Mon, 13 Feb 2023 23:27:40 -0800"  >awdl0 seems to be a wireless interface and surprising that this is enabled on these test systems.&lt;br/&gt;
&lt;br/&gt;
As already noted, it is difficult to create reliable tests if the network configuration is changing while the test is running. NetworkInterface already has an API note on this topic and there is also &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8283779&quot; title=&quot;Clarify API documentation of NetworkInterface with respect to configuration changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8283779&quot;&gt;&lt;strike&gt;JDK-8283779&lt;/strike&gt;&lt;/a&gt; to look at the equals spec again. Add to this is that Inet6Address equality can&amp;#39;t include the scope ID.</comment>
                            <comment id="14405900" author="dfuchs" created="Tue, 9 Mar 2021 08:00:08 -0800"  >Inet6Addresses creates a new NetworkInterface object when deserialized. NetworkInterface::equals will compare not only the network interface name/index, but also the addresses that are bound to it. The most probable explanation is that some configuration happened that changed the addresses bound to the interface &amp;quot;en0&amp;quot; between the time it was serialized and the time it was deserialized. Though infrequent, this has been observed to happen in the CI.&lt;br/&gt;
&lt;br/&gt;
This is a test bug.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5116481">JDK-8321598</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116484">JDK-8321601</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116821">JDK-8321915</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117429">JDK-8322389</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117509">JDK-8322469</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5103559">JDK-8310342</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5152651">JDK-8351768</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2rx0b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17419"><![CDATA[b27]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="193"><![CDATA[java.net]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>