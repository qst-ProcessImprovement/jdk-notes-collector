<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:13:09 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8328702] C2: Crash during parsing because sub type check is not folded</title>
                <link>https://bugs.openjdk.org/browse/JDK-8328702</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Attached Crash.java triggers a crash during C2 compilation.&lt;br/&gt;
&lt;br/&gt;
java -XX:-TieredCompilation -Xbatch -XX:CompileCommand=compileonly,Crash::* Crash.java&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/workspace/open/src/hotspot/share/opto/graphKit.hpp:369), pid=2866297, tid=2866311&lt;br/&gt;
#  assert(argument(0)-&amp;gt;bottom_type()-&amp;gt;isa_ptr()) failed: must be&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0+14) (fastdebug build 23-ea+14-1026)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+14-1026, mixed mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1221fc3]  LibraryCallKit::inline_native_getClass()+0x133&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:2232  110    b        Crash::compileRoot (19 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f2101bfc000,0x00007f2101cfd000],  sp=0x00007f2101cf8b30,  free space=1010k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1221fc3]  LibraryCallKit::inline_native_getClass()+0x133  (graphKit.hpp:369)&lt;br/&gt;
V  [libjvm.so+0x1242284]  LibraryIntrinsic::generate(JVMState*)+0x1e4&lt;br/&gt;
V  [libjvm.so+0xb8dc42]  Parse::do_call()+0x602&lt;br/&gt;
V  [libjvm.so+0x151d778]  Parse::do_one_bytecode()+0x328&lt;br/&gt;
V  [libjvm.so+0x150b38a]  Parse::do_one_block()+0x20a&lt;br/&gt;
V  [libjvm.so+0x150c846]  Parse::do_all_blocks()+0x136&lt;br/&gt;
V  [libjvm.so+0x1510b85]  Parse::Parse(JVMState*, ciMethod*, float)+0xb15&lt;br/&gt;
V  [libjvm.so+0x84be49]  ParseGenerator::generate(JVMState*)+0x169&lt;br/&gt;
V  [libjvm.so+0xb8dc42]  Parse::do_call()+0x602&lt;br/&gt;
V  [libjvm.so+0x151d778]  Parse::do_one_bytecode()+0x328&lt;br/&gt;
V  [libjvm.so+0x150b38a]  Parse::do_one_block()+0x20a&lt;br/&gt;
V  [libjvm.so+0x150c846]  Parse::do_all_blocks()+0x136&lt;br/&gt;
V  [libjvm.so+0x1510b85]  Parse::Parse(JVMState*, ciMethod*, float)+0xb15&lt;br/&gt;
V  [libjvm.so+0x84be49]  ParseGenerator::generate(JVMState*)+0x169&lt;br/&gt;
V  [libjvm.so+0x9f542e]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x163e&lt;br/&gt;
V  [libjvm.so+0x8498a5]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x1d5&lt;br/&gt;
V  [libjvm.so+0xa016d8]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x928&lt;br/&gt;
V  [libjvm.so+0xa02368]  CompileBroker::compiler_thread_loop()+0x478&lt;br/&gt;
V  [libjvm.so+0xebfccc]  JavaThread::thread_main_inner()+0xcc&lt;br/&gt;
V  [libjvm.so+0x17b9e66]  Thread::call_run()+0xb6&lt;br/&gt;
V  [libjvm.so+0x14bdb47]  thread_native_entry(Thread*)+0x127&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s a regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297933&quot; title=&quot;[REDO] Compiler should only use verified interface types for optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297933&quot;&gt;&lt;strike&gt;JDK-8297933&lt;/strike&gt;&lt;/a&gt; in JDK 21 b05. The problem is that a node in the C2 IR is replaced by TOP. We assert in debug or crash during compilation in product.&lt;br/&gt;
&lt;br/&gt;
#3  0x00007f27b716f804 in LibraryCallKit::inline_native_getClass (this=0x7f279b3f7cd0) at /oracle/valhalla/open/src/hotspot/share/opto/library_call.cpp:4948&lt;br/&gt;
4948	  set_result(load_mirror_from_klass(load_object_klass(obj)));&lt;br/&gt;
(rr) p obj-&amp;gt;dump(1)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;0  Root  === 0 70 106  [[ 0 1 3 20 21 22 33 38 53 56 65 76 97 101 ]] &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;1  Con  === 0  [[ ]]  #top&lt;br/&gt;
&lt;br/&gt;
The underlying issue is that after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297933&quot; title=&quot;[REDO] Compiler should only use verified interface types for optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297933&quot;&gt;&lt;strike&gt;JDK-8297933&lt;/strike&gt;&lt;/a&gt;, C2&amp;#39;s type system is able to determine that the instanceof check in Crash::typeCheck is always false when called from Crash::compileRoot and thus the type &amp;#39;i&amp;#39; is replaced by TOP (= no possible type). However, C2 is not able to fold the corresponding subtype check, leading to an inconsistent intermediate representation.&lt;br/&gt;
&lt;br/&gt;
The problem is not specific to the Object.getClass() intrinsic. We just end up crashing when trying to intrinsify that method and encountering TOP. Using &amp;#39;i.hashCode()&amp;#39; instead of &amp;#39;getClass&amp;#39; will result in a different failure mode.</description>
                <environment></environment>
        <key id="5124847">JDK-8328702</key>
            <summary>C2: Crash during parsing because sub type check is not folded</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="chagedorn">Christian Hagedorn</assignee>
                                    <reporter username="thartmann">Tobias Hartmann</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>regression</label>
                    </labels>
                <created>Thu, 21 Mar 2024 06:34:19 -0700</created>
                <updated>Thu, 19 Dec 2024 04:02:18 -0800</updated>
                            <resolved>Wed, 3 Apr 2024 23:05:37 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14663493" author="roboduke" created="Sun, 7 Apr 2024 23:56:27 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Fixes another C2 bug, regression in JDK 21. Usual risk for C2 changes, but the fix looks simple enough. Passes all tests, including the aggressive compiler testing. New regression test fails without the fix, passes with it.</comment>
                            <comment id="14663067" author="roboduke" created="Thu, 4 Apr 2024 23:29:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/450&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/450&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-04 13:58:17 +0000</comment>
                            <comment id="14662780" author="chagedorn" created="Thu, 4 Apr 2024 00:57:14 -0700"  >Fix Request (JDK 22u)&lt;br/&gt;
Fixes a crash during C2 parsing due to a broken graph. The fix is simple and low risk. Testing with tier1,tier2,tier3,tier4,hs-comp-stress,hs-precheckin-comp. Applies cleanly.</comment>
                            <comment id="14662775" author="roboduke" created="Thu, 4 Apr 2024 00:53:56 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/125&quot;&gt;https://git.openjdk.org/jdk22u/pull/125&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-04 07:49:47 +0000</comment>
                            <comment id="14662749" author="dukebot" created="Wed, 3 Apr 2024 23:05:35 -0700"  >Changeset: e5e21a8a&lt;br/&gt;
Author:    Christian Hagedorn &amp;lt;&lt;a href=&apos;mailto:chagedorn@openjdk.org&apos;&gt;chagedorn@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-04 06:02:35 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e5e21a8a6e64466f9cda2064aa2723a15d4ae86a&quot;&gt;https://git.openjdk.org/jdk/commit/e5e21a8a6e64466f9cda2064aa2723a15d4ae86a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14660828" author="roboduke" created="Wed, 27 Mar 2024 06:52:31 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18512&quot;&gt;https://git.openjdk.org/jdk/pull/18512&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-27 13:48:09 +0000</comment>
                            <comment id="14659351" author="chagedorn" created="Thu, 21 Mar 2024 07:50:25 -0700"  >Sorry I&amp;#39;ve missed that it was already assigned when I&amp;#39;ve looked into it during triaging (was unassigned before).&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve had a quick look with the test case Crash.java since I suspected it might be related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8328480&quot; title=&quot;C2: SubTypeCheckNode in checkcast should use the klass constant of a unique concrete sub class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8328480&quot;&gt;&lt;strike&gt;JDK-8328480&lt;/strike&gt;&lt;/a&gt;. It turns out, it is not. But I think I found the problem. In TypePtr::maybe_java_subtype_of_helper_for_array() we check if the TypeAryKlassPtr this_one might be a subtype of the interface I. Since the base element type of this_one is bottom, we conclude that this_one *might* be a sub type of interface I. However, this is wrong: An array class cannot be a sub type of interface I. We should therefore return here false (i.e. not a sub type). We would actually perform that check but only after the bottom/top check:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/src/hotspot/share/opto/type.cpp#L6462-L6468&quot;&gt;https://github.com/openjdk/jdk/blob/master/src/hotspot/share/opto/type.cpp#L6462-L6468&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I suggest to move the this_top_or_bottom check below:&lt;br/&gt;
&lt;br/&gt;
-  bool this_top_or_bottom = (this_one-&amp;gt;base_element_type(dummy) == Type::TOP || this_one-&amp;gt;base_element_type(dummy) == Type::BOTTOM);&lt;br/&gt;
-  if (!this_one-&amp;gt;is_loaded() || !other-&amp;gt;is_loaded() || this_top_or_bottom) {&lt;br/&gt;
+  if (!this_one-&amp;gt;is_loaded() || !other-&amp;gt;is_loaded()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (this_one-&amp;gt;is_instance_type(other)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return other-&amp;gt;klass()-&amp;gt;equals(ciEnv::current()-&amp;gt;Object_klass()) &amp;amp;&amp;amp; other-&amp;gt;_interfaces-&amp;gt;intersection_with(this_one-&amp;gt;_interfaces)-&amp;gt;eq(other-&amp;gt;_interfaces);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
+&lt;br/&gt;
+  bool this_top_or_bottom = (this_one-&amp;gt;base_element_type(dummy) == Type::TOP || this_one-&amp;gt;base_element_type(dummy) == Type::BOTTOM);&lt;br/&gt;
+  if (this_top_or_bottom) {&lt;br/&gt;
+    return true;&lt;br/&gt;
+  }&lt;br/&gt;
&lt;br/&gt;
Is that reasonable? But maybe I&amp;#39;ve missed something.&lt;br/&gt;
&lt;br/&gt;
At is_java_subtype_of_helper_for_array() we have the same order as currently in maybe_java_subtype_of_helper_for_array() but there it&amp;#39;s fine because we would return false if this_top_or_bottom is true because we cannot tell if it&amp;#39;s a sub type or not if the base element type is bottom.</comment>
                            <comment id="14659337" author="thartmann" created="Thu, 21 Mar 2024 06:40:55 -0700"  >Roland, could you please have a look? Thanks.</comment>
                            <comment id="14659336" author="thartmann" created="Thu, 21 Mar 2024 06:40:24 -0700"  >ILW = Crash during C2 compilation (regression), easy to reproduce but edge case, no workaround but disable compilation of affected method = HMM = P2</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5126631">JDK-8330055</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126608">JDK-8330034</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126609">JDK-8330035</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5134609">JDK-8336713</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5146578">JDK-8346502</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5125433">JDK-8329201</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5088685">JDK-8297933</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108702" name="Crash.java" size="1838" author="thartmann" created="Thu, 21 Mar 2024 06:31:11 -0700"/>
                            <attachment id="108700" name="hs_err_pid2866297.log" size="79606" author="thartmann" created="Thu, 21 Mar 2024 06:31:23 -0700"/>
                            <attachment id="108701" name="replay_pid2866297.log" size="246132" author="thartmann" created="Thu, 21 Mar 2024 06:31:23 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17455"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35k37:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>