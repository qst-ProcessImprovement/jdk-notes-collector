<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:36:35 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8173709] Fix VerifyLoopOptimizations - step 1 - minimal infrastructure</title>
                <link>https://bugs.openjdk.org/browse/JDK-8173709</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>JDK 9 fastdebug build crashes with SIGBUS caused at Node*Node::in(unsigned)const+0x4 with VerifyLoopOptimizations flag enabled.</description>
                <environment>&lt;p&gt;This issue can be reproduced by executing &quot;java -XX:+VerifyLoopOptimizations -version&quot; command using JDK 9 fastdebug builds on any of the SPARC systems and is Solaris OS version agnostic.&lt;/p&gt;</environment>
        <key id="4913782">JDK-8173709</key>
            <summary>Fix VerifyLoopOptimizations - step 1 - minimal infrastructure</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="sjoshi">Shrinivas Joshi</reporter>
                        <labels>
                            <label>c2</label>
                            <label>community-candidate</label>
                            <label>diagnostics</label>
                            <label>hs-comp-triaged</label>
                            <label>oracle-triage-12</label>
                    </labels>
                <created>Tue, 31 Jan 2017 13:48:33 -0800</created>
                <updated>Fri, 12 May 2023 02:26:26 -0700</updated>
                            <resolved>Mon, 3 Apr 2023 23:30:46 -0700</resolved>
                                    <version>9</version>
                    <version>10</version>
                    <version>11</version>
                    <version>12</version>
                    <version>16</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                                                                            <comments>
                            <comment id="14571559" author="dukebot" created="Mon, 3 Apr 2023 23:30:45 -0700"  >Changeset: 24c6af06&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-04 06:28:57 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/24c6af0637631153707615932f1f10ced4e5c0e8&quot;&gt;https://git.openjdk.org/jdk/commit/24c6af0637631153707615932f1f10ced4e5c0e8&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14570103" author="roboduke" created="Tue, 28 Mar 2023 09:25:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13207&quot;&gt;https://git.openjdk.org/jdk/pull/13207&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-28 12:49:57 +0000</comment>
                            <comment id="14566700" author="JIRAUSER19821" created="Tue, 14 Mar 2023 04:01:32 -0700"  >I&amp;#39;m working on this now. My approach is simply to disable sections of the verification code until it passes. There are too many broken things to fix them all at once. Once we have a running version, we can then test with it. And build it up slowly, step by step.&lt;br/&gt;
&lt;br/&gt;
These are some of the basic issues that I found:&lt;br/&gt;
&amp;nbsp;- control does not match. For example PhaseIdealLoop::split_if_with_blocks does seem to set control wrong.&lt;br/&gt;
&amp;nbsp;- idom does not match. For example PhaseIdealLoop::create_new_if_for_predicate sets idom incorrectly.&lt;br/&gt;
&amp;nbsp;- Nodes not added to body. For example in PhaseIdealLoop::split_thru_region.</comment>
                            <comment id="14375086" author="xliu" created="Mon, 19 Oct 2020 01:31:03 -0700"  >dominated_by() introduces conI in split_if_with_blocks().  it&amp;#39;s possible that ConI1 or conI0  is a new node for igvn.  in my case, it&amp;#39;s 172  ConI  ===  0  [[ 131 ]]  #int:1&lt;br/&gt;
&lt;br/&gt;
- 0  Root  ===  0  58  96  165  155  141  [[ 0  1  3  149  136  35  43  53  70  97  105  112  169 ]] inner&lt;br/&gt;
+ 0  Root  ===  0  58  96  165  155  141  [[ 0  1  3  149  136  35  43  53  70  97  105  112  169  172 ]] inner&lt;br/&gt;
&amp;nbsp;&amp;nbsp;3  Start  ===  3  0  [[ 3  5  6  7  8  9  10  11 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:java/lang/String:NotNull:exact *, 6:int}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;5  Parm  ===  3  [[ 48 ]] Control !jvms: String::charAt @ bci:-1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;6  Parm  ===  3  [[ 155  137  163  92  54 ]] I_O !jvms: String::charAt @ bci:-1&lt;br/&gt;
@@ -40,8 +40,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;118  IfTrue  ===  168  [[ 131 ]] #1 !jvms: StringLatin1::charAt @ bci:7 String::charAt @ bci:12&lt;br/&gt;
&amp;nbsp;&amp;nbsp;119  IfFalse  ===  168  [[ 92 ]] #0 !jvms: StringLatin1::charAt @ bci:7 String::charAt @ bci:12&lt;br/&gt;
&amp;nbsp;&amp;nbsp;129  CmpU  === _  11  114  [[ 130 ]]  !orig=[161] !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
- 130  Bool  === _  129  [[ 131  168 ]] [lt] !orig=[162] !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
- 131  RangeCheck  ===  118  130  [[ 132  135 ]] P=0.999999, C=-1.000000 !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
+ 130  Bool  === _  129  [[ 168 ]] [lt] !orig=[162] !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
+ 131  RangeCheck  ===  118  172  [[ 132  135 ]] P=0.999999, C=-1.000000 !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
&amp;nbsp;&amp;nbsp;132  IfTrue  ===  131  [[ 155  143  170 ]] #1 !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
&amp;nbsp;&amp;nbsp;135  IfFalse  ===  131  [[ 137 ]] #0 !jvms: StringLatin1::charAt @ bci:21 String::charAt @ bci:12&lt;br/&gt;
&amp;nbsp;&amp;nbsp;136  ConI  ===  0  [[ 137 ]]  #int:-28&lt;br/&gt;
@@ -60,3 +60,4 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;168  RangeCheck  ===  103  130  [[ 119  118 ]] P=1.000000, C=5375.000000 !orig=[117] !jvms: StringLatin1::charAt @ bci:7 String::charAt @ bci:12&lt;br/&gt;
&amp;nbsp;&amp;nbsp;169  ConI  ===  0  [[ 92 ]]  #int:-27&lt;br/&gt;
&amp;nbsp;&amp;nbsp;170  LoadUB  ===  132  7  146  [[ 155 ]]  @byte[int:&amp;gt;=0]:exact+any *, idx=7; #int:0..255 !orig=[171],[150] !jvms: StringLatin1::charAt @ bci:25 String::charAt @ bci:12&lt;br/&gt;
+ 172  ConI  ===  0  [[ 131 ]]  #int:1&lt;br/&gt;
&lt;br/&gt;
here is a patch candidate to fix it.&lt;br/&gt;
--- a/src/hotspot/share/opto/loopopts.cpp&lt;br/&gt;
+++ b/src/hotspot/share/opto/loopopts.cpp&lt;br/&gt;
@@ -244,7 +244,11 @@ void PhaseIdealLoop::dominated_by( Node *prevdom, Node *iff, bool flip, bool exc&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pop = Op_IfTrue;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// &amp;#39;con&amp;#39; is set to true or false to kill the dominated test.&lt;br/&gt;
-  Node *con = _igvn.makecon(pop == Op_IfTrue ? TypeInt::ONE : TypeInt::ZERO);&lt;br/&gt;
+  Node* con = _igvn.makecon(pop == Op_IfTrue ? TypeInt::ONE : TypeInt::ZERO);&lt;br/&gt;
+  if (!has_node(con)) {&lt;br/&gt;
+    IdealLoopTree* loop = get_loop(iff);&lt;br/&gt;
+    loop-&amp;gt;_body.push(con);&lt;br/&gt;
+  }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;set_ctrl(con, C-&amp;gt;root()); // Constant gets a new use&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;// Hack the dominated test&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;_igvn.replace_input_of(iff, 1, con);&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
but it&amp;#39;s not the only problem that can&amp;#39;t enable VerifyLoopOptimizations. eg. IdealLoopTree::verify_tree doesn&amp;#39;t support StripedMinedLoop or  RangeCheck.&lt;br/&gt;
I suggest we file some sub-tasks to track them</comment>
                            <comment id="14375045" author="xliu" created="Sun, 18 Oct 2020 22:07:14 -0700"  >for -XX:+VerifyLoopOptimizations --version, I have a reduced compilation, c2 hits the assertion when it compiles java.lang.charAt(); &lt;br/&gt;
&lt;br/&gt;
java -XX:CompileOnly=java.lang.String::charAt -XX:CompileOnly=java.lang.String::isLatin1 -XX:CompileOnly=java.lang.StingLatin1.charAt   -Xbatch -XX:+TraceLoopOpts -XX:+PrintCompilation -XX:CompileCommand=quiet -XX:+PrintInlining -XX:-TieredCompilation -XX:+VerifyLoopOptimizations  --version&lt;br/&gt;
&lt;br/&gt;
Further, -XX:-SplitIfBlocks dodges this problem. it seems PhaseIdealLoop::split_if_with_blocks() is the culprit. &lt;br/&gt;
perhaps, it introduces a new ConI but doesn&amp;#39;t add it to the current ILT-&amp;gt;_body. </comment>
                            <comment id="14348863" author="chagedorn" created="Mon, 22 Jun 2020 03:47:34 -0700"  >The flag is still broken in JDK 16.&lt;br/&gt;
&lt;br/&gt;
Example: java -XX:+VerifyLoopOptimizations --version&lt;br/&gt;
&lt;br/&gt;
Log:&lt;br/&gt;
Verify has that we do not:  171	ConI	===  0  [[ 131 ]]  #int:1&lt;br/&gt;
# To suppress the following error report, specify this argument&lt;br/&gt;
# after -XX: or in .hotspotrc:  SuppressErrorAt=/loopnode.cpp:3538&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/home/christian/jdk/open/src/hotspot/share/opto/loopnode.cpp:3538), pid=19553, tid=19565&lt;br/&gt;
#  assert(!fail) failed: loop body mismatch&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (16.0) (slowdebug build 16-internal+0-2020-06-15-1404004.christian...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (slowdebug 16-internal+0-2020-06-15-1404004.christian..., mixed mode, tiered, compressed oops, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xcf7b22]  IdealLoopTree::verify_tree(IdealLoopTree*, IdealLoopTree const*) const+0x958</comment>
                            <comment id="14141376" author="jcm" created="Tue, 19 Dec 2017 00:43:27 -0800"  >sure, will do that after [1], Thanks for the inputs, Nils. &lt;br/&gt;
&lt;br/&gt;
[1]presently i am not sure how rotten loop verification code is.. i stopped after seeing 5 issues in &amp;quot;java -version&amp;quot;, will check if it is really beneficial keeping the option in this condition.</comment>
                            <comment id="14141125" author="neliasso" created="Mon, 18 Dec 2017 07:05:12 -0800"  >I ran into this too, thanks for fixing!&lt;br/&gt;
&lt;br/&gt;
The misplaced rm in PhaseIdealLoop::build_and_optimize has been there since 2011. Please add some testing (in tier 1-3) that exercise this code so it doesn&amp;#39;t bit rot again.</comment>
                            <comment id="14134594" author="jcm" created="Tue, 28 Nov 2017 18:25:10 -0800"  >5) next problem is due to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-7008866&quot; title=&quot;Missing loop predicate for loop with multiple entries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-7008866&quot;&gt;&lt;strike&gt;JDK-7008866&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
we have modified loop ctrl info(node placement info, early here) in PhaseIdealLoop::split_thru_phi, so it is different in actual run and verification run, as verification run do late/apt placements.&lt;br/&gt;
i may need to skip this too, may be skip loop verification for this case altogether!&lt;br/&gt;
&lt;br/&gt;
+    // Don&amp;#39;t move x into a loop if its uses are&lt;br/&gt;
+    // outside of loop. Otherwise x will be cloned&lt;br/&gt;
+    // for each use outside of this loop.&lt;br/&gt;
+    IdealLoopTree *use_loop = get_loop(region);&lt;br/&gt;
+    if (!new_loop-&amp;gt;is_member(use_loop) &amp;amp;&amp;amp;&lt;br/&gt;
+        (old_loop == NULL || !new_loop-&amp;gt;is_member(old_loop))) {&lt;br/&gt;
+      // Take early control, later control will be recalculated&lt;br/&gt;
+      // during next iteration of loop optimizations.&lt;br/&gt;
+      new_ctrl = get_early_ctrl(x);&lt;br/&gt;
+      new_loop = get_loop(new_ctrl);&lt;br/&gt;
</comment>
                            <comment id="14133706" author="jcm" created="Fri, 24 Nov 2017 01:44:33 -0800"  >fixed first 3 issues, next problem&lt;br/&gt;
4) ctrl is not same in verification phase, graph shaped changed and missed ctrl update?&lt;br/&gt;
[related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8139771&quot; title=&quot;Eliminating CastPP nodes at Phis when they all come from a unique input may cause crash&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8139771&quot;&gt;&lt;strike&gt;JDK-8139771&lt;/strike&gt;&lt;/a&gt;]&lt;br/&gt;
&lt;br/&gt;
problem is due to dominating cast is replacing current cast node, the loop ctrl(node placement) info is different from actual graph in current run, assuming this wouldn&amp;#39;t cause any issue in this loop-opt run, or in further runs, skipping the case in verification&lt;br/&gt;
&lt;br/&gt;
if (n-&amp;gt;is_ConstraintCast()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node* dom_cast = n-&amp;gt;as_ConstraintCast()-&amp;gt;dominating_cast(&amp;amp;_igvn, this);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ConstraintCastNode::dominating_cast() uses node control input to determine domination.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Node control inputs don&amp;#39;t necessarily agree with loop control info (due to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// transformations happened in between), thus additional dominance check is needed&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// to keep loop info valid.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (dom_cast != NULL &amp;amp;&amp;amp; is_dominator(get_ctrl(dom_cast), get_ctrl(n))) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_igvn.replace_node(n, dom_cast);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return dom_cast;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}</comment>
                            <comment id="14133518" author="jcm" created="Wed, 22 Nov 2017 22:06:50 -0800"  >1) PhaseIdealLoop ds are lost due to misplaced rm ?&lt;br/&gt;
2) major progress is not restored on all verify exit path ?&lt;br/&gt;
3) counted loop guard verification fails some times, need to check cases it fails and fix it.&lt;br/&gt;
&lt;br/&gt;
working on 3 now!&lt;br/&gt;
</comment>
                            <comment id="14133510" author="jcm" created="Wed, 22 Nov 2017 21:47:09 -0800"  >multiple causes!</comment>
                            <comment id="14129193" author="dchuyko" created="Tue, 7 Nov 2017 08:18:17 -0800"  >Fastdebug build of 10 (around b30) fails with SIGSEGV on Linux for&lt;br/&gt;
java -XX:+VerifyLoopOptimizations -version&lt;br/&gt;
This happens on amd64 and aarch64. The logs are attached.</comment>
                            <comment id="14047008" author="jcm" created="Fri, 3 Feb 2017 03:38:36 -0800"  >sure, Zoltan. Thank you!</comment>
                            <comment id="14046565" author="zmajo" created="Thu, 2 Feb 2017 00:41:26 -0800"  >Hi Jamsheed, this is a C2-specific problem. I&amp;#39;m not sure if we want/can spend time on this in the (near) future, but could you please track of the bug until we know what we want to do with it? Thank you! Zoltan</comment>
                            <comment id="14046564" author="zmajo" created="Thu, 2 Feb 2017 00:39:32 -0800"  >Deferring to 10.</comment>
                            <comment id="14046563" author="zmajo" created="Thu, 2 Feb 2017 00:39:13 -0800"  >ILW=crash, fastdebug build only (flag is not available in product), flag is disabled in product builds therefore customer/end-user is not affected = HLL = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5097283">JDK-8305073</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="4949063">JDK-8194684</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4978564">JDK-8215488</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4296442">JDK-6575833</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5032640">JDK-8255033</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5100789">JDK-8307982</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="73437" name="aarch64_hs_err_pid2659.log" size="58564" author="dchuyko" created="Tue, 7 Nov 2017 08:16:18 -0800"/>
                            <attachment id="73433" name="aarch64_hs_err_pid2659.log" size="58564" author="dchuyko" created="Tue, 7 Nov 2017 08:12:57 -0800"/>
                            <attachment id="73436" name="aarch64_replay_pid2659.log" size="103698" author="dchuyko" created="Tue, 7 Nov 2017 08:16:18 -0800"/>
                            <attachment id="73432" name="aarch64_replay_pid2659.log" size="103698" author="dchuyko" created="Tue, 7 Nov 2017 08:12:57 -0800"/>
                            <attachment id="66245" name="hs_err_pid5226.log" size="22280" author="sjoshi" created="Tue, 31 Jan 2017 13:49:53 -0800"/>
                            <attachment id="73435" name="x86_hs_err_pid16834.log" size="64602" author="dchuyko" created="Tue, 7 Nov 2017 08:16:18 -0800"/>
                            <attachment id="73431" name="x86_hs_err_pid16834.log" size="64602" author="dchuyko" created="Tue, 7 Nov 2017 08:12:56 -0800"/>
                            <attachment id="73434" name="x86_replay_pid16834.log" size="92604" author="dchuyko" created="Tue, 7 Nov 2017 08:16:18 -0800"/>
                            <attachment id="73430" name="x86_replay_pid16834.log" size="92604" author="dchuyko" created="Tue, 7 Nov 2017 08:12:58 -0800"/>
                    </attachments>
                <subtasks>
                                              <subtask id="5032640">JDK-8255033</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i25znv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>