<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:42:57 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306461] ObjectInputStream::readObject() should handle negative array sizes without throwing NegativeArraySizeExceptions</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306461</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Reported by: Yakov Shafranovich (&lt;a href=&apos;mailto:yakovsh@amazon.com&apos;&gt;yakovsh@amazon.com&lt;/a&gt;)&lt;br/&gt;
&lt;br/&gt;
Currently, `ObjectInputStream::readObject()` doesn&amp;#39;t explicitly checks for a negative array length in the deserialization stream. Instead it calls `j.l.r.Array::newInstance(..)` with the negative length which results in a `NegativeArraySizeException`. NegativeArraySizeException is an unchecked exception which is neither declared in the signature of `ObjectInputStream::readObject()` nor mentioned in its API specification. It is therefore not obvious for users of `ObjectInputStream::readObject()` that they may have to handle `NegativeArraySizeException`s. It would therefor be better if a negative array length in the deserialization stream would be automatically wrapped in an `InvalidClassException` which is a checked exception (derived from `IOException` via `ObjectStreamException`) and declared in the signature of `ObjectInputStream::readObject()`.&lt;br/&gt;
&lt;br/&gt;
If we do the negative array length check in `ObjectInputStream::readObject()` before filtering, this will then also fix `ObjectInputFilter.FilterInfo::arrayLength()` which is defined as:&lt;br/&gt;
```&lt;br/&gt;
Returns:&lt;br/&gt;
the non-negative number of array elements when deserializing an array of the class, otherwise -1&lt;br/&gt;
```&lt;br/&gt;
but currently returns a negative value if the array length is negative.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5098917">JDK-8306461</key>
            <summary>ObjectInputStream::readObject() should handle negative array sizes without throwing NegativeArraySizeExceptions</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="simonis">Volker Simonis</assignee>
                                    <reporter username="simonis">Volker Simonis</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>release-note=yes</label>
                    </labels>
                <created>Wed, 19 Apr 2023 08:43:58 -0700</created>
                <updated>Fri, 21 Jul 2023 07:36:20 -0700</updated>
                            <resolved>Mon, 8 May 2023 07:58:28 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                                                            <comments>
                            <comment id="14579803" author="dukebot" created="Mon, 8 May 2023 07:58:27 -0700"  >Changeset: 4116b109&lt;br/&gt;
Author:    Volker Simonis &amp;lt;&lt;a href=&apos;mailto:simonis@openjdk.org&apos;&gt;simonis@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-08 14:56:05 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4116b109f004c9552db7448f2942a11d5dfe3cdc&quot;&gt;https://git.openjdk.org/jdk/commit/4116b109f004c9552db7448f2942a11d5dfe3cdc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14578780" author="roboduke" created="Wed, 3 May 2023 06:55:55 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13540&quot;&gt;https://git.openjdk.org/jdk/pull/13540&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-19 16:47:33 +0000</comment>
                            <comment id="14575352" author="simonis" created="Thu, 20 Apr 2023 03:27:47 -0700"  >No bug in read/writeObject, just a manual test case which simulates corrupted data.</comment>
                            <comment id="14575158" author="rriggs" created="Wed, 19 Apr 2023 10:54:36 -0700"  >Out of curiosity, what was the origin of the negative length? Was it an artificial case or a bug in either readObject or writeObject?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5099258">JDK-8306744</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5100317">JDK-8307621</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i316uz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="186"><![CDATA[java.io:serialization]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>