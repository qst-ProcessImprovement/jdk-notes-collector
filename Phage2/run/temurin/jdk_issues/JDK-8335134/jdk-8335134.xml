<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:14:05 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8335134] Test com/sun/jdi/BreakpointOnClassPrepare.java timeout</title>
                <link>https://bugs.openjdk.org/browse/JDK-8335134</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>test log snippet:&lt;br/&gt;
&amp;quot;MainThread&amp;quot; #31 [1560215] prio=5 os_prio=0 cpu=112.94ms elapsed=480.14s tid=0x00007f5cc41e82c0 nid=1560215 waiting on condition  [0x00007f5c6fa27000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: WAITING (parking)&lt;br/&gt;
	at jdk.internal.misc.Unsafe.park(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/Native Method)&lt;br/&gt;
	- parking to wait for  &amp;lt;0x000000011bbc0e80&amp;gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)&lt;br/&gt;
	at java.util.concurrent.locks.LockSupport.park(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/LockSupport.java:371)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/AbstractQueuedSynchronizer.java:519)&lt;br/&gt;
	at java.util.concurrent.ForkJoinPool.unmanagedBlock(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/ForkJoinPool.java:4021)&lt;br/&gt;
	at java.util.concurrent.ForkJoinPool.managedBlock(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/ForkJoinPool.java:3967)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/AbstractQueuedSynchronizer.java:1712)&lt;br/&gt;
	at java.lang.ProcessImpl.waitFor(&lt;a href=&apos;mailto:java.base@24&apos;&gt;java.base@24&lt;/a&gt;/ProcessImpl.java:425)&lt;br/&gt;
	at TestScaffold.waitForVMDisconnect(TestScaffold.java:781)&lt;br/&gt;
	- locked &amp;lt;0x000000011b7fe0f8&amp;gt; (a BreakpointOnClassPrepare)&lt;br/&gt;
	at TestScaffold.resumeToVMDisconnect(TestScaffold.java:1015)&lt;br/&gt;
	at TestScaffold.listenUntilVMDisconnect(TestScaffold.java:743)&lt;br/&gt;
	at BreakpointOnClassPrepare.runTests(BreakpointOnClassPrepare.java:148)&lt;br/&gt;
	at TestScaffold.startTests(TestScaffold.java:468)&lt;br/&gt;
	at BreakpointOnClassPrepare.main(BreakpointOnClassPrepare.java:96)&lt;br/&gt;
&lt;br/&gt;
Got BreakpointEvent: 1 for thread instance of java.lang.Thread(name=&amp;#39;MyThread-1&amp;#39;, id=335)&lt;br/&gt;
Timeout signalled after 480 seconds&lt;br/&gt;
STDERR:&lt;br/&gt;
[1ms] run args: [BreakpointOnClassPrepareTarg, SUSPEND_NONE]&lt;br/&gt;
[173ms] Got ClassPrepareEvent: ClassPrepareEvent in thread MyThread-1&lt;br/&gt;
[224ms] FAILED: Exception occured in eventHandler: com.sun.jdi.ObjectCollectedException&lt;br/&gt;
	at java.base/java.lang.Thread.getStackTrace(Thread.java:2389)&lt;br/&gt;
	at TestScaffold.failure(TestScaffold.java:491)&lt;br/&gt;
	at TestScaffold$EventHandler.run(TestScaffold.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1575)&lt;br/&gt;
com.sun.jdi.ObjectCollectedException&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.JDWPException.toJDIException(JDWPException.java:56)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.ObjectReferenceImpl.referenceType(ObjectReferenceImpl.java:174)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.ThreadReferenceImpl.toString(ThreadReferenceImpl.java:636)&lt;br/&gt;
	at java.base/java.lang.String.valueOf(String.java:4556)&lt;br/&gt;
	at BreakpointOnClassPrepare.breakpointReached(BreakpointOnClassPrepare.java:107)&lt;br/&gt;
	at TestScaffold$EventHandler.notifyEvent(TestScaffold.java:193)&lt;br/&gt;
	at TestScaffold$EventHandler.run(TestScaffold.java:277)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1575)</description>
                <environment>&lt;p&gt;+ uname -a&lt;br/&gt;
Linux iZbp12zgu0g4u8ugvr6m7fZ 5.10.134-16.3.al8.x86_64 #1 SMP Tue Mar 26 18:54:05 CST 2024 x86_64 x86_64 x86_64 GNU/Linux&lt;br/&gt;
+ cat /etc/os-release&lt;br/&gt;
NAME=&quot;Alibaba Cloud Linux&quot;&lt;br/&gt;
VERSION=&quot;3 (Soaring Falcon)&quot;&lt;br/&gt;
ID=&quot;alinux&quot;&lt;br/&gt;
ID_LIKE=&quot;rhel fedora centos anolis&quot;&lt;br/&gt;
VERSION_ID=&quot;3&quot;&lt;br/&gt;
UPDATE_ID=&quot;9.1&quot;&lt;br/&gt;
PLATFORM_ID=&quot;platform:al8&quot;&lt;br/&gt;
PRETTY_NAME=&quot;Alibaba Cloud Linux 3 (Soaring Falcon)&quot;&lt;br/&gt;
ANSI_COLOR=&quot;0;31&quot;&lt;br/&gt;
HOME_URL=&quot;https://www.aliyun.com/&quot;&lt;/p&gt;

&lt;p&gt;+ free -h&lt;br/&gt;
&#160; &#160; &#160; &#160; &#160; &#160; &#160; total &#160; &#160; &#160; &#160;used &#160; &#160; &#160; &#160;free &#160; &#160; &#160;shared &#160;buff/cache &#160; available&lt;br/&gt;
Mem: &#160; &#160; &#160; &#160; &#160;123Gi &#160; &#160; &#160; 1.3Gi &#160; &#160; &#160; &#160;88Gi &#160; &#160; &#160; &#160;10Mi &#160; &#160; &#160; &#160;33Gi &#160; &#160; &#160; 121Gi&lt;br/&gt;
Swap: &#160; &#160; &#160; &#160; &#160; &#160;0B &#160; &#160; &#160; &#160; &#160;0B &#160; &#160; &#160; &#160; &#160;0B&lt;br/&gt;
+ lscpu&lt;br/&gt;
+ head -n 25&lt;br/&gt;
Architecture: &#160; &#160; &#160; &#160;x86_64&lt;br/&gt;
CPU op-mode(s): &#160; &#160; &#160;32-bit, 64-bit&lt;br/&gt;
Byte Order: &#160; &#160; &#160; &#160; &#160;Little Endian&lt;br/&gt;
CPU(s): &#160; &#160; &#160; &#160; &#160; &#160; &#160;32&lt;br/&gt;
On-line CPU(s) list: 0-31&lt;br/&gt;
Thread(s) per core: &#160;2&lt;br/&gt;
Core(s) per socket: &#160;16&lt;br/&gt;
Socket(s): &#160; &#160; &#160; &#160; &#160; 1&lt;br/&gt;
NUMA node(s): &#160; &#160; &#160; &#160;1&lt;br/&gt;
Vendor ID: &#160; &#160; &#160; &#160; &#160; AuthenticAMD&lt;br/&gt;
BIOS Vendor ID: &#160; &#160; &#160;Alibaba Cloud&lt;br/&gt;
CPU family: &#160; &#160; &#160; &#160; &#160;25&lt;br/&gt;
Model: &#160; &#160; &#160; &#160; &#160; &#160; &#160; 17&lt;br/&gt;
Model name: &#160; &#160; &#160; &#160; &#160;AMD EPYC 9T24 96-Core Processor&lt;br/&gt;
BIOS Model name: &#160; &#160; pc-i440fx-2.1&lt;br/&gt;
Stepping: &#160; &#160; &#160; &#160; &#160; &#160;1&lt;br/&gt;
CPU MHz: &#160; &#160; &#160; &#160; &#160; &#160; 3694.923&lt;br/&gt;
BogoMIPS: &#160; &#160; &#160; &#160; &#160; &#160;5400.00&lt;br/&gt;
Hypervisor vendor: &#160; KVM&lt;br/&gt;
Virtualization type: full&lt;br/&gt;
L1d cache: &#160; &#160; &#160; &#160; &#160; 32K&lt;br/&gt;
L1i cache: &#160; &#160; &#160; &#160; &#160; 32K&lt;br/&gt;
L2 cache: &#160; &#160; &#160; &#160; &#160; &#160;1024K&lt;br/&gt;
L3 cache: &#160; &#160; &#160; &#160; &#160; &#160;32768K&lt;br/&gt;
NUMA node0 CPU(s): &#160; 0-31&lt;br/&gt;
+ java -version&lt;br/&gt;
openjdk version &quot;24&quot; 2025-03-18&lt;br/&gt;
OpenJDK Runtime Environment (build 24)&lt;br/&gt;
OpenJDK 64-Bit Server VM (build 24, mixed mode, sharing)&lt;br/&gt;
+ java -Xinternalversion&lt;br/&gt;
OpenJDK 64-Bit Server VM (24) for linux-amd64 JRE (24), built on 2024-06-25T20:10:27Z with gcc 10.2.1 20210130 (Red Hat 10.2.1-11)&lt;br/&gt;
+ git remote -v&lt;br/&gt;
origin &#160;git@github.com:openjdk/jdk.git (fetch)&lt;br/&gt;
origin &#160;git@github.com:openjdk/jdk.git (push)&lt;br/&gt;
+ git branch&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;master&lt;br/&gt;
+ git log -n 1&lt;br/&gt;
+ head -n 1&lt;br/&gt;
commit b3bf31a0a08da679ec2fd21613243fb17b1135a9&lt;br/&gt;
+ git status&lt;br/&gt;
On branch master&lt;br/&gt;
Your branch is up to date with &apos;origin/master&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;nothing to commit, working tree clean&lt;/p&gt;</environment>
        <key id="5132828">JDK-8335134</key>
            <summary>Test com/sun/jdi/BreakpointOnClassPrepare.java timeout</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="syan">Sendao Yan</reporter>
                        <labels>
                            <label>hgupdate-sync</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Tue, 25 Jun 2024 20:09:19 -0700</created>
                <updated>Wed, 31 Jul 2024 19:22:10 -0700</updated>
                            <resolved>Thu, 27 Jun 2024 15:21:18 -0700</resolved>
                                                    <fixVersion>24</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                                                            <comments>
                            <comment id="14693952" author="JIRAUSER20917" created="Tue, 30 Jul 2024 18:45:56 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.5-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test pass.  SAP nightly testing passed.</comment>
                            <comment id="14693687" author="roboduke" created="Tue, 30 Jul 2024 02:13:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/877&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/877&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-30 09:06:29 +0000</comment>
                            <comment id="14686143" author="roboduke" created="Mon, 1 Jul 2024 10:14:45 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19976&quot;&gt;https://git.openjdk.org/jdk/pull/19976&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-01 17:10:44 +0000</comment>
                            <comment id="14685519" author="dukebot" created="Thu, 27 Jun 2024 15:21:17 -0700"  >Changeset: 4e8cbf88&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-27 22:20:14 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4e8cbf884ab1eee9c3110712ab62edc706e948ba&quot;&gt;https://git.openjdk.org/jdk/commit/4e8cbf884ab1eee9c3110712ab62edc706e948ba&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14685488" author="cjplummer" created="Thu, 27 Jun 2024 11:48:10 -0700"  >ILW=HLM=P3&lt;br/&gt;
&lt;br/&gt;
This bug is a regression that will end up being backported to 21 and 23.</comment>
                            <comment id="14685149" author="roboduke" created="Wed, 26 Jun 2024 10:34:14 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19910&quot;&gt;https://git.openjdk.org/jdk/pull/19910&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-26 17:26:52 +0000</comment>
                            <comment id="14685146" author="cjplummer" created="Wed, 26 Jun 2024 10:24:01 -0700"  >It turns out that with SUSPEND_NONE it seems that the Thread has always terminated by the time breakpointReached() is called (I confirmed by calling ThreadReference.status()), and the ThreadReference.toString() works just fine in that case. So the only concern is if the Thread also gets collected after terminating, and that will be handled by catching the ObjectCollectedException.</comment>
                            <comment id="14684815" author="cjplummer" created="Tue, 25 Jun 2024 21:38:33 -0700"  >It looks like ThreadReference.toString() should be ok for terminated threads. It ends up in JVMTI GetThreadInfo(), which works for terminated threads.</comment>
                            <comment id="14684810" author="cjplummer" created="Tue, 25 Jun 2024 20:31:27 -0700"  >This seems to be the issue:&lt;br/&gt;
&lt;br/&gt;
com.sun.jdi.ObjectCollectedException&lt;br/&gt;
at jdk.jdi/com.sun.tools.jdi.JDWPException.toJDIException(JDWPException.java:56)&lt;br/&gt;
at jdk.jdi/com.sun.tools.jdi.ObjectReferenceImpl.referenceType(ObjectReferenceImpl.java:174)&lt;br/&gt;
at jdk.jdi/com.sun.tools.jdi.ThreadReferenceImpl.toString(ThreadReferenceImpl.java:636)&lt;br/&gt;
at java.base/java.lang.String.valueOf(String.java:4556)&lt;br/&gt;
at BreakpointOnClassPrepare.breakpointReached(BreakpointOnClassPrepare.java:107)&lt;br/&gt;
at TestScaffold$EventHandler.notifyEvent(TestScaffold.java:193)&lt;br/&gt;
at TestScaffold$EventHandler.run(TestScaffold.java:277)&lt;br/&gt;
at java.base/java.lang.Thread.run(Thread.java:1575) &lt;br/&gt;
&lt;br/&gt;
When the breakpoint event arrives, breakpointReached() does the following:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Got BreakpointEvent: &amp;quot; + bkptCount + &amp;quot; for thread &amp;quot; + event.thread());&lt;br/&gt;
&lt;br/&gt;
event.thread() returns a ThreadReference that there is then an implicit toString() done on, and JDWP is telling us that on the Thread instance on the debuggee side is already collected. My assumption here is that the thread has already exited, followed by a GC.&lt;br/&gt;
&lt;br/&gt;
This test has 3 modes. When the breakpoint is reached the suspend policy can be SUSPEND_ALL, SUSPEND_EVENT_THREAD, or SUSPEND_NONE. From the log we can see the SUSPEND_NONE mode is being used:&lt;br/&gt;
&lt;br/&gt;
command: driver BreakpointOnClassPrepare SUSPEND_NONE&lt;br/&gt;
&lt;br/&gt;
This means while the breakpoint event is being handled, the breakpoint thread continues to run and can exit. If there happens to be a GC after it exits, the Thread instance is collected and any attempt to access it via the ThreadReference mirror will result in ObjectCollectedException.&lt;br/&gt;
&lt;br/&gt;
I think the best fix is to just catch and ignore the ObjectCollectedException during this println(), especially when using SUSPEND_NONE. However, I&amp;#39;m a bit worried we can get other exceptions when doing ThreadReference.toString() if the Thread has exited, but is not collected yet. I&amp;#39;ll need to look into that and make sure those exceptions are also covered.&lt;br/&gt;
&lt;br/&gt;
In the meantime, if this test is noisy due to this failure, I suggest just disabling the SUSPEND_NONE mode for now.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5133194">JDK-8335459</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5133334">JDK-8335581</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5133973">JDK-8336130</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135714">JDK-8337623</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5131012">JDK-8333542</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="109873" name="BreakpointOnClassPrepare.java.log" size="27296" author="syan" created="Tue, 25 Jun 2024 20:09:10 -0700"/>
                    </attachments>
                <subtasks>
                                              <subtask id="5132829">JDK-8335137</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36wq3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>