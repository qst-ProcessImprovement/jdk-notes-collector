<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:07:52 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8319548] Unexpected internal name for Filler array klass causes error in VisualVM</title>
                <link>https://bugs.openjdk.org/browse/JDK-8319548</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I am investigating the following VisualVM bug &lt;a href=&quot;https://github.com/oracle/visualvm/issues/523&quot;&gt;https://github.com/oracle/visualvm/issues/523&lt;/a&gt; and it looks to me that the name of FillerArray&amp;#xA0;in jmap -histo does not follow the naming convention. Below is the current output from JDK 21:&lt;br/&gt;
&lt;br/&gt;
jmap -histo 334286&lt;br/&gt;
&amp;nbsp;num     #instances         #bytes  class name (module)&lt;br/&gt;
-------------------------------------------------------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;1:         22613        1141112  [B (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;2:         21488         515712  java.lang.String (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;3:          3799         470352  java.lang.Class (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4:           290         350480  Ljdk.internal.vm.FillerArray; (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;5:          4081         312000  [Ljava.lang.Object; (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;6:           974         177520  [I (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;7:          5397         172704  java.util.HashMap$Node (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;8:          4819         154208  java.util.concurrent.ConcurrentHashMap$Node (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;9:           948         137208  [C (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;10:          3264         104448  java.util.Hashtable$Entry (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;11:           116          86200  [J (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;12:           622          81920  [Ljava.util.HashMap$Node; (&lt;a href=&apos;mailto:java.base@21.0.1&apos;&gt;java.base@21.0.1&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;13:          2486          79552  javax.swing.text.html.parser.ContentModel (&lt;a href=&apos;mailto:java.desktop@21.0.1&apos;&gt;java.desktop@21.0.1&lt;/a&gt;)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I guess that the correct name should be [Ljdk.internal.vm.FillerArray; - currently it is missing the array prefix [. Alternatively if FillerArray should be reported as an instance of a class (not an array) that the name should be jdk.internal.vm.FillerArray like any other class in the output produced by jmap -histo. However if FillerArray is reported as instance of a class, this means (based on the example above) that there are 290 instances of the FillerArray class, which take up 350480 bytes and so one instance is 1208.5517 bytes - which looks really strange to me.&lt;br/&gt;
&lt;br/&gt;
FYI: I was able to &amp;quot;fix&amp;quot; the FillerArray name with the small naive patch below:&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/hotspot/share/memory/universe.cpp b/src/hotspot/share/memory/universe.cpp&lt;br/&gt;
index 1c0a5461ffe..1f5c1ab03bd 100644&lt;br/&gt;
--- a/src/hotspot/share/memory/universe.cpp&lt;br/&gt;
+++ b/src/hotspot/share/memory/universe.cpp&lt;br/&gt;
@@ -337,7 +337,7 @@ void Universe::genesis(TRAPS) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Initialization of the fillerArrayKlass must come before regular&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// int-TypeArrayKlass so that the int-Array mirror points to the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// int-TypeArrayKlass.&lt;br/&gt;
-      _fillerArrayKlassObj = TypeArrayKlass::create_klass(T_INT, &amp;quot;Ljdk/internal/vm/FillerArray;&amp;quot;, CHECK);&lt;br/&gt;
+      _fillerArrayKlassObj = TypeArrayKlass::create_klass(T_INT, &amp;quot;[Ljdk/internal/vm/FillerArray;&amp;quot;, CHECK);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = T_BOOLEAN; i &amp;lt; T_LONG+1; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_typeArrayKlassObjs[i] = TypeArrayKlass::create_klass((BasicType)i, CHECK);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5114125">JDK-8319548</key>
            <summary>Unexpected internal name for Filler array klass causes error in VisualVM</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tschatzl">Thomas Schatzl</assignee>
                                    <reporter username="thurka">Tom&#225;&#353; H&#367;rka</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok-next</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                    </labels>
                <created>Mon, 6 Nov 2023 08:06:15 -0800</created>
                <updated>Thu, 4 Apr 2024 09:21:41 -0700</updated>
                            <resolved>Thu, 21 Dec 2023 01:19:56 -0800</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                                                            <comments>
                            <comment id="14662938" author="chegar" created="Thu, 4 Apr 2024 09:21:41 -0700"  >Yeah, apologies, your analysis is correct, regarding the the shipping release on said dates.&lt;br/&gt;
&lt;br/&gt;
My substantive point is that 22u did not have this fix, so if one runs into this bug on a JDK 22 release, the only course of action is to downgrade to a 21 update - which seems wrong to me. It should be possible to upgrade to a 22 update to get the fix (before 23 is shipped). Again, maybe this is particular bug fix is not worth getting overly excited about. I&amp;#39;m more surprised by the general approach to porting, and if it could be improved.</comment>
                            <comment id="14662906" author="shade" created="Thu, 4 Apr 2024 07:58:28 -0700"  >The original commit was on Dec 21, 2023, the backport to 21u landed on Jan 05, 2024, targeting the closest release, 21.0.3 in April 2024. (It was too late for 21.0.2 in January 2024, which was deep in rampdown.) This looks completely in line with the idea of delivering fixes in the latest shipping LTS.</comment>
                            <comment id="14662903" author="chegar" created="Thu, 4 Apr 2024 07:36:13 -0700"  >There is a more general concern here - the lack of porting a bug fix to an update of the latest shipping release (whether STS or LTS), since it disadvantages the deployment model of &amp;quot;always on the latest Java&amp;quot; - since the latest shipping release may be missing some crucial bug fixes.&lt;br/&gt;
&lt;br/&gt;
[ In this particular case, I mistakenly thought that this bug was the cause of the error we were seeing. At best, it is just misleading and confusing ]</comment>
                            <comment id="14662802" author="shade" created="Thu, 4 Apr 2024 01:39:42 -0700"  >For this particular patch, no particular reason, just avoiding the churn in STS release that would EOL soon anyway.</comment>
                            <comment id="14662788" author="coffeys" created="Thu, 4 Apr 2024 01:16:45 -0700"  >[~shade] is there a reason why you didn&amp;#39;t port this to the jdk22u release first ?</comment>
                            <comment id="14662027" author="chegar" created="Tue, 2 Apr 2024 02:51:45 -0700"  >&lt;br/&gt;
Elasticsearch 8.13 is the first release to use JDK 22, and fails with `java.lang.IncompatibleClassChangeError: Class Ljdk.internal.vm.FillerArray; does not implement the requested interface java.util.concurrent.locks.Lock`. Further details in &lt;a href=&quot;https://github.com/elastic/elasticsearch/issues/106987&quot;&gt;https://github.com/elastic/elasticsearch/issues/106987&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I assume that the above error only happens when dumping the heap on OOM, since the process is run with `-XX:+HeapDumpOnOutOfMemoryError` and `-XX:+ExitOnOutOfMemoryError`? Is this assumption correct? Is there any workaround for the issue?  [EDIT - this is not correct - I believe we see this error at non OOM times - see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8329528&quot; title=&quot;G1 does not update TAMS correctly when dropping retained regions during Concurrent Start pause&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8329528&quot;&gt;&lt;strike&gt;JDK-8329528&lt;/strike&gt;&lt;/a&gt;]&lt;br/&gt;
&lt;br/&gt;
Full stacktrace:&lt;br/&gt;
&lt;br/&gt;
[2024-03-31T00:01:29,450][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [xxx] fatal error in thread [elasticsearch[xxx][write][T#7]], exiting&lt;br/&gt;
java.lang.IncompatibleClassChangeError: Class Ljdk.internal.vm.FillerArray; does not implement the requested interface java.util.concurrent.locks.Lock&lt;br/&gt;
at org.elasticsearch.common.util.concurrent.ReleasableLock.acquire(ReleasableLock.java:43) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.index.translog.Translog.add(Translog.java:578) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:1223) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:1072) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.index.shard.IndexShard.applyIndexOperation(IndexShard.java:997) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.index.shard.IndexShard.applyIndexOperationOnPrimary(IndexShard.java:915) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.action.bulk.TransportShardBulkAction.executeBulkItemRequest(TransportShardBulkAction.java:378) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.action.bulk.TransportShardBulkAction$2.doRun(TransportShardBulkAction.java:235) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:26) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.action.bulk.TransportShardBulkAction.performOnPrimary(TransportShardBulkAction.java:305) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.action.bulk.TransportShardBulkAction.dispatchedShardOperationOnPrimary(TransportShardBulkAction.java:151) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.action.bulk.TransportShardBulkAction.dispatchedShardOperationOnPrimary(TransportShardBulkAction.java:79) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.action.support.replication.TransportWriteAction$1.doRun(TransportWriteAction.java:216) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:26) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:33) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:984) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:26) ~[elasticsearch-8.13.0.jar:?]&lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]&lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]&lt;br/&gt;
at java.lang.Thread.run(Thread.java:1570) ~[?:?&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14662003" author="chegar" created="Tue, 2 Apr 2024 01:59:57 -0700"  >[jdk22u-fix-request] Approval Request from Chris Hegarty&lt;br/&gt;
Clean backport to improve heap dump reliability w.r.t. filler objects. Applies cleanly.</comment>
                            <comment id="14661998" author="roboduke" created="Tue, 2 Apr 2024 01:52:24 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/119&quot;&gt;https://git.openjdk.org/jdk22u/pull/119&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-02 08:45:48 +0000</comment>
                            <comment id="14637371" author="roboduke" created="Thu, 4 Jan 2024 01:53:55 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/123&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/123&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-04 09:48:55 +0000</comment>
                            <comment id="14637366" author="roboduke" created="Thu, 4 Jan 2024 01:52:10 -0800"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve heap dump reliability w.r.t. filler objects. Only happens after JDK 19. Applies cleanly.</comment>
                            <comment id="14635923" author="dukebot" created="Thu, 21 Dec 2023 01:19:55 -0800"  >Changeset: 05745e3f&lt;br/&gt;
Author:    Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-12-21 09:17:31 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/05745e3f1d56f71d7647e81fa5933c9f4ed18430&quot;&gt;https://git.openjdk.org/jdk/commit/05745e3f1d56f71d7647e81fa5933c9f4ed18430&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14635358" author="roboduke" created="Tue, 19 Dec 2023 02:14:30 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17155&quot;&gt;https://git.openjdk.org/jdk/pull/17155&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-19 10:08:14 +0000</comment>
                            <comment id="14624942" author="tschatzl" created="Wed, 8 Nov 2023 07:33:52 -0800"  >Another option is to not dump these filler objects.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5118148">JDK-8323049</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5123374">JDK-8327439</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126184">JDK-8329668</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5071845">JDK-8284435</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5134899">JDK-8336961</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33rjv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>