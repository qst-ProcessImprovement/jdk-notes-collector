<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:10:57 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8334078] RISC-V: TestIntVect.java fails after JDK-8332153 when running without RVV</title>
                <link>https://bugs.openjdk.org/browse/JDK-8334078</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java fails without RVV after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8332153&quot; title=&quot;RISC-V: enable tests and add comment for vector shift instruct (shared by vectorization and Vector API)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8332153&quot;&gt;&lt;strike&gt;JDK-8332153&lt;/strike&gt;&lt;/a&gt; in fastdebug mode.&lt;br/&gt;
&lt;br/&gt;
UseRVV status:&lt;br/&gt;
```&lt;br/&gt;
[&lt;a href=&apos;mailto:zifeihan@fedora-riscv&apos;&gt;zifeihan@fedora-riscv&lt;/a&gt; bin]$ ./java -XX:+PrintFlagsFinal -version | grep UseRVV&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bool UseRVV                                   = false                                {ARCH product} {default}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bool UseRVVForBigIntegerShiftIntrinsics       = false                                {ARCH product} {default}&lt;br/&gt;
openjdk version &amp;quot;24-internal&amp;quot; 2025-03-18&lt;br/&gt;
OpenJDK Runtime Environment (fastdebug build 24-internal-adhoc.zifeihan.jdk)&lt;br/&gt;
OpenJDK 64-Bit Server VM (fastdebug build 24-internal-adhoc.zifeihan.jdk, mixed mode)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Error message:&lt;br/&gt;
```&lt;br/&gt;
Command line: [/home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/images/jdk/bin/java -cp /home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/test-support/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java/classes/0/compiler/c2/cr7200264/TestIntVect.d:/home/zifeihan/jdk/test/hotspot/jtreg/compiler/c2/cr7200264:/home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/test-support/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java/classes/0/test/lib:/home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/test-support/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java/classes/0:/home/zifeihan/jtreg/lib/javatest.jar:/home/zifeihan/jtreg/lib/jtreg.jar:/home/zifeihan/jtreg/lib/junit-platform-console-standalone-1.9.2.jar:/home/zifeihan/jtreg/lib/testng-7.3.0.jar:/home/zifeihan/jtreg/lib/guice-5.1.0.jar:/home/zifeihan/jtreg/lib/jcommander-1.82.jar -Djava.library.path=/home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/images/test/hotspot/jtreg/native -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:MaxRAMPercentage=0.78125 -Dtest.boot.jdk=/home/zifeihan/jre/jre22 -Djava.io.tmpdir=/home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/test-support/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java/tmp -Dir.framework.server.port=45937 -XX:+PrintCompilation -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:CompilerDirectivesFile=test-vm-compile-commands-pid-101724.log -XX:CompilerDirectivesLimit=431 -XX:-OmitStackTraceInFastThrow -DShouldDoIRVerification=true -XX:-BackgroundCompilation -XX:CompileCommand=quiet compiler.lib.ir_framework.test.TestVM compiler.c2.cr7200264.TestIntVect ]&lt;br/&gt;
[2024-06-12T06:46:51.889815918Z] Gathering output for process 101748&lt;br/&gt;
[2024-06-12T06:46:51.899514171Z] Waiting for completion for process 101748&lt;br/&gt;
[2024-06-12T06:47:09.798159671Z] Waiting for completion finished for process 101748&lt;br/&gt;
Output and diagnostic info for process 101748 was saved into &amp;#39;pid-101748-output.log&amp;#39;&lt;br/&gt;
&lt;br/&gt;
Messages from Test VM&lt;br/&gt;
---------------------&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_addc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_addv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_adda: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_subc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_subv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_suba: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_mulc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_mulc_n: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_mulv: None of the feature constraints met (applyIfCPUFeatureOr): sse4.1, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_mula: None of the feature constraints met (applyIfCPUFeatureOr): sse4.1, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 3 in test_divc: None of the feature constraints met (applyIfCPUFeatureOr): avx2, true, sve, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 3 of 3 in test_divc: Not all feature constraints are met (applyIfCPUFeatureAnd): asimd, true, sve, false&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 3 in test_divc_n: None of the feature constraints met (applyIfCPUFeatureOr): avx2, true, sve, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 3 of 3 in test_divc_n: Not all feature constraints are met (applyIfCPUFeatureAnd): asimd, true, sve, false&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_andc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_andv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_anda: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_orc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_orv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_ora: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_xorc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_xorv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 1 in test_xora: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_sllc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_sllc_n: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_sllc_o: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_sllc_on: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_sllv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srlc: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srlc_n: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srlc_o: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srlc_on: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srlv: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srac: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srac_n: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srac_o: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srac_on: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
[IREncodingPrinter] Disabling IR matching for rule 1 of 2 in test_srav: None of the feature constraints met (applyIfCPUFeatureOr): sse2, true, asimd, true&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
STDERR:&lt;br/&gt;
compiler.lib.ir_framework.shared.TestFormatException:&lt;br/&gt;
One or more format violations have been detected:&lt;br/&gt;
&lt;br/&gt;
Violations (19)&lt;br/&gt;
---------------&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_mulc(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srav(int[],int[],int).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc_o(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc_n(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllv(int[],int[],int).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_divc_n(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_divc(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlv(int[],int[],int).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc_on(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc_on(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_mulc_n(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac_on(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac_o(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc_n(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac_n(int[],int[]).&lt;br/&gt;
&amp;nbsp;- VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc_o(int[],int[]).&lt;br/&gt;
/============/&lt;br/&gt;
	at compiler.lib.ir_framework.shared.TestFormat.throwIfAnyFailures(TestFormat.java:85)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.TestClassParser.createTestClass(TestClassParser.java:73)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.parser.TestClassParser.parse(TestClassParser.java:61)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.runTestVM(TestFramework.java:751)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.start(TestFramework.java:719)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.start(TestFramework.java:339)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.run(TestFramework.java:223)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.run(TestFramework.java:212)&lt;br/&gt;
	at compiler.c2.cr7200264.TestIntVect.main(TestIntVect.java:49)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1575)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: compiler.lib.ir_framework.shared.TestFormatException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
TEST RESULT: Failed. Execution failed: `main&amp;#39; threw exception: compiler.lib.ir_framework.shared.TestFormatException: One or more format violations have been detected: Violations (19) --------------- - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_mulc(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srav(int[],int[],int). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc_o(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc_n(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllv(int[],int[],int). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_divc_n(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_divc(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlv(int[],int[],int). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc_on(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srlc_on(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_mulc_n(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac_on(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac_o(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc_n(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_srac_n(int[],int[]). - VMInfo: MaxVectorSize is not larger than zero for IR rule 2 at void compiler.c2.cr7200264.TestIntVect.test_sllc_o(int[],int[]). /============/&lt;br/&gt;
--------------------------------------------------&lt;br/&gt;
Test results: failed: 1&lt;br/&gt;
Report written to /home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/test-results/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java/html/report.html&lt;br/&gt;
Results written to /home/zifeihan/jdk/build/linux-riscv64-server-fastdebug/test-support/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java&lt;br/&gt;
Error: Some tests failed or other problems occurred.&lt;br/&gt;
Finished running test &amp;#39;jtreg:test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java&amp;#39;&lt;br/&gt;
Test report is stored in build/linux-riscv64-server-fastdebug/test-results/jtreg_test_hotspot_jtreg_compiler_c2_cr7200264_TestIntVect_java&lt;br/&gt;
&lt;br/&gt;
==============================&lt;br/&gt;
Test summary&lt;br/&gt;
==============================&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;TEST                                              TOTAL  PASS  FAIL ERROR&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;jtreg:test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java&lt;br/&gt;
&amp;gt;&amp;gt;                                                       1     0     1     0 &amp;lt;&amp;lt;&lt;br/&gt;
==============================&lt;br/&gt;
TEST FAILURE&lt;br/&gt;
&lt;br/&gt;
make[1]: *** [/home/zifeihan/jdk/make/Init.gmk:327: main] Error 1&lt;br/&gt;
make: *** [/home/zifeihan/jdk/make/Init.gmk:189: test] Error 2&lt;br/&gt;
[&lt;a href=&apos;mailto:zifeihan@fedora-riscv&apos;&gt;zifeihan@fedora-riscv&lt;/a&gt; jdk]$&lt;br/&gt;
```</description>
                <environment></environment>
        <key id="5131646">JDK-8334078</key>
            <summary>RISC-V: TestIntVect.java fails after JDK-8332153 when running without RVV</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gcao">Gui Cao</assignee>
                                    <reporter username="gcao">Gui Cao</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Tue, 11 Jun 2024 23:50:56 -0700</created>
                <updated>Thu, 22 Aug 2024 01:16:53 -0700</updated>
                            <resolved>Mon, 17 Jun 2024 04:39:40 -0700</resolved>
                                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14699485" author="roboduke" created="Tue, 20 Aug 2024 08:33:49 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/937&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/937&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-20 15:25:10 +0000</comment>
                            <comment id="14699481" author="JIRAUSER20521" created="Tue, 20 Aug 2024 08:27:00 -0700"  >Fix Request (21u):&lt;br/&gt;
Hi, at &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8334078&quot; title=&quot;RISC-V: TestIntVect.java fails after JDK-8332153 when running without RVV&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8334078&quot;&gt;&lt;strike&gt;JDK-8334078&lt;/strike&gt;&lt;/a&gt;, modified the matching logic for the linux-riscv64 rvv test, here i would like to backport this to jdk21u-dev, to simplify the subsequent functionality and testing of the backport to jdk21u-dev. This is a risc-v specific change, risk is low.</comment>
                            <comment id="14682051" author="dukebot" created="Mon, 17 Jun 2024 04:39:38 -0700"  >Changeset: ef7923e1&lt;br/&gt;
Author:    Gui Cao &amp;lt;&lt;a href=&apos;mailto:gcao@openjdk.org&apos;&gt;gcao@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Fei Yang &amp;lt;&lt;a href=&apos;mailto:fyang@openjdk.org&apos;&gt;fyang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-17 11:35:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ef7923e1277ce86c6e5331871f1031c28bf82e31&quot;&gt;https://git.openjdk.org/jdk/commit/ef7923e1277ce86c6e5331871f1031c28bf82e31&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14681115" author="roboduke" created="Wed, 12 Jun 2024 22:09:15 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19686&quot;&gt;https://git.openjdk.org/jdk/pull/19686&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-13 03:24:15 +0000</comment>
                            <comment id="14681084" author="fyang" created="Wed, 12 Jun 2024 18:08:57 -0700"  >Like this change:&lt;br/&gt;
diff --git a/src/hotspot/os_cpu/linux_riscv/vm_version_linux_riscv.cpp b/src/hotspot/os_cpu/linux_riscv/vm_version_linux_riscv.cpp&lt;br/&gt;
index f74ed8c8f81..3b7b11f20e3 100644&lt;br/&gt;
--- a/src/hotspot/os_cpu/linux_riscv/vm_version_linux_riscv.cpp&lt;br/&gt;
+++ b/src/hotspot/os_cpu/linux_riscv/vm_version_linux_riscv.cpp&lt;br/&gt;
@@ -131,7 +131,12 @@ void VM_Version::setup_cpu_available_features() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (_feature_list[i]-&amp;gt;feature_string()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const char* tmp = _feature_list[i]-&amp;gt;pretty();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (strlen(tmp) == 1) {&lt;br/&gt;
+          // Feature string is expected to be in multi-character form&lt;br/&gt;
+          // like rvc, rvv, etc so that it will be easier to specify&lt;br/&gt;
+          // target feature string in IR tests.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strcat(buf, &amp;quot; &amp;quot;);&lt;br/&gt;
+          strcat(buf, &amp;quot;r&amp;quot;);&lt;br/&gt;
+          strcat(buf, &amp;quot;v&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strcat(buf, tmp);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Feature string is expected to be lower case.</comment>
                            <comment id="14680930" author="fyang" created="Wed, 12 Jun 2024 06:56:01 -0700"  >Maybe we should add this &amp;quot;rv&amp;quot; prefix to names of all the single-character extensions like rvv, rvc, etc.</comment>
                            <comment id="14680880" author="JIRAUSER20521" created="Wed, 12 Jun 2024 04:14:51 -0700"  >The cpu features obtained here are as follows:&lt;br/&gt;
```&lt;br/&gt;
----------System.out:(4/135)----------&lt;br/&gt;
WB.getCPUFeatures(): &amp;quot;rv64 i m a f d c&amp;quot;&lt;br/&gt;
CPUInfo.getAdditionalCPUInfo(): &amp;quot;&amp;quot;&lt;br/&gt;
CPUInfo.getFeatures(): [rv64, i, m, a, f, d, c]&lt;br/&gt;
```&lt;br/&gt;
I think it&amp;#39;s the `rv64` here that matches the test case `applyIfCPUFeature = {&#8220;v&#8221;, &#8220;true&#8221;})`&lt;br/&gt;
&lt;br/&gt;
I made the following changes:&lt;br/&gt;
```&lt;br/&gt;
diff --git a/src/hotspot/cpu/riscv/vm_version_riscv.hpp b/src/hotspot/cpu/riscv/vm_version_riscv.hpp&lt;br/&gt;
index f3a834b7237..10f6334dbc7 100644&lt;br/&gt;
--- a/src/hotspot/cpu/riscv/vm_version_riscv.hpp&lt;br/&gt;
+++ b/src/hotspot/cpu/riscv/vm_version_riscv.hpp&lt;br/&gt;
@@ -145,7 +145,7 @@ class VM_Version : public Abstract_VM_Version {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;decl(ext_C           , &amp;quot;c&amp;quot;           ,    (&amp;#39;C&amp;#39; - &amp;#39;A&amp;#39;), true , UPDATE_DEFAULT(UseRVC))         \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;decl(ext_Q           , &amp;quot;q&amp;quot;           ,    (&amp;#39;Q&amp;#39; - &amp;#39;A&amp;#39;), true , NO_UPDATE_DEFAULT)              \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;decl(ext_H           , &amp;quot;h&amp;quot;           ,    (&amp;#39;H&amp;#39; - &amp;#39;A&amp;#39;), true , NO_UPDATE_DEFAULT)              \&lt;br/&gt;
-  decl(ext_V           , &amp;quot;v&amp;quot;           ,    (&amp;#39;V&amp;#39; - &amp;#39;A&amp;#39;), true , UPDATE_DEFAULT(UseRVV))         \&lt;br/&gt;
+  decl(ext_V           , &amp;quot;rvv&amp;quot;         ,    (&amp;#39;V&amp;#39; - &amp;#39;A&amp;#39;), true , UPDATE_DEFAULT(UseRVV))         \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;decl(ext_Zicbom      , &amp;quot;Zicbom&amp;quot;      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbom))      \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;decl(ext_Zicboz      , &amp;quot;Zicboz&amp;quot;      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicboz))      \&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;decl(ext_Zicbop      , &amp;quot;Zicbop&amp;quot;      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbop))      \&lt;br/&gt;
diff --git a/test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java b/test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java&lt;br/&gt;
index 17556896f26..d8a40453369 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java&lt;br/&gt;
+++ b/test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java&lt;br/&gt;
@@ -483,7 +483,7 @@ void test_suba(int[] a0, int[] a1, int[] a2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.SUB_VI, &amp;quot;&amp;gt; 0&amp;quot;, IRNode.LSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_mulc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]*VALUE);&lt;br/&gt;
@@ -495,7 +495,7 @@ void test_mulc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.SUB_VI, &amp;quot;&amp;gt; 0&amp;quot;, IRNode.LSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_mulc_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]*(-VALUE));&lt;br/&gt;
@@ -535,7 +535,7 @@ void test_mula(int[] a0, int[] a1, int[] a2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.SUB_VI,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.VECTOR_SIZE + &amp;quot;min(max_int, max_long)&amp;quot;, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Not vectorized: On aarch64, vectorization for this example results in&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// MulVL nodes, which asimd does not support.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.LOAD_VECTOR_I, &amp;quot;= 0&amp;quot;,&lt;br/&gt;
@@ -563,7 +563,7 @@ void test_divc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.SUB_VI,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.VECTOR_SIZE + &amp;quot;min(max_int, max_long)&amp;quot;, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Not vectorized: On aarch64, vectorization for this example results in&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// MulVL nodes, which asimd does not support.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.LOAD_VECTOR_I, &amp;quot;= 0&amp;quot;,&lt;br/&gt;
@@ -686,7 +686,7 @@ void test_xora(int[] a0, int[] a1, int[] a2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.LSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_sllc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;lt;&amp;lt;VALUE);&lt;br/&gt;
@@ -698,7 +698,7 @@ void test_sllc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.LSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_sllc_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;lt;&amp;lt;(-VALUE));&lt;br/&gt;
@@ -715,7 +715,7 @@ void test_sllc_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.LOAD_VECTOR_I, &amp;quot;&amp;gt; 0&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.STORE_VECTOR,  &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_sllc_o(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;lt;&amp;lt;SHIFT);&lt;br/&gt;
@@ -732,7 +732,7 @@ void test_sllc_o(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.LOAD_VECTOR_I, &amp;quot;&amp;gt; 0&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.STORE_VECTOR,  &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_sllc_on(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;lt;&amp;lt;(-SHIFT));&lt;br/&gt;
@@ -744,7 +744,7 @@ void test_sllc_on(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.LSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_sllv(int[] a0, int[] a1, int b) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;lt;&amp;lt;b);&lt;br/&gt;
@@ -756,7 +756,7 @@ void test_sllv(int[] a0, int[] a1, int b) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.URSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srlc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;&amp;gt;VALUE);&lt;br/&gt;
@@ -768,7 +768,7 @@ void test_srlc(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.URSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srlc_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;&amp;gt;(-VALUE));&lt;br/&gt;
@@ -785,7 +785,7 @@ void test_srlc_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.LOAD_VECTOR_I, &amp;quot;&amp;gt; 0&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.STORE_VECTOR,  &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srlc_o(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;&amp;gt;SHIFT);&lt;br/&gt;
@@ -802,7 +802,7 @@ void test_srlc_o(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.LOAD_VECTOR_I, &amp;quot;&amp;gt; 0&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.STORE_VECTOR,  &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srlc_on(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;&amp;gt;(-SHIFT));&lt;br/&gt;
@@ -814,7 +814,7 @@ void test_srlc_on(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.URSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srlv(int[] a0, int[] a1, int b) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;&amp;gt;b);&lt;br/&gt;
@@ -826,7 +826,7 @@ void test_srlv(int[] a0, int[] a1, int b) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.RSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srac(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;VALUE);&lt;br/&gt;
@@ -838,7 +838,7 @@ void test_srac(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.RSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srac_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;(-VALUE));&lt;br/&gt;
@@ -855,7 +855,7 @@ void test_srac_n(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.LOAD_VECTOR_I, &amp;quot;&amp;gt; 0&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.STORE_VECTOR,  &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srac_o(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;SHIFT);&lt;br/&gt;
@@ -872,7 +872,7 @@ void test_srac_o(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.LOAD_VECTOR_I, &amp;quot;&amp;gt; 0&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IRNode.STORE_VECTOR,  &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srac_on(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;(-SHIFT));&lt;br/&gt;
@@ -884,7 +884,7 @@ void test_srac_on(int[] a0, int[] a1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfCPUFeatureOr = {&amp;quot;sse2&amp;quot;, &amp;quot;true&amp;quot;, &amp;quot;asimd&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@IR(counts = { IRNode.RSHIFT_VI, &amp;quot;&amp;gt; 0&amp;quot; },&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyIfPlatform = {&amp;quot;riscv64&amp;quot;, &amp;quot;true&amp;quot;},&lt;br/&gt;
-        applyIfCPUFeature = {&amp;quot;v&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
+        applyIfCPUFeature = {&amp;quot;rvv&amp;quot;, &amp;quot;true&amp;quot;})&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void test_srav(int[] a0, int[] a1, int b) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; a0.length; i+=1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a0[i] = (int)(a1[i]&amp;gt;&amp;gt;b);&lt;br/&gt;
diff --git a/test/hotspot/jtreg/compiler/lib/ir_framework/test/IREncodingPrinter.java b/test/hotspot/jtreg/compiler/lib/ir_framework/test/IREncodingPrinter.java&lt;br/&gt;
index fc46712bb43..73943db3f53 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/compiler/lib/ir_framework/test/IREncodingPrinter.java&lt;br/&gt;
+++ b/test/hotspot/jtreg/compiler/lib/ir_framework/test/IREncodingPrinter.java&lt;br/&gt;
@@ -108,7 +108,7 @@ public class IREncodingPrinter {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;asimd&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;sve&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Riscv64&lt;br/&gt;
-        &amp;quot;v&amp;quot;,&lt;br/&gt;
+        &amp;quot;rvv&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;zvbb&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;));&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
After this patch, this test/hotspot/jtreg/compiler/c2/cr7200264/TestIntVect.java test case can passed normally. &lt;br/&gt;
I think the v in cpu features is risky and suggest to change it to rvv and test cases to be changed synchronously.</comment>
                            <comment id="14680783" author="JIRAUSER20521" created="Tue, 11 Jun 2024 23:56:28 -0700"  >[~mli] : Can you take a look? Thanks</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5137290">JDK-8338816</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5129342">JDK-8332153</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="20300"><![CDATA[riscv]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36pfn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="225"><![CDATA[test]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>