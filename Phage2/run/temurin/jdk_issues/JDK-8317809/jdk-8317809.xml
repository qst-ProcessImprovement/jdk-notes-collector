<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:43:16 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8317809] Insertion of free code blobs into code cache can be very slow during class unloading</title>
                <link>https://bugs.openjdk.org/browse/JDK-8317809</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Class unloading adds dead code blobs to the free list at the end of that process item (freed code blob) by item. The insertion keeps the free list sorted.&lt;br/&gt;
&lt;br/&gt;
Since the free list is a linked list, sorted insertion of a single element is O(n); with 10&amp;#39;s of thousands of elements to insert with a stress test application this process can take a very long time, lengthening pauses in the range of a few seconds.&lt;br/&gt;
&lt;br/&gt;
This is particularly problematic since removal of the code sweeper (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8290025&quot; title=&quot;Remove the Sweeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8290025&quot;&gt;&lt;strike&gt;JDK-8290025&lt;/strike&gt;&lt;/a&gt;) which did that process concurrently, but G1, Serial and Parallel GC do code cache unloading in a pause now.</description>
                <environment></environment>
        <key id="5112056">JDK-8317809</key>
            <summary>Insertion of free code blobs into code cache can be very slow during class unloading</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tschatzl">Thomas Schatzl</assignee>
                                    <reporter username="tschatzl">Thomas Schatzl</reporter>
                        <labels>
                            <label>gc-g1</label>
                            <label>gc-parallel</label>
                            <label>gc-pending-review</label>
                            <label>gc-serial</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>performance</label>
                    </labels>
                <created>Tue, 10 Oct 2023 08:17:39 -0700</created>
                <updated>Thu, 2 May 2024 23:25:37 -0700</updated>
                            <resolved>Tue, 5 Dec 2023 02:40:16 -0800</resolved>
                                    <version>20</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14670472" author="goetz" created="Thu, 2 May 2024 08:30:54 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.4-oracle.&lt;br/&gt;
Larger change in central component, medium to higher risk, but the original author had a look also on the issue that caused backout &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8329524&quot; title=&quot;[BACKOUT] Insertion of free code blobs into code cache can be very slow during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8329524&quot;&gt;&lt;strike&gt;JDK-8329524&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
Small adaptions needed.&lt;br/&gt;
Test passes. SAP nightly testing passes.</comment>
                            <comment id="14666517" author="roboduke" created="Fri, 19 Apr 2024 04:11:49 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/505&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/505&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-16 09:47:42 +0000</comment>
                            <comment id="14631625" author="dukebot" created="Tue, 5 Dec 2023 02:40:15 -0800"  >Changeset: 30817b74&lt;br/&gt;
Author:    Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-12-05 10:37:34 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/30817b742300f10f566e6aee3a8c1f8af4ab3083&quot;&gt;https://git.openjdk.org/jdk/commit/30817b742300f10f566e6aee3a8c1f8af4ab3083&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14631004" author="tschatzl" created="Mon, 4 Dec 2023 05:39:54 -0800"  >Fwiw, to put this change in a bit more context: it  is part of a series of changes to improve class unloading performance back to pre-jdk21 levels (and better).&lt;br/&gt;
&lt;br/&gt;
The basic plan:&lt;br/&gt;
&lt;br/&gt;
* this change, [&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317809&quot; title=&quot;Insertion of free code blobs into code cache can be very slow during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317809&quot;&gt;&lt;strike&gt;JDK-8317809&lt;/strike&gt;&lt;/a&gt;](&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317809),&quot;&gt;https://bugs.openjdk.org/browse/JDK-8317809),&lt;/a&gt; that improves nmethod sorting/free list handling (and introduces the ClassUnloadingContext)&lt;br/&gt;
&lt;br/&gt;
* [&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317007&quot; title=&quot;Add bulk removal of dead nmethods during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317007&quot;&gt;&lt;strike&gt;JDK-8317007&lt;/strike&gt;&lt;/a&gt;](&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317007&quot;&gt;https://bugs.openjdk.org/browse/JDK-8317007&lt;/a&gt;) that allows bulk unregistering of nmethods instead of (slow) per-nmethod unregistering (also out for review)&lt;br/&gt;
&lt;br/&gt;
With the above two changes, Remark pause time should be &amp;lt;= before removal of the code root sweeper (lots of changes went in already that improved time taken for various parts of the class/code unloading).&lt;br/&gt;
&lt;br/&gt;
I am planning the following follow-ups in the next few months (after FC time will be spent on bugfixing, and holidays coming up):&lt;br/&gt;
&lt;br/&gt;
* (for G1) move out several parts of class unloading into the concurrent phase, at least this will include&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- bulk nmethod unregistering ([&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317007&quot; title=&quot;Add bulk removal of dead nmethods during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317007&quot;&gt;&lt;strike&gt;JDK-8317007&lt;/strike&gt;&lt;/a&gt;](&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317007)&quot;&gt;https://bugs.openjdk.org/browse/JDK-8317007)&lt;/a&gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- nmethod code blob freeing (this change)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- metaspace unloading&lt;br/&gt;
&lt;br/&gt;
Not necessarily in a single change; this basically halves g1 remark pause times again in my testing.&lt;br/&gt;
&lt;br/&gt;
* split up and parallelize ClassLoaderData unloading; currently with this change, when registering CLDs CLD-&amp;gt;unload() is immediately called as before. However this is wasteful as most of that method can either be &amp;quot;obviously&amp;quot; parallelized or made so that other tasks can run in parallel.&lt;br/&gt;
So the plan is that class unloading (`SystemDictionary::do_unloading`) will be split into a part that iterates only over the CLD list to determine dead ones, and a parallel part. &lt;br/&gt;
&lt;br/&gt;
There are no CR/PRs out for these latter two items, but hopefully this will short of making everything concurrent keep class/code unloading times low enough for some time.</comment>
                            <comment id="14628169" author="roboduke" created="Tue, 21 Nov 2023 08:10:51 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16759&quot;&gt;https://git.openjdk.org/jdk/pull/16759&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-21 11:03:12 +0000</comment>
                            <comment id="14617186" author="tschatzl" created="Tue, 10 Oct 2023 08:44:48 -0700"  >Fwiw, a prototype for the former (pre-sorting items) reduces the time freeing code blobs to 50ms or less even in these extreme cases.</comment>
                            <comment id="14617180" author="tschatzl" created="Tue, 10 Oct 2023 08:25:02 -0700"  >One solution is gathering and pre-sorting the items and do a merge-sort which is O(n+m) instead of O(n*m).&lt;br/&gt;
&lt;br/&gt;
Another option is to redesign the free code blob management carefully.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5126001">JDK-8329512</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128600">JDK-8331621</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5111148">JDK-8317007</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="5114988">JDK-8320331</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5115206">JDK-8320525</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5109443">JDK-8315504</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5121005">JDK-8326092</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5078872">JDK-8290025</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33f6z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17419"><![CDATA[b27]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>