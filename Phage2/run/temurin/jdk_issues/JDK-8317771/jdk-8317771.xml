<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:02:18 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8317771] [macos14] Expand/collapse a JTree using keyboard freezes the application in macOS 14 Sonoma</title>
                <link>https://bugs.openjdk.org/browse/JDK-8317771</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Apple Silicon M1/M2 32GB, Sonoma 14.0&lt;br/&gt;
The problem is visible in these tested Java versions:&lt;br/&gt;
- Java HotSpot(TM) 64-Bit Server VM, 17.0.8+9-LTS-211, Oracle Corporation&lt;br/&gt;
- OpenJDK 64-Bit Server VM, 17.0.8.1+1, Eclipse Adoptium&lt;br/&gt;
- OpenJDK 64-Bit Server VM, 21+35, Azul Systems, Inc.&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Having a simple JTree with one root and 10 000 child nodes. Toggle the root expansion state using double-click works fine, as well does toggling using the expand/collapse icon. However, using the keyboard right/left keys eventually freezes the Java VM for a long time.&lt;br/&gt;
&lt;br/&gt;
The app works fine in Apple Silicon M1/M2, Ventura 13.x&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Launch the attached sample app&lt;br/&gt;
1. Select the &amp;quot;Root&amp;quot; node&lt;br/&gt;
2. Press left keyboard key collapse the root&lt;br/&gt;
3. Press right keyboard key to expand&lt;br/&gt;
Now the app is frozen&lt;br/&gt;
&lt;br/&gt;
Using double-click or the expansion icon to expand/collapse works fine&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
The tree should instantly expand/collapse when double-click, using the expansion icon, or the keyboard&lt;br/&gt;
ACTUAL -&lt;br/&gt;
The application hangs showing the macOS beachball. After many minutes the app comes back to usable state but the problem will reappear at following expand/collapse using keyboard&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import javax.swing.*;&lt;br/&gt;
import javax.swing.tree.DefaultMutableTreeNode;&lt;br/&gt;
import java.awt.*;&lt;br/&gt;
&lt;br/&gt;
/**&lt;br/&gt;
&amp;nbsp;* Shows a simple JTree with one root and 10 000 child nodes. &lt;br/&gt;
&amp;nbsp;* Toggle the root expansion state using double-click works fine, as well when toggle using the expand/collapse icon. &lt;br/&gt;
&amp;nbsp;* However, using the keyboard right/left keys eventually freezes the Java VM for a long time.&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
class SonomaARMJTreeBug {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SwingUtilities.invokeLater(() -&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String javaInfo = System.getProperty(&amp;quot;os.name&amp;quot;) + &amp;quot; &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.getProperty(&amp;quot;os.version&amp;quot;) + &amp;quot; (&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.getProperty(&amp;quot;os.arch&amp;quot;) + &amp;quot;), &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.getProperty(&amp;quot;java.vm.name&amp;quot;) + &amp;quot;, &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.getProperty(&amp;quot;java.vm.version&amp;quot;) + &amp;quot;, &amp;quot; + &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.getProperty(&amp;quot;java.vm.vendor&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(javaInfo);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(&amp;quot;Root&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; 10000; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rootNode.add(new DefaultMutableTreeNode(&amp;quot;Child &amp;quot; + i));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JTree tree = new JTree(rootNode);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tree.setShowsRootHandles(true);&lt;br/&gt;
//         t.setLargeModel(true); // This makes no difference&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JFrame frame = new JFrame();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;frame.add(new JLabel(&amp;quot;&amp;lt;html&amp;gt;- Toggle the handle icon next to &amp;#39;Root&amp;#39; or double-click it a few times. Expand/collapse works fine.&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;&amp;lt;br&amp;gt;- Now use keyboard right/left to expand/collapse, the app eventually freeze for a long time.&amp;lt;/html&amp;gt;&amp;quot;), BorderLayout.NORTH);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;frame.add(new JScrollPane(tree), BorderLayout.CENTER);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;frame.add(new JLabel(javaInfo), BorderLayout.SOUTH);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;frame.setSize(700, 700);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;frame.setVisible(true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
In macOS 14 use &amp;quot;OpenJDK 64-Bit Server VM, 17.0.7+7-b966.2, JetBrains s.r.o.&amp;quot; or downgrade any other Java VM to version 11.x.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5111903">JDK-8317771</key>
            <summary>[macos14] Expand/collapse a JTree using keyboard freezes the application in macOS 14 Sonoma</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="asemenov">Artem Semenov</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>a11y</label>
                            <label>additional-information-received</label>
                            <label>dcsnr</label>
                            <label>dcspn</label>
                            <label>jdk11u-a11y-defer</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>macos</label>
                            <label>macos14</label>
                            <label>regression_8267385</label>
                            <label>reproducer-yes</label>
                            <label>sup_nrt</label>
                            <label>webbug</label>
                    </labels>
                <created>Fri, 6 Oct 2023 06:31:44 -0700</created>
                <updated>Tue, 9 Jul 2024 11:11:20 -0700</updated>
                            <resolved>Wed, 17 Jan 2024 08:48:03 -0800</resolved>
                                    <version>8u351</version>
                    <version>11.0.17-oracle</version>
                    <version>17.0.2</version>
                    <version>18</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>23</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                                                                <comments>
                            <comment id="14672643" author="roboduke" created="Fri, 10 May 2024 23:03:51 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/196&quot;&gt;https://git.openjdk.org/jdk22u/pull/196&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-11 05:59:44 +0000</comment>
                            <comment id="14672641" author="JIRAUSER20403" created="Fri, 10 May 2024 22:59:58 -0700"  >Fix request: 22u&lt;br/&gt;
&lt;br/&gt;
The backport is clean.&lt;br/&gt;
&lt;br/&gt;
Pull request: &lt;a href=&quot;https://github.com/openjdk/jdk22u/pull/196&quot;&gt;https://github.com/openjdk/jdk22u/pull/196&lt;/a&gt;</comment>
                            <comment id="14641552" author="JIRAUSER20001" created="Thu, 18 Jan 2024 06:09:56 -0800"  >Fix request 17u|21u:&lt;br/&gt;
&lt;br/&gt;
Backporting this patch fixes issues on Mac with large JTrees.&lt;br/&gt;
The risk of the clean backports is minimal, as the surrounding code did not change.&lt;br/&gt;
Tested it with the provided sample program.</comment>
                            <comment id="14641544" author="roboduke" created="Thu, 18 Jan 2024 05:48:10 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2140&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2140&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-18 13:43:19 +0000</comment>
                            <comment id="14641542" author="roboduke" created="Thu, 18 Jan 2024 05:44:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/193&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/193&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-18 13:39:30 +0000</comment>
                            <comment id="14641230" author="dukebot" created="Wed, 17 Jan 2024 08:48:02 -0800"  >Changeset: ffa33d7b&lt;br/&gt;
Author:    Artem Semenov &amp;lt;&lt;a href=&apos;mailto:asemenov@openjdk.org&apos;&gt;asemenov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-01-17 16:44:27 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ffa33d7b807bfef6ff05c9adba869dddf813cf68&quot;&gt;https://git.openjdk.org/jdk/commit/ffa33d7b807bfef6ff05c9adba869dddf813cf68&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14635699" author="roboduke" created="Wed, 20 Dec 2023 01:33:36 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17165&quot;&gt;https://git.openjdk.org/jdk/pull/17165&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-20 09:28:47 +0000</comment>
                            <comment id="14634100" author="prr" created="Wed, 13 Dec 2023 12:40:57 -0800"  >The above code was new as of that fix 8267385: Create NSAccessibilityElement implementation for JavaComponentAccessibility&lt;br/&gt;
&lt;br/&gt;
and commenting it out stops the &amp;quot;hang&amp;quot;&lt;br/&gt;
&lt;br/&gt;
I think the actual time goes in the resulting call to also new code in &lt;br/&gt;
sun/lwawt/macosx/CAccessibility.java&lt;br/&gt;
ie&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static Object[] getChildrenAndRolesRecursive(final Accessible a, final Component c, final int whichChildren, final boolean allowIgnored, final int level) {&lt;br/&gt;
&lt;br/&gt;
Also I confirmed that if all those keyboard shortcuts are DISABLED, then the Expanded/Collapsed methods are NOT called.&lt;br/&gt;
&lt;br/&gt;
And on macOS13.6.1 they are also NOT called, even when keyboard shortcuts are ENABLED.&lt;br/&gt;
&lt;br/&gt;
So something has changed in macOS14 to trigger these being called, and that&amp;#39;s yet to be&lt;br/&gt;
explained, although arguably they should be called, and perhaps disabling all those shortcuts tickles macOS 14 into behaving like macOS 13 and deciding there&amp;#39;s no need to send those events.&lt;br/&gt;
&lt;br/&gt;
But I am fairly sure that the fundamental problem is the time to process all those rows.&lt;br/&gt;
I&amp;#39;m surprised 10,000 rows takes 100 seconds as that&amp;#39;s only 100 rows / second.&lt;br/&gt;
But its pretty clear now that this should be looked at from the point of the A11Y code.</comment>
                            <comment id="14633807" author="psadhukhan" created="Tue, 12 Dec 2023 21:11:07 -0800"  >I could not make it work by removing keybpoard SHortcut from remote system (host being Windows)&lt;br/&gt;
but&lt;br/&gt;
I could confirm the problem starts reproducing from jdk18b10..jdk18b09 works whereas jdk18b10 does not although it behaves in opengl fashion even in metal pipeline meaning 1st collapse/expand works but next collapse hangs..&lt;br/&gt;
&lt;br/&gt;
It seems sending notification is causing issue...Commenting this NSAccessibilityPostNotification&lt;br/&gt;
helps in my testing..&lt;br/&gt;
[~prr] Can you please also confirm?&lt;br/&gt;
&lt;br/&gt;
src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/CommonComponentAccessibility.m&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;(void)postTreeNodeExpanded&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AWT_ASSERT_APPKIT_THREAD;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NSAccessibilityPostNotification([[self accessibilitySelectedRows] firstObject], NSAccessibilityRowExpandedNotification);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
- (void)postTreeNodeCollapsed&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AWT_ASSERT_APPKIT_THREAD;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NSAccessibilityPostNotification([[self accessibilitySelectedRows] firstObject], NSAccessibilityRowCollapsedNotification);&lt;br/&gt;
}</comment>
                            <comment id="14633772" author="prr" created="Tue, 12 Dec 2023 15:21:48 -0800"  >OK I am now almost certain of it. In JDK 18 the problem starts from b10, and that&amp;#39;s when most of those A11Y fixes&lt;br/&gt;
were originally pushed. 17.0.8 was the backports.&lt;br/&gt;
&lt;br/&gt;
There were 6 related listed bugs fixed in b10 but all were part of this ONE massive PR&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/pull/4412/files&quot;&gt;https://github.com/openjdk/jdk/pull/4412/files&lt;/a&gt;</comment>
                            <comment id="14633771" author="prr" created="Tue, 12 Dec 2023 15:08:16 -0800"  >So I did some regressing of this problem. JDK 17 GA is fine. So is 17.0.1, but 17.0.2 reproduces it.&lt;br/&gt;
17.0.2 has some 20 backport fixes for the new macOS A11Y support.&lt;br/&gt;
That work has also been backported to 8u.&lt;br/&gt;
Of course A11Y involves using keys to navigate instead of the mouse so that&amp;#39;s a very interesting  connection.&lt;br/&gt;
&lt;br/&gt;
So I suspect something in those changes is interacting badly with macOS 14 but I don&amp;#39;t know precisely what.&lt;br/&gt;
None of the components for which backports were done scream &amp;quot;JTree&amp;quot;, so I only &amp;quot;suspect&amp;quot; but am not &amp;quot;sure&amp;quot;.&lt;br/&gt;
So someone needs to do some more precise regressing of this to confirm / narrow it down.</comment>
                            <comment id="14633763" author="prr" created="Tue, 12 Dec 2023 14:01:01 -0800"  >The problem is triggered by keyboard shortcuts.&lt;br/&gt;
Go into System Settings -&amp;gt; Keyboard -&amp;gt; Keyboard Shortcuts and clear them all and the problem will go away.&lt;br/&gt;
It is not obviously related to shortcuts that use the arrow keys. &lt;br/&gt;
If any one of some significant number of short cuts are enabled, the problem reproduces, even for many short cuts that don&amp;#39;t have a key mapped.&lt;br/&gt;
Here&amp;#39;s a specific thing to do to see how inexplicable it is. &lt;br/&gt;
(1) Clear all shortcuts as described above&lt;br/&gt;
(2) confirm problem isn&amp;#39;t reproducible&lt;br/&gt;
(3) Enable the shortcut Services-&amp;gt;Text-&amp;gt;Convert Text to Full Width&lt;br/&gt;
(4) Verify the problem is back.&lt;br/&gt;
&lt;br/&gt;
I have NO idea what that unmapped short-cut could do to cause this, but it is not the only one.&lt;br/&gt;
&lt;br/&gt;
&amp;quot;top&amp;quot; shows the java process at 99% -100% CPU whilst this is happening so there&amp;#39;s&lt;br/&gt;
some processing going on, not just a wait.&lt;br/&gt;
&lt;br/&gt;
Also it is not specific to M1/ARM. It has now been reproduced on x64 too.&lt;br/&gt;
</comment>
                            <comment id="14633686" author="psadhukhan" created="Tue, 12 Dec 2023 08:02:25 -0800"  >It probably can be related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8320664&quot; title=&quot;Performance issue with large JTree on macOS &quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8320664&quot;&gt;&lt;strike&gt;JDK-8320664&lt;/strike&gt;&lt;/a&gt; for large JTree performance issues..</comment>
                            <comment id="14633444" author="psadhukhan" created="Mon, 11 Dec 2023 19:07:25 -0800"  >With &lt;br/&gt;
export METAL_DEVICE_WRAPPER_TYPE=1&lt;br/&gt;
export MTL_SHADER_VALIDATION=1 &lt;br/&gt;
&lt;br/&gt;
I am also not getting anything except &amp;quot;Metal API Validation Enabled&amp;quot; log&lt;br/&gt;
&lt;br/&gt;
Also, it is still reproducible in the mach5 node I told which is now 14.1.2 M1..Not sure what is the different in config...&lt;br/&gt;
</comment>
                            <comment id="14633411" author="JIRAUSER19814" created="Mon, 11 Dec 2023 14:20:40 -0800"  >Replicable for following configurations:&lt;br/&gt;
macOS 14.1/M1/VNC on both Metal &amp;amp; OpenGL</comment>
                            <comment id="14633371" author="prr" created="Mon, 11 Dec 2023 12:21:12 -0800"  >PS you could try running it using&lt;br/&gt;
export METAL_DEVICE_WRAPPER_TYPE=1&lt;br/&gt;
export MTL_SHADER_VALIDATION=1&lt;br/&gt;
other than causing the message &amp;quot;Metal GPU Validation Enabled&amp;quot; this didn&amp;#39;t log&lt;br/&gt;
anything for me.</comment>
                            <comment id="14633368" author="prr" created="Mon, 11 Dec 2023 12:17:32 -0800"  >No problem over VNC either. This a  2020 M1 macMini with 16HB RAM, and a fairly&lt;br/&gt;
ordinary Samsung 1920x1080 HDMI display.&lt;br/&gt;
If it is specific to M2 then I won&amp;#39;t be able to reproduce it.&lt;br/&gt;
But the node you reproduced on &amp;quot;a while back&amp;quot; is the same as mine, ie a 2020 M1 macMini&lt;br/&gt;
Perhaps it was running 14.0 GA at that time .. &lt;br/&gt;
Still wondering if there&amp;#39;s some thing in the instructions I&amp;#39;m not following correctly.</comment>
                            <comment id="14633049" author="psadhukhan" created="Mon, 11 Dec 2023 02:11:24 -0800"  >JTOL, maybe you testing directly on physical mc is helping it pass whereas I am testing via VNC on both local and mach5 systems where it fails..</comment>
                            <comment id="14632955" author="psadhukhan" created="Sun, 10 Dec 2023 18:50:36 -0800"  >That is strange..&lt;br/&gt;
I am running it on local 14.1.2 M2 where it fails on 1st iteration of left-right press..It used to fail there when it was 14.1.1 and I upgraded to see if it has any effect..&lt;br/&gt;
I had also tried on mach5 node  a while back where it was reproducible..&lt;br/&gt;
[~kizune] mentioned he was not able to reproduce in non M1 machine &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317771?focusedId=14618242&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14618242&quot;&gt;https://bugs.openjdk.org/browse/JDK-8317771?focusedId=14618242&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14618242&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
but as per your comments, you are trying on M1 itself so it seems strange..&lt;br/&gt;
Is your mc in the network? Maybe some system configuration you have knowingly/unknowingly altered is helping this...I can provide my local mc login if you want to try..but you can try on arm-10 in mach5 if you want..&lt;br/&gt;
&lt;br/&gt;
OK...On running it again on M2 local mc, I see in opengl the 1st iteration of LEFT-RIGHT key renders the JTree rows immediately unlike metal but logs shown KeyUp is not logged for RIGHT key so next LEFT key to collapse the tree is not acted upon immediately and KeyUp is logged after 106 secs..&lt;br/&gt;
so in opengl also it happens but on 2nd iteration unlike metal where it happens in 1st iteration..</comment>
                            <comment id="14632772" author="prr" created="Fri, 8 Dec 2023 13:14:23 -0800"  >I can&amp;#39;t reproduce this at all on an M1 macMini running macOS 14.1 &lt;br/&gt;
Not with either opengl or metal. Which exact OS version are you testing ?&lt;br/&gt;
I hit left-right until I got tired of it and it was always instant.  How many iterations did it take for you ?&lt;br/&gt;
&lt;br/&gt;
Since you see a difference metal vs OpenGL I wonder how much to believe what is written in the bug description&lt;br/&gt;
where it is reported against JDK 17 since Metal was not turned on until JDK 19&lt;br/&gt;
I&amp;#39;m also puzzled about how key press vs mouse clicks matter (according to the submitter/ test).&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14632668" author="psadhukhan" created="Fri, 8 Dec 2023 06:57:18 -0800"  >[~prr] WIll you have some time to check if same behaviour in opengl is observed vis-a-vis metal in you mac14 system to ensure same observation is seen for opengl vs metal comparison in 2 separate distinct macos14 systems?</comment>
                            <comment id="14632434" author="psadhukhan" created="Thu, 7 Dec 2023 09:21:49 -0800"  >In opengl, the test seems to be working in the sense all 30 odd visible rows are rendered almost instantaneously after pressing RIGHT key after LEFT key but after rendering, it shows beachball&lt;br/&gt;
whereas in metal, the rows are not rendered at all for 106 secs </comment>
                            <comment id="14632290" author="psadhukhan" created="Wed, 6 Dec 2023 23:56:30 -0800"  >With 1000 Tree rows, keyUP is sent or logged almost instantaneously with KeyDown&lt;br/&gt;
&lt;br/&gt;
With 1500 Tree rows, KeyUp is logged after 1 sec&lt;br/&gt;
&lt;br/&gt;
2023-12-07 07:44:05.168 java[50360:2000777] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(44,631) time=184616.6 flags=0xa00000 win=0x2a846c140 winNum=916 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
2023-12-07 07:44:06.215 java[50360:2000777] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(44,631) time=184616.7 flags=0xa00000 win=0x2a846c140 winNum=916 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
With 2000 Tree rows it is after 2 secs&lt;br/&gt;
2023-12-07 07:54:20.239 java[61803:2028977] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(49,630) time=185231.6 flags=0xa00000 win=0x1397fb8b0 winNum=962 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
2023-12-07 07:54:22.055 java[61803:2028977] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(49,630) time=185231.8 flags=0xa00000 win=0x1397fb8b0 winNum=962 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
With 3000 rows it is 5 secs&lt;br/&gt;
&lt;br/&gt;
2023-12-07 07:57:44.671 java[61809:2031159] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(51,629) time=185436.1 flags=0xa00000 win=0x28db8c630 winNum=984 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
2023-12-07 07:57:49.152 java[61809:2031159] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(51,629) time=185436.2 flags=0xa00000 win=0x28db8c630 winNum=984 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
WIth 5000 rows it is 16 secs&lt;br/&gt;
&lt;br/&gt;
2023-12-07 08:00:22.019 java[61815:2032826] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(53,631) time=185593.4 flags=0xa00000 win=0x2b835b1e0 winNum=1004 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
2023-12-07 08:00:38.192 java[61815:2032826] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(53,631) time=185593.5 flags=0xa00000 win=0x2b835b1e0 winNum=1004 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
With 8000 rows it is 58 secs&lt;br/&gt;
&lt;br/&gt;
2023-12-07 08:04:23.641 java[62033:2035980] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(47,628) time=185835.0 flags=0xa00000 win=0x132978470 winNum=1024 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
2023-12-07 08:05:21.426 java[62033:2035980] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(47,628) time=185835.2 flags=0xa00000 win=0x132978470 winNum=1024 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
&lt;br/&gt;
So I guess it is expected to take 106 secs for 10000 rows...&lt;br/&gt;
&lt;br/&gt;
But in mac13 even for 10000 rows, keyUp is logged instantaneously&lt;br/&gt;
&lt;br/&gt;
2023-12-07 14:30:45.206 java[29174:3243849] EVent ---&amp;gt; NSEvent: type=KeyDown loc=(54.2891,626.789) time=164618.8 flags=0xa00100 win=0x142ef1950 winNum=2163 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-07 14:30:45.315 java[29174:3243849] EVent ---&amp;gt; NSEvent: type=KeyUp loc=(54.2891,626.789) time=164618.9 flags=0xa00100 win=0x142ef1950 winNum=2163 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124</comment>
                            <comment id="14632270" author="psadhukhan" created="Wed, 6 Dec 2023 21:00:29 -0800"  >Without filtering and adding an extra log in AWTWindow.m#sendEvent, there seems to be lot of mouseMoved but no events being delivered for logging after KeyUP is generated&lt;br/&gt;
&amp;nbsp;04:21:08.897 KeyDown time=172440.3&lt;br/&gt;
&amp;nbsp;04:22:52.752 KeyUP  time=172440.4&lt;br/&gt;
so seems app gets frozen AFTER keyUP is generated&lt;br/&gt;
&lt;br/&gt;
2023-12-07 04:21:03.037 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=MouseMoved loc=(60,627) time=172434.4 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25008 click=0 buttonNumber=0 pressure=0 deltaX=0.000000 deltaY=-2.000000 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.037 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=MouseMoved loc=(60,627) time=172434.4 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25008 click=0 buttonNumber=0 pressure=0 deltaX=0.000000 deltaY=-2.000000 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.045 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=MouseMoved loc=(59,627) time=172434.5 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25008 click=0 buttonNumber=0 pressure=0 deltaX=-1.000000 deltaY=0.000000 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.045 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=MouseMoved loc=(59,627) time=172434.5 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25008 click=0 buttonNumber=0 pressure=0 deltaX=-1.000000 deltaY=0.000000 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.135 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=MouseMoved loc=(58,627) time=172434.5 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25008 click=0 buttonNumber=0 pressure=0 deltaX=-1.000000 deltaY=0.000000 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.135 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=MouseMoved loc=(58,627) time=172434.5 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25008 click=0 buttonNumber=0 pressure=0 deltaX=-1.000000 deltaY=0.000000 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.446 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=LMouseDown loc=(58,627) time=172434.9 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25009 click=1 buttonNumber=0 pressure=1 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.446 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=LMouseDown loc=(58,627) time=172434.9 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25009 click=1 buttonNumber=0 pressure=1 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.669 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=LMouseUp loc=(58,627) time=172435.1 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25009 click=1 buttonNumber=0 pressure=0 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:03.669 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=LMouseUp loc=(58,627) time=172435.1 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=25009 click=1 buttonNumber=0 pressure=0 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-07 04:21:05.936 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(58,627) time=172437.3 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-07 04:21:05.993 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=KeyDown loc=(58,627) time=172437.3 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-07 04:21:06.059 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(58,627) time=172437.5 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-07 04:21:06.059 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=KeyUp loc=(58,627) time=172437.5 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-07 04:21:08.897 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(58,627) time=172440.3 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-07 04:21:08.899 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=KeyDown loc=(58,627) time=172440.3 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-07 04:22:52.752 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(58,627) time=172440.4 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-07 04:22:52.752 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=KeyUp loc=(58,627) time=172440.4 flags=0xa00000 win=0x2acc54cd0 winNum=565 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-07 04:22:52.752 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=FlagsChanged loc=(58,627) time=172462.5 flags=0x100008 win=0x2acc54cd0 winNum=565 ctxt=0x0 keyCode=55&lt;br/&gt;
2023-12-07 04:22:52.752 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=FlagsChanged loc=(58,627) time=172462.5 flags=0x100008 win=0x2acc54cd0 winNum=565 ctxt=0x0 keyCode=55&lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=FlagsChanged loc=(58,627) time=172462.7 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 keyCode=55&lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=FlagsChanged loc=(58,627) time=172462.7 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 keyCode=55&lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=KitDefined loc=(0,1024) time=172462.7 flags=0x40 win=0x0 winNum=0 ctxt=0x0 subtype=2 data1=0 data2=0&lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] resigned key: 0  (null)&lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] deactivating window: &lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] resigned main: 0  (null)&lt;br/&gt;
2023-12-07 04:22:52.753 java[61399:1529205] deactivating window: &lt;br/&gt;
2023-12-07 04:22:52.763 java[61399:1529205] Event ---&amp;gt;  NSEvent: type=MouseExited loc=(58,627) time=172462.7 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=0 trackNum=b4b4 userData=0x0&lt;br/&gt;
2023-12-07 04:22:52.763 java[61399:1529205] AWTWindow#sendEvent &amp;lt;---&amp;gt; NSEvent: type=MouseExited loc=(58,627) time=172462.7 flags=0 win=0x2acc54cd0 winNum=565 ctxt=0x0 evNum=0 trackNum=b4b4 userData=0x0</comment>
                            <comment id="14632168" author="prr" created="Wed, 6 Dec 2023 10:27:46 -0800"  >Sorry, meant to reply yesterday, but my reading of the log is that Cocoa actually generated the UP event&lt;br/&gt;
just 100ms after the DOWN event. ie Down at 22794.2 and Up at 22794.3&lt;br/&gt;
But it arrived HERE and more precisely was LOGGED 106 seconds later than it was generated.&lt;br/&gt;
Perhaps this is what you mean by &amp;quot;not sending&amp;quot; ?&lt;br/&gt;
If you look at the next event - &amp;quot;FlagsChanged&amp;quot;, that&amp;#39;s where the event generation is 106 seconds later&lt;br/&gt;
(22902.9-22794.3==108.6 to be precise). Probably this is as a result of some action taken by the&lt;br/&gt;
test+JDK after finally processing the KeyUp.&lt;br/&gt;
So it looks like the app just stopped processing for 106 seconds .. but AFTER the KeyUp was generated.&lt;br/&gt;
And I have no idea why.&lt;br/&gt;
&lt;br/&gt;
I think you should try removing the filtering of event types for logging to check if there&amp;#39;s anything at all being delivered / processed in the interim&lt;br/&gt;
</comment>
                            <comment id="14630994" author="psadhukhan" created="Mon, 4 Dec 2023 04:46:49 -0800"  >[~prr] Any idea why it will take so long for keyUp? the logs is put in NSApplicationAWT.m#sendEvent which I guess is called 1st up from native so it seems Cocoa is not sending keyUp event &lt;br/&gt;
or do you have any other theory?</comment>
                            <comment id="14630987" author="psadhukhan" created="Mon, 4 Dec 2023 04:22:44 -0800"  >3rd instance where keyDown is received at  12:19:10.571 while keyUp is received at 12:20:56.051 ie after 106sec or 1min 46secs&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2023-12-04 12:19:04.794 java[3338:601402] Event ---&amp;gt;  NSEvent: type=MouseEntered loc=(684,98) time=22788.4 flags=0 win=0x127d8bf10 winNum=371 ctxt=0x0 evNum=0 trackNum=8950 userData=0x0&lt;br/&gt;
2023-12-04 12:19:04.796 java[3338:601402] Event ---&amp;gt;  NSEvent: type=MouseEntered loc=(684,98) time=22788.4 flags=0 win=0x127d8bf10 winNum=371 ctxt=0x0 evNum=0 trackNum=60000004de50 userData=0x0&lt;br/&gt;
2023-12-04 12:19:06.893 java[3338:601402] Event ---&amp;gt;  NSEvent: type=LMouseDown loc=(49,624) time=22790.5 flags=0 win=0x127d8bf10 winNum=371 ctxt=0x0 evNum=25056 click=1 buttonNumber=0 pressure=1 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-04 12:19:06.904 java[3338:601402] Event ---&amp;gt;  NSEvent: type=LMouseUp loc=(49,624) time=22790.5 flags=0 win=0x127d8bf10 winNum=371 ctxt=0x0 evNum=25056 click=1 buttonNumber=0 pressure=0 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-04 12:19:08.650 java[3338:601402] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(49,624) time=22792.2 flags=0xa00000 win=0x127d8bf10 winNum=371 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 12:19:08.782 java[3338:601402] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(49,624) time=22792.4 flags=0xa00000 win=0x127d8bf10 winNum=371 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 12:19:10.571 java[3338:601402] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(49,624) time=22794.2 flags=0xa00000 win=0x127d8bf10 winNum=371 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-04 12:20:56.051 java[3338:601402] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(49,624) time=22794.3 flags=0xa00000 win=0x127d8bf10 winNum=371 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-04 12:20:59.302 java[3338:601402] Event ---&amp;gt;  NSEvent: type=FlagsChanged loc=(49,624) time=22902.9 flags=0x100008 win=0x127d8bf10 winNum=371 ctxt=0x0 keyCode=55&lt;br/&gt;
2023-12-04 12:20:59.451 java[3338:601402] Event ---&amp;gt;  NSEvent: type=FlagsChanged loc=(49,624) time=22903.0 flags=0 win=0x127d8bf10 winNum=371 ctxt=0x0 keyCode=55&lt;br/&gt;
</comment>
                            <comment id="14630985" author="psadhukhan" created="Mon, 4 Dec 2023 04:16:17 -0800"  >2nd instance where KeyDown is coming at 12:10:54 and keyUp is coming at 12:12:39.512 ie difference of 1min 45sec&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2023-12-04 12:10:46.151 java[3122:596296] Event ---&amp;gt;  NSEvent: type=MouseEntered loc=(673,155) time=22289.7 flags=0 win=0x129e32270 winNum=332 ctxt=0x0 evNum=0 trackNum=855b userData=0x0&lt;br/&gt;
2023-12-04 12:10:46.151 java[3122:596296] Event ---&amp;gt;  NSEvent: type=MouseEntered loc=(673,155) time=22289.7 flags=0 win=0x129e32270 winNum=332 ctxt=0x0 evNum=0 trackNum=600000e40e60 userData=0x0&lt;br/&gt;
2023-12-04 12:10:49.239 java[3122:596296] Event ---&amp;gt;  NSEvent: type=LMouseDown loc=(56,622) time=22292.8 flags=0 win=0x129e32270 winNum=332 ctxt=0x0 evNum=25002 click=1 buttonNumber=0 pressure=1 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-04 12:10:49.317 java[3122:596296] Event ---&amp;gt;  NSEvent: type=LMouseUp loc=(56,622) time=22292.9 flags=0 win=0x129e32270 winNum=332 ctxt=0x0 evNum=25002 click=1 buttonNumber=0 pressure=0 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-04 12:10:51.733 java[3122:596296] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(56,622) time=22295.3 flags=0xa00000 win=0x129e32270 winNum=332 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 12:10:51.833 java[3122:596296] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(56,622) time=22295.4 flags=0xa00000 win=0x129e32270 winNum=332 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 12:10:54.284 java[3122:596296] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(56,622) time=22297.9 flags=0xa00000 win=0x129e32270 winNum=332 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-04 12:12:39.512 java[3122:596296] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(56,622) time=22298.0 flags=0xa00000 win=0x129e32270 winNum=332 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-04 12:12:42.822 java[3122:596296] Event ---&amp;gt;  NSEvent: type=FlagsChanged loc=(56,622) time=22406.4 flags=0x100008 win=0x129e32270 winNum=332 ctxt=0x0 keyCode=55&lt;br/&gt;
2023-12-04 12:12:42.980 java[3122:596296] Event ---&amp;gt;  NSEvent: type=FlagsChanged loc=(56,622) time=22406.6 flags=0 win=0x129e32270 winNum=332 ctxt=0x0 keyCode=55</comment>
                            <comment id="14630945" author="psadhukhan" created="Mon, 4 Dec 2023 02:11:28 -0800"  >keyUp event is coming but very late...ie&lt;br/&gt;
keyDown is coming at 10:04:40.970 while keyUp event is coming at 10:06:27.475 ie AFTER 1min 47sec&lt;br/&gt;
&lt;br/&gt;
2023-12-04 10:04:39.239 java[99545:525297] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(48,625) time=14722.8 flags=0xa00000 win=0x2a4a7b3b0 winNum=301 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 10:04:39.363 java[99545:525297] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(48,625) time=14723.0 flags=0xa00000 win=0x2a4a7b3b0 winNum=301 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 10:04:40.970 java[99545:525297] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(48,625) time=14724.6 flags=0xa00000 win=0x2a4a7b3b0 winNum=301 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124&lt;br/&gt;
2023-12-04 10:06:27.475 java[99545:525297] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(48,625) time=14724.7 flags=0xa00000 win=0x2a4a7b3b0 winNum=301 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=124</comment>
                            <comment id="14630941" author="psadhukhan" created="Mon, 4 Dec 2023 02:00:35 -0800"  >When left arrow key is pressed, &amp;quot;KeyDown&amp;quot; and &amp;quot;KeyUp&amp;quot; both native events are received but&lt;br/&gt;
when right arrow key is pressed immediately afterwards left key, then &amp;quot;KeyDown&amp;quot; native event is received but not &amp;quot;keyUp&amp;quot;...&lt;br/&gt;
It is similar to LMouseUp event not received from native as seen in JDK-8316016&lt;br/&gt;
&lt;br/&gt;
2023-12-04 09:59:24.253 java[99542:522379] Event ---&amp;gt;  NSEvent: type=MouseEntered loc=(153,16) time=14407.8 flags=0 win=0x2ae068a30 winNum=285 ctxt=0x0 evNum=0 trackNum=75ab userData=0x0&lt;br/&gt;
2023-12-04 09:59:24.254 java[99542:522379] Event ---&amp;gt;  NSEvent: type=MouseEntered loc=(153,16) time=14407.8 flags=0 win=0x2ae068a30 winNum=285 ctxt=0x0 evNum=0 trackNum=600003a38c80 userData=0x0&lt;br/&gt;
2023-12-04 09:59:25.834 java[99542:522379] Event ---&amp;gt;  NSEvent: type=LMouseDown loc=(52,632) time=14409.4 flags=0 win=0x2ae068a30 winNum=285 ctxt=0x0 evNum=25370 click=1 buttonNumber=0 pressure=1 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-04 09:59:25.847 java[99542:522379] Event ---&amp;gt;  NSEvent: type=LMouseUp loc=(52,632) time=14409.4 flags=0 win=0x2ae068a30 winNum=285 ctxt=0x0 evNum=25370 click=1 buttonNumber=0 pressure=0 deviceID:0x0 subtype=0&lt;br/&gt;
2023-12-04 09:59:28.333 java[99542:522379] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(52,632) time=14411.9 flags=0xa00000 win=0x2ae068a30 winNum=285 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 09:59:28.424 java[99542:522379] Event ---&amp;gt;  NSEvent: type=KeyUp loc=(52,632) time=14412.0 flags=0xa00000 win=0x2ae068a30 winNum=285 ctxt=0x0 chars=&amp;quot;&#63234;&amp;quot; unmodchars=&amp;quot;&#63234;&amp;quot; repeat=0 keyCode=123&lt;br/&gt;
2023-12-04 09:59:31.857 java[99542:522379] Event ---&amp;gt;  NSEvent: type=KeyDown loc=(52,632) time=14415.5 flags=0xa00000 win=0x2ae068a30 winNum=285 ctxt=0x0 chars=&amp;quot;&#63235;&amp;quot; unmodchars=&amp;quot;&#63235;&amp;quot; repeat=0 keyCode=12&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14630176" author="psadhukhan" created="Wed, 29 Nov 2023 21:30:09 -0800"  >Seems like keyReleased event is missing from native similar to LMouseUp..similar root cause in awt...assigning to [~honkar] for further analysis</comment>
                            <comment id="14629372" author="psadhukhan" created="Mon, 27 Nov 2023 21:54:02 -0800"  >Seems like keyReleased is not called after keyPressed when Right key is clicked to expand the tree noded AFTER Left key is clicked to collapse the nodes..&lt;br/&gt;
======================&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
Mac OS X 14.1 (aarch64), Java HotSpot(TM) 64-Bit Server VM, 21.0.1+12-LTS-29, Oracle Corporation&lt;br/&gt;
keyPressed java.awt.event.KeyEvent[KEY_PRESSED,keyCode=39,keyText=&#8594;,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x27] on javax.swing.JTree[,0,0,681x190019,alignmentX=0.0,alignmentY=0.0,border=,flags=360,maximumSize=,minimumSize=,preferredSize=,editable=false,invokesStopCellEditing=false,largeModel=false,rootVisible=true,rowHeight=19,scrollsOnExpand=false,showsRootHandles=true,toggleClickCount=2,visibleRowCount=20]&lt;br/&gt;
keyiRelssed java.awt.event.KeyEvent[KEY_RELEASED,keyCode=39,keyText=&#8594;,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x27] on javax.swing.JTree[,0,0,681x190019,alignmentX=0.0,alignmentY=0.0,border=,flags=360,maximumSize=,minimumSize=,preferredSize=,editable=false,invokesStopCellEditing=false,largeModel=false,rootVisible=true,rowHeight=19,scrollsOnExpand=false,showsRootHandles=true,toggleClickCount=2,visibleRowCount=20]&lt;br/&gt;
&lt;br/&gt;
keyPressed java.awt.event.KeyEvent[KEY_PRESSED,keyCode=37,keyText=&#8592;,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x25] on javax.swing.JTree[,0,0,681x190019,alignmentX=0.0,alignmentY=0.0,border=,flags=360,maximumSize=,minimumSize=,preferredSize=,editable=false,invokesStopCellEditing=false,largeModel=false,rootVisible=true,rowHeight=19,scrollsOnExpand=false,showsRootHandles=true,toggleClickCount=2,visibleRowCount=20]&lt;br/&gt;
keyiRelssed java.awt.event.KeyEvent[KEY_RELEASED,keyCode=37,keyText=&#8592;,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x25] on javax.swing.JTree[,0,0,696x620,alignmentX=0.0,alignmentY=0.0,border=,flags=360,maximumSize=,minimumSize=,preferredSize=,editable=false,invokesStopCellEditing=false,largeModel=false,rootVisible=true,rowHeight=19,scrollsOnExpand=false,showsRootHandles=true,toggleClickCount=2,visibleRowCount=20]&lt;br/&gt;
&lt;br/&gt;
keyPressed java.awt.event.KeyEvent[KEY_PRESSED,keyCode=39,keyText=&#8594;,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x27] on javax.swing.JTree[,0,0,696x620,alignmentX=0.0,alignmentY=0.0,border=,flags=360,maximumSize=,minimumSize=,preferredSize=,editable=false,invokesStopCellEditing=false,largeModel=false,rootVisible=true,rowHeight=19,scrollsOnExpand=false,showsRootHandles=true,toggleClickCount=2,visibleRowCount=20]&lt;br/&gt;
============================================&lt;br/&gt;
&lt;br/&gt;
STacktrace for keyReleased during successful invocation is&lt;br/&gt;
&lt;br/&gt;
	at SonomaARMJTreeBug.keyReleased(SonomaARMJTreeBug.java:50)&lt;br/&gt;
	at java.desktop/java.awt.AWTEventMulticaster.keyReleased(AWTEventMulticaster.java:268)&lt;br/&gt;
	at java.desktop/java.awt.Component.processKeyEvent(Component.java:6582)&lt;br/&gt;
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2905)&lt;br/&gt;
	at java.desktop/java.awt.Component.processEvent(Component.java:6398)&lt;br/&gt;
	at java.desktop/java.awt.Container.processEvent(Container.java:2266)&lt;br/&gt;
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4996)&lt;br/&gt;
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2324)&lt;br/&gt;
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4828)&lt;br/&gt;
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1952)&lt;br/&gt;
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:883)&lt;br/&gt;
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1146)&lt;br/&gt;
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1020)&lt;br/&gt;
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:848)&lt;br/&gt;
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4877)&lt;br/&gt;
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2324)&lt;br/&gt;
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2780)&lt;br/&gt;
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4828)&lt;br/&gt;
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:775)&lt;br/&gt;
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)&lt;br/&gt;
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)&lt;br/&gt;
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)&lt;br/&gt;
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)&lt;br/&gt;
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:98)&lt;br/&gt;
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:747)&lt;br/&gt;
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)&lt;br/&gt;
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)&lt;br/&gt;
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)&lt;br/&gt;
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:744)&lt;br/&gt;
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)&lt;br/&gt;
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)&lt;br/&gt;
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)&lt;br/&gt;
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)&lt;br/&gt;
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)&lt;br/&gt;
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90</comment>
                            <comment id="14619418" author="pnarayanaswa" created="Thu, 19 Oct 2023 01:51:36 -0700"  >Additional Information from submitter:&lt;br/&gt;
===============================&lt;br/&gt;
I see that there has been some progress on the bug report. I can now also confirm that the issue is visible also in macOS 14 (Sonoma) on Intel Macs. So the problem is visible starting from macOS 14 independent of architecture. </comment>
                            <comment id="14617641" author="psadhukhan" created="Wed, 11 Oct 2023 21:02:38 -0700"  >[~kizune] How about jdk11 and 8?</comment>
                            <comment id="14617041" author="pnarayanaswa" created="Mon, 9 Oct 2023 21:58:29 -0700"  >Checked with attached test in macOS Ventura 13.5.2(Intel), issue is not reproducible.&lt;br/&gt;
Test Result&lt;br/&gt;
========&lt;br/&gt;
8u381: Pass&lt;br/&gt;
JDK11: Pass&lt;br/&gt;
JDK17: Pass&lt;br/&gt;
JDK21: Pass&lt;br/&gt;
JDK22ea18: Pass</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5119422">JDK-8324191</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5119450">JDK-8324216</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124746">JDK-8328622</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124748">JDK-8328624</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124749">JDK-8328625</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5115362">JDK-8320664</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5119171">JDK-8323965</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126183">JDK-8329667</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5049933">JDK-8267385</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="106750" name="SonomaARMJTreeBug.java" size="1876" author="pnarayanaswa" created="Mon, 9 Oct 2023 21:58:26 -0700"/>
                            <attachment id="107399" name="screenshot-jtree-mac14.png" size="102010" author="psadhukhan" created="Mon, 4 Dec 2023 04:26:44 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17456"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="21802">18</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33e9f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="367"><![CDATA[javax.accessibility]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>