<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:27:25 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-6714245] [Col] Collator - Faster Comparison for identical strings.</title>
                <link>https://bugs.openjdk.org/browse/JDK-6714245</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A DESCRIPTION OF THE REQUEST :&lt;br/&gt;
Collator (RuleBasedCollator?) does not check the compared strings for == before going into the complex rules for comparison.&lt;br/&gt;
&lt;br/&gt;
JUSTIFICATION :&lt;br/&gt;
It seems silly to compare every character of a string  to itself to determine what will amount to equality. Collator .getInstance() is called from TableRowSorter for all String sorting. JTables do often have duplicated data. The test program shows a significant speed increase. Although Collator is still very slow compared to String.compateTo() or String.CASE_INSENSITIVE_ORDER. I assume this is because of Unicode support. It would be great if the US/English Collator was as fast as String.compateTo().&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Collator should check for == before moving on to the complicated comparisons.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
package ScaleModels;&lt;br/&gt;
&lt;br/&gt;
import java.text.Collator;&lt;br/&gt;
import java.util.ArrayList;&lt;br/&gt;
import java.util.Collections;&lt;br/&gt;
import java.util.Comparator;&lt;br/&gt;
&lt;br/&gt;
public class CollatorTest {&lt;br/&gt;
&lt;br/&gt;
	/**&lt;br/&gt;
	 * @param args&lt;br/&gt;
	 */&lt;br/&gt;
	public static void main(String[] args) {&lt;br/&gt;
		&lt;br/&gt;
		System.out.println(&amp;quot;ComparableComparator Based Sort:&amp;quot;);&lt;br/&gt;
		float startTime = System.nanoTime();&lt;br/&gt;
		Collections.sort(makeStateList());&lt;br/&gt;
		float endTime = System.nanoTime();&lt;br/&gt;
		System.out.println(&amp;quot;Total Elapsed Time: &amp;quot; + (endTime - startTime));&lt;br/&gt;
		&lt;br/&gt;
		System.out.println(&amp;quot;\nString.CASE_INSENSITIVE_ORDER Based Sort:&amp;quot;);&lt;br/&gt;
		startTime = System.nanoTime();&lt;br/&gt;
		Collections.sort(makeStateList(), String.CASE_INSENSITIVE_ORDER);&lt;br/&gt;
		endTime = System.nanoTime();&lt;br/&gt;
		System.out.println(&amp;quot;Total Elapsed Time: &amp;quot; + (endTime - startTime));&lt;br/&gt;
		&lt;br/&gt;
		System.out.println(&amp;quot;\nCollator w/ == check Based Sort:&amp;quot;);&lt;br/&gt;
		startTime = System.nanoTime();&lt;br/&gt;
		Collections.sort(makeStateList(), compareTestEq);&lt;br/&gt;
		endTime = System.nanoTime();&lt;br/&gt;
		System.out.println(&amp;quot;Total Elapsed Time: &amp;quot; + (endTime - startTime));&lt;br/&gt;
		&lt;br/&gt;
		System.out.println(&amp;quot;\nCollator Based Sort:&amp;quot;);&lt;br/&gt;
		startTime = System.nanoTime();&lt;br/&gt;
		Collections.sort(makeStateList(), Collator.getInstance());&lt;br/&gt;
		endTime = System.nanoTime();&lt;br/&gt;
		System.out.println(&amp;quot;Total Elapsed Time: &amp;quot; + (endTime - startTime));&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
	private static ArrayList&amp;lt;String&amp;gt; makeStateList() {&lt;br/&gt;
		String state1 = &amp;quot;Mississippi&amp;quot;;&lt;br/&gt;
		String state2 = &amp;quot;New Mexico&amp;quot;;&lt;br/&gt;
		String state3 = &amp;quot;New Jersey&amp;quot;;&lt;br/&gt;
&lt;br/&gt;
		ArrayList&amp;lt;String&amp;gt; listOfStates = new ArrayList&amp;lt;String&amp;gt;();&lt;br/&gt;
		for (int i = 0; i &amp;lt; 100000; i++) {&lt;br/&gt;
			switch (i % 3) {&lt;br/&gt;
			case 1:&lt;br/&gt;
				listOfStates.add(state1);&lt;br/&gt;
				break;&lt;br/&gt;
			case 2:&lt;br/&gt;
				listOfStates.add(state2);&lt;br/&gt;
				break;&lt;br/&gt;
			case 3:&lt;br/&gt;
				listOfStates.add(state3);&lt;br/&gt;
				break;&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;br/&gt;
		return listOfStates;&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
	private static Comparator&amp;lt;String&amp;gt; compareTestEq = new Comparator&amp;lt;String&amp;gt;() {&lt;br/&gt;
&lt;br/&gt;
		private Comparator&amp;lt;Object&amp;gt; base = Collator.getInstance();&lt;br/&gt;
&lt;br/&gt;
		@Override&lt;br/&gt;
		public int compare(String o1, String o2) {&lt;br/&gt;
			if (o1 == o2) {&lt;br/&gt;
				return 0;&lt;br/&gt;
			}&lt;br/&gt;
			return base.compare(o1, o2);&lt;br/&gt;
		}&lt;br/&gt;
&lt;br/&gt;
	};&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
private Comparator&amp;lt;String&amp;gt; compareTestEq = new Comparator&amp;lt;String&amp;gt;(){&lt;br/&gt;
&lt;br/&gt;
		@Override&lt;br/&gt;
		public int compare(String o1, String o2) {&lt;br/&gt;
			if(o1 == o2){&lt;br/&gt;
				return 0;&lt;br/&gt;
			}&lt;br/&gt;
			return Collator.getInstance().compare(o1, o2);&lt;br/&gt;
		}&lt;br/&gt;
		&lt;br/&gt;
	};&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4246229">JDK-6714245</key>
            <summary>[Col] Collator - Faster Comparison for identical strings.</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="5" iconUrl="https://bugs.openjdk.org/images/jbsImages/p5.png">P5</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jlu">Justin Lu</assignee>
                                    <reporter username="ndcosta">Nelson Dcosta</reporter>
                        <labels>
                            <label>noreg-perf</label>
                            <label>webbug</label>
                    </labels>
                <created>Fri, 13 Jun 2008 01:42:27 -0700</created>
                <updated>Wed, 17 May 2023 16:53:40 -0700</updated>
                            <resolved>Fri, 12 May 2023 13:01:19 -0700</resolved>
                                    <version>6u10</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="14581310" author="dukebot" created="Fri, 12 May 2023 13:01:18 -0700"  >Changeset: 4441a230&lt;br/&gt;
Author:    Justin Lu &amp;lt;&lt;a href=&apos;mailto:jlu@openjdk.org&apos;&gt;jlu@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-12 19:58:37 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4441a2306fb12f60ac879f7fda6c7446ac130dcb&quot;&gt;https://git.openjdk.org/jdk/commit/4441a2306fb12f60ac879f7fda6c7446ac130dcb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14581017" author="roboduke" created="Thu, 11 May 2023 11:37:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13938&quot;&gt;https://git.openjdk.org/jdk/pull/13938&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-11 18:27:28 +0000</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10001" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Imported</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 16 Sep 2012 08:38:51 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10002" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Indexed</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Jul 2012 04:06:27 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0kven:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>121729</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17433"><![CDATA[b23]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="331"><![CDATA[java.text]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>