<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:07:52 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8326936] RISC-V: Shenandoah GC crashes due to incorrect atomic memory operations</title>
                <link>https://bugs.openjdk.org/browse/JDK-8326936</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Xing Qizheng (Github: MaxXSoft) will own this issue.&lt;br/&gt;
&lt;br/&gt;
With compressed oops enabled, Shenandoah GC crashes in the concurrent marking phase due to some incorrect atomic memory operations. This resulted in the failure of multiple related tests, including `gc/shenandoah/TestSmallHeap.java`, `gc/metaspace/TestMetaspacePerfCounters.java#Shenandoah-64`, and so on, tested on XuanTie C910 and QEMU.&lt;br/&gt;
&lt;br/&gt;
This failure is related to a GCC bug we recently discovered: &lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=114130&quot;&gt;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=114130&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
In detail, there&amp;#39;s a pattern in method `ShenandoahHeap::conc_update_with_forwarded`:&lt;br/&gt;
&lt;br/&gt;
```cpp&lt;br/&gt;
if (in_collection_set(obj)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Dereferences `obj` without explicit null check.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;oop fwd = ShenandoahBarrierSet::resolve_forwarded_not_null(obj);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Then calls atomic built-in.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;atomic_update_oop(fwd, p, obj);&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
`atomic_update_oop` then compresses `obj` into a 32-bit word and calls the built-in `__atomic_compare_exchange`. The latter produces incorrect assembly that comparing this unsigned 32-bit word with the sign-extended result of `lr.w` instructions.&lt;br/&gt;
&lt;br/&gt;
This bug can be bypassed by adding an explicit null check (like `if (obj &amp;amp;&amp;amp; in_collection_set(obj))`), or adding compiler flag `-fno-delete-null-pointer-checks`.&lt;br/&gt;
&lt;br/&gt;
In previous commits, &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316186&quot; title=&quot;RISC-V: Remove PlatformCmpxchg&amp;lt;4&amp;gt;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316186&quot;&gt;&lt;strike&gt;JDK-8316186&lt;/strike&gt;&lt;/a&gt; removed RISC-V&amp;#39;s `PlatformCmpxchg&amp;lt;4&amp;gt;` but left the flag `-fno-delete-null-pointer-checks` enabled. Then &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316893&quot; title=&quot;Compile without -fno-delete-null-pointer-checks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316893&quot;&gt;&lt;strike&gt;JDK-8316893&lt;/strike&gt;&lt;/a&gt; removed the flag and made the bug visible. This patch adds `PlatformCmpxchg&amp;lt;4&amp;gt;` back.</description>
                <environment></environment>
        <key id="5122711">JDK-8326936</key>
            <summary>RISC-V: Shenandoah GC crashes due to incorrect atomic memory operations</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fyang">Fei Yang</assignee>
                                    <reporter username="jzhu">Joshua Zhu</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Wed, 28 Feb 2024 01:49:17 -0800</created>
                <updated>Fri, 19 Apr 2024 03:12:07 -0700</updated>
                            <resolved>Tue, 5 Mar 2024 03:44:02 -0800</resolved>
                                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14666118" author="roboduke" created="Wed, 17 Apr 2024 20:21:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/507&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/507&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-18 02:57:20 +0000</comment>
                            <comment id="14666117" author="roboduke" created="Wed, 17 Apr 2024 20:21:26 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2417&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2417&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-18 03:08:58 +0000</comment>
                            <comment id="14666116" author="JIRAUSER20521" created="Wed, 17 Apr 2024 20:11:41 -0700"  >Fix Request (17u):&lt;br/&gt;
The same issue reproduces for 17u and 21u too if we apply fix for JDK- 8316186 and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316893&quot; title=&quot;Compile without -fno-delete-null-pointer-checks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316893&quot;&gt;&lt;strike&gt;JDK-8316893&lt;/strike&gt;&lt;/a&gt; which are both code cleanup/enhancement. So I suggest we backport &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8326936&quot; title=&quot;RISC-V: Shenandoah GC crashes due to incorrect atomic memory operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8326936&quot;&gt;&lt;strike&gt;JDK-8326936&lt;/strike&gt;&lt;/a&gt; and its followup fix &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8330242&quot; title=&quot;RISC-V: Simplify and remove CORRECT_COMPILER_ATOMIC_SUPPORT in atomic_linux_riscv.hpp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8330242&quot;&gt;&lt;strike&gt;JDK-8330242&lt;/strike&gt;&lt;/a&gt; to be safe. </comment>
                            <comment id="14666115" author="JIRAUSER20521" created="Wed, 17 Apr 2024 20:11:12 -0700"  >Fix Request (21u):&lt;br/&gt;
The same issue reproduces for 17u and 21u too if we apply fix for JDK- 8316186 and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316893&quot; title=&quot;Compile without -fno-delete-null-pointer-checks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316893&quot;&gt;&lt;strike&gt;JDK-8316893&lt;/strike&gt;&lt;/a&gt; which are both code cleanup/enhancement. So I suggest we backport &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8326936&quot; title=&quot;RISC-V: Shenandoah GC crashes due to incorrect atomic memory operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8326936&quot;&gt;&lt;strike&gt;JDK-8326936&lt;/strike&gt;&lt;/a&gt; and its followup fix &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8330242&quot; title=&quot;RISC-V: Simplify and remove CORRECT_COMPILER_ATOMIC_SUPPORT in atomic_linux_riscv.hpp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8330242&quot;&gt;&lt;strike&gt;JDK-8330242&lt;/strike&gt;&lt;/a&gt; to be safe. </comment>
                            <comment id="14655389" author="JIRAUSER20521" created="Thu, 7 Mar 2024 00:50:37 -0800"  >Fix Request (22u):&lt;br/&gt;
Hi, The same issue also exists in the JDK22U: I can reproduce it locally and use this clean patch can fix that issue, So I would like to backport this to JDK22U. Several related tests failed before this patch, including gc/shenandoah/TestSmallHeap.java, gc/metaspace/TestMetaspacePerfCounters.java#Shenandoah-64, etc. After the fix, it can passed normally. This is a risc-v specific change. Backport is clean, risk is low. &lt;br/&gt;
&lt;br/&gt;
I see that GHA linux-cross-compile / build (riscv64) fails, but I can build it successfully locally. GHA failure is infrastructural: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8326960&quot;&gt;https://bugs.openjdk.org/browse/JDK-8326960&lt;/a&gt;</comment>
                            <comment id="14655387" author="roboduke" created="Thu, 7 Mar 2024 00:46:39 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/90&quot;&gt;https://git.openjdk.org/jdk22u/pull/90&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-07 08:43:12 +0000</comment>
                            <comment id="14654774" author="dukebot" created="Tue, 5 Mar 2024 03:44:01 -0800"  >Changeset: a089ed2b&lt;br/&gt;
Author:    MaxXSoft &amp;lt;&lt;a href=&apos;mailto:xingqizheng.xqz@alibaba-inc.com&apos;&gt;xingqizheng.xqz@alibaba-inc.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Fei Yang &amp;lt;&lt;a href=&apos;mailto:fyang@openjdk.org&apos;&gt;fyang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-05 11:42:37 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a089ed2b9289eeda73bba47ac87e5bc81a4af9dc&quot;&gt;https://git.openjdk.org/jdk/commit/a089ed2b9289eeda73bba47ac87e5bc81a4af9dc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14653109" author="roboduke" created="Wed, 28 Feb 2024 02:04:52 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18039&quot;&gt;https://git.openjdk.org/jdk/pull/18039&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-28 09:55:37 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5123617">JDK-8327659</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5127347">JDK-8330635</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5127351">JDK-8330639</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5126868">JDK-8330242</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="20300"><![CDATA[riscv]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i357kb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17339"><![CDATA[b13]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>