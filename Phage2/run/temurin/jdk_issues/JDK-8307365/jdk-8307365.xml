<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:09:46 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307365] JvmtiStressModule hit SIGSEGV in JvmtiEventControllerPrivate::recompute_thread_enabled</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307365</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK21 CI:&lt;br/&gt;
&lt;br/&gt;
applications/kitchensink/Kitchensink.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
[2023-05-03T10:30:41.062043281Z] Gathering output for process 3918364&lt;br/&gt;
[2023-05-03T10:30:47.240761361Z] Waiting for completion for process 3918364&lt;br/&gt;
[2023-05-03T10:30:47.241166097Z] Waiting for completion finished for process 3918364&lt;br/&gt;
Output and diagnostic info for process 3918364 was saved into &amp;#39;pid-3918364-output.log&amp;#39;&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] [thread 3903106 also had an error]&lt;br/&gt;
[stress.process.out] # A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] #  SIGSEGV (0xb) at pc=0x00007fc82de672d3, pid=3903050, tid=3903111&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # JRE version: Java(TM) SE Runtime Environment (21.0+21) (fastdebug build 21-ea+21-LTS-1770)&lt;br/&gt;
[stress.process.out] # Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+21-LTS-1770, mixed mode, sharing, tiered, compressed class ptrs, z gc, linux-amd64)&lt;br/&gt;
[stress.process.out] # Problematic frame:&lt;br/&gt;
[stress.process.out] # V  [libjvm.so+0x113f2d3]  JvmtiEventControllerPrivate::recompute_thread_enabled(JvmtiThreadState*) [clone .part.0]+0x153&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S91199/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/27ed9bc5-baae-4d11-8bf0-8d5684ac09d8/runs/68873867-0a02-4e2c-8dbb-4da2e279060e/testoutput/test-support/jtreg_closed_test_hotspot_jtreg_applications_kitchensink_Kitchensink_java/scratch/0/core.3903050)&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] Unsupported internal testing APIs have been used.&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] # An error report file with more information is saved as:&lt;br/&gt;
[stress.process.out] # /opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S91199/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/27ed9bc5-baae-4d11-8bf0-8d5684ac09d8/runs/68873867-0a02-4e2c-8dbb-4da2e279060e/testoutput/test-support/jtreg_closed_test_hotspot_jtreg_applications_kitchensink_Kitchensink_java/scratch/0/hs_err_pid3903050.log&lt;br/&gt;
[stress.process.out] [thread 3917156 also had an error][thread 3917157 also had an error]&lt;br/&gt;
[stress.process.out] [thread 3916362 also had an error]&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[stress.process.out] # If you would like to submit a bug report, please visit:&lt;br/&gt;
[stress.process.out] #   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
[stress.process.out] #&lt;br/&gt;
[2023-05-03T10:31:47.243994001Z] Gathering output for process 3918833&lt;br/&gt;
[2023-05-03T10:31:47.250648799Z] Waiting for completion for process 3918833&lt;br/&gt;
[2023-05-03T10:31:47.250778935Z] Waiting for completion finished for process 3918833&lt;br/&gt;
Output and diagnostic info for process 3918833 was saved into &amp;#39;pid-3918833-output.log&amp;#39;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007fc828549430):  JavaThread &amp;quot;JvmtiStressModule&amp;quot;        [_thread_in_vm, id=3903111, stack(0x00007fc5f8137000,0x00007fc5f8238000) (1028K)] _threads_hazard_ptr=0x00007fc4e03b4c20, _nested_threads_hazard_ptr_cnt=0&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fc5f8137000,0x00007fc5f8238000],  sp=0x00007fc5f8236400,  free space=1021k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x113f2d3]  JvmtiEventControllerPrivate::recompute_thread_enabled(JvmtiThreadState*) [clone .part.0]+0x153  (javaThread.hpp:1093)&lt;br/&gt;
V  [libjvm.so+0x1140810]  JvmtiEventControllerPrivate::recompute_enabled()+0x110  (jvmtiEventController.cpp:558)&lt;br/&gt;
V  [libjvm.so+0x11432d2]  JvmtiEventController::set_user_enabled(JvmtiEnvBase*, JavaThread*, oop, jvmtiEvent, bool)+0x162  (jvmtiEventController.cpp:1061)&lt;br/&gt;
V  [libjvm.so+0x11197b8]  JvmtiEnv::SetEventNotificationMode(jvmtiEventMode, jvmtiEvent, _jobject*, ...)+0x138  (jvmtiEnv.cpp:586)&lt;br/&gt;
V  [libjvm.so+0x10cd257]  jvmti_SetEventNotificationMode+0x107  (jvmtiEnter.cpp:5321)&lt;br/&gt;
C  [libJvmtiStressModule.so+0x3f08]  enable_events+0x88  (libJvmtiStressModule.c:631)&lt;br/&gt;
C  [libJvmtiStressModule.so+0x4d5a]  Java_applications_kitchensink_process_stress_modules_JvmtiStressModule_finishIteration+0x83a  (libJvmtiStressModule.c:638)&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.finishIteration()Lapplications/kitchensink/process/stress/modules/JvmtiStatistics;+0&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.execute()V+285&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.StressModule.run()V+118&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007fc817d41d1a&lt;br/&gt;
V  [libjvm.so+0xe56782]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x462  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xe56d63]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x283  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0xe56f71]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x71  (javaCalls.cpp:191)&lt;br/&gt;
V  [libjvm.so+0xfa61b6]  thread_entry(JavaThread*, JavaThread*)+0x96  (jvm.cpp:2919)&lt;br/&gt;
V  [libjvm.so+0xe8899e]  JavaThread::thread_main_inner()+0x17e  (javaThread.cpp:717)&lt;br/&gt;
V  [libjvm.so+0x175aff8]  Thread::call_run()+0xb8  (thread.cpp:215)&lt;br/&gt;
V  [libjvm.so+0x14599fa]  thread_native_entry(Thread*)+0x11a  (os_linux.cpp:740)&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.finishIteration()Lapplications/kitchensink/process/stress/modules/JvmtiStatistics;+0&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.execute()V+285&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.StressModule.run()V+118&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007fc817d41d1a&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000001000005a4</description>
                <environment></environment>
        <key id="5100028">JDK-8307365</key>
            <summary>JvmtiStressModule hit SIGSEGV in JvmtiEventControllerPrivate::recompute_thread_enabled</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="pchilanomate">Patricio Chilano Mateo</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>loom</label>
                            <label>test-bigapps-Kitchensink</label>
                            <label>tier3</label>
                            <label>tier4</label>
                            <label>tier5</label>
                            <label>tier6</label>
                            <label>tier8</label>
                            <label>zgc</label>
                    </labels>
                <created>Wed, 3 May 2023 08:22:31 -0700</created>
                <updated>Wed, 13 Sep 2023 19:50:37 -0700</updated>
                            <resolved>Wed, 17 May 2023 13:18:21 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14582454" author="dukebot" created="Wed, 17 May 2023 13:18:17 -0700"  >Changeset: 24094482&lt;br/&gt;
Author:    Patricio Chilano Mateo &amp;lt;&lt;a href=&apos;mailto:pchilanomate@openjdk.org&apos;&gt;pchilanomate@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-17 20:16:21 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/24094482f00b6ac412bfad770051775f2ab5cf73&quot;&gt;https://git.openjdk.org/jdk/commit/24094482f00b6ac412bfad770051775f2ab5cf73&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14581096" author="roboduke" created="Thu, 11 May 2023 20:03:04 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13949&quot;&gt;https://git.openjdk.org/jdk/pull/13949&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-12 02:14:00 +0000</comment>
                            <comment id="14580707" author="pchilanomate" created="Wed, 10 May 2023 17:49:15 -0700"  >This is a bug introduced in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306028&quot; title=&quot;separate ThreadStart/ThreadEnd events posting code in JVMTI VTMS transitions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8306028&quot;&gt;&lt;strike&gt;JDK-8306028&lt;/strike&gt;&lt;/a&gt;. Specifically, the code to delete the JvmtiThreadState of a terminating vthread was moved before we start the VTMS transition:&lt;br/&gt;
&lt;br/&gt;
before &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306028&quot; title=&quot;separate ThreadStart/ThreadEnd events posting code in JVMTI VTMS transitions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8306028&quot;&gt;&lt;strike&gt;JDK-8306028&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;br/&gt;
JvmtiVTMSTransitionDisabler::start_VTMS_transition(vthread, /* is_mount */ false);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (last_unmount &amp;amp;&amp;amp; thread-&amp;gt;jvmti_thread_state() != nullptr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JvmtiExport::cleanup_thread(thread);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread-&amp;gt;set_jvmti_thread_state(nullptr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oop vt = JNIHandles::resolve(vthread);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java_lang_Thread::set_jvmti_thread_state(vt, nullptr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
now:&lt;br/&gt;
&lt;br/&gt;
if (thread-&amp;gt;jvmti_thread_state() != nullptr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JvmtiExport::cleanup_thread(thread);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread-&amp;gt;set_jvmti_thread_state(nullptr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oop vt = JNIHandles::resolve(vthread);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java_lang_Thread::set_jvmti_thread_state(vt, nullptr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;VTMS_unmount_begin(vthread);&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
This means that code can now run concurrently with recompute_enabled() executed in SetEventNotificationMode (used by the JvmtiStressModule Kitchensink module) leading to the crashes we see.&lt;br/&gt;
&lt;br/&gt;
There are different failure modes depending on the timing of events, but here is the sequence of events that leads to the &amp;quot;guarantee(Thread::is_JavaThread_protected_by_TLH(target)) failed&amp;quot; crash:&lt;br/&gt;
&lt;br/&gt;
1) Virtual thread(VT) mounted on some carrier thread(CT) calls JvmtiVTMSTransitionDisabler::VTMS_vthread_end() in the last unmount operation. JvmtiExport::cleanup_thread() is called and the JvmtiThreadState associated with VT is deleted. &lt;br/&gt;
2) An agent executes SetEventNotification which ends up calling recompute_enabled(). Here we execute the conditional that walks all JavaThreads and creates any missing JVMTI states. This includes creating JVMTI states for a mounted vthread in case there is one. Since VT is still mounted on CT and it has no state (just deleted) we create a new JVMTI state for it and set _thread to be CT. We also set the _jvmti_thread_state field of CT to point to this new state. The SetEventNotification operation finishes.&lt;br/&gt;
3) VT mounted on CT returns from JvmtiExport::cleanup_thread() and clears the previously set _jvmti_thread_state field of CT. Now when executing JvmtiThreadState::unbind_from() in thread-&amp;gt;rebind_to_jvmti_thread_state_of(thread-&amp;gt;threadObj()), since the _jvmti_thread_state field of CT was set to null we just return without clearing the _thread field of the newly created vthread&amp;#39;s JVMTI state.&lt;br/&gt;
4) CT exits&lt;br/&gt;
5) An agent executes a SetEventNotification SINGLE_STEP enable operation. Now in recompute_enabled() when looping over all states we find the previously created JVMTI state belonging to the terminated VT that has _thread set to CT. We call recompute_thread_enabled() -&amp;gt; enter_interp_only_mode() and eventually crash when we get to the handshake code because CT has already exited.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I was able to create a reproducer, which I attached. The test reproduces the previously explained crash, although tweaking it will reveal the other failure modes. To make it 100% reliable a os::naked_short_sleep() should be added between the call to JvmtiExport::cleanup_thread(thread) and clearing the _jvmti_thread_state of the carrier in JvmtiVTMSTransitionDisabler::VTMS_vthread_end(). With a delay of 5ms it already reproduces the crash always for me.&lt;br/&gt;
</comment>
                            <comment id="14579981" author="dcubed" created="Mon, 8 May 2023 14:51:29 -0700"  >We have a different assertion failure in the same neighborhood of code&lt;br/&gt;
in jdk-21+22-1834-tier8 CI job  with:&lt;br/&gt;
&lt;br/&gt;
applications/kitchensink/Kitchensink8H.java&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S24789/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/1e64a87c-5b04-45db-ac9b-3789735cea2a/runs/26b4b611-ca48-4854-b480-389ca75c7539/workspace/open/src/hotspot/share/prims/jvmtiEventController.cpp:214), pid=1750913, tid=1750959&lt;br/&gt;
#  assert(state != nullptr) failed: sanity check&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+22) (fastdebug build 21-ea+22-LTS-1834)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+22-LTS-1834, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, parallel gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1144422]  EnterInterpOnlyModeClosure::do_thread(Thread*)+0x4a2&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack trace:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f43d04c40c0):  JavaThread &amp;quot;JvmtiStressModule&amp;quot;        [_thread_in_vm, id=1750959, stack(0x00007f4394019000,0x00007f439411a000) (1028K)] _threads_hazard_ptr=0x00007f430806ed90, _nested_threads_hazard_ptr_cnt=0&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f4394019000,0x00007f439411a000],  sp=0x00007f4394116dc0,  free space=1015k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1144422]  EnterInterpOnlyModeClosure::do_thread(Thread*)+0x4a2  (jvmtiEventController.cpp:214)&lt;br/&gt;
V  [libjvm.so+0xd70954]  HandshakeOperation::do_handshake(JavaThread*)+0x44  (handshake.cpp:324)&lt;br/&gt;
V  [libjvm.so+0xd70eea]  HandshakeState::try_process(HandshakeOperation*) [clone .part.0]+0xfa  (handshake.cpp:660)&lt;br/&gt;
V  [libjvm.so+0xd716aa]  Handshake::execute(HandshakeClosure*, ThreadsListHandle*, JavaThread*)+0x49a  (handshake.cpp:388)&lt;br/&gt;
V  [libjvm.so+0x113ec06]  JvmtiEventControllerPrivate::enter_interp_only_mode(JvmtiThreadState*)+0x96  (jvmtiEventController.cpp:375)&lt;br/&gt;
V  [libjvm.so+0x113ef7e]  JvmtiEventControllerPrivate::recompute_thread_enabled(JvmtiThreadState*) [clone .part.0]+0xee  (jvmtiEventController.cpp:597)&lt;br/&gt;
V  [libjvm.so+0x1140520]  JvmtiEventControllerPrivate::recompute_enabled()+0x110  (jvmtiEventController.cpp:558)&lt;br/&gt;
V  [libjvm.so+0x1142fe2]  JvmtiEventController::set_user_enabled(JvmtiEnvBase*, JavaThread*, oop, jvmtiEvent, bool)+0x162  (jvmtiEventController.cpp:1060)&lt;br/&gt;
V  [libjvm.so+0x11194c8]  JvmtiEnv::SetEventNotificationMode(jvmtiEventMode, jvmtiEvent, _jobject*, ...)+0x138  (jvmtiEnv.cpp:586)&lt;br/&gt;
V  [libjvm.so+0x10ccf67]  jvmti_SetEventNotificationMode+0x107  (jvmtiEnter.cpp:5321)&lt;br/&gt;
C  [libJvmtiStressModule.so+0x3f08]  enable_events+0x88  (libJvmtiStressModule.c:631)&lt;br/&gt;
C  [libJvmtiStressModule.so+0x4d5a]  Java_applications_kitchensink_process_stress_modules_JvmtiStressModule_finishIteration+0x83a  (libJvmtiStressModule.c:638)&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.finishIteration()Lapplications/kitchensink/process/stress/modules/JvmtiStatistics;+0&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.execute()V+285&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.StressModule.run()V+118&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f43c016cd21&lt;br/&gt;
V  [libjvm.so+0xe563e2]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x462  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xe569c3]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x283  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0xe56bd1]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x71  (javaCalls.cpp:191)&lt;br/&gt;
V  [libjvm.so+0xfa5ec6]  thread_entry(JavaThread*, JavaThread*)+0x96  (jvm.cpp:2919)&lt;br/&gt;
V  [libjvm.so+0xe885fe]  JavaThread::thread_main_inner()+0x17e  (javaThread.cpp:717)&lt;br/&gt;
V  [libjvm.so+0x175a6b8]  Thread::call_run()+0xb8  (thread.cpp:215)&lt;br/&gt;
V  [libjvm.so+0x145946a]  thread_native_entry(Thread*)+0x11a  (os_linux.cpp:740)&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.finishIteration()Lapplications/kitchensink/process/stress/modules/JvmtiStatistics;+0&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.execute()V+285&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.StressModule.run()V+118&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f43c016cd21</comment>
                            <comment id="14579980" author="dcubed" created="Mon, 8 May 2023 14:50:02 -0700"  >Spotted in the jdk-21+22-1834-tier8 CI job set:&lt;br/&gt;
&lt;br/&gt;
applications/kitchensink/Kitchensink8H.java&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://mach5.us.oracle.com/mdash/jobs/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302/tasks/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302-applications_kitchensink_Kitchensink8H_java-linux-x64-debug-39/results?search=status%3Afailed%20AND%20-state%3Ainvalid&quot;&gt;https://mach5.us.oracle.com/mdash/jobs/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302/tasks/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302-applications_kitchensink_Kitchensink8H_java-linux-x64-debug-39/results?search=status%3Afailed%20AND%20-state%3Ainvalid&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://mach5.us.oracle.com:10060/api/v1/results/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302-applications_kitchensink_Kitchensink8H_java-linux-x64-debug-39-1683514118-1/log&quot;&gt;https://mach5.us.oracle.com:10060/api/v1/results/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302-applications_kitchensink_Kitchensink8H_java-linux-x64-debug-39-1683514118-1/log&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://mach5.us.oracle.com:10060/api/v1/results/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302-applications_kitchensink_Kitchensink8H_java-linux-x64-debug-39-1683514118-1/artifacts/hs_err_pid1750913.log&quot;&gt;https://mach5.us.oracle.com:10060/api/v1/results/mach5-one-jdk-21+22-1834-tier8-20230507-2251-45601302-applications_kitchensink_Kitchensink8H_java-linux-x64-debug-39-1683514118-1/artifacts/hs_err_pid1750913.log&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
linux-x64-debug: ol8-x64-881558.s5.javaplatfo1iad.oraclevcn.com&lt;br/&gt;
&lt;br/&gt;
The test task&amp;#39;s JVM args are: -XX:+UseParallelGC</comment>
                            <comment id="14579975" author="dcubed" created="Mon, 8 May 2023 14:31:26 -0700"  >We now have a sighting of applications/kitchensink/Kitchensink.java in jdk-21+22-1836-tier6&lt;br/&gt;
where it hits this guarantee() failure:&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S23248/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/ae6844bd-3d8a-422c-b5d5-c628a85d6cf8/runs/00d8db49-3fb6-4106-8118-f8752edf81ee/workspace/open/src/hotspot/share/runtime/handshake.cpp:365), pid=7061, tid=7112&lt;br/&gt;
#  guarantee(Thread::is_JavaThread_protected_by_TLH(target)) failed: missing ThreadsListHandle in calling context.&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (21.0+22) (fastdebug build 21-ea+22-LTS-1836)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 21-ea+22-LTS-1836, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xd71ff3]  Handshake::execute(HandshakeClosure*, ThreadsListHandle*, JavaThread*)+0xde3&lt;br/&gt;
&lt;br/&gt;
And here&amp;#39;s the crashing stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007ff4ec799e00):  JavaThread &amp;quot;JvmtiStressModule&amp;quot;        [_thread_in_vm, id=7112, stack(0x00007ff4b653b000,0x00007ff4b663c000) (1028K)] _threads_hazard_ptr=0x00007ff44821b6f0, _nested_threads_hazard_ptr_cnt=0&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007ff4b653b000,0x00007ff4b663c000],  sp=0x00007ff4b663a210,  free space=1020k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xd71ff3]  Handshake::execute(HandshakeClosure*, ThreadsListHandle*, JavaThread*)+0xde3  (handshake.cpp:365)&lt;br/&gt;
V  [libjvm.so+0x113ec06]  JvmtiEventControllerPrivate::enter_interp_only_mode(JvmtiThreadState*)+0x96  (jvmtiEventController.cpp:375)&lt;br/&gt;
V  [libjvm.so+0x113ef7e]  JvmtiEventControllerPrivate::recompute_thread_enabled(JvmtiThreadState*) [clone .part.0]+0xee  (jvmtiEventController.cpp:597)&lt;br/&gt;
V  [libjvm.so+0x1140520]  JvmtiEventControllerPrivate::recompute_enabled()+0x110  (jvmtiEventController.cpp:558)&lt;br/&gt;
V  [libjvm.so+0x1142fe2]  JvmtiEventController::set_user_enabled(JvmtiEnvBase*, JavaThread*, oop, jvmtiEvent, bool)+0x162  (jvmtiEventController.cpp:1060)&lt;br/&gt;
V  [libjvm.so+0x11194c8]  JvmtiEnv::SetEventNotificationMode(jvmtiEventMode, jvmtiEvent, _jobject*, ...)+0x138  (jvmtiEnv.cpp:586)&lt;br/&gt;
V  [libjvm.so+0x10ccf67]  jvmti_SetEventNotificationMode+0x107  (jvmtiEnter.cpp:5321)&lt;br/&gt;
C  [libJvmtiStressModule.so+0x3f08]  enable_events+0x88  (libJvmtiStressModule.c:631)&lt;br/&gt;
C  [libJvmtiStressModule.so+0x4d5a]  Java_applications_kitchensink_process_stress_modules_JvmtiStressModule_finishIteration+0x83a  (libJvmtiStressModule.c:638)&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.finishIteration()Lapplications/kitchensink/process/stress/modules/JvmtiStatistics;+0&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.execute()V+285&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.StressModule.run()V+118&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007ff4dc16cd21&lt;br/&gt;
V  [libjvm.so+0xe563e2]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x462  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xe569c3]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x283  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0xe56bd1]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x71  (javaCalls.cpp:191)&lt;br/&gt;
V  [libjvm.so+0xfa5ec6]  thread_entry(JavaThread*, JavaThread*)+0x96  (jvm.cpp:2919)&lt;br/&gt;
V  [libjvm.so+0xe885fe]  JavaThread::thread_main_inner()+0x17e  (javaThread.cpp:717)&lt;br/&gt;
V  [libjvm.so+0x175a6b8]  Thread::call_run()+0xb8  (thread.cpp:215)&lt;br/&gt;
V  [libjvm.so+0x145946a]  thread_native_entry(Thread*)+0x11a  (os_linux.cpp:740)&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.finishIteration()Lapplications/kitchensink/process/stress/modules/JvmtiStatistics;+0&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.JvmtiStressModule.execute()V+285&lt;br/&gt;
j  applications.kitchensink.process.stress.modules.StressModule.run()V+118&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007ff4dc16cd21</comment>
                            <comment id="14578921" author="dholmes" created="Wed, 3 May 2023 19:40:16 -0700"  >In a debug VM we see:&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/741e9afd-8c02-45c3-b2e2-9db1450d0832-S91261/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/e33d9aea-2c20-4e5e-bcfc-76c710287453/runs/d1604b11-a78f-4f53-b470-87df5a35f239/workspace/open/src/hotspot/share/runtime/handshake.cpp:365), pid=3926908, tid=3926958&lt;br/&gt;
#  guarantee(Thread::is_JavaThread_protected_by_TLH(target)) failed: missing ThreadsListHandle in calling context.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5098448">JDK-8306028</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103798" name="Repro8307365.zip" size="7486" author="pchilanomate" created="Wed, 10 May 2023 17:42:35 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31dab:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17436"><![CDATA[b24]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>