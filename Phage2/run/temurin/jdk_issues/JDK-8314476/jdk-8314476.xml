<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:09:56 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8314476] TestJstatdPortAndServer.java failed with &quot;java.rmi.NoSuchObjectException: no such object in table&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8314476</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
sun/tools/jstatd/TestJstatdPortAndServer.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a log file snippet:&lt;br/&gt;
&lt;br/&gt;
Start jstatd:&lt;br/&gt;
[/opt/mach5/mesos/work_dir/jib-master/install/jdk-22+11-769/linux-aarch64-debug.jdk/jdk-22/fastdebug/bin/jstatd -J-Xmx768m -J-XX:MaxRAMPercentage=6.25 -J-Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -J-Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S134869/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/ceb3fbd8-908f-4ee1-a6df-319b60555d60/runs/d832f45a-e913-4697-ac67-e4b6842856e7/testoutput/test-support/jtreg_open_test_jdk_jdk_svc/tmp -J-ea -J-esa -J-XX:NativeMemoryTracking=detail -J-XX:+UsePerfData -p43023 -nTestJstatdServer]&lt;br/&gt;
[Jstatd-Thread]:/opt/mach5/mesos/work_dir/jib-master/install/jdk-22+11-769/linux-aarch64-debug.jdk/jdk-22/fastdebug/bin/jstatd -J-Xmx768m -J-XX:MaxRAMPercentage=6.25 -J-Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -J-Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S134869/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/ceb3fbd8-908f-4ee1-a6df-319b60555d60/runs/d832f45a-e913-4697-ac67-e4b6842856e7/testoutput/test-support/jtreg_open_test_jdk_jdk_svc/tmp -J-ea -J-esa -J-XX:NativeMemoryTracking=detail -J-XX:+UsePerfData -p43023 -nTestJstatdServer&lt;br/&gt;
[Jstatd-Thread] Could not bind //:43023/TestJstatdServer to RMI Registry&lt;br/&gt;
[Jstatd-Thread] java.rmi.NoSuchObjectException: no such object in table&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:304)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:280)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.server.UnicastRef.invoke(UnicastRef.java:382)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.registry.RegistryImpl_Stub.rebind(RegistryImpl_Stub.java:158)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/java.rmi.Naming.rebind(Naming.java:177)&lt;br/&gt;
[Jstatd-Thread] 	at jdk.jstatd/sun.tools.jstatd.Jstatd.bind(Jstatd.java:62)&lt;br/&gt;
[Jstatd-Thread] 	at jdk.jstatd/sun.tools.jstatd.Jstatd.main(Jstatd.java:154)&lt;br/&gt;
	Thread[#10,Finalizer,8,system] stack: (length = 7)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait0(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait(Object.java:375)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait(Object.java:348)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.NativeReferenceQueue.await(NativeReferenceQueue.java:48)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.ReferenceQueue.remove0(ReferenceQueue.java:158)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.NativeReferenceQueue.remove(NativeReferenceQueue.java:89)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:173)&lt;br/&gt;
&lt;br/&gt;
	Thread[#20,pool-1-thread-1,5,main] stack: (length = 10)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
	Thread[#1,main,5,main] stack: (length = 8)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait0(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Object.wait(Object.java:375)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.join(Thread.java:2049)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.join(Thread.java:2125)&lt;br/&gt;
	app//com.sun.javatest.regtest.agent.MainActionHelper.runClass(MainActionHelper.java:219)&lt;br/&gt;
	app//com.sun.javatest.regtest.agent.AgentServer.doMain(AgentServer.java:317)&lt;br/&gt;
	app//com.sun.javatest.regtest.agent.AgentServer.run(AgentServer.java:242)&lt;br/&gt;
	app//com.sun.javatest.regtest.agent.AgentServer.main(AgentServer.java:71)&lt;br/&gt;
&lt;br/&gt;
	Thread[#18,Common-Cleaner,8,InnocuousThreadGroup] stack: (length = 10)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1847)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.ReferenceQueue.await(ReferenceQueue.java:71)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.ReferenceQueue.remove0(ReferenceQueue.java:143)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:218)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:140)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
&lt;br/&gt;
	Thread[#19,Notification Thread,9,system] stack: (length = 0)&lt;br/&gt;
&lt;br/&gt;
	Thread[#25,process reaper,10,InnocuousThreadGroup] stack: (length = 12)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:410)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.LinkedTransferQueue$DualNode.await(LinkedTransferQueue.java:452)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.SynchronousQueue$Transferer.xferLifo(SynchronousQueue.java:194)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.SynchronousQueue.xfer(SynchronousQueue.java:233)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:336)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1069)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
&lt;br/&gt;
	Thread[#9,Reference Handler,10,system] stack: (length = 3)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.Reference.waitForReferencePendingList(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.Reference.processPendingReferences(Reference.java:246)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.ref.Reference$ReferenceHandler.run(Reference.java:208)&lt;br/&gt;
&lt;br/&gt;
	Thread[#11,Signal Dispatcher,9,system] stack: (length = 0)&lt;br/&gt;
&lt;br/&gt;
	Thread[#48,AgentVMThread,5,AgentVMThreadGroup] stack: (length = 22)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.park(LockSupport.java:221)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:754)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1099)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:230)&lt;br/&gt;
	jdk.test.lib.thread.ProcessThread$ProcessRunnable.getProcess(ProcessThread.java:216)&lt;br/&gt;
	jdk.test.lib.thread.ProcessThread$ProcessRunnable.getPid(ProcessThread.java:205)&lt;br/&gt;
	jdk.test.lib.thread.ProcessThread.getPid(ProcessThread.java:103)&lt;br/&gt;
	JstatdTest.waitOnTool(JstatdTest.java:96)&lt;br/&gt;
	JstatdTest.tryToSetupJstatdProcess(JstatdTest.java:289)&lt;br/&gt;
	JstatdTest.runTest(JstatdTest.java:343)&lt;br/&gt;
	JstatdTest.doTest(JstatdTest.java:315)&lt;br/&gt;
	TestJstatdPortAndServer.main(TestJstatdPortAndServer.java:40)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.invoke.LambdaForm$DMH/0x00000001000c0000.invokeStatic(LambdaForm$DMH)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.invoke.LambdaForm$MH/0x0000000100103800.invoke(LambdaForm$MH)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(DirectMethodHandleAccessor.java:154)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	app//com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
	Thread[#22,process reaper,10,InnocuousThreadGroup] stack: (length = 12)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.Unsafe.park(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:410)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.LinkedTransferQueue$DualNode.await(LinkedTransferQueue.java:452)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.SynchronousQueue$Transferer.xferLifo(SynchronousQueue.java:194)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.SynchronousQueue.xfer(SynchronousQueue.java:233)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:336)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1069)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)&lt;br/&gt;
&lt;br/&gt;
	Thread[#65,Jstatd-Thread,5,AgentVMThreadGroup] stack: (length = 10)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.dumpThreads(Native Method)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.getAllStackTraces(Thread.java:2492)&lt;br/&gt;
	jdk.test.lib.process.ProcessTools.startProcess(ProcessTools.java:327)&lt;br/&gt;
	jdk.test.lib.process.ProcessTools.startProcess(ProcessTools.java:154)&lt;br/&gt;
	jdk.test.lib.process.ProcessTools.startProcess(ProcessTools.java:368)&lt;br/&gt;
	jdk.test.lib.thread.ProcessThread$ProcessRunnable.xrun(ProcessThread.java:154)&lt;br/&gt;
	jdk.test.lib.thread.XRun.run(XRun.java:40)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.runWith(Thread.java:1583)&lt;br/&gt;
	&lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt;/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
	jdk.test.lib.thread.TestThread.run(TestThread.java:123)&lt;br/&gt;
&lt;br/&gt;
ProcessThread[Jstatd-Thread] failed: java.lang.RuntimeException: Started process Jstatd-Thread terminated before producing the expected output.&lt;br/&gt;
----------System.err:(18/821)----------&lt;br/&gt;
&amp;nbsp;stdout: [jstatd started (bound to //:44513/TestJstatdServer)&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: []&lt;br/&gt;
&amp;nbsp;exitValue = 143&lt;br/&gt;
&lt;br/&gt;
Failed to start a process (thread dump follows)&lt;br/&gt;
java.lang.RuntimeException: Started process Jstatd-Thread terminated before producing the expected output.&lt;br/&gt;
	at jdk.test.lib.process.ProcessTools.startProcess(ProcessTools.java:318)&lt;br/&gt;
	at jdk.test.lib.process.ProcessTools.startProcess(ProcessTools.java:154)&lt;br/&gt;
	at jdk.test.lib.process.ProcessTools.startProcess(ProcessTools.java:368)&lt;br/&gt;
	at jdk.test.lib.thread.ProcessThread$ProcessRunnable.xrun(ProcessThread.java:154)&lt;br/&gt;
	at jdk.test.lib.thread.XRun.run(XRun.java:40)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
	at jdk.test.lib.thread.TestThread.run(TestThread.java:123)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.RuntimeException: Started process Jstatd-Thread terminated before producing the expected output.</description>
                <environment></environment>
        <key id="5108256">JDK-8314476</key>
            <summary>TestJstatdPortAndServer.java failed with &quot;java.rmi.NoSuchObjectException: no such object in table&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kevinw">Kevin Walls</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>tier6</label>
                    </labels>
                <created>Wed, 16 Aug 2023 13:28:43 -0700</created>
                <updated>Tue, 25 Jun 2024 01:19:32 -0700</updated>
                            <resolved>Tue, 29 Aug 2023 01:56:39 -0700</resolved>
                                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14679945" author="roboduke" created="Sat, 8 Jun 2024 01:40:28 -0700"  >[jdk17u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport to fix test failure. The change has been verified, only change the testcase, the risk is low.</comment>
                            <comment id="14679753" author="msheppar" created="Fri, 7 Jun 2024 03:33:42 -0700"  >Do we have a link to a recent failure for this issue, we have a pathology for similar issues which relates to concurrently executing tests that are using the same ephemeral port and causes an RMI call to be made to another process rather than an in-process call of the test.&lt;br/&gt;
&lt;br/&gt;
With the failure below, there exists the possibility that an invocation is being made on another ex-proecss RMI Registry, resulting in the no such object in table failures&lt;br/&gt;
&lt;br/&gt;
c.f. &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8331652&quot;&gt;https://bugs.openjdk.org/browse/JDK-8331652&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
[Jstatd-Thread] Could not bind //:43023/TestJstatdServer to RMI Registry&lt;br/&gt;
[Jstatd-Thread] java.rmi.NoSuchObjectException: no such object in table&lt;br/&gt;
[Jstatd-Thread] at java.rmi/sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:304)&lt;br/&gt;
[Jstatd-Thread] at java.rmi/sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:280)&lt;br/&gt;
[Jstatd-Thread] at java.rmi/sun.rmi.server.UnicastRef.invoke(UnicastRef.java:382)&lt;br/&gt;
[Jstatd-Thread] at java.rmi/sun.rmi.registry.RegistryImpl_Stub.rebind(RegistryImpl_Stub.java:158)&lt;br/&gt;
[Jstatd-Thread] at java.rmi/java.rmi.Naming.rebind(Naming.java:177)&lt;br/&gt;
[Jstatd-Thread] at jdk.jstatd/sun.tools.jstatd.Jstatd.bind(Jstatd.java:62)&lt;br/&gt;
[Jstatd-Thread] at jdk.jstatd/sun.tools.jstatd.Jstatd.main(Jstatd.java:154)</comment>
                            <comment id="14679663" author="roboduke" created="Thu, 6 Jun 2024 19:38:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2547&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2547&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-07 02:33:42 +0000</comment>
                            <comment id="14612536" author="roboduke" created="Wed, 20 Sep 2023 04:59:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/179&quot;&gt;https://git.openjdk.org/jdk21u/pull/179&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-20 11:53:13 +0000</comment>
                            <comment id="14612535" author="JIRAUSER19505" created="Wed, 20 Sep 2023 04:58:45 -0700"  >Fix Request&lt;br/&gt;
Test stability fix. No product change, no risk. Patch applied cleanly.</comment>
                            <comment id="14607283" author="dukebot" created="Tue, 29 Aug 2023 01:56:38 -0700"  >Changeset: 1d025070&lt;br/&gt;
Author:    Kevin Walls &amp;lt;&lt;a href=&apos;mailto:kevinw@openjdk.org&apos;&gt;kevinw@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-29 08:54:00 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1d0250709a6ee97f5647edff589761bd9d0b7f4c&quot;&gt;https://git.openjdk.org/jdk/commit/1d0250709a6ee97f5647edff589761bd9d0b7f4c&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14606419" author="kevinw" created="Thu, 24 Aug 2023 08:13:30 -0700"  >Right, is it _really_ a port in use?&lt;br/&gt;
There are a lot of failures in this area over time.&lt;br/&gt;
Here in 8314476 maybe yes it&amp;#39;s the other problem you mention.  It really got as far as the object table, StreamRemoteCall is not reached if there is no network connection.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
There&amp;#39;s also the similar bug:&lt;br/&gt;
8226420: sun/tools/jstatd tests failed with Port already in use&lt;br/&gt;
where TestJstatdDefaults.java failed with:&lt;br/&gt;
&lt;br/&gt;
[Jstatd-Thread] Could not bind /TestJstatdServer to RMI Registry&lt;br/&gt;
[Jstatd-Thread] java.rmi.server.ExportException: Port already in use: 1099; nested exception is:&lt;br/&gt;
[Jstatd-Thread] java.net.BindException: Address already in use: bind&lt;br/&gt;
[Jstatd-Thread] at java.rmi/sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:335)&lt;br/&gt;
&lt;br/&gt;
..so &amp;quot;Could not bind&amp;quot; there is being reported as well as the explicit &amp;quot;Address already in use&amp;quot;.&lt;br/&gt;
&amp;quot;Could not bind&amp;quot; alone seems to be a fairly bad error message.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve noticed examples where the netstat sampled on failure doesn&amp;#39;t capture the port in use, when it&amp;#39;s explicitly reported as being by the net bind exception (e.g. recent JMXStartStopTest I was just looking at...).&lt;br/&gt;
But I may have had the TCPTransport.java actual network failure in my mind too much when labelling this 8314476 as port in use.&lt;br/&gt;
&lt;br/&gt;
(Or, is there a network connection, but not to what we wanted?  Not sure how far-fetched that is.)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
When I force the port to be in use, by some dummy thread listening on it, I also see &amp;quot;Could not bind&amp;quot;, but the exception makes it clearer that it is different:&lt;br/&gt;
&lt;br/&gt;
[Jstatd-Thread] Could not bind //:37943/TestJstatdServer to RMI Registry&lt;br/&gt;
[Jstatd-Thread] java.rmi.ConnectIOException: error during JRMP connection establishment; nested exception is:&lt;br/&gt;
[Jstatd-Thread]         java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
[Jstatd-Thread]         at java.rmi/sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:308)&lt;br/&gt;
[Jstatd-Thread]         at java.rmi/sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:204)&lt;br/&gt;
[Jstatd-Thread]         at java.rmi/sun.rmi.server.UnicastRef.newCall(UnicastRef.java:345)&lt;br/&gt;
[Jstatd-Thread]         at java.rmi/sun.rmi.registry.RegistryImpl_Stub.rebind(RegistryImpl_Stub.java:150)&lt;br/&gt;
[Jstatd-Thread]         at java.rmi/java.rmi.Naming.rebind(Naming.java:177)&lt;br/&gt;
[Jstatd-Thread]         at jdk.jstatd/sun.tools.jstatd.Jstatd.bind(Jstatd.java:62)&lt;br/&gt;
[Jstatd-Thread]         at jdk.jstatd/sun.tools.jstatd.Jstatd.main(Jstatd.java:154)&lt;br/&gt;
[Jstatd-Thread] Caused by: java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
[Jstatd-Thread]         at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:278)&lt;br/&gt;
..etc...&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
So for the test to recognise &amp;quot;Could not bind&amp;quot; is going to be generally useful,  to recognise that we could not start jstatd, including port in use but not only that.  &lt;br/&gt;
&lt;br/&gt;
8314476 and 8226420 and maybe others are probably looked after if we recognise &amp;quot;Could not bind&amp;quot; and try again.&lt;br/&gt;
I&amp;#39;d like to get that done in the linked PR.&lt;br/&gt;
&lt;br/&gt;
On the GC&amp;#39;ing of the reference in the RMI server...    Retrying jstatd again still seems to be reasonable.  I don&amp;#39;t even see a pattern that ZGC is part of that problem, as it&amp;#39;s not always the GC involved.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14606370" author="msheppar" created="Thu, 24 Aug 2023 05:11:31 -0700"  >[Jstatd-Thread] Could not bind //:43023/TestJstatdServer to RMI Registry&lt;br/&gt;
[Jstatd-Thread] java.rmi.NoSuchObjectException: no such object in table&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:304)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:280)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.server.UnicastRef.invoke(UnicastRef.java:382)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/sun.rmi.registry.RegistryImpl_Stub.rebind(RegistryImpl_Stub.java:158)&lt;br/&gt;
[Jstatd-Thread] 	at java.rmi/java.rmi.Naming.rebind(Naming.java:177)&lt;br/&gt;
&lt;br/&gt;
suggests aggressive GC on the remote server object such that a rebind in the Registry fails  i.e. could not bind&lt;br/&gt;
&lt;br/&gt;
There&amp;#39;s no indication  from netstat, in the environment capture, that port 43023 in use</comment>
                            <comment id="14606364" author="roboduke" created="Thu, 24 Aug 2023 04:41:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15414&quot;&gt;https://git.openjdk.org/jdk/pull/15414&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-24 11:34:13 +0000</comment>
                            <comment id="14606146" author="kevinw" created="Wed, 23 Aug 2023 07:27:53 -0700"  >Thanks for the references.&lt;br/&gt;
&lt;br/&gt;
The log shows one jstatd startup working, then a second test fails:&lt;br/&gt;
&lt;br/&gt;
[Jstatd-Thread] Could not bind //:33859/TestJstatdServer to RMI Registry&lt;br/&gt;
[Jstatd-Thread] java.rmi.NoSuchObjectException: no such object in table&lt;br/&gt;
&lt;br/&gt;
So does look like one of our port in use problems, and the same test machine is running several of the jstat tests at the same time, so the getFreePort race is happening.&lt;br/&gt;
&lt;br/&gt;
checks for &amp;quot;Port already in use&amp;quot;&lt;br/&gt;
which is what TCPTransport.java prints.&lt;br/&gt;
&lt;br/&gt;
But, observed in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8149084&quot; title=&quot;javax/management/remote/mandatory/subjectDelegation/SubjectDelegation1Test.java fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8149084&quot;&gt;&lt;strike&gt;JDK-8149084&lt;/strike&gt;&lt;/a&gt;, TCPTransport hits: java.io.IOException: Invalid argument&lt;br/&gt;
...when using a clashing port, specifically on linux aarch64 we get that exception, and here we see jstatd prints &amp;quot;Could not bind&amp;quot; rather than the &amp;quot;Port already in use&amp;quot; message.&lt;br/&gt;
&lt;br/&gt;
Should look into test/jdk/sun/tools/jstatd/JstatdTest.java updating its test to check for &amp;quot;Could not bind&amp;quot; and better detect these clashes.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14605853" author="dcubed" created="Tue, 22 Aug 2023 11:28:22 -0700"  >[~kevinw] - Searching for &amp;quot;no such object in table&amp;quot; gets 10 unresolved bugs including&lt;br/&gt;
this one. &amp;quot;no such object in table&amp;quot; or NoSuchObjectException is mentioned in the&lt;br/&gt;
synopsis line for 4 of those unresolved bugs including this one. The other 6 bugs get&lt;br/&gt;
hits on &amp;quot;no such object in table&amp;quot; somewhere in the body of the bugs.&lt;br/&gt;
&lt;br/&gt;
You may want to file new bug with something like this as the synopsis line:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;investigating &amp;quot;NoSuchObjectException: no such object in table&amp;quot; failures&lt;br/&gt;
&lt;br/&gt;
and then change the four direct matches to be sub-tasks of the new bug:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8241159&quot; title=&quot;JMXStartStopTest.java failed due to &amp;quot;java.rmi.NoSuchObjectException: no such object in table&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8241159&quot;&gt;JDK-8241159&lt;/a&gt; JMXStartStopTest.java failed due to &amp;quot;java.rmi.NoSuchObjectException: no such object in table&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8307649&quot; title=&quot;sun/tools/jstatd/TestJstatdPort.java fails with &amp;quot;java.rmi.NoSuchObjectException: no such object in table&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8307649&quot;&gt;JDK-8307649&lt;/a&gt; sun/tools/jstatd/TestJstatdPort.java fails with &amp;quot;java.rmi.NoSuchObjectException: no such object in table&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JDK-8309730 com/sun/jndi/rmi/factoriesfilter/RemoteObjectsFactoryTest.java fails with java.rmi.NoSuchObjectException&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8314476&quot; title=&quot;TestJstatdPortAndServer.java failed with &amp;quot;java.rmi.NoSuchObjectException: no such object in table&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8314476&quot;&gt;&lt;strike&gt;JDK-8314476&lt;/strike&gt;&lt;/a&gt; TestJstatdPortAndServer.java failed with &amp;quot;java.rmi.NoSuchObjectException: no such object in table&amp;quot;&lt;br/&gt;
&lt;br/&gt;
For the other six unresolved bugs that get a hit on &amp;quot;no such object in table&amp;quot;, you&amp;#39;ll&lt;br/&gt;
need to examine the primary failure mode and decide whether that bug should also&lt;br/&gt;
become a sub-task of the new bug:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-6708473&quot; title=&quot;Multiple successive registries with different socket factories fail with local clients&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-6708473&quot;&gt;JDK-6708473&lt;/a&gt; Multiple successive registries with different socket factories fail with local clients&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8081569&quot; title=&quot;sun/tools/jstatd/TestJstatd* tests timed out intermittently &quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8081569&quot;&gt;&lt;strike&gt;JDK-8081569&lt;/strike&gt;&lt;/a&gt; sun/tools/jstatd/TestJstatd* tests timed out intermittently&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JDK-8218809 Few rmi tests fail when running with &amp;quot; -Xcomp -XX:+UseStringDeduplication -XX:+AggressiveOpts &amp;quot; vmoptions&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8251259&quot; title=&quot;sun/tools/jstatd/TestJstatdRmiPort.java timed out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8251259&quot;&gt;JDK-8251259&lt;/a&gt; sun/tools/jstatd/TestJstatdRmiPort.java timed out&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8274337&quot; title=&quot;sun/management/jmxremote/startstop/JMXStartStopTest.java failed with &amp;quot;BindException: Address already in use&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8274337&quot;&gt;JDK-8274337&lt;/a&gt; sun/management/jmxremote/startstop/JMXStartStopTest.java failed with &amp;quot;BindException: Address already in use&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8308352&quot; title=&quot;Test javax/management/remote/mandatory/connection/ConnectionTest.java timed out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8308352&quot;&gt;JDK-8308352&lt;/a&gt; Test javax/management/remote/mandatory/connection/ConnectionTest.java timed out</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5110991">JDK-8316858</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5132654">JDK-8334972</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32rrn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17339"><![CDATA[b13]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="368"><![CDATA[tools]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>