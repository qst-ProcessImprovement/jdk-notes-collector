<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:47:17 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8300273] [IR framework] Handle &lt;!-- safepoint while printing --&gt; message instead of bailing out</title>
                <link>https://bugs.openjdk.org/browse/JDK-8300273</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Instead of bailing out of IR matching when encountering the &amp;quot;&amp;lt;!-- safepoint while printing --&amp;gt;&amp;quot; message, we should extend the HotSpotPidFileParser to handle this case. This would allow us to get rid of this special case handling in IR matching.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Original report:&lt;br/&gt;
&lt;br/&gt;
With the following VM change, that should be harmless, TestCompareUnsigned.java fails intermittently (1/10):&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/hotspot/share/code/codeCache.cpp b/src/hotspot/share/code/codeCache.cpp&lt;br/&gt;
index 1ecefbe26c2..b463268dd68 100644&lt;br/&gt;
--- a/src/hotspot/share/code/codeCache.cpp&lt;br/&gt;
+++ b/src/hotspot/share/code/codeCache.cpp&lt;br/&gt;
@@ -1435,7 +1435,7 @@ void CodeCache::flush_dependents_on(InstanceKlass* dependee) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;marked = mark_for_deoptimization(changes);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
-  if (marked &amp;gt; 0) {&lt;br/&gt;
+  if (true) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// At least one nmethod has been marked for deoptimization&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deoptimization::deoptimize_all_marked();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Run Test VM:&lt;br/&gt;
Command line: [/oracle/jdk/build/fastdebug/jdk/bin/java -cp /oracle/jdk/open/JTwork/classes/compiler/intrinsics/TestCompareUnsigned.d:/oracle/jdk/open/test/hotspot/jtreg/compiler/intrinsics:/oracle/jdk/open/JTwork/classes/test/lib:/oracle/jdk/open/test/lib:/oracle/jdk/open/JTwork/classes:/oracle/jdk/open/test/hotspot/jtreg:/home/tobias/programs/jtreg/lib/javatest.jar:/home/tobias/programs/jtreg/lib/jtreg.jar -Djava.library.path=. -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Dir.framework.server.port=40681 -XX:+PrintCompilation -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:CompilerDirectivesFile=test-vm-compile-commands-pid-560669.log -XX:CompilerDirectivesLimit=131 -XX:-OmitStackTraceInFastThrow -DShouldDoIRVerification=true -XX:-BackgroundCompilation -XX:CompileCommand=quiet -DWarmup=1 compiler.lib.ir_framework.test.TestVM compiler.intrinsics.TestCompareUnsigned ]&lt;br/&gt;
[2023-01-17T15:06:39.310899397Z] Gathering output for process 560694&lt;br/&gt;
[2023-01-17T15:06:41.293900861Z] Waiting for completion for process 560694&lt;br/&gt;
[2023-01-17T15:06:41.294021205Z] Waiting for completion finished for process 560694&lt;br/&gt;
Output and diagnostic info for process 560694 was saved into &amp;#39;pid-560694-output.log&amp;#39;&lt;br/&gt;
[2023-01-17T15:06:41.309555163Z] Waiting for completion for process 560694&lt;br/&gt;
[2023-01-17T15:06:41.309656107Z] Waiting for completion finished for process 560694&lt;br/&gt;
&lt;br/&gt;
Compilation of Failed Method&lt;br/&gt;
----------------------------&lt;br/&gt;
1) Compilation of &amp;quot;public int compiler.intrinsics.TestCompareUnsigned.lessThanInt(int,int)&amp;quot;:&lt;br/&gt;
&amp;gt; Phase &amp;quot;PrintIdeal&amp;quot;:&lt;br/&gt;
&amp;lt;empty&amp;gt;&lt;br/&gt;
&lt;br/&gt;
STDERR:&lt;br/&gt;
&lt;br/&gt;
Command Line:&lt;br/&gt;
/oracle/jdk/build/fastdebug/jdk/bin/java -DReproduce=true -cp /oracle/jdk/open/JTwork/classes/compiler/intrinsics/TestCompareUnsigned.d:/oracle/jdk/open/test/hotspot/jtreg/compiler/intrinsics:/oracle/jdk/open/JTwork/classes/test/lib:/oracle/jdk/open/test/lib:/oracle/jdk/open/JTwork/classes:/oracle/jdk/open/test/hotspot/jtreg:/home/tobias/programs/jtreg/lib/javatest.jar:/home/tobias/programs/jtreg/lib/jtreg.jar -Djava.library.path=. -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Dir.framework.server.port=40681 -XX:+PrintCompilation -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:CompilerDirectivesFile=test-vm-compile-commands-pid-560669.log -XX:CompilerDirectivesLimit=131 -XX:-OmitStackTraceInFastThrow -DShouldDoIRVerification=true -XX:-BackgroundCompilation -XX:CompileCommand=quiet -DWarmup=1 compiler.lib.ir_framework.test.TestVM compiler.intrinsics.TestCompareUnsigned&lt;br/&gt;
&lt;br/&gt;
One or more @IR rules failed:&lt;br/&gt;
&lt;br/&gt;
Failed IR Rules (2) of Methods (1)&lt;br/&gt;
----------------------------------&lt;br/&gt;
1) Method &amp;quot;public int compiler.intrinsics.TestCompareUnsigned.lessThanInt(int,int)&amp;quot; - [Failed IR rules: 2]:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 1: &amp;quot;@compiler.lib.ir_framework.IR(phase={DEFAULT}, applyIfCPUFeatureAnd={}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={}, failOn={&amp;quot;_#CMP_U3#_&amp;quot;}, applyIfAnd={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;PrintIdeal&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- NO compilation output found for this phase! Make sure this phase is emitted or remove it from the list of compile phases in the @IR rule to match on.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* @IR rule 2: &amp;quot;@compiler.lib.ir_framework.IR(phase={DEFAULT}, applyIfCPUFeatureAnd={}, applyIf={}, applyIfCPUFeatureOr={}, applyIfCPUFeature={}, counts={&amp;quot;_#CMP_U#_&amp;quot;, &amp;quot;1&amp;quot;}, failOn={}, applyIfAnd={}, applyIfOr={}, applyIfNot={})&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Phase &amp;quot;PrintIdeal&amp;quot;:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- NO compilation output found for this phase! Make sure this phase is emitted or remove it from the list of compile phases in the @IR rule to match on.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; Check stdout for compilation output of the failed methods&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#############################################################&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;- To only run the failed tests use -DTest, -DExclude,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;and/or -DScenarios.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;- To also get the standard output of the test VM run with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-DReportStdout=true or for even more fine-grained logging&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;use -DVerbose=true.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#############################################################&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
compiler.lib.ir_framework.driver.irmatching.IRViolationException: There were one or multiple IR rule failures. Please check stderr for more information.&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.IRMatcher.throwIfNoSafepointWhilePrinting(IRMatcher.java:72)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.IRMatcher.reportFailures(IRMatcher.java:62)&lt;br/&gt;
	at compiler.lib.ir_framework.driver.irmatching.IRMatcher.match(IRMatcher.java:50)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.runTestVM(TestFramework.java:754)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.start(TestFramework.java:719)&lt;br/&gt;
	at compiler.lib.ir_framework.TestFramework.start(TestFramework.java:339)&lt;br/&gt;
	at compiler.intrinsics.TestCompareUnsigned.main(TestCompareUnsigned.java:45)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1623)&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5091539">JDK-8300273</key>
            <summary>[IR framework] Handle &lt;!-- safepoint while printing --&gt; message instead of bailing out</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="chagedorn">Christian Hagedorn</assignee>
                                    <reporter username="thartmann">Tobias Hartmann</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>ir-framework</label>
                            <label>oracle-triage-11</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Tue, 17 Jan 2023 07:34:13 -0800</created>
                <updated>Fri, 23 Jun 2023 01:01:06 -0700</updated>
                            <resolved>Thu, 2 Feb 2023 06:41:24 -0800</resolved>
                                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14556911" author="dukebot" created="Thu, 2 Feb 2023 06:41:22 -0800"  >Changeset: 59b7fb1a&lt;br/&gt;
Author:    Christian Hagedorn &amp;lt;&lt;a href=&apos;mailto:chagedorn@openjdk.org&apos;&gt;chagedorn@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-02 14:39:28 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/59b7fb1a91c594f98f06b28cb95310a38565397d&quot;&gt;https://git.openjdk.org/jdk/commit/59b7fb1a91c594f98f06b28cb95310a38565397d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14554945" author="roboduke" created="Fri, 27 Jan 2023 01:38:29 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12246&quot;&gt;https://git.openjdk.org/jdk/pull/12246&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-27 09:31:40 +0000</comment>
                            <comment id="14551686" author="thartmann" created="Tue, 17 Jan 2023 07:37:18 -0800"  >It&amp;#39;s worth noting that non-failing runs often print:&lt;br/&gt;
&lt;br/&gt;
Found &amp;lt;!-- safepoint while printing --&amp;gt;, bail out of IR matching</comment>
                            <comment id="14551685" author="thartmann" created="Tue, 17 Jan 2023 07:35:59 -0800"  >It might well be that this is expected behavior with the VM change but it was not obvious to me and should be investigated.&lt;br/&gt;
&lt;br/&gt;
ILW = IR framework failure due to missing compilation output, single test and only with VM changes, no workaround = MLH = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5103953">JDK-8310711</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5099529">JDK-8306922</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zxmj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>