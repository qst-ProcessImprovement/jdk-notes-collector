<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:12:59 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8315415] OutputAnalyzer.shouldMatchByLine() fails in some cases</title>
                <link>https://bugs.openjdk.org/browse/JDK-8315415</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>OutputAnalyzer.shouldMatchByLine() fails as follows:&lt;br/&gt;
&lt;br/&gt;
java.util.regex.PatternSyntaxException: Dangling meta character &amp;#39;*&amp;#39; near index 114&lt;br/&gt;
[1.223s][debug][cds,class     ] klasses[  818] = 0x0000000800218758 app   LambdasWithSameKey$$Lambda/0x800000002 ** hidden&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.regex.Pattern.error(Pattern.java:2204)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.regex.Pattern.sequence(Pattern.java:2379)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.regex.Pattern.expr(Pattern.java:2245)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.regex.Pattern.compile(Pattern.java:1945)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.regex.Pattern.&amp;lt;init&amp;gt;(Pattern.java:1576)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.regex.Pattern.compile(Pattern.java:1101)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.process.OutputAnalyzer.indexOf(OutputAnalyzer.java:759)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.process.OutputAnalyzer.shouldMatchByLine(OutputAnalyzer.java:726)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.process.OutputAnalyzer.shouldMatchByLine(OutputAnalyzer.java:700)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at LambdasInTwoArchives.checkTest(LambdasInTwoArchives.java:61)&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5109338">JDK-8315415</key>
            <summary>OutputAnalyzer.shouldMatchByLine() fails in some cases</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lmesnik">Leonid Mesnik</assignee>
                                    <reporter username="ccheung">Calvin Cheung</reporter>
                        <labels>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Wed, 30 Aug 2023 14:35:11 -0700</created>
                <updated>Mon, 26 May 2025 11:19:45 -0700</updated>
                            <resolved>Tue, 19 Sep 2023 09:35:55 -0700</resolved>
                                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14646399" author="JIRAUSER20917" created="Sun, 4 Feb 2024 18:05:48 -0800"  >Fix request [11u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 11.0.23-oracle.&lt;br/&gt;
No risk, only tests change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed.&lt;br/&gt;
</comment>
                            <comment id="14646134" author="roboduke" created="Thu, 1 Feb 2024 21:40:56 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2505&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2505&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-02 05:37:23 +0000</comment>
                            <comment id="14623429" author="roboduke" created="Thu, 2 Nov 2023 09:41:22 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1945&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1945&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-02 16:33:18 +0000</comment>
                            <comment id="14622058" author="roboduke" created="Mon, 30 Oct 2023 08:37:02 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/305&quot;&gt;https://git.openjdk.org/jdk21u/pull/305&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-30 15:30:54 +0000</comment>
                            <comment id="14622054" author="goetz" created="Mon, 30 Oct 2023 08:29:44 -0700"  >Fix request [17u,21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.11-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Ran some tests using OA.  SAP 21 nightly testing passed.</comment>
                            <comment id="14612292" author="dukebot" created="Tue, 19 Sep 2023 09:35:54 -0700"  >Changeset: 7b1e2bfe&lt;br/&gt;
Author:    Leonid Mesnik &amp;lt;&lt;a href=&apos;mailto:lmesnik@openjdk.org&apos;&gt;lmesnik@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-19 16:33:31 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/7b1e2bfe0f805a69b59839b6bf8250b62ea356b8&quot;&gt;https://git.openjdk.org/jdk/commit/7b1e2bfe0f805a69b59839b6bf8250b62ea356b8&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14611315" author="roboduke" created="Thu, 14 Sep 2023 13:05:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15753&quot;&gt;https://git.openjdk.org/jdk/pull/15753&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-14 19:59:53 +0000</comment>
                            <comment id="14611312" author="lmesnik" created="Thu, 14 Sep 2023 13:03:23 -0700"  >JFYI usages &lt;br/&gt;
&lt;a href=&apos;mailto:lmesnik@home&apos;&gt;lmesnik@home&lt;/a&gt;:~/ws/jdk-vmTestbase/open/test$ grep -r shouldMatchByLine .&lt;br/&gt;
./lib-test/jdk/test/lib/process/OutputAnalyzerTest.java:            output.shouldMatchByLine(byLinePattern);&lt;br/&gt;
./lib-test/jdk/test/lib/process/OutputAnalyzerTest.java:            throw new Exception(&amp;quot;shouldMatchByLine() failed&amp;quot;, e);&lt;br/&gt;
./lib-test/jdk/test/lib/process/OutputAnalyzerTest.java:            output.shouldMatchByLine(nonExistingPattern);&lt;br/&gt;
./lib-test/jdk/test/lib/process/OutputAnalyzerTest.java:            throw new Exception(&amp;quot;shouldMatchByLine() failed to throw exception&amp;quot;);&lt;br/&gt;
./jdk/sun/tools/jcmd/TestJcmdSanity.java:        output.shouldMatchByLine(JCMD_COMMAND_REGEX,&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:     * @see #shouldMatchByLine(String, String, String)&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:    public OutputAnalyzer shouldMatchByLine(String pattern) {&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:        return shouldMatchByLine(null, null, pattern);&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:     * @see #shouldMatchByLine(String, String, String)&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:    public OutputAnalyzer shouldMatchByLineFrom(String fromPattern, String pattern) {&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:        return shouldMatchByLine(fromPattern, null, pattern);&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:     * @see #shouldMatchByLine(String, String, String)&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:    public OutputAnalyzer shouldMatchByLineTo(String toPattern, String pattern) {&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:        return shouldMatchByLine(null, toPattern, pattern);&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:    public OutputAnalyzer shouldMatchByLine(String fromPattern, String toPattern, String pattern) {&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:        return shouldMatchByLine(getOutput(), fromPattern, toPattern, pattern);&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:        return shouldMatchByLine(getStdout(), fromPattern, toPattern, pattern);&lt;br/&gt;
./lib/jdk/test/lib/process/OutputAnalyzer.java:    private OutputAnalyzer shouldMatchByLine(String buffer, String fromPattern, String toPattern, String pattern) {&lt;br/&gt;
./hotspot/jtreg/runtime/logging/DeoptStats.java:            oa.shouldMatchByLine(&amp;quot;&amp;lt;statistics type=&amp;#39;deoptimization&amp;#39;&amp;gt;&amp;quot;, // Start from this line&lt;br/&gt;
&lt;a href=&apos;mailto:lmesnik@home&apos;&gt;lmesnik@home&lt;/a&gt;:~/ws/jdk-vmTestbase/open/test$ grep -r stdoutShouldMatchByLine&lt;br/&gt;
lib-test/jdk/test/lib/process/OutputAnalyzerTest.java:            output.stdoutShouldMatchByLine(stdoutByLinePattern);&lt;br/&gt;
lib-test/jdk/test/lib/process/OutputAnalyzerTest.java:            throw new Exception(&amp;quot;stdoutShouldMatchByLine() failed&amp;quot;, e);&lt;br/&gt;
jdk/sun/security/tools/jarsigner/compatibility/Compatibility.java:            verifyOA.stdoutShouldMatchByLine(&lt;br/&gt;
jdk/sun/tools/jcmd/TestJcmdSanity.java:        output.stdoutShouldMatchByLine(PERF_COUNTER_REGEX, null, PERF_COUNTER_REGEX);&lt;br/&gt;
jdk/sun/tools/jcmd/TestJcmdDefaults.java:        output.stdoutShouldMatchByLine(JCMD_LIST_REGEX);&lt;br/&gt;
jdk/sun/tools/jps/JpsHelper.java:        output.stdoutShouldMatchByLine(regex);&lt;br/&gt;
lib/jdk/test/lib/process/OutputAnalyzer.java:     * @see #stdoutShouldMatchByLine(String, String, String)&lt;br/&gt;
lib/jdk/test/lib/process/OutputAnalyzer.java:    public OutputAnalyzer stdoutShouldMatchByLine(String pattern) {&lt;br/&gt;
lib/jdk/test/lib/process/OutputAnalyzer.java:        return stdoutShouldMatchByLine(null, null, pattern);&lt;br/&gt;
lib/jdk/test/lib/process/OutputAnalyzer.java:    public OutputAnalyzer stdoutShouldMatchByLine(String fromPattern, String toPattern, String pattern) {&lt;br/&gt;
&lt;a href=&apos;mailto:lmesnik@home&apos;&gt;lmesnik@home&lt;/a&gt;:~/ws/jdk-vmTestbase/open/test$ &lt;br/&gt;
</comment>
                            <comment id="14611304" author="lmesnik" created="Thu, 14 Sep 2023 12:50:18 -0700"  >I verified that all existing tests treat from and to as patterns to match. &lt;br/&gt;
The only test which might treat them like lines is ./hotspot/jtreg/runtime/logging/DeoptStats.java&lt;br/&gt;
where the line is also a pattern.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void verify(String[] logFiles) throws Exception {&lt;br/&gt;
	for (String logFile : logFiles) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OutputAnalyzer oa = new OutputAnalyzer(Paths.get(logFile));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oa.shouldMatchByLine(&amp;quot;&amp;lt;statistics type=&amp;#39;deoptimization&amp;#39;&amp;gt;&amp;quot;, // Start from this line                               &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;&amp;lt;/statistics&amp;gt;&amp;quot;,                      // Match until this line                              &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;(Deoptimization traps recorded:)|( .+)&amp;quot;);&lt;br/&gt;
	}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
So I think the safest fix would be just to update testlibrary documentation to say explicitly that from/to are patterns.</comment>
                            <comment id="14607865" author="ccheung" created="Wed, 30 Aug 2023 14:38:46 -0700"  >static final String lambdaPattern =&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;.*cds.class.*klasses.*LambdasWithSameKey[$][$]Lambda.*/0x.*hidden&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static void checkTest(OutputAnalyzer output) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String first = output.firstMatch(lambdaPattern);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;output.shouldMatchByLine(first, null, lambdaPattern);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Failure was observed with usage like the above.&lt;br/&gt;
The String &amp;quot;first&amp;quot; was set to: &amp;quot;[1.223s][debug][cds,class ] klasses[ 818] = 0x0000000800218758 app LambdasWithSameKey$$Lambda/0x800000002 ** hidden&amp;quot;&lt;br/&gt;
When the &amp;quot;first&amp;quot; was passed to shouldMatchByLine(), the failure occurred.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5113273">JDK-8318882</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5113274">JDK-8318883</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5114086">JDK-8319510</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5114213">JDK-8319625</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120773">JDK-8325274</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32yg3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17312"><![CDATA[b16]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="225"><![CDATA[test]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>