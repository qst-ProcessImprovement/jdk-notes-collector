<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:24:06 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8316581] Improve performance of Symbol::print_value_on()</title>
                <link>https://bugs.openjdk.org/browse/JDK-8316581</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>During investigation of performance of class unloading I found that logging the unloading event (UnloadingEventLog::log()) takes 20-40% of total class unloading time.&lt;br/&gt;
&lt;br/&gt;
The problem seems to be Symbol::print_value_on().&lt;br/&gt;
&lt;br/&gt;
The code is:&lt;br/&gt;
&lt;br/&gt;
void Symbol::print_value_on(outputStream* st) const {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;print(&amp;quot;&amp;#39;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; utf8_length(); i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st-&amp;gt;print(&amp;quot;%c&amp;quot;, char_at(i));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;print(&amp;quot;&amp;#39;&amp;quot;);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
I.e. ultimately uses snprintf for every character of the symbol. The code seems to print the raw utf-8 string (ju)byte by (ju)byte.&lt;br/&gt;
&lt;br/&gt;
A faster way seems to be just use outputStream::write() since apparently the code wants to print the raw utf8 bytes anyway:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;write(&amp;quot;&amp;#39;&amp;quot;, 1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;write((const char*)base(), utf8_length());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;write(&amp;quot;&amp;#39;&amp;quot;, 1);&lt;br/&gt;
&lt;br/&gt;
Initial tests showed that this is ~5-10x faster, reducing the overhead of event logging during class unloading significantly.</description>
                <environment></environment>
        <key id="5110661">JDK-8316581</key>
            <summary>Improve performance of Symbol::print_value_on()</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tschatzl">Thomas Schatzl</assignee>
                                    <reporter username="tschatzl">Thomas Schatzl</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>gc-pending-review</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>performance</label>
                    </labels>
                <created>Wed, 20 Sep 2023 01:12:26 -0700</created>
                <updated>Wed, 2 Oct 2024 07:31:42 -0700</updated>
                            <resolved>Thu, 21 Sep 2023 07:48:10 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14706231" author="roboduke" created="Thu, 19 Sep 2024 05:53:02 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2895&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2895&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-19 12:47:21 +0000</comment>
                            <comment id="14706230" author="roboduke" created="Thu, 19 Sep 2024 05:51:41 -0700"  >[jdk17u-fix-request] Approval Request from Kerem Kat&lt;br/&gt;
Improve class unloading performance by optimizing symbol value logging while unloading, applies cleanly.</comment>
                            <comment id="14628420" author="roboduke" created="Wed, 22 Nov 2023 04:08:44 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/394&quot;&gt;https://git.openjdk.org/jdk21u/pull/394&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-22 12:00:48 +0000</comment>
                            <comment id="14628418" author="roboduke" created="Wed, 22 Nov 2023 04:05:38 -0800"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve class unloading performance. Applies cleanly.</comment>
                            <comment id="14612906" author="dukebot" created="Thu, 21 Sep 2023 07:48:08 -0700"  >Changeset: 90bcdbd1&lt;br/&gt;
Author:    Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-21 14:47:06 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/90bcdbd15fe7211377f6f6812a2b562c17995d65&quot;&gt;https://git.openjdk.org/jdk/commit/90bcdbd15fe7211377f6f6812a2b562c17995d65&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14612506" author="roboduke" created="Wed, 20 Sep 2023 02:40:11 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15838&quot;&gt;https://git.openjdk.org/jdk/pull/15838&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-20 09:34:05 +0000</comment>
                            <comment id="14612505" author="tschatzl" created="Wed, 20 Sep 2023 02:38:30 -0700"  >Fwiw, the third column shows time taken for removing dependents (DependencyContext::remove_all_dependents).</comment>
                            <comment id="14612483" author="tschatzl" created="Wed, 20 Sep 2023 01:26:25 -0700"  >Output of code running a class/code cache unloading stress benchmark before/after the change. The second to last number (all values in ms) shows duration of the UnloadingEventLog::log() call.&lt;br/&gt;
&lt;br/&gt;
before:&lt;br/&gt;
&lt;br/&gt;
[650,827s][gc             ] GC(128) SystemDictionary::do_unloading 0,48 0,10  0,57 0,14 3,10 0,16 *18,49* 0,17 &lt;br/&gt;
[762,851s][gc             ] GC(155) SystemDictionary::do_unloading 0,41 0,09 18,03 0,15 3,09 0,18 *16,65* 0,25 &lt;br/&gt;
[1251,577s][gc            ] GC(178) SystemDictionary::do_unloading 0,53 0,10 39,89 0,14 3,15 0,19 *17,50* 0,26 &lt;br/&gt;
[1391,733s][gc            ] GC(186) SystemDictionary::do_unloading 0,39 0,10 61,57 0,18 3,01 0,23 *18,44* 0,23 &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
after:&lt;br/&gt;
[675,326s][gc             ] GC(135) SystemDictionary::do_unloading 0,35 0,12 41,67 0,17 3,33 0,20 *3,11* 0,32 &lt;br/&gt;
[1214,745s][gc            ] GC(171) SystemDictionary::do_unloading 0,70 0,29 39,70 0,32 3,67 0,42 *5,15* 0,40 &lt;br/&gt;
[1280,088s][gc            ] GC(175) SystemDictionary::do_unloading 0,29 0,10 52,58 0,16 3,10 0,19 *2,96* 0,27 &lt;br/&gt;
[1480,459s][gc            ] GC(187) SystemDictionary::do_unloading 0,49 0,10 45,22 0,14 3,14 0,16 *2,69* 0,26 </comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5115492">JDK-8320776</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140534">JDK-8341420</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i336lv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>