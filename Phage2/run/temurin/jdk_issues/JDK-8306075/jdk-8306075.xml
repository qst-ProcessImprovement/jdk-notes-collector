<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:36:23 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306075] Micro-optimize Enum.hashCode</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306075</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>One of our application stacks apparently benefits from changing Enum.hashCode calls to Enum.ordinal calls in some composite hashCode calculations. There is at least one relevant report that asks to do the same, see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8050217&quot; title=&quot;Enum.hashCode() should return ordinal value for the enum, for better consistency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8050217&quot;&gt;&lt;strike&gt;JDK-8050217&lt;/strike&gt;&lt;/a&gt;. &lt;br/&gt;
&lt;br/&gt;
Changing the hash code characteristics is not something we do lightly, and it needs to have a solid reason to do so. But we can micro-optimize current Enum.hashCode to perform better, thus rendering the &amp;quot;use ordinal in lieu of hashcode for enums&amp;quot; suggestion much closer to being moot performance-wise.&lt;br/&gt;
&lt;br/&gt;
Performance investigation shows that Enum.hashCode is not very fast right now, because it has to pull the identity hash code from the object header, mask it out to recover the hash, check it is initialized, call the slowpath when it is not initialized, or is in displaced header, etc. With more work towards compact object headers, the cost of accessing identity hashcode would likely to become even greater.&lt;br/&gt;
&lt;br/&gt;
Fortunately, there is a space at least in field-less Enums to cache the hashcode directly. There is a precedent of doing the same for Strings.&lt;br/&gt;
&lt;br/&gt;
% java -jar jol-cli-latest.jar internals java.lang.Enum               &lt;br/&gt;
# VM mode: 64 bits&lt;br/&gt;
# Compressed references (oops): 3-bit shift&lt;br/&gt;
# Compressed class pointers: 3-bit shift&lt;br/&gt;
# Object alignment: 8 bytes&lt;br/&gt;
#                       ref, bool, byte, char, shrt,  int,  flt,  lng,  dbl&lt;br/&gt;
# Field sizes:            4,    1,    1,    2,    2,    4,    4,    8,    8&lt;br/&gt;
# Array element sizes:    4,    1,    1,    2,    2,    4,    4,    8,    8&lt;br/&gt;
# Array base offsets:    16,   16,   16,   16,   16,   16,   16,   16,   16&lt;br/&gt;
&lt;br/&gt;
Failed to find matching constructor, falling back to class-only introspection.&lt;br/&gt;
&lt;br/&gt;
java.lang.Enum object internals:&lt;br/&gt;
OFF  SZ               TYPE DESCRIPTION               VALUE&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0   8                    (object header: mark)     N/A&lt;br/&gt;
&amp;nbsp;&amp;nbsp;8   4                    (object header: class)    N/A&lt;br/&gt;
&amp;nbsp;12   4                int Enum.ordinal              N/A&lt;br/&gt;
&amp;nbsp;16   4   java.lang.String Enum.name                 N/A&lt;br/&gt;
&amp;nbsp;20   4                    (object alignment gap)    &lt;br/&gt;
Instance size: 24 bytes&lt;br/&gt;
Space losses: 0 bytes internal + 4 bytes external = 4 bytes total&lt;br/&gt;
&lt;br/&gt;
Also, since the enum constants are singletons, even if this increases the size of the enum instance in other configurations or for enums having more fields, the memory loss for such caching would be minimal. If we cache the hash code at use, we also dodge the startup costs, if any. Although, we can also initialize the hash eagerly, and then Enum.hashCode would be exactly like Enum.ordinal performance-wise.</description>
                <environment></environment>
        <key id="5098503">JDK-8306075</key>
            <summary>Micro-optimize Enum.hashCode</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ogillespie">Oli Gillespie</assignee>
                                    <reporter username="shade">Aleksey Shipilev</reporter>
                        <labels>
                            <label>amazon-interest</label>
                    </labels>
                <created>Mon, 17 Apr 2023 02:04:50 -0700</created>
                <updated>Fri, 7 Jun 2024 05:02:48 -0700</updated>
                            <resolved>Fri, 21 Apr 2023 02:54:24 -0700</resolved>
                                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14575689" author="dukebot" created="Fri, 21 Apr 2023 02:54:23 -0700"  >Changeset: 3da987ad&lt;br/&gt;
Author:    Oli Gillespie &amp;lt;&lt;a href=&apos;mailto:ogillesp@amazon.com&apos;&gt;ogillesp@amazon.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-21 09:51:36 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3da987adacc3acc120a2781ee9a2111e26356723&quot;&gt;https://git.openjdk.org/jdk/commit/3da987adacc3acc120a2781ee9a2111e26356723&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14574113" author="roboduke" created="Mon, 17 Apr 2023 04:05:30 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13491&quot;&gt;https://git.openjdk.org/jdk/pull/13491&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-17 10:59:34 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5131321">JDK-8333791</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4664055">JDK-8050217</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i314b7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="190"><![CDATA[java.lang]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>