<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:10:10 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299234] JMX Repository.query performance</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299234</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>JMX queries consume a lot of memory and CPU usage if called with wildcard patterns. &lt;br/&gt;
The reason is Repository$ObjectNamePattern.matchKeys():&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; public boolean matchKeys(ObjectName name) {&lt;br/&gt;
&amp;gt;&amp;gt;     // If key property value pattern but not key property list&lt;br/&gt;
&amp;gt;&amp;gt;     // pattern, then the number of key properties must be equal&lt;br/&gt;
&amp;gt;&amp;gt;     //&lt;br/&gt;
&amp;gt;&amp;gt;     if (isPropertyValuePattern &amp;amp;&amp;amp;&lt;br/&gt;
&amp;gt;&amp;gt;         !isPropertyListPattern &amp;amp;&amp;amp;&lt;br/&gt;
&amp;gt;&amp;gt;         (name.getKeyPropertyList().size() != keys.length))&lt;br/&gt;
&amp;gt;&amp;gt;         return false;&lt;br/&gt;
&lt;br/&gt;
and more specifically name.getKeyPropertyList().&lt;br/&gt;
&lt;br/&gt;
And getKeyPropertyList() looks like this:&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; public Hashtable&amp;lt;String,String&amp;gt; getKeyPropertyList() { return new Hashtable&amp;lt;String,String&amp;gt;(_getKeyPropertyList()); } &lt;br/&gt;
&lt;br/&gt;
So, every call to Repository$ObjectNamePattern.matchKeys() creates a new HashTable and fills it with key properties.&lt;br/&gt;
&lt;br/&gt;
This expensive operation can be omitted by using ObjectName.apply()&lt;br/&gt;
&lt;br/&gt;
The attached test shows 2 times better performance and memory usage.&lt;br/&gt;
The test is created on the base of RepositoryWildcardTest jtreg test:&lt;br/&gt;
&lt;br/&gt;
Before:&lt;br/&gt;
&amp;gt;&amp;gt; $ java test 1000000 1000000&lt;br/&gt;
&amp;gt;&amp;gt; Test PASSED in 8943169791 ns.&lt;br/&gt;
&amp;gt;&amp;gt; GC: G1 Young Generation getCollectionCount()=177 getCollectionTime()=118&lt;br/&gt;
&lt;br/&gt;
After:&lt;br/&gt;
&amp;gt;&amp;gt; $ java test 1000000 1000000&lt;br/&gt;
&amp;gt;&amp;gt; Test PASSED in 4808213917 ns.&lt;br/&gt;
&amp;gt;&amp;gt; GC: G1 Young Generation getCollectionCount()=88 getCollectionTime()=53&lt;br/&gt;
&lt;br/&gt;
Benchmark results for original implementation:&lt;br/&gt;
&lt;br/&gt;
Benchmark                                 (N)   Mode  Cnt    Score    Error  Units&lt;br/&gt;
JmxBenchmark.applyForMyObjectName        1000  thrpt   10  539.134 &amp;#xB1; 11.643  ops/s&lt;br/&gt;
JmxBenchmark.applyForObjectName          1000  thrpt   10  495.961 &amp;#xB1; 10.550  ops/s&lt;br/&gt;
JmxBenchmark.queryMBeansForMyObjectName  1000  thrpt   10   75.482 &amp;#xB1;  0.302  ops/s&lt;br/&gt;
JmxBenchmark.queryMBeansForObjectName    1000  thrpt   10  111.721 &amp;#xB1;  0.462  ops/s&lt;br/&gt;
JmxBenchmark.queryNamesForMyObjectName   1000  thrpt   10   79.004 &amp;#xB1;  0.398  ops/s&lt;br/&gt;
JmxBenchmark.queryNamesForObjectName     1000  thrpt   10  125.877 &amp;#xB1;  2.024  ops/s&lt;br/&gt;
&lt;br/&gt;
Benchmark results for the proposed implementation:&lt;br/&gt;
&lt;br/&gt;
Benchmark                                 (N)   Mode  Cnt    Score    Error  Units&lt;br/&gt;
JmxBenchmark.applyForMyObjectName        1000  thrpt   10  542.233 &amp;#xB1;  4.137  ops/s&lt;br/&gt;
JmxBenchmark.applyForObjectName          1000  thrpt   10  668.710 &amp;#xB1; 13.124  ops/s&lt;br/&gt;
JmxBenchmark.queryMBeansForMyObjectName  1000  thrpt   10  123.381 &amp;#xB1;  4.254  ops/s&lt;br/&gt;
JmxBenchmark.queryMBeansForObjectName    1000  thrpt   10  237.607 &amp;#xB1;  3.298  ops/s&lt;br/&gt;
JmxBenchmark.queryNamesForMyObjectName   1000  thrpt   10  122.576 &amp;#xB1;  2.364  ops/s&lt;br/&gt;
JmxBenchmark.queryNamesForObjectName     1000  thrpt   10  238.275 &amp;#xB1;  4.904  ops/s&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5090261">JDK-8299234</key>
            <summary>JMX Repository.query performance</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="abakhtin">Alexey Bakhtin</assignee>
                                    <reporter username="abakhtin">Alexey Bakhtin</reporter>
                        <labels>
                            <label>jdk11u-fix-no</label>
                            <label>jdk11u-fix-request</label>
                    </labels>
                <created>Wed, 21 Dec 2022 10:33:02 -0800</created>
                <updated>Wed, 14 Aug 2024 07:20:23 -0700</updated>
                            <resolved>Mon, 20 Feb 2023 09:54:48 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14561983" author="goetz" created="Wed, 22 Feb 2023 02:35:19 -0800"  >[11u-no]&lt;br/&gt;
* it is not in 17&lt;br/&gt;
* no performance backports to 11&lt;br/&gt;
* not that trivial to make an exception.&lt;br/&gt;
* has not proven itself in any earlier release</comment>
                            <comment id="14561893" author="abakhtin" created="Tue, 21 Feb 2023 22:59:22 -0800"  >Fix request (11u)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d like to backport this enhancement to improve performance and decrease CPU usage caused by operations with ObjectName objects.&lt;br/&gt;
Backport is almost clean. The only difference is the format of the removed ObjectNamePattern class declaration:&lt;br/&gt;
private final static class ObjectNamePattern vs private static final class ObjectNamePattern&lt;br/&gt;
&lt;br/&gt;
All javax/naming and javax/management tests are passed</comment>
                            <comment id="14561667" author="abakhtin" created="Tue, 21 Feb 2023 05:00:46 -0800"  >Fix request (17u)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d like to backport this enhancement to improve performance and decrease CPU usage caused by operations with ObjectName objects.&lt;br/&gt;
Backport is clean.&lt;br/&gt;
All javax/naming and javax/management tests are passed</comment>
                            <comment id="14561661" author="roboduke" created="Tue, 21 Feb 2023 04:26:52 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/1762&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/1762&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-21 12:21:13 +0000</comment>
                            <comment id="14561642" author="roboduke" created="Tue, 21 Feb 2023 02:43:35 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1182&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1182&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-21 10:37:14 +0000</comment>
                            <comment id="14561483" author="dukebot" created="Mon, 20 Feb 2023 09:54:46 -0800"  >Changeset: 9a797228&lt;br/&gt;
Author:    Alexey Bakhtin &amp;lt;&lt;a href=&apos;mailto:abakhtin@openjdk.org&apos;&gt;abakhtin@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-20 17:52:54 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/9a797228f3576720196d5e3bf4b204a5e3f87376&quot;&gt;https://git.openjdk.org/jdk/commit/9a797228f3576720196d5e3bf4b204a5e3f87376&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14547242" author="roboduke" created="Wed, 21 Dec 2022 11:00:10 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11758&quot;&gt;https://git.openjdk.org/jdk/pull/11758&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-21 18:50:52 +0000</comment>
                    </comments>
                    <attachments>
                            <attachment id="102514" name="jmxbenchmark.zip" size="4645" author="abakhtin" created="Thu, 2 Feb 2023 05:37:08 -0800"/>
                            <attachment id="102131" name="test.java" size="5587" author="abakhtin" created="Wed, 21 Dec 2022 10:32:28 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zpqj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="375"><![CDATA[javax.management]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>