<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:18:26 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301380] jdk/jfr/api/consumer/streaming/TestCrossProcessStreaming.java</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301380</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in my stress testing for jdk-20+33:&lt;br/&gt;
&lt;br/&gt;
jdk/jfr/api/consumer/streaming/TestCrossProcessStreaming.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
[Event-Producer] [15.752s][info][jfr,startup] Started recording 1. No limit specified, using maxsize=250MB as default.&lt;br/&gt;
[Event-Producer] [15.752s][info][jfr,startup]&lt;br/&gt;
[Event-Producer] [15.752s][info][jfr,startup] Use jcmd 15245 JFR.dump name=1 filename=FILEPATH to copy recording data to file.&lt;br/&gt;
[Event-Producer] MAIN_STARTED&lt;br/&gt;
JFR repository: /private/var/folders/5g/66j5b5kn7fl10mkt696_lzhh00grqb/T/2023_01_29_05_41_30_15245&lt;br/&gt;
[Event-Producer] Events generated: 25000&lt;br/&gt;
[Event-Producer] Events generated: 8000&lt;br/&gt;
[Event-Producer] # To suppress the following error report, specify this argument&lt;br/&gt;
[Event-Producer] # after -XX: or in .hotspotrc:  SuppressErrorAt=/jfrThreadLocal.cpp:331&lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
[Event-Producer] # A fatal error has been detected by the Java Runtime Environment: &lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
[Event-Producer] #  Internal Error (/System/Volumes/Data/work/shared/bug_hunt/thread_SMR_stress/jdk20_exp.git/open/src/hotspot/share/jfr/support/jfrThreadLocal.cpp:331), pid=15245, tid=40451&lt;br/&gt;
[Event-Producer] #  assert(other_thread_id != 0) failed: invariant&lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
[Event-Producer] # JRE version: Java(TM) SE Runtime Environment (20.0) (slowdebug build 20-internal-2023-01-26-1529122.dcubed...)&lt;br/&gt;
[Event-Producer] # Java VM: Java HotSpot(TM) 64-Bit Server VM (slowdebug 20-internal-2023-01-26-1529122.dcubed..., mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, bsd-aarch64)&lt;br/&gt;
[Event-Producer] # Core dump will be written. Default location: ../core.15245&lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
[Event-Producer] # JFR recording file will be written. Location: /System/Volumes/Data/work/shared/bug_hunt/thread_SMR_stress/jdk20_exp.git/build/macosx-aarch64-normal-server-slowdebug/test-support/jtreg_open_test_jdk_jdk_svc/scratch/2/hs_err_pid15245.jfr&lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
[Event-Producer] # An error report file with more information is saved as:&lt;br/&gt;
[Event-Producer] # /System/Volumes/Data/work/shared/bug_hunt/thread_SMR_stress/jdk20_exp.git/build/macosx-aarch64-normal-server-slowdebug/test-support/jtreg_open_test_jdk_jdk_svc/scratch/2/hs_err_pid15245.log&lt;br/&gt;
[Event-Producer] [thread 26883 also had an error]&lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
[Event-Producer] # If you would like to submit a bug report, please visit:&lt;br/&gt;
[Event-Producer] #   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
[Event-Producer] #&lt;br/&gt;
----------System.err:(12/707)----------&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x000000014a09f210):  JavaThread &amp;quot;JFR Periodic Tasks&amp;quot; daemon [_thread_in_vm, id=40451, stack(0x000000016dc6c000,0x000000016de6f000)] _threads_hazard_ptr=0x0000000159e7fad0, _nested_threads_hazard_ptr_cnt=0&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000016dc6c000,0x000000016de6f000],  sp=0x000000016de6df20,  free space=2055k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0x107c00c]  VMError::report_and_die(int, char const*, char const*, char*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x990  (jfrThreadLocal.cpp:331)&lt;br/&gt;
V  [libjvm.dylib+0x107c65c]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, char*)+0x68&lt;br/&gt;
V  [libjvm.dylib+0x58b1b8]  report_vm_error(char const*, int, char const*, char const*, ...)+0x88&lt;br/&gt;
V  [libjvm.dylib+0x97ab14]  JfrThreadLocal::impersonate(Thread const*, unsigned long long)+0x68&lt;br/&gt;
V  [libjvm.dylib+0x975280]  JfrThreadCPULoadEvent::send_events()+0x14c&lt;br/&gt;
V  [libjvm.dylib+0x941d0c]  JfrPeriodicEventSet::requestThreadCPULoad()+0xc&lt;br/&gt;
V  [libjvm.dylib+0x92fc20]  JfrPeriodicEventSet::requestEvent(JfrEventId, long, PeriodicType)+0xd4 &lt;br/&gt;
V  [libjvm.dylib+0x92faec]  jfr_emit_event+0xa4&lt;br/&gt;
j  jdk.jfr.internal.JVM.emitEvent(JJJ)Z+0 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine$RequestHook.emitJVMEvent(Ljdk/jfr/internal/PlatformEventType;JLjdk/jfr/internal/RequestEngine$PeriodicType;)V+20 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine$RequestHook.execute(JLjdk/jfr/internal/RequestEngine$PeriodicType;)V+36 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;J)J+141 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine.doPeriodic()J+6 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.periodicTask()V+47 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1()V+1 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt; &lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder$$Lambda$73+0x00000008010424d8.run()V+4 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@20-internal&apos;&gt;java.base@20-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@20-internal&apos;&gt;java.base@20-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x000000011b1b817c&lt;br/&gt;
V  [libjvm.dylib+0x8d63f4]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x424&lt;br/&gt;
V  [libjvm.dylib+0xd96f3c]  os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*), JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x38&lt;br/&gt;
V  [libjvm.dylib+0x8d52c8]  JavaCalls::call(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x38&lt;br/&gt;
V  [libjvm.dylib+0x8d5108]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x148&lt;br/&gt;
V  [libjvm.dylib+0x8d5344]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x70&lt;br/&gt;
V  [libjvm.dylib+0x9f4af0]  thread_entry(JavaThread*, JavaThread*)+0xa8&lt;br/&gt;
V  [libjvm.dylib+0x8f0fbc]  JavaThread::thread_main_inner()+0x108&lt;br/&gt;
V  [libjvm.dylib+0x8f0ea8]  JavaThread::run()+0x124&lt;br/&gt;
V  [libjvm.dylib+0xfd6398]  Thread::call_run()+0x154&lt;br/&gt;
V  [libjvm.dylib+0xd94198]  thread_native_entry(Thread*)+0x138&lt;br/&gt;
C  [libsystem_pthread.dylib+0x7878]  _pthread_start+0x140&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  jdk.jfr.internal.JVM.emitEvent(JJJ)Z+0 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine$RequestHook.emitJVMEvent(Ljdk/jfr/internal/PlatformEventType;JLjdk/jfr/internal/RequestEngine$PeriodicType;)V+20 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine$RequestHook.execute(JLjdk/jfr/internal/RequestEngine$PeriodicType;)V+36 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;J)J+141 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.RequestEngine.doPeriodic()J+6 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.periodicTask()V+47 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1()V+1 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.jfr.internal.PlatformRecorder$$Lambda$73+0x00000008010424d8.run()V+4 &lt;a href=&apos;mailto:jdk.jfr@20-internal&apos;&gt;jdk.jfr@20-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@20-internal&apos;&gt;java.base@20-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@20-internal&apos;&gt;java.base@20-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x000000011b1b817c</description>
                <environment></environment>
        <key id="5092844">JDK-8301380</key>
            <summary>jdk/jfr/api/consumer/streaming/TestCrossProcessStreaming.java</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mgronlun">Markus Gr&#246;nlund</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                    </labels>
                <created>Mon, 30 Jan 2023 10:19:48 -0800</created>
                <updated>Mon, 13 Feb 2023 11:11:10 -0800</updated>
                            <resolved>Wed, 8 Feb 2023 02:28:07 -0800</resolved>
                                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14558195" author="dukebot" created="Wed, 8 Feb 2023 02:28:06 -0800"  >Changeset: c92a7deb&lt;br/&gt;
Author:    Markus Gr&amp;#xF6;nlund &amp;lt;&lt;a href=&apos;mailto:mgronlun@openjdk.org&apos;&gt;mgronlun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-08 10:26:40 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/c92a7deba50cbf5e283d1bd0ef5f2d6f8a4fc947&quot;&gt;https://git.openjdk.org/jdk/commit/c92a7deba50cbf5e283d1bd0ef5f2d6f8a4fc947&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14556919" author="roboduke" created="Thu, 2 Feb 2023 07:18:06 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12388&quot;&gt;https://git.openjdk.org/jdk/pull/12388&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-02 15:07:21 +0000</comment>
                            <comment id="14556884" author="mgronlun" created="Thu, 2 Feb 2023 04:30:23 -0800"  >I think I found the problem with the assert(other_thread_id != 0) failed: invariant :&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;DestroyJavaVM&amp;quot; thread is created by calling:&lt;br/&gt;
&lt;br/&gt;
jint JNICALL jni_DestroyJavaVM(JavaVM *vm)&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;res = vm-&amp;gt;AttachCurrentThread((void **)&amp;amp;env, (void *)&amp;amp;destroyargs);&lt;br/&gt;
&lt;br/&gt;
jint JNICALL jni_AttachCurrentThread(JavaVM *vm, void **penv, void *_args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;HOTSPOT_JNI_ATTACHCURRENTTHREAD_ENTRY(vm, penv, _args);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (vm_created == 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HOTSPOT_JNI_ATTACHCURRENTTHREAD_RETURN((uint32_t) JNI_ERR);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JNI_ERR;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;jint ret = attach_current_thread(vm, penv, _args, false); ### &amp;lt;------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;HOTSPOT_JNI_ATTACHCURRENTTHREAD_RETURN(ret);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return ret;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
static jint attach_current_thread(JavaVM *vm, void **penv, void *_args, bool daemon) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;JavaVMAttachArgs *args = (JavaVMAttachArgs *) _args;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Check below commented out from JDK1.2fcs as well&lt;br/&gt;
&amp;nbsp;&amp;nbsp;/*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (args &amp;amp;&amp;amp; (args-&amp;gt;version != JNI_VERSION_1_1 || args-&amp;gt;version != JNI_VERSION_1_2)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JNI_EVERSION;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Thread* t = Thread::current_or_null();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (t != NULL) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// If executing from an atexit hook we may be in the VMThread.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (t-&amp;gt;is_Java_thread()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// If the thread has been attached this operation is a no-op&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*(JNIEnv**)penv = JavaThread::cast(t)-&amp;gt;jni_environment();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JNI_OK;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JNI_ERR;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Create a thread and mark it as attaching so it will be skipped by the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// ThreadsListEnumerator - see CR 6404306&lt;br/&gt;
&amp;nbsp;&amp;nbsp;JavaThread* thread = new JavaThread(true); ### &amp;lt;&amp;lt;-- this creates a new JavaThread representation&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;### The JavaThread constructor re-initializes the embedded _jfr_thread_local struct, with thread ids set to 0.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;###  [+0x058] _vthread_id      : 0x0 [Type: unsigned __int64]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;###  [+0x060] _jvm_thread_id   : 0x0 [Type: unsigned __int64] &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;### The default thread state is _thread_new&lt;br/&gt;
&amp;nbsp;&amp;nbsp;### +0x3b4 _thread_state : 2 ( _thread_new )&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Set correct safepoint info. The thread is going to call into Java when&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// initializing the Java level thread object. Hence, the correct state must&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// be set in order for the Safepoint code to deal with it correctly.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;set_thread_state(_thread_in_vm); ### &amp;lt;&amp;lt;-- but it is immediately set to _thread_in_vm...&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;record_stack_base_and_size();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;register_thread_stack_with_NMT();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;initialize_thread_current();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;MACOS_AARCH64_ONLY(thread-&amp;gt;init_wx());&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!os::create_attached_thread(thread)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread-&amp;gt;smr_delete();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JNI_ERR;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// Enable stack overflow checks&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;stack_overflow_state()-&amp;gt;create_stack_guard_pages();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;initialize_tlab();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;thread-&amp;gt;cache_global_variables();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// This thread will not do a safepoint check, since it has&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// not been added to the Thread list yet.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;{ MutexLocker ml(Threads_lock);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// This must be inside this lock in order to get FullGCALot to work properly, i.e., to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// avoid this thread trying to do a GC before it is added to the thread-list&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thread-&amp;gt;set_active_handles(JNIHandleBlock::allocate_block());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Threads::add(thread, daemon); ### &amp;lt;&amp;lt;--------------------- --------------------this will now add the thread to the SMR thread list&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;### We now have a new JavaThread on the SMR list, with thread state _thread_in_vm and jfr thread id 0.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;### Since the initial state was changed from _thread_new, the JFR iterator will include it. Hence, assert.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;### The thread id assignment is done lazily as part of  post_thread_start_event(thread); just a few lines below. This explains this rare sighting - it is a very small window where the thread is _thread_in_vm and has a jfr traceid set to 0.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
And here is the reason why the assertion fails as part of impersonation:&lt;br/&gt;
&lt;br/&gt;
inline traceid load_java_thread_id(const Thread* t) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(t != nullptr, &amp;quot;invariant&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(t-&amp;gt;is_Java_thread(), &amp;quot;invariant&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;oop threadObj = JavaThread::cast(t)-&amp;gt;threadObj();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return threadObj != nullptr ? AccessThreadTraceId::id(threadObj) : 0; ### &amp;lt;&amp;lt;--- the jni attaching thread is set onto the thread list, in state _thread_in_vm, before it has called to java in order to create a threadObj.&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
traceid JfrThreadLocal::assign_thread_id(const Thread* t, JfrThreadLocal* tl) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(t != nullptr, &amp;quot;invariant&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(tl != nullptr, &amp;quot;invariant&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;JfrSpinlockHelper spinlock(&amp;amp;tl-&amp;gt;_critical_section);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;traceid tid = tl-&amp;gt;_jvm_thread_id;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (tid == 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (t-&amp;gt;is_Java_thread()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tid = load_java_thread_id(t);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tl-&amp;gt;_jvm_thread_id = tid;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Atomic::store(&amp;amp;tl-&amp;gt;_vthread_id, tid);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return tid;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tid = static_cast&amp;lt;traceid&amp;gt;(ThreadIdentifier::next());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tl-&amp;gt;_jvm_thread_id = tid;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return tid;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I think I can fix this by updating the iterator to filter out _jni_attach_state == _attaching_via_jni,.</comment>
                            <comment id="14556875" author="mgronlun" created="Thu, 2 Feb 2023 03:33:00 -0800"  >It seems very strange the same thread address is on both lists! ThreadsSMRSupport::smr_delete() is supposed to await the release of the hazard pointer to the list that is _to_delete_list(s), before it destroys the JavaThread and makes it available. What is the status of the &amp;quot; _threads_hazard_ptr&amp;quot; and the &amp;quot;_threads_list_ptr&amp;quot; fields for the periodic thread?</comment>
                            <comment id="14556754" author="dholmes" created="Wed, 1 Feb 2023 18:25:52 -0800"  >The main thread detaches from the VM when main() returns and re-attaches as the DestroyJavaVM thread. This should involves two different JavaThread instances of course.</comment>
                            <comment id="14556721" author="dcubed" created="Wed, 1 Feb 2023 15:03:36 -0800"  >So here&amp;#39;s the call to JfrThreadLocal::impersonate:&lt;br/&gt;
&lt;br/&gt;
(lldb) up&lt;br/&gt;
frame #8: 0x0000000109975280 libjvm.dylib`JfrThreadCPULoadEvent::send_events() at jfrThreadCPULoadEvent.cpp:126:9&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;123 	      event.set_endtime(event_time);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;124 	      if (jt != periodic_thread) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;125 	        // Commit reads the thread id from this thread&amp;#39;s trace data, so put it there temporarily&lt;br/&gt;
-&amp;gt; 126 	        JfrThreadLocal::impersonate(periodic_thread, JFR_JVM_THREAD_ID(jt));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;127 	      } else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;128 	        JfrThreadLocal::impersonate(periodic_thread, periodic_thread_id);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;129 	      }&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the &amp;#39;jt&amp;#39; thread:&lt;br/&gt;
&lt;br/&gt;
(lldb) print jt&lt;br/&gt;
(JavaThread *) $4 = 0x000000015a0d1810&lt;br/&gt;
(lldb) print *jt&lt;br/&gt;
(JavaThread) $5 = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Thread = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ThreadShadow = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_pending_exception = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_exception_file = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_exception_line = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_nmethod_disarm_value = 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_gc_data = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[0] = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[1] = 8192&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[2] = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[3] = 17433981653976477952&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[4] = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[5] = 2048&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[6] = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[7] = 5803341568&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[8] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[9] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[10] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[11] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[12] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[13] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[14] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[15] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[16] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[17] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[18] = 17433981653976478193&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_threads_hazard_ptr = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_threads_list_ptr = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_nested_threads_hazard_ptr_cnt = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_suspendible_thread = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_last_handle_mark = 0x000000016b87e9b8&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_threads_do_token = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_rcu_counter = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_missed_ic_stub_refill_verifier = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_skip_gcalot = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_tlab = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_start = 0x000000070f2af600&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_top = 0x000000070f2af768&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_pf_top = 0x000000070f2af670&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_end = 0x000000070f2ca758&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_allocation_end = 0x000000070f2ca758&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_desired_size = 13981&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_refill_waste_limit = 218&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_allocated_before_last_gc = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_bytes_since_last_sample_point = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_number_of_refills = 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_refill_waste = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_gc_waste = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_slow_allocations = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_allocated_size = 13995&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_allocation_fraction = (_average = 0.333333015, _sample_count = 1, _weight = 35, _is_old = false, _last_sample = 0.333333015)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_allocated_bytes = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_heap_sampler = (_bytes_until_sample = 865667)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_statistical_info = (_start_time_stamp = 1752862167946416, _define_class_count = 0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_jfr_thread_local = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_java_event_writer = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_java_buffer = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_native_buffer = 0x000000013a9ab810&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_shelved_buffer = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_load_barrier_buffer_epoch_0 = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_load_barrier_buffer_epoch_1 = 0x000000014a082210&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_checkpoint_buffer_epoch_0 = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_checkpoint_buffer_epoch_1 = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stackframes = 0x000000014a00f210&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_dcmd_arena = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_thread = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_ptr = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_vthread_id = 30&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_jvm_thread_id = 30&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_thread_id_alias = 18446744073709551615&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_data_lost = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_trace_id = 18446744073709551615&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_parent_trace_id = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_user_time = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_cpu_time = 625667&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_wallclock_time = 1752862168572375&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_trace_hash = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stackdepth = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_entering_suspend_flag = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_critical_section = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_vthread_epoch = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_vthread_excluded = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_jvm_thread_excluded = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_vthread = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_dead = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_current_pending_raw_monitor = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_run_state = PRE_CALL_RUN&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_unhandled_oops = 0xf1f1f1f1f1f1f1f1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_osthread = 0x0000000159e7f890&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_resource_area = 0x0000000159e7f4a0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_current_resource_mark = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_handle_area = 0x0000000159e7f4f0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_metadata_handles = 0x0000000159e7f550&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_base = 0x000000016b87f000 &amp;quot;xP\xd8]u:Lg\xd8&#1991;k\U00000001&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_size = 2109440&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_lgrp_id = -1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_owned_locks = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_jvmti_env_iteration_count = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_ParkEvent = 0x0000000139f04e00&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_hashStateW = 273326509&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_hashStateX = 1898447301&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_hashStateY = 842502087&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_hashStateZ = 34663&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_wx_init = true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_wx_state = WXWrite&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_on_thread_list = true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_threadObj = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_obj = 0x0000000139e19240&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_vthread = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_obj = 0x0000000139e19248&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmti_vthread = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_obj = 0x0000000139e19250&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_scopedValueCache = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_obj = 0x0000000139e19258&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_java_call_counter = 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_anchor = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_last_Java_sp = 0x000000016b87e398&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_last_Java_pc = 0x000000011b1cd15c &amp;quot;\xac\x83^\xf8\x88\x82&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_last_Java_fp = 0x000000016b87e400&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_entry_point = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jni_environment = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;functions = 0x000000010a474628&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_deopt_mark = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_deopt_nmethod = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_vframe_array_head = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_vframe_array_last = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmti_deferred_updates = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_callee_target = 0x00000008004f22e0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_vm_result = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_vm_result_2 = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_deferred_card_mark = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_start = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_word_size = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_current_pending_monitor = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_current_pending_monitor_is_from_java = true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_current_waiting_monitor = 0x000000015a8716d0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_active_handles = 0x000000015a9a2fe0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_free_handle_block = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_Stalled = 5813769936&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_monitor_chunks = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_suspend_flags = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_thread_state = _thread_blocked&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_poll_data = (_polling_word = 18446744073709551614, _polling_page = 4371267584)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_safepoint_state = 0x0000000159e7f850&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_saved_exception_pc = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_requires_cross_modify_fence = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_no_safepoint_count = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_visited_for_critical_count = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_terminated = _not_terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_in_deopt_handler = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_doing_unsafe_access = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_do_not_unlock_if_synchronized = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_carrier_thread_suspended = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_is_in_VTMS_transition = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_is_in_tmp_VTMS_transition = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_is_VTMS_transition_disabler = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jni_attach_state = _attached_via_jni&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_pending_deoptimization = -1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_pending_monitorenter = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_pending_transfer_to_interpreter = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_in_retryable_allocation = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_pending_failed_speculation = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmci = (_implicit_exception_pc = 0x0000000000000000, _alternate_call_target = 0x0000000000000000)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_libjvmci_runtime = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmci_counters = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmci_reserved0 = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmci_reserved1 = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmci_reserved_oop0 = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_stack_overflow_state = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_guard_state = stack_guard_enabled&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_overflow_limit = 0x000000016b698000 &amp;quot;&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_reserved_stack_activation = 0x000000016b87f000 &amp;quot;xP\xd8]u:Lg\xd8&#1991;k\U00000001&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_shadow_zone_safe_limit = 0x000000016b6a4000 &amp;quot;&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_shadow_zone_growth_watermark = 0x000000016b87e250 &amp;quot;\U00000010\xe5\x84\U0000000e\a&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_base = 0x000000016b87f000 &amp;quot;xP\xd8]u:Lg\xd8&#1991;k\U00000001&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stack_end = 0x000000016b67c000 &amp;quot;&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_exception_oop = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_exception_pc = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_exception_handler_pc = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_is_method_handle_return = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jni_active_critical = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_pending_jni_exception_check_fn = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_depth_first_number = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_popframe_condition = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_frames_to_pop_failed_realloc = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_cont_entry = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_cont_fastpath = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_cont_fastpath_thread_state = 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_held_monitor_count = 2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jni_monitor_count = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_stack_watermarks = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_head = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_handshake = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_handshakee = 0x000000015a0d1810&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_queue = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_first = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_lock = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mutex = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_owner = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_lock = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PlatformMutex = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_impl = 0x0000000139f055c0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_impl = 0x0000000139f05620&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_name = 0x0000000159e7f320 &amp;quot;HandshakeState_lock&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_allow_vm_block = true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_rank = nosafepoint&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_next = 0xf1f1f1f1f1f1f1f1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_last_owner = 0xf1f1f1f1f1f1f1f1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_skip_rank_check = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_active_handshaker = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_async_exceptions_blocked = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_suspended = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_async_suspend_handshake = false&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_popframe_preserved_args = 0x0000000000000000&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_popframe_preserved_args_size = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_jvmti_thread_state = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_interp_only_mode = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_should_post_on_exceptions_flag = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_thread_stat = 0x0000000159e7f740&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_parker = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PlatformParker = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_counter = 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_cur_index = -1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_mutex = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[0] = (__sig = 1297437786, __opaque = char [56] @ 0x000000015b475580)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_cond = {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[0] = (__sig = 1129270852, __opaque = char [40] @ 0x000000015b4755c0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[1] = (__sig = 1129270852, __opaque = char [40] @ 0x000000015b4755f0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_class_to_be_initialized = nullptr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_SleepEvent = 0x0000000139f05100&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;jt&amp;quot; thread (0x000000015a0d1810) is listed on the _java_thread_list in the hs_err_pid:&lt;br/&gt;
&lt;br/&gt;
Threads class SMR info:&lt;br/&gt;
_java_thread_list=0x0000000149e7c1b0, length=16, elements={&lt;br/&gt;
0x000000013a015210, 0x000000014a00d010, 0x000000014a00dc10, 0x000000012e80a410,&lt;br/&gt;
0x000000013a018010, 0x000000014a010a10, 0x000000015b00ba10, 0x000000012e808210,&lt;br/&gt;
0x000000014a095610, 0x000000012e9e2810, 0x000000014a09f210, 0x000000012f008810,&lt;br/&gt;
0x000000015b05ee10, 0x000000013a319c10, 0x000000015a0d1810, 0x000000014a02aa10&lt;br/&gt;
}&lt;br/&gt;
_to_delete_list=0x0000000159e7fad0, length=15, elements={&lt;br/&gt;
0x000000013a015210, 0x000000014a00d010, 0x000000014a00dc10, 0x000000012e80a410,&lt;br/&gt;
0x000000013a018010, 0x000000014a010a10, 0x000000015b00ba10, 0x000000012e808210,&lt;br/&gt;
0x000000014a095610, 0x000000012e9e2810, 0x000000014a09f210, 0x000000012f008810,&lt;br/&gt;
0x000000015b05ee10, 0x000000013a319c10, 0x000000015a0d1810&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
AND it is also listed on the _to_delete_list which is a bit surprising... Here&amp;#39;s that &amp;quot;Java Threads: &amp;quot; entry:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x000000015a0d1810 JavaThread &amp;quot;DestroyJavaVM&amp;quot; [_thread_blocked, id=9987, stack(0x000000016b67c000,0x000000016b87f000)]&lt;br/&gt;
&lt;br/&gt;
and an Events entry:&lt;br/&gt;
&lt;br/&gt;
Event: 22.825 Thread 0x000000015a0d1810 Thread added: 0x000000015a0d1810&lt;br/&gt;
&lt;br/&gt;
So the JavaThread that was at 0x000000015a0d1810 died and a newly created&lt;br/&gt;
JavaThread was put at the same memory location and is now the &amp;quot;DestroyJavaVM&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
It seems very strange to me that the same JavaThread address is on both the&lt;br/&gt;
_java_thread_list and _to_delete_list lists. I have to think about that one...</comment>
                            <comment id="14555543" author="dcubed" created="Mon, 30 Jan 2023 10:23:16 -0800"  >Here&amp;#39;s the logs from my jdk-20+33 stress testing sighting on macosx-aarch64:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-20+33_macosx-aarch64.8301380.zip&lt;br/&gt;
Archive:  jdk-20+33_macosx-aarch64.8301380.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;27136  01-29-2023 05:41   jdk-20+33_3/failures.macosx-aarch64/TestCrossProcessStreaming.jtr.slowdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;85195  01-29-2023 05:41   jdk-20+33_3/failures.macosx-aarch64/hs_err_pid15245.log&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;112331                     2 files</comment>
                    </comments>
                    <attachments>
                            <attachment id="102452" name="jdk-20+33_macosx-aarch64.8301380.zip" size="20907" author="dcubed" created="Mon, 30 Jan 2023 10:23:12 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i305oj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>