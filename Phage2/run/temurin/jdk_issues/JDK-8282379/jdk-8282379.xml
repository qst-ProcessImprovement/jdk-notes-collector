<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:52:29 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8282379] [LOOM] vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod011 sometimes fails</title>
                <link>https://bugs.openjdk.org/browse/JDK-8282379</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>On very rare occasion I&amp;#39;m seeing this test fail when using the vthread wrapper. It&amp;#39;s popped up a couple of times in my recent runs, but I&amp;#39;ve been doing a large number runs. I looked in the history and see it also popped up once in CI testing on Jan 27th. The test previously failed a lot for this same reason back in 2021-09-01, but that was back when I was doing a lot of runs while fixing a similar issue.&lt;br/&gt;
&lt;br/&gt;
Similar failures now spotted with the following tests:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/ObjectReference/invokeMethod/invokemethod010&lt;br/&gt;
vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod011&lt;br/&gt;
vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod013</description>
                <environment></environment>
        <key id="5069257">JDK-8282379</key>
            <summary>[LOOM] vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod011 sometimes fails</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="cjplummer">Chris Plummer</reporter>
                        <labels>
                            <label>loom</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>tier5</label>
                            <label>wrapper</label>
                    </labels>
                <created>Thu, 24 Feb 2022 23:04:20 -0800</created>
                <updated>Sat, 27 May 2023 06:37:05 -0700</updated>
                            <resolved>Thu, 9 Feb 2023 10:27:56 -0800</resolved>
                                    <version>19</version>
                    <version>20</version>
                    <version>repo-loom</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                                                            <comments>
                            <comment id="14558922" author="dukebot" created="Thu, 9 Feb 2023 10:27:54 -0800"  >Changeset: f4b72df4&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-09 18:25:04 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f4b72df42863c321d03c32d1d0349892c3e87d50&quot;&gt;https://git.openjdk.org/jdk/commit/f4b72df42863c321d03c32d1d0349892c3e87d50&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14557286" author="roboduke" created="Fri, 3 Feb 2023 13:47:40 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12420&quot;&gt;https://git.openjdk.org/jdk/pull/12420&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-03 21:40:59 +0000</comment>
                            <comment id="14557282" author="cjplummer" created="Fri, 3 Feb 2023 13:08:19 -0800"  >It looks like the root cause is that doing the way in which these tests use JDI invoke using INVOKE_SINGLE_THREADED is not always going to work with virtual threads. The invoked method is doing a Thread.sleep(400), and that is at risk of blocking indefinitely if all other threads are blocked form making progress, including the &amp;quot;VirtualThread-unparker&amp;quot;. Note that technically platform threads could fail in the same manner. However, the reason it only happens now with virtual threads is because the implementation of Thread.sleep() differs for virtual threads, and may require ownership of a monitor that sometimes is held by another thread.&lt;br/&gt;
&lt;br/&gt;
Another issue is that the tests do not do a very good job of error handling when this happens, and give the misleading failure reason of the invoked thread not being suspended after the invoke completed. The reason it is not suspended is because the invoke has actually not completed. There was a timeout that the test did not properly note as the cause of the failure. The test (debugger side) spawns a thread to do the JDI invokeMethod with, and then waits for it with:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;invThr.join(argHandler.getWaitTime()*60000);&lt;br/&gt;
&lt;br/&gt;
This join() times out, but the test assumes once it returns the invoke is complete, even though the invoked thread is actually still in the middle of the invoke. So that is the reason debuggee invokemethod thread is not currently suspended. I&amp;#39;ve fixed this by having a test check if invThr is still alive after the join. If it is, then the test is made to fail at that point, rather than continuing on and checking the debuggee threads status. The failure then becomes:&lt;br/&gt;
&lt;br/&gt;
nsk.share.TestFailure: TEST FAILED: invoke never completed&lt;br/&gt;
&lt;br/&gt;
At that point a vm.resume() is done to allow the invoke to complete, and the test will exit with this failure.&lt;br/&gt;
&lt;br/&gt;
As for avoiding the failure in the first place (the deadlock in the debuggee during the invoke), this is really a test bug for relying on INVOKE_SINGLE_THREADED and assuming that the invoked thread won&amp;#39;t become deadlocked. Since there is a Thread.sleep() call in the invoked method, it can&amp;#39;t make this assumption. From the ObjectReference.invoke() spec:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;By default, all threads in the target VM are resumed while the method is being invoked if they were previously suspended by an event or by VirtualMachine.suspend() or ThreadReference.suspend(). This is done to prevent the deadlocks that will occur if any of the threads own monitors that will be needed by the invoked method.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&amp;quot;The resumption of other threads during the invocation can be prevented by specifying the INVOKE_SINGLE_THREADED bit flag in the options argument; however, there is no protection against or recovery from the deadlocks described above, so this option should be used with great caution.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
For platform threads, sleep() doesn&amp;#39;t require any monitors, so these tests never ran into problems before. For virtual threads however there is some synchronization done, and potential reliance on other threads not being suspended. A way around this is to always use sleep(0), which will at least attempt to yield the thread. For platform threads an actual yield is likely. For a virtual thread it will not yield in this particular case because the virtual thread is pinned to the carrier thread due to the jvmti breakpoint callback that is currently in the call chain of the invoked thread. So for virtual threads this effectively the same as sitting in a spin loop with no yielding.&lt;br/&gt;
</comment>
                            <comment id="14532499" author="cjplummer" created="Tue, 25 Oct 2022 22:51:31 -0700"  >This might more readily reproduced with -Xcomp. I&amp;#39;ve seen it a few times in recent -Xcomp runs I&amp;#39;ve done, although it doesn&amp;#39;t seem that any of the above reported failures were with -Xcomp.</comment>
                            <comment id="14507587" author="cjplummer" created="Wed, 6 Jul 2022 14:29:46 -0700"  >From &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8286308&quot; title=&quot;loom: nsk/jdi/ObjectReference/invokeMethod/invokemethod010 fails with &amp;quot;TEST FAILED: wrong invocation&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8286308&quot;&gt;&lt;strike&gt;JDK-8286308&lt;/strike&gt;&lt;/a&gt;, which I&amp;#39;m closing as  a dup:&lt;br/&gt;
&lt;br/&gt;
The following test failed in the jdk-19-loomvt CI:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/ObjectReference/invokeMethod/invokemethod010/TestDescription.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
Verifying the single threaded invocation (INVOKE_SINGLE_THREADED):&lt;br/&gt;
CHECK PASSED: invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod010tThr&amp;#39;, id=272)&lt;br/&gt;
is resumed as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr1&amp;#39;, id=437)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr2&amp;#39;, id=440)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr3&amp;#39;, id=451)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr4&amp;#39;, id=445)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr5&amp;#39;, id=449)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr6&amp;#39;, id=829)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr7&amp;#39;, id=830)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr8&amp;#39;, id=831)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr9&amp;#39;, id=832)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr10&amp;#39;, id=833)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr11&amp;#39;, id=834)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
Thread &amp;quot;InvokingThread&amp;quot; done&lt;br/&gt;
&lt;br/&gt;
Verifying threads status after method invocation:&lt;br/&gt;
# ERROR: TEST FAILED: wrong invocation:&lt;br/&gt;
# ERROR: invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod010tThr&amp;#39;, id=272)&lt;br/&gt;
# ERROR: is not suspended again after the invocation&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: TEST FAILED: wrong invocation: invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod010tThr&amp;#39;, id=272)&lt;br/&gt;
at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
at nsk.jdi.ObjectReference.invokeMethod.invokemethod010.checkThreads(invokemethod010.java:257)&lt;br/&gt;
at nsk.jdi.ObjectReference.invokeMethod.invokemethod010.runIt(invokemethod010.java:212)&lt;br/&gt;
at nsk.jdi.ObjectReference.invokeMethod.invokemethod010.run(invokemethod010.java:107)&lt;br/&gt;
at nsk.jdi.ObjectReference.invokeMethod.invokemethod010.main(invokemethod010.java:103)&lt;br/&gt;
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr1&amp;#39;, id=437)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr2&amp;#39;, id=440)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr3&amp;#39;, id=451)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr4&amp;#39;, id=445)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr5&amp;#39;, id=449)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr6&amp;#39;, id=829)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr7&amp;#39;, id=830)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr8&amp;#39;, id=831)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr9&amp;#39;, id=832)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr10&amp;#39;, id=833)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of nsk.jdi.ObjectReference.invokeMethod.invokemethod010t$invokemethod010Thr(name=&amp;#39;invokemethod010tThr11&amp;#39;, id=834)&lt;br/&gt;
is suspended as expected&lt;br/&gt;
debugee.stderr&amp;gt; invokemethod010tDummyClass: longMeth: exiting&lt;br/&gt;
InvokingThread: the method returned 9223372036854775807&lt;br/&gt;
InvokingThread: exiting&lt;br/&gt;
Timeout refired 480 times&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(39/6889)*----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
result: Error. Program `c:\ade\mesos\work_dir\jib-master\install\jdk-19-loomvt+1-55\windows-x64-debug.jdk\jdk-19\fastdebug\bin\java&amp;#39; timed out (timeout set to 480000ms, elapsed time including timeout handling was 545286ms). </comment>
                            <comment id="14504408" author="dcubed" created="Wed, 22 Jun 2022 06:35:07 -0700"  >Here&amp;#39;s a log file snippet for the jdk-20+3-98-tier5 sighting: &lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod011/TestDescription.java&lt;br/&gt;
&lt;br/&gt;
Verifying the single threaded invocation (INVOKE_SINGLE_THREADED):&lt;br/&gt;
CHECK PASSED: invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
	is resumed as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr1&amp;#39;, id=447)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr2&amp;#39;, id=449)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr3&amp;#39;, id=452)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr4&amp;#39;, id=460)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr5&amp;#39;, id=458)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr6&amp;#39;, id=464)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr7&amp;#39;, id=480)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr8&amp;#39;, id=462)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr9&amp;#39;, id=470)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr10&amp;#39;, id=475)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr11&amp;#39;, id=467)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
Thread &amp;quot;InvokingThread&amp;quot; done&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Verifying threads status after method invocation:&lt;br/&gt;
# ERROR: TEST FAILED: wrong invocation: &lt;br/&gt;
# ERROR: 	invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
# ERROR: 	is not suspended again after the invocation&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: TEST FAILED: wrong invocation:   invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.checkThreads(invokemethod011.java:261)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.runIt(invokemethod011.java:215)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.run(invokemethod011.java:103)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.main(invokemethod011.java:99)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1596)&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr1&amp;#39;, id=447)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr2&amp;#39;, id=449)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr3&amp;#39;, id=452)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr4&amp;#39;, id=460)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr5&amp;#39;, id=458)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr6&amp;#39;, id=464)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr7&amp;#39;, id=480)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr8&amp;#39;, id=462)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr9&amp;#39;, id=470)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr10&amp;#39;, id=475)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr11&amp;#39;, id=467)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
&lt;br/&gt;
Final resumption of the debuggee VM&lt;br/&gt;
debugee.stderr&amp;gt; dummyMeth: exiting&lt;br/&gt;
InvokingThread: the method returned 9223372036854775807&lt;br/&gt;
InvokingThread: exiting&lt;br/&gt;
Timeout refired 480 times&lt;br/&gt;
----------System.err:(0/0)----------</comment>
                            <comment id="14494833" author="dcubed" created="Mon, 9 May 2022 12:27:42 -0700"  >Here&amp;#39;s a log file snippet from the jdk-19+22-1528-tier5 sighting:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod011/TestDescription.java&lt;br/&gt;
&lt;br/&gt;
Verifying the single threaded invocation (INVOKE_SINGLE_THREADED):&lt;br/&gt;
CHECK PASSED: invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
	is resumed as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr1&amp;#39;, id=448)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr2&amp;#39;, id=452)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr3&amp;#39;, id=832)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr4&amp;#39;, id=831)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr5&amp;#39;, id=830)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr6&amp;#39;, id=829)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr7&amp;#39;, id=828)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr8&amp;#39;, id=827)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr9&amp;#39;, id=826)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr10&amp;#39;, id=825)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr11&amp;#39;, id=824)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
Thread &amp;quot;InvokingThread&amp;quot; done&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Verifying threads status after method invocation:&lt;br/&gt;
# ERROR: TEST FAILED: wrong invocation: &lt;br/&gt;
# ERROR: 	invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
# ERROR: 	is not suspended again after the invocation&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: TEST FAILED: wrong invocation:   invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.checkThreads(invokemethod011.java:261)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.runIt(invokemethod011.java:215)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.run(invokemethod011.java:103)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.main(invokemethod011.java:99)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr1&amp;#39;, id=448)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr2&amp;#39;, id=452)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr3&amp;#39;, id=832)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr4&amp;#39;, id=831)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr5&amp;#39;, id=830)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr6&amp;#39;, id=829)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr7&amp;#39;, id=828)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr8&amp;#39;, id=827)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr9&amp;#39;, id=826)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr10&amp;#39;, id=825)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr11&amp;#39;, id=824)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
&lt;br/&gt;
Final resumption of the debuggee VM&lt;br/&gt;
debugee.stderr&amp;gt; dummyMeth: exiting&lt;br/&gt;
InvokingThread: the method returned 9223372036854775807&lt;br/&gt;
InvokingThread: exiting&lt;br/&gt;
Timeout refired 480 times&lt;br/&gt;
# ERROR: TEST FAILED: debuggee process finished with status: 134&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: TEST FAILED: debuggee process finished with status: 134&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.quitDebuggee(invokemethod011.java:402)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.runIt(invokemethod011.java:233)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.run(invokemethod011.java:103)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.main(invokemethod011.java:99)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
#&amp;gt;  SUMMARY: Following errors occured&lt;br/&gt;
#&amp;gt;      during test execution:&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
# ERROR: TEST FAILED: wrong invocation: &lt;br/&gt;
# ERROR: 	invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
# ERROR: 	is not suspended again after the invocation&lt;br/&gt;
# ERROR: TEST FAILED: debuggee process finished with status: 134&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(34/8124)*----------</comment>
                            <comment id="14479502" author="cjplummer" created="Fri, 25 Feb 2022 13:29:52 -0800"  >vmTestbase/nsk/jdi/ClassType/invokeMethod/invokemethod013/TestDescription.java also fails (very rarely). The exception is different, but likely also suspend/resume related.&lt;br/&gt;
&lt;br/&gt;
InvokingThread: trying to invoke the method &amp;quot;dummyMeth (J)J nsk.jdi.ClassType.invokeMethod.invokemethod013t.dummyMeth(long)&amp;quot;&lt;br/&gt;
	with the arguments: [9223372036854775807]&amp;quot;&lt;br/&gt;
	using the debuggee class &amp;quot;class nsk.jdi.ClassType.invokeMethod.invokemethod013t (loaded by instance of jdk.internal.loader.ClassLoaders$AppClassLoader(id=889))&amp;quot; ...&lt;br/&gt;
Waiting for debuggee method invocation ...&lt;br/&gt;
# ERROR: TEST FAILURE: caught unexpected exception: nsk.share.Failure: unable to continue testing after 10 attempts: debuggee method is not invoked yet&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: TEST FAILURE: caught unexpected exception: nsk.share.Failure: unable to continue testing after 10 attempts: debuggee method is not invoked yet&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod013.runIt(invokemethod013.java:221)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod013.run(invokemethod013.java:110)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod013.main(invokemethod013.java:106)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:142)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:271)&lt;br/&gt;
	at java.base/java.lang.VirtualThread$VThreadContinuation.lambda$new$0(VirtualThread.java:156)&lt;br/&gt;
	at java.base/jdk.internal.vm.Continuation.enter0(Continuation.java:355)&lt;br/&gt;
	at java.base/jdk.internal.vm.Continuation.enter(Continuation.java:348)</comment>
                            <comment id="14479286" author="cjplummer" created="Thu, 24 Feb 2022 23:07:39 -0800"  >Here&amp;#39;s some relevant log output. Note that the thread with id=272 is initially running (or &amp;quot;resumed&amp;quot; as the output says), and this seems to be expected, but then after the invoke is should be suspended but is not.&lt;br/&gt;
&lt;br/&gt;
Verifying the single threaded invocation (INVOKE_SINGLE_THREADED):&lt;br/&gt;
CHECK PASSED: invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
	is resumed as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr1&amp;#39;, id=469)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr2&amp;#39;, id=471)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr3&amp;#39;, id=475)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr4&amp;#39;, id=483)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr5&amp;#39;, id=486)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr6&amp;#39;, id=876)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr7&amp;#39;, id=875)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr8&amp;#39;, id=874)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr9&amp;#39;, id=873)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr10&amp;#39;, id=872)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr11&amp;#39;, id=871)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
Thread &amp;quot;InvokingThread&amp;quot; done&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Verifying threads status after method invocation:&lt;br/&gt;
# ERROR: TEST FAILED: wrong invocation: &lt;br/&gt;
# ERROR: 	invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
# ERROR: 	is not suspended again after the invocation&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: TEST FAILED: wrong invocation:   invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tMainThr&amp;#39;, id=272)&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.checkThreads(invokemethod011.java:261)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.runIt(invokemethod011.java:215)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.run(invokemethod011.java:103)&lt;br/&gt;
	at nsk.jdi.ClassType.invokeMethod.invokemethod011.main(invokemethod011.java:99)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:142)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:270)&lt;br/&gt;
	at java.base/java.lang.VirtualThread$VThreadContinuation.lambda$new$0(VirtualThread.java:155)&lt;br/&gt;
	at java.base/jdk.internal.vm.Continuation.enter0(Continuation.java:349)&lt;br/&gt;
	at java.base/jdk.internal.vm.Continuation.enter(Continuation.java:342)&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr1&amp;#39;, id=469)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr2&amp;#39;, id=471)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr3&amp;#39;, id=475)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr4&amp;#39;, id=483)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr5&amp;#39;, id=486)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr6&amp;#39;, id=876)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr7&amp;#39;, id=875)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr8&amp;#39;, id=874)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr9&amp;#39;, id=873)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr10&amp;#39;, id=872)&lt;br/&gt;
	is suspended as expected&lt;br/&gt;
CHECK PASSED: non-invoking debuggee thread instance of java.lang.VirtualThread(name=&amp;#39;invokemethod011tThr11&amp;#39;, id=871)&lt;br/&gt;
	is suspended as expected</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5074335">JDK-8286308</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5077944">JDK-8289235</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2w63n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>