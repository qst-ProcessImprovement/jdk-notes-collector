<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:14:19 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307517] Add VMErrorCallback infrastructure to extend hs_err dumping</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307517</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Sometimes when we crash in the GC we&amp;#39;d like to get some more information about what was going on the crashing thread. One example is when Generational ZGC crashes during store barrier flushing. From &lt;a href=&quot;https://github.com/openjdk/zgc/blob/349cf9ae38664991879402a90c5e23e291f1c1c3/src/hotspot/share/gc/z/zStoreBarrierBuffer.cpp#L245&quot;&gt;https://github.com/openjdk/zgc/blob/349cf9ae38664991879402a90c5e23e291f1c1c3/src/hotspot/share/gc/z/zStoreBarrierBuffer.cpp#L245&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
class ZStoreBarrierBuffer::OnError : public VMErrorCallback {&lt;br/&gt;
private:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;ZStoreBarrierBuffer* _buffer;&lt;br/&gt;
&lt;br/&gt;
public:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;OnError(ZStoreBarrierBuffer* buffer) :&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_buffer(buffer) {}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;virtual void call(outputStream* st) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_buffer-&amp;gt;on_error(st);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
};&lt;br/&gt;
&lt;br/&gt;
void ZStoreBarrierBuffer::on_error(outputStream* st) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;print_cr(&amp;quot;ZStoreBarrierBuffer: error when flushing&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;print_cr(&amp;quot; _last_processed_color: &amp;quot; PTR_FORMAT, _last_processed_color);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;st-&amp;gt;print_cr(&amp;quot; _last_installed_color: &amp;quot; PTR_FORMAT, _last_installed_color);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;for (int i = current(); i &amp;lt; (int)_buffer_length; ++i) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st-&amp;gt;print_cr(&amp;quot; [%2d]: base: &amp;quot; PTR_FORMAT &amp;quot; p: &amp;quot; PTR_FORMAT &amp;quot; prev: &amp;quot; PTR_FORMAT,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;untype(_base_pointers[i]),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p2i(_buffer[i]._p),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;untype(_buffer[i]._prev));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
void ZStoreBarrierBuffer::flush() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!ZBufferStoreBarriers) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;OnError on_error(this);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;VMErrorCallbackMark mark(&amp;amp;on_error);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;for (int i = current(); i &amp;lt; (int)_buffer_length; ++i) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const ZStoreBarrierEntry&amp;amp; entry = _buffer[i];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const zaddress addr = ZBarrier::make_load_good(entry._prev);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ZBarrier::mark_and_remember(entry._p, addr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;clear();&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
If we crash in ZStoreBarrierBuffer::flush, we print the information above into the hs_err file.&lt;br/&gt;
&lt;br/&gt;
We&amp;#39;ve found this information to be useful and would like to upstream the infrastructure separately from the much larger Generational ZGC PR.</description>
                <environment></environment>
        <key id="5100197">JDK-8307517</key>
            <summary>Add VMErrorCallback infrastructure to extend hs_err dumping</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stefank">Stefan Karlsson</assignee>
                                    <reporter username="stefank">Stefan Karlsson</reporter>
                        <labels>
                    </labels>
                <created>Fri, 5 May 2023 00:53:00 -0700</created>
                <updated>Wed, 10 May 2023 23:54:40 -0700</updated>
                            <resolved>Mon, 8 May 2023 00:59:51 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14579663" author="dukebot" created="Mon, 8 May 2023 00:59:49 -0700"  >Changeset: 33245d6b&lt;br/&gt;
Author:    Stefan Karlsson &amp;lt;&lt;a href=&apos;mailto:stefank@openjdk.org&apos;&gt;stefank@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-08 07:58:06 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/33245d6b38d7488c22619f93eff3bf0157f3d7a9&quot;&gt;https://git.openjdk.org/jdk/commit/33245d6b38d7488c22619f93eff3bf0157f3d7a9&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14579302" author="roboduke" created="Fri, 5 May 2023 01:07:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13824&quot;&gt;https://git.openjdk.org/jdk/pull/13824&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-05 07:57:53 +0000</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31ebv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>