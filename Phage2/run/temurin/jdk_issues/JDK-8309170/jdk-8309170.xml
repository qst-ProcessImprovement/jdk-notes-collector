<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:07:48 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8309170] CDS archive heap is always relocated for larger heap</title>
                <link>https://bugs.openjdk.org/browse/JDK-8309170</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The reason is the dump-time heap ends at 0x00000007c0000000, but the runtime heap ends at 0x0000000800000000. We should try to make both cases end at the same location (probably 0x0000000800000000).&lt;br/&gt;
&lt;br/&gt;
=================&lt;br/&gt;
$ java -Xshare:dump -Xmx8g&lt;br/&gt;
$ java -Xlog:cds -Xmx8g --version&lt;br/&gt;
[0.014s][info][cds] trying to map /jdk3/bld/tea-debug/images/jdk/lib/server/classes.jsa&lt;br/&gt;
[0.014s][info][cds] Opened archive /jdk3/bld/tea-debug/images/jdk/lib/server/classes.jsa.&lt;br/&gt;
[0.014s][info][cds] Archive was created with UseCompressedOops = 1, UseCompressedClassPointers = 1&lt;br/&gt;
[0.014s][info][cds] Core region alignment: 4096&lt;br/&gt;
[0.014s][info][cds] Reserved archive_space_rs [0x0000000800000000 - 0x0000000801000000] (16777216) bytes&lt;br/&gt;
[0.014s][info][cds] Reserved class_space_rs   [0x0000000801000000 - 0x0000000841000000] (1073741824) bytes&lt;br/&gt;
[0.014s][info][cds] Mapped static  region #0 at base 0x0000000800000000 top 0x000000080050d000 (ReadWrite)&lt;br/&gt;
[0.014s][info][cds] Mapped static  region #1 at base 0x000000080050d000 top 0x0000000800d2e000 (ReadOnly)&lt;br/&gt;
[0.014s][info][cds] CDS archive was created with max heap size = 8192M, and the following configuration:&lt;br/&gt;
[0.014s][info][cds]     narrow_klass_base = 0x0000000800000000, narrow_klass_shift = 0&lt;br/&gt;
[0.014s][info][cds]     narrow_oop_mode = 1, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 3&lt;br/&gt;
[0.014s][info][cds]     heap range = [0x00000005c0000000 - 0x00000007c0000000]&lt;br/&gt;
[0.014s][info][cds] The current max heap size = 8192M, HeapRegion::GrainBytes = 4194304&lt;br/&gt;
[0.014s][info][cds]     narrow_klass_base = 0x0000000800000000, narrow_klass_shift = 0&lt;br/&gt;
[0.014s][info][cds]     narrow_oop_mode = 1, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 3&lt;br/&gt;
[0.014s][info][cds]     heap range = [0x0000000600000000 - 0x0000000800000000]&lt;br/&gt;
[0.014s][info][cds] Preferred address to map heap data (to avoid relocation) is 0x00000007bfc00000&lt;br/&gt;
[0.015s][info][cds] Mapped static  region #2 at base 0x00007fa21d6ab000 top 0x00007fa21d6eb000 (Bitmap)&lt;br/&gt;
[0.015s][info][cds] Heap data mapped at 0x00000007ffc00000, size =  1075264 bytes&lt;br/&gt;
[0.015s][info][cds] CDS heap data relocation delta = 1073741824 bytes&lt;br/&gt;
[0.015s][info][cds] optimized module handling: enabled&lt;br/&gt;
[0.015s][info][cds] full module graph: enabled&lt;br/&gt;
[0.015s][info][cds] use_full_module_graph = true; java.base = 0x0000000800507f18&lt;br/&gt;
[0.022s][info][cds] patching heap embedded pointers: narrowOop 0xf7f80000 -&amp;gt; 0xfff80000&lt;br/&gt;
[0.022s][info][cds] CDS heap data relocation quick delta = 0x8000000&lt;br/&gt;
[0.036s][info][cds] Unmapping region #2 at base 0x00007fa21d6ab000 (Bitmap)&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5102176">JDK-8309170</key>
            <summary>CDS archive heap is always relocated for larger heap</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ccheung">Calvin Cheung</assignee>
                                    <reporter username="iklam">Ioi Lam</reporter>
                        <labels>
                            <label>cds</label>
                    </labels>
                <created>Tue, 30 May 2023 22:46:54 -0700</created>
                <updated>Mon, 12 Jun 2023 20:47:18 -0700</updated>
                            <resolved>Mon, 5 Jun 2023 11:36:18 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14587151" author="dukebot" created="Mon, 5 Jun 2023 11:36:16 -0700"  >Changeset: e970ddbc&lt;br/&gt;
Author:    Calvin Cheung &amp;lt;&lt;a href=&apos;mailto:ccheung@openjdk.org&apos;&gt;ccheung@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-05 18:33:54 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e970ddbc60aadf170dc22b19b86ddbf965bf5ea4&quot;&gt;https://git.openjdk.org/jdk/commit/e970ddbc60aadf170dc22b19b86ddbf965bf5ea4&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14586757" author="roboduke" created="Fri, 2 Jun 2023 17:59:22 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14295&quot;&gt;https://git.openjdk.org/jdk/pull/14295&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-03 00:54:36 +0000</comment>
                            <comment id="14586078" author="iklam" created="Wed, 31 May 2023 10:31:37 -0700"  >This fix is desirable for 21 as it&amp;#39;s a simple fix to improve start-up performance.</comment>
                            <comment id="14586075" author="iklam" created="Wed, 31 May 2023 10:25:27 -0700"  >There&amp;#39;s one significant change:&lt;br/&gt;
&lt;br/&gt;
Before the above patch, classes are loaded like into these &amp;quot;source&amp;quot; addresses (0x00000007cxxxxxxx), so it doesn&amp;#39;t overlap with the requested address of the classes (0x0x0000000800000000 ~ )&lt;br/&gt;
&lt;br/&gt;
$ java -Xshare:dump  -Xlog:class+load=debug | less&lt;br/&gt;
java.lang.Object source: jrt:/java.base&lt;br/&gt;
&amp;nbsp;klass: 0x00000007c0041200 super: 0x0000000000000000 loader: [loader data: 0x00007f261c0edb80 of &amp;#39;bootstrap&amp;#39;] bytes: 2487 checksum: 2ea24a37&lt;br/&gt;
java.io.Serializable source: jrt:/java.base&lt;br/&gt;
&amp;nbsp;klass: 0x00000007c0041410 super: 0x00000007c0041200 loader: [loader data: 0x00007f261c0edb80 of &amp;#39;bootstrap&amp;#39;] bytes: 113 checksum: 70365af9&lt;br/&gt;
&lt;br/&gt;
After the above patch, classes are loaded like into these  &amp;quot;source&amp;quot; addresses (0x000000080xxxxxxx), so it DOES overlap with the requested address of the classes (0x0x0000000800000000 ~ )&lt;br/&gt;
&lt;br/&gt;
$ java -Xshare:dump  -Xlog:class+load=debug | less&lt;br/&gt;
java.lang.Object source: jrt:/java.base&lt;br/&gt;
&amp;nbsp;klass: 0x0000000800041200 super: 0x0000000000000000 loader: [loader data: 0x00007fce940edb60 of &amp;#39;bootstrap&amp;#39;] bytes: 2487 checksum: 2ea24a37&lt;br/&gt;
java.io.Serializable source: jrt:/java.base&lt;br/&gt;
&amp;nbsp;klass: 0x0000000800041410 super: 0x0000000800041200 loader: [loader data: 0x00007fce940edb60 of &amp;#39;bootstrap&amp;#39;] bytes: 113 checksum: 70365af9&lt;br/&gt;
java.lang.Comparable source: jrt:/java.base&lt;br/&gt;
&lt;br/&gt;
This is probably OK, as the CDS dumping code should tolerate overlaps between the source address space and requested address space. However, thorough testing is needed.</comment>
                            <comment id="14586068" author="iklam" created="Wed, 31 May 2023 10:09:15 -0700"  >Thanks [~asmehra] for finding the cause. This seems to fix it:&lt;br/&gt;
&lt;br/&gt;
--- a/src/hotspot/share/memory/virtualspace.cpp&lt;br/&gt;
+++ b/src/hotspot/share/memory/virtualspace.cpp&lt;br/&gt;
@@ -551,7 +551,7 @@ void ReservedHeapSpace::initialize_compressed_heap(const size_t size, size_t ali&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const size_t class_space = align_up(CompressedClassSpaceSize, alignment);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// For small heaps, save some space for compressed class pointer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// space so it can be decoded with no base.&lt;br/&gt;
-    if (UseCompressedClassPointers &amp;amp;&amp;amp; !UseSharedSpaces &amp;amp;&amp;amp;&lt;br/&gt;
+    if (UseCompressedClassPointers &amp;amp;&amp;amp; !UseSharedSpaces &amp;amp;&amp;amp; !DumpSharedSpaces &amp;amp;&amp;amp;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
=====================&lt;br/&gt;
&lt;br/&gt;
[0.014s][info][cds       ] CDS archive was created with max heap size = 7960M, and the following configuration:&lt;br/&gt;
[0.014s][info][cds       ]     narrow_klass_base = 0x0000000800000000, narrow_klass_shift = 0&lt;br/&gt;
[0.014s][info][cds       ]     narrow_oop_mode = 1, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 3&lt;br/&gt;
[0.014s][info][cds       ]     heap range = [0x000000060e800000 - 0x0000000800000000]&lt;br/&gt;
[0.014s][info][cds       ] The current max heap size = 7960M, HeapRegion::GrainBytes = 4194304&lt;br/&gt;
[0.014s][info][cds       ]     narrow_klass_base = 0x0000000800000000, narrow_klass_shift = 0&lt;br/&gt;
[0.014s][info][cds       ]     narrow_oop_mode = 1, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 3&lt;br/&gt;
[0.014s][info][cds       ]     heap range = [0x000000060e800000 - 0x0000000800000000]&lt;br/&gt;
[0.014s][info][cds       ] Requested heap region [0x00000007ffc00000 - 0x00000007ffd06640] =  1074752 bytes&lt;br/&gt;
[0.014s][info][cds       ] CDS heap data relocation delta = 0 bytes&lt;br/&gt;
</comment>
                            <comment id="14586039" author="JIRAUSER20510" created="Wed, 31 May 2023 09:10:09 -0700"  >Looks like this code is responsible for the difference in heap location: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/70670b4af617699782f892ae4cb5228ec655a2d0/src/hotspot/share/memory/virtualspace.cpp#L547-L558&quot;&gt;https://github.com/openjdk/jdk/blob/70670b4af617699782f892ae4cb5228ec655a2d0/src/hotspot/share/memory/virtualspace.cpp#L547-L558&lt;/a&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31qdn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>