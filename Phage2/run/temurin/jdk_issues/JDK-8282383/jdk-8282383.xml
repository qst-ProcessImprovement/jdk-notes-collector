<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:52:38 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8282383] [LOOM] 6 nsk JDI and JDB tests sometimes failing with vthread wrapper due to running out of carrier threads</title>
                <link>https://bugs.openjdk.org/browse/JDK-8282383</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>vmTestbase/nsk/jdi/EventRequestManager/stepRequests/stepreq001/TestDescription.java is sometimes failing with the vthread wrapper. This only seems to happen on macOS. The failures date back to 2021-12-02. There have been about 40 so far. The failure is:&lt;br/&gt;
&lt;br/&gt;
binder&amp;gt; Launching debugee&lt;br/&gt;
binder&amp;gt; Waiting for VM initialized&lt;br/&gt;
Initial VMStartEvent received: VMStartEvent in thread main&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #1 &amp;quot;thr1&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: the thread #1 &amp;quot;thr1&amp;quot; started&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #2 &amp;quot;thr2&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: the thread #2 &amp;quot;thr2&amp;quot; started&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #3 &amp;quot;thr3&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: the thread #3 &amp;quot;thr3&amp;quot; started&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #4 &amp;quot;thr4&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: the thread #4 &amp;quot;thr4&amp;quot; started&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #5 &amp;quot;thr5&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: the thread #5 &amp;quot;thr5&amp;quot; started&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #6 &amp;quot;thr6&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: the thread #6 &amp;quot;thr6&amp;quot; started&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee&amp;#39;s thread &amp;quot;thr1&amp;quot;: going to be blocked&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee&amp;#39;s thread &amp;quot;thr5&amp;quot;: going to be blocked&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee: starting thread #7 &amp;quot;thr7&amp;quot;&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee&amp;#39;s thread &amp;quot;thr7&amp;quot;: going to be blocked&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee&amp;#39;s thread &amp;quot;thr2&amp;quot;: going to be blocked&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee&amp;#39;s thread &amp;quot;thr3&amp;quot;: going to be blocked&lt;br/&gt;
debugee.stdout&amp;gt; Debuggee&amp;#39;s thread &amp;quot;thr4&amp;quot;: going to be blocked&lt;br/&gt;
IOPipe&amp;gt; Caught InterruptedIOException. Wait start time: 1645771754258, exception was thrown at: 1645772054387, wait time: 300129, actual timeout: 300000&lt;br/&gt;
# ERROR: IOPipe&amp;gt; Caught InterruptedIOException while listening for PipeIO Listener Thread connection at port 64281:&lt;br/&gt;
# ERROR: 	java.net.SocketTimeoutException: Accept timed out&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: IOPipe&amp;gt; Caught InterruptedIOException while listening for PipeIO Listener Thread connection at port 64281:  java.net.SocketTimeoutException: Accept timed out&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.share.Log$Logger.complain(Log.java:736)&lt;br/&gt;
	at nsk.share.jpda.BasicSocketConnection.accept(SocketConnection.java:173)&lt;br/&gt;
	at nsk.share.jpda.SocketConnection.accept(SocketConnection.java:453)&lt;br/&gt;
	at nsk.share.jpda.SocketIOPipe$ListenerThread.run(SocketIOPipe.java:225)&lt;br/&gt;
&lt;br/&gt;
Current list of tests covered by this CR:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdb/kill/kill001/kill001.java &lt;br/&gt;
vmTestbase/nsk/jdi/LocatableEvent/thread/thread001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/EventRequestManager/stepRequests/stepreq001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/EventIterator/nextEvent/nextevent001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/Event/request/request001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/ObjectReference/waitingThreads/waitingthreads002/TestDescription.java </description>
                <environment></environment>
        <key id="5069261">JDK-8282383</key>
            <summary>[LOOM] 6 nsk JDI and JDB tests sometimes failing with vthread wrapper due to running out of carrier threads</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="cjplummer">Chris Plummer</reporter>
                        <labels>
                            <label>loom</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>tier5</label>
                            <label>wrapper</label>
                    </labels>
                <created>Thu, 24 Feb 2022 23:30:04 -0800</created>
                <updated>Fri, 10 Feb 2023 06:50:50 -0800</updated>
                            <resolved>Fri, 6 Jan 2023 10:56:45 -0800</resolved>
                                    <version>19</version>
                    <version>20</version>
                    <version>repo-loom</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14549322" author="dukebot" created="Fri, 6 Jan 2023 10:56:31 -0800"  >Changeset: d6e9f015&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-06 18:49:11 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/d6e9f01584ef84d6390c356fd3b342d9d79899ab&quot;&gt;https://git.openjdk.org/jdk/commit/d6e9f01584ef84d6390c356fd3b342d9d79899ab&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14546705" author="roboduke" created="Mon, 19 Dec 2022 18:11:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11735&quot;&gt;https://git.openjdk.org/jdk/pull/11735&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-20 02:04:01 +0000</comment>
                            <comment id="14543019" author="cjplummer" created="Mon, 5 Dec 2022 22:25:02 -0800"  >I didn&amp;#39;t mean to imply that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8291429&quot; title=&quot;java/lang/Thread/virtual/ThreadAPI.java timed out on single core system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8291429&quot;&gt;&lt;strike&gt;JDK-8291429&lt;/strike&gt;&lt;/a&gt; fixes this problem for these tests, but only that the fix in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8291429&quot; title=&quot;java/lang/Thread/virtual/ThreadAPI.java timed out on single core system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8291429&quot;&gt;&lt;strike&gt;JDK-8291429&lt;/strike&gt;&lt;/a&gt; could also be applied to these tests to fix them. Namely, the use of VThreadRunner.ensureParallelism(&amp;lt;n&amp;gt;) to guarantee that the tests have the needed number of carrier threads.</comment>
                            <comment id="14528225" author="cjplummer" created="Thu, 6 Oct 2022 09:45:58 -0700"  >The fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8291429&quot; title=&quot;java/lang/Thread/virtual/ThreadAPI.java timed out on single core system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8291429&quot;&gt;&lt;strike&gt;JDK-8291429&lt;/strike&gt;&lt;/a&gt; can be used to fix this issue.</comment>
                            <comment id="14507206" author="dcubed" created="Tue, 5 Jul 2022 09:41:25 -0700"  >Here&amp;#39;s a log file snippet from the  jdk-20+5-200-tier5 sighting: &lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/LocatableEvent/thread/thread001/TestDescription.java&lt;br/&gt;
&lt;br/&gt;
=&amp;gt; nsk/jdi/LocatableEvent/thread/thread001      TESTING BEGINS&lt;br/&gt;
--&amp;gt; debugger: breakpointForCommunication&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: debuggee started!&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee:        threads has been created&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee:       loop: threadStart(threads[n2])&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: awThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 0&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: awThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 0&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: awThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mwThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 1&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mwThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 1&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mwThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: bpThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 2&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: bpThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 2&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: bpThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: excThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 3&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: excThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 3&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: excThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: menThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 4&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: menThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 4&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: menThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mexThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 5&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mexThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 5&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mexThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.share.jdi.JDIBase.log3(JDIBase.java:69)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.runTest(thread001.java:226)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.runThis(thread001.java:156)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.run(thread001.java:99)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.main(thread001.java:92)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1589)&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: test phase has not finished normally: debuggee is still alive&lt;br/&gt;
--&amp;gt; debugger: ......forcing: vm.exit();&lt;br/&gt;
TEST FAILED&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
#&amp;gt;  SUMMARY: Following errors occured&lt;br/&gt;
#&amp;gt;      during test execution:&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
# ERROR: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: test phase has not finished normally: debuggee is still alive&lt;br/&gt;
----------System.err:(0/0)----------</comment>
                            <comment id="14493105" author="cjplummer" created="Tue, 3 May 2022 10:27:27 -0700"  >This happened on linux-aarch64 but the tests are only problem listed on macosx-x64. It&amp;#39;s an 8 core host, which should be enough. Previously only 4 core hosts were an issue.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve rerun the same test 10 times now on the same host with no issue. I see that it goes up to &amp;quot;threadIndex == 6&amp;quot;, whereas the above log shows it getting stuck after &amp;quot;threadIndex == 5&amp;quot;. It needs 7 vthreads (and therefor 7 carrier threads) to get to &amp;quot;threadIndex == 6&amp;quot;, plus the main debuggee test thread is also a vthread, so that mean a total of 8 vthreads, and that should be ok on an 8 core host, even if they are all synchronizing and pinning the carrier threads. Possibly the test did not get stuck because of a lack of carrier threads, but for some other reason.</comment>
                            <comment id="14493065" author="dcubed" created="Tue, 3 May 2022 07:27:53 -0700"  >Here&amp;#39;s a log file snippet for he jdk-19-loomvt+1-50-tier5 sighting: &lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/LocatableEvent/thread/thread001/TestDescription.java &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
=&amp;gt; nsk/jdi/LocatableEvent/thread/thread001      TESTING BEGINS&lt;br/&gt;
--&amp;gt; debugger: breakpointForCommunication&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: debuggee started!&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee:        threads has been created&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee:       loop: threadStart(threads[n2])&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: awThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 0&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: awThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 0&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: awThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mwThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 1&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mwThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 1&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mwThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: bpThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 2&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: bpThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 2&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: bpThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: excThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 3&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: excThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 3&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: excThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: menThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 4&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: menThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 4&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: menThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mexThread :   &amp;#39;run&amp;#39;: enter  :: threadIndex == 5&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mexThread : enter synchronized (locks[threadIndex]) ::  threadIndex == 5&lt;br/&gt;
debugee.stderr&amp;gt; **&amp;gt; debuggee: mexThread :   &amp;#39;run&amp;#39;: exit  synchronized (waitnotifyObj)&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.share.jdi.JDIBase.log3(JDIBase.java:69)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.runTest(thread001.java:226)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.runThis(thread001.java:156)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.run(thread001.java:99)&lt;br/&gt;
	at nsk.jdi.LocatableEvent.thread.thread001.main(thread001.java:92)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: test phase has not finished normally: debuggee is still alive&lt;br/&gt;
--&amp;gt; debugger: ......forcing: vm.exit();&lt;br/&gt;
TEST FAILED&lt;br/&gt;
# ERROR: binder&amp;gt; Debugee VM has not exited correctly: trying to kill it&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: binder&amp;gt; Debugee VM has not exited correctly: trying to kill it&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.complain(DebugeeProcess.java:455)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.close(DebugeeProcess.java:435)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.finalize(DebugeeProcess.java:464)&lt;br/&gt;
	at nsk.share.FinalizableObject.finalizeAtExit(FinalizableObject.java:48)&lt;br/&gt;
	at nsk.share.Finalizer$FinalizerThread.run(Finalizer.java:122)&lt;br/&gt;
------------ Try to print debuggee threads before killing process ------------&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: &lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.share.jdi.Debugee.printThreadsInfo(Debugee.java:629)&lt;br/&gt;
	at nsk.share.jdi.Debugee.killDebugee(Debugee.java:640)&lt;br/&gt;
	at nsk.share.jdi.LocalLaunchedDebugee.killDebugee(Binder.java:1052)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.close(DebugeeProcess.java:436)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.finalize(DebugeeProcess.java:464)&lt;br/&gt;
	at nsk.share.FinalizableObject.finalizeAtExit(FinalizableObject.java:48)&lt;br/&gt;
	at nsk.share.Finalizer$FinalizerThread.run(Finalizer.java:122)&lt;br/&gt;
com.sun.jdi.VMDisconnectedException: connection is closed&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.TargetVM.send(TargetVM.java:293)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.VirtualMachineImpl.sendToTarget(VirtualMachineImpl.java:1172)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.PacketStream.send(PacketStream.java:79)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.JDWP$VirtualMachine$AllThreads.enqueueCommand(JDWP.java:319)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.JDWP$VirtualMachine$AllThreads.process(JDWP.java:310)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.VMState.allThreads(VMState.java:207)&lt;br/&gt;
	at jdk.jdi/com.sun.tools.jdi.VirtualMachineImpl.allThreads(VirtualMachineImpl.java:458)&lt;br/&gt;
	at nsk.share.jdi.Debugee.printThreadsInfo(Debugee.java:598)&lt;br/&gt;
	at nsk.share.jdi.Debugee.killDebugee(Debugee.java:640)&lt;br/&gt;
	at nsk.share.jdi.LocalLaunchedDebugee.killDebugee(Binder.java:1052)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.close(DebugeeProcess.java:436)&lt;br/&gt;
	at nsk.share.jpda.DebugeeProcess.finalize(DebugeeProcess.java:464)&lt;br/&gt;
	at nsk.share.FinalizableObject.finalizeAtExit(FinalizableObject.java:48)&lt;br/&gt;
	at nsk.share.Finalizer$FinalizerThread.run(Finalizer.java:122)&lt;br/&gt;
binder&amp;gt; Killing debuggee by forcing target VM to exit&lt;br/&gt;
binder&amp;gt; Ignore VMDisconnectedException while forcing debuggee VM to exit:&lt;br/&gt;
	com.sun.jdi.VMDisconnectedException: connection is closed&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
#&amp;gt;  SUMMARY: Following errors occured&lt;br/&gt;
#&amp;gt;      during test execution:&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
# ERROR: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: test phase has not finished normally: debuggee is still alive&lt;br/&gt;
# ERROR: binder&amp;gt; Debugee VM has not exited correctly: trying to kill it&lt;br/&gt;
----------System.err:(0/0)----------</comment>
                            <comment id="14484503" author="cjplummer" created="Thu, 24 Mar 2022 21:54:13 -0700"  >These failures are happening on host with just 4 cores, which limits the default number of carrier threads to 4. The tests need at least 6 carrier threads, because they each create 6 virtual threads, all of which will block on a synchronized block, requiring pinning of the carrier thread.</comment>
                            <comment id="14484249" author="cjplummer" created="Wed, 23 Mar 2022 13:01:56 -0700"  >vmTestbase/nsk/jdb/kill/kill001/kill001.java&lt;br/&gt;
&lt;br/&gt;
This test seems to be failing for similar reasons. It doesn&amp;#39;t fail in the same test task as the others because it is run in a different test task. However, it also times and and also only does so on macosx-x64.&lt;br/&gt;
&lt;br/&gt;
Starting debuggee class&lt;br/&gt;
Sending command: run &lt;br/&gt;
reply[0]: run nsk.share.MainWrapper Virtual nsk.jdb.kill.kill001.kill001a&lt;br/&gt;
reply[1]: Set uncaught java.lang.Throwable&lt;br/&gt;
reply[2]: Set deferred uncaught java.lang.Throwable&lt;br/&gt;
reply[3]: &amp;gt; &lt;br/&gt;
reply[4]: VM Started: Set deferred breakpoint nsk.jdb.kill.kill001.kill001a.main&lt;br/&gt;
reply[5]: &lt;br/&gt;
reply[6]: Breakpoint hit: &amp;quot;thread=main&amp;quot;, nsk.jdb.kill.kill001.kill001a.main(), line=37 bci=0&lt;br/&gt;
reply[7]: 37           kill001a _kill001a = new kill001a();&lt;br/&gt;
reply[8]: &lt;br/&gt;
reply[9]: main[1] &lt;br/&gt;
Test cases starts.&lt;br/&gt;
Sending command: stop in nsk.jdb.kill.kill001.kill001a.breakHere&lt;br/&gt;
reply[0]: Set breakpoint nsk.jdb.kill.kill001.kill001a.breakHere&lt;br/&gt;
reply[1]: main[1] &lt;br/&gt;
Sending command: cont&lt;br/&gt;
receiveReply FAILED due to &amp;quot;nsk.share.Failure: Prompt is not received during 300200 milliseconds.&amp;quot;.&lt;br/&gt;
Pending reply output follows:&lt;br/&gt;
reply[0]: &amp;gt; &lt;br/&gt;
# ERROR: Caught unexpected exception while executing the test: nsk.share.Failure: Prompt is not received during 300200 milliseconds.&lt;br/&gt;
&lt;br/&gt;
I looked at jstack output for the debuggee. The MainWrapper is blocked waiting for the vthread wrapper to complete, but there is no sign that the vthread wrapper or any other vthread is running. All the CarrierThreads are idle:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t.setName(&amp;quot;main&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.currentThread().setName(&amp;quot;old-m-a-i-n&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t.start();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t.join();  &amp;lt;-- blocked here&lt;br/&gt;
&lt;br/&gt;
&amp;quot;old-m-a-i-n&amp;quot; #1 [5635] prio=5 os_prio=31 cpu=312.78ms elapsed=493.71s allocated=484K defined_classes=62 tid=0x00007f9b8a80ac10 nid=5635 waiting on condition  [0x0000700009d13000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: WAITING (parking)&lt;br/&gt;
Thread: 0x00007f9b8a80ac10  [0x1603] State: _at_safepoint _at_poll_safepoint 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaThread state: _thread_blocked&lt;br/&gt;
	at jdk.internal.misc.Unsafe.park(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/Native Method)&lt;br/&gt;
	- parking to wait for  &amp;lt;0x000000078020c5b0&amp;gt; (a java.util.concurrent.CountDownLatch$Sync)&lt;br/&gt;
	at java.util.concurrent.locks.LockSupport.park(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/LockSupport.java:221)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/AbstractQueuedSynchronizer.java:715)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/AbstractQueuedSynchronizer.java:1047)&lt;br/&gt;
	at java.util.concurrent.CountDownLatch.await(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/CountDownLatch.java:230)&lt;br/&gt;
	at java.lang.VirtualThread.joinNanos(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/VirtualThread.java:714)&lt;br/&gt;
	at java.lang.Thread.join(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/Thread.java:2070)&lt;br/&gt;
	at java.lang.Thread.join(&lt;a href=&apos;mailto:java.base@19-loom&apos;&gt;java.base@19-loom&lt;/a&gt;/Thread.java:2163)&lt;br/&gt;
	at nsk.share.MainWrapper.main(MainWrapper.java:73)&lt;br/&gt;
&lt;br/&gt;
However, we must have at some point entered the wrapper vthread and started the debuggee side of the test, because you can see from the log output above that the first breakpoint in the test was hit.</comment>
                            <comment id="14482360" author="cjplummer" created="Mon, 14 Mar 2022 01:32:36 -0700"  >The following test was newly converted to use vthreads, and is now failing with a timeout whenever the 4 tests mentioned above fail. Still only seeing on macOS&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/ObjectReference/waitingThreads/waitingthreads002/TestDescription.java</comment>
                            <comment id="14479505" author="cjplummer" created="Fri, 25 Feb 2022 14:08:32 -0800"  >I would assume so as long as the debuggee has not disconnected. For example, I would think a crash would generate VMDisconnectedException.&lt;br/&gt;
&lt;br/&gt;
The stepreq001 is different in that the Listener Thread &amp;quot;accept&amp;quot; timed out whereas for the other 3 the failure is due to not receiving an event. However, since these 4 always almost always happen together, I have to assume they are related.</comment>
                            <comment id="14479504" author="sspitsyn" created="Fri, 25 Feb 2022 13:52:26 -0800"  >Do we get this kind of error any time when there is no reply from the debugee?</comment>
                            <comment id="14479292" author="cjplummer" created="Thu, 24 Feb 2022 23:37:55 -0800"  >It seems that in almost all cases, the following 4 tests fail together with some sort of socket related timeout:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdi/LocatableEvent/thread/thread001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/EventRequestManager/stepRequests/stepreq001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/EventIterator/nextEvent/nextevent001/TestDescription.java&lt;br/&gt;
vmTestbase/nsk/jdi/Event/request/request001/TestDescription.java&lt;br/&gt;
&lt;br/&gt;
These failures are a little different than the stepreq001. They timeout waiting for an event:&lt;br/&gt;
&lt;br/&gt;
# ERROR: ##&amp;gt; debugger: ERROR: Exception : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** EXCEPTION while waiting for event ** : nsk.share.jdi.JDITestRuntimeException: JDITestRuntimeException : ** TIMEOUT while waiting for event **&lt;br/&gt;
&lt;br/&gt;
However, I have to believe all 4 are related since they normally all occur together and all involve I/O timeouts.&lt;br/&gt;
&lt;br/&gt;
Also, I&amp;#39;m only seeing this on macOS 10.15.7.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5080460">JDK-8291429</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5073253">JDK-8285416</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2w64j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>