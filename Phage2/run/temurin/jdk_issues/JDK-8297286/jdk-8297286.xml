<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:24:35 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8297286] runtime/vthread tests crashing after JDK-8296324</title>
                <link>https://bugs.openjdk.org/browse/JDK-8297286</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following tests failed in the JDK20 CI:&lt;br/&gt;
&lt;br/&gt;
runtime/vthread/RedefineClass.java&lt;br/&gt;
runtime/vthread/TestObjectAllocationSampleEvent.java&lt;br/&gt;
&lt;br/&gt;
Both tests are failing with:&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/System/Volumes/Data/mesos/work_dir/slaves/0c72054a-24ab-4dbb-944f-97f9341a1b96-S131467/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/3fb387e1-b4dd-406d-a5f8-7e59fb2c8293/runs/9968d5d0-bc0b-480e-9150-ea289de80a93/workspace/open/src/hotspot/share/prims/jvm.cpp:3982), pid=86896, tid=40195&lt;br/&gt;
#  assert(thread-&amp;gt;is_in_VTMS_transition()) failed: sanity check&lt;br/&gt;
&lt;br/&gt;
on five platforms. The failures started in jdk-20+25-1845 which contains just:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296324&quot; title=&quot;JVMTI GetStackTrace truncates vthread stack trace for agents loaded into running VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8296324&quot;&gt;&lt;strike&gt;JDK-8296324&lt;/strike&gt;&lt;/a&gt; JVMTI GetStackTrace truncates vthread stack trace for agents loaded into running VM&lt;br/&gt;
&lt;br/&gt;
so this looks like a regression.&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing stack for RedefineClass.java on linux-x64:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007fbbf8050150):  JavaThread &amp;quot;ForkJoinPool-1-worker-1&amp;quot; daemon [_thread_in_vm, id=2472997, stack(0x00007fbc3af1c000,0x00007fbc3b01d000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fbc3af1c000,0x00007fbc3b01d000],  sp=0x00007fbc3b01b4c0,  free space=1021k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x11dfcb4]  JVM_VirtualThreadUnmountEnd+0x114  (jvm.cpp:3982)&lt;br/&gt;
j  java.lang.VirtualThread.notifyJvmtiUnmountEnd(Z)V+0 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.afterTerminate(Z)V+42 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+96 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda$8+0x000000080104a9a8.run()V+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I+211 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007fbc53b6ed21&lt;br/&gt;
V  [libjvm.so+0x1046060]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x500  (javaCalls.cpp:417)&lt;br/&gt;
V  [libjvm.so+0x1046872]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x432  (javaCalls.cpp:331)&lt;br/&gt;
V  [libjvm.so+0x1046e61]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x71  (javaCalls.cpp:193)&lt;br/&gt;
V  [libjvm.so+0x11c93fb]  thread_entry(JavaThread*, JavaThread*)+0x12b  (jvm.cpp:2876)&lt;br/&gt;
V  [libjvm.so+0x107be36]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:700)&lt;br/&gt;
V  [libjvm.so+0x1a7a400]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1711993]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:710)&lt;br/&gt;
&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  java.lang.VirtualThread.notifyJvmtiUnmountEnd(Z)V+0 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.afterTerminate(Z)V+42 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+96 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda$8+0x000000080104a9a8.run()V+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I+211 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007fbc53b6ed21&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing stack for TestObjectAllocationSampleEvent.java on linux-x64:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f418404e290):  JavaThread &amp;quot;ForkJoinPool-1-worker-1&amp;quot; daemon [_thread_in_vm, id=2473028, stack(0x00007f41c55f5000,0x00007f41c56f6000)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f41c55f5000,0x00007f41c56f6000],  sp=0x00007f41c56f44c0,  free space=1021k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x11dfcb4]  JVM_VirtualThreadUnmountEnd+0x114  (jvm.cpp:3982)&lt;br/&gt;
j  java.lang.VirtualThread.notifyJvmtiUnmountEnd(Z)V+0 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.afterTerminate(Z)V+42 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+96 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda$7+0x000000080104a578.run()V+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I+211 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f41dc442d21&lt;br/&gt;
V  [libjvm.so+0x1046060]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x500  (javaCalls.cpp:417)&lt;br/&gt;
V  [libjvm.so+0x1046872]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x432  (javaCalls.cpp:331)&lt;br/&gt;
V  [libjvm.so+0x1046e61]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x71  (javaCalls.cpp:193)&lt;br/&gt;
V  [libjvm.so+0x11c93fb]  thread_entry(JavaThread*, JavaThread*)+0x12b  (jvm.cpp:2876)&lt;br/&gt;
V  [libjvm.so+0x107be36]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:700)&lt;br/&gt;
V  [libjvm.so+0x1a7a400]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1711993]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:710)&lt;br/&gt;
&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  java.lang.VirtualThread.notifyJvmtiUnmountEnd(Z)V+0 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.afterTerminate(Z)V+42 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+96 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda$7+0x000000080104a578.run()V+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I+211 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@20-ea&apos;&gt;java.base@20-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f41dc442d21</description>
                <environment></environment>
        <key id="5087901">JDK-8297286</key>
            <summary>runtime/vthread tests crashing after JDK-8296324</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sspitsyn">Serguei Spitsyn</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>loom</label>
                            <label>problemlist</label>
                            <label>regression</label>
                            <label>tier1</label>
                            <label>tier3</label>
                            <label>tier4</label>
                    </labels>
                <created>Fri, 18 Nov 2022 14:29:29 -0800</created>
                <updated>Mon, 17 Jul 2023 01:42:37 -0700</updated>
                            <resolved>Mon, 3 Apr 2023 17:48:03 -0700</resolved>
                                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                                                            <comments>
                            <comment id="14571524" author="dukebot" created="Mon, 3 Apr 2023 17:48:02 -0700"  >Changeset: a1a9ec6e&lt;br/&gt;
Author:    Serguei Spitsyn &amp;lt;&lt;a href=&apos;mailto:sspitsyn@openjdk.org&apos;&gt;sspitsyn@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-04 00:46:43 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a1a9ec6e46b70d5436711f89f4bf603ebacc8060&quot;&gt;https://git.openjdk.org/jdk/commit/a1a9ec6e46b70d5436711f89f4bf603ebacc8060&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14568691" author="roboduke" created="Tue, 21 Mar 2023 19:19:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13133&quot;&gt;https://git.openjdk.org/jdk/pull/13133&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-22 02:12:12 +0000</comment>
                            <comment id="14550049" author="mwthomps" created="Tue, 10 Jan 2023 10:27:51 -0800"  >ILW=HLM=P3</comment>
                            <comment id="14549785" author="sspitsyn" created="Mon, 9 Jan 2023 15:33:26 -0800"  >Deferral Request&lt;br/&gt;
For proper fix this bug needs some additional infrastructure.&lt;br/&gt;
There are both complexity of fix and risk of regressions involved.&lt;br/&gt;
One of the problems to solve is to avoid a potential performance impact.&lt;br/&gt;
The plan is to fix this in JDK 21 but there is not enough time to fix it in JDK 20.&lt;br/&gt;
The impacted two tests have been problem-listed.</comment>
                            <comment id="14539685" author="roboduke" created="Tue, 22 Nov 2022 16:33:12 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11304&quot;&gt;https://git.openjdk.org/jdk/pull/11304&lt;/a&gt;&lt;br/&gt;
Date: 2022-11-23 00:24:28 +0000</comment>
                            <comment id="14538912" author="sspitsyn" created="Fri, 18 Nov 2022 17:16:45 -0800"  >This potential problem existed before the fix of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296324&quot; title=&quot;JVMTI GetStackTrace truncates vthread stack trace for agents loaded into running VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8296324&quot;&gt;&lt;strike&gt;JDK-8296324&lt;/strike&gt;&lt;/a&gt; but the fix of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8296324&quot; title=&quot;JVMTI GetStackTrace truncates vthread stack trace for agents loaded into running VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8296324&quot;&gt;&lt;strike&gt;JDK-8296324&lt;/strike&gt;&lt;/a&gt; enabled it.&lt;br/&gt;
This is a minimal fix which resolves the issue with two tests:&lt;br/&gt;
diff --git a/src/java.base/share/classes/java/lang/VirtualThread.java b/src/java.base/share/classes/java/lang/VirtualThread.java&lt;br/&gt;
index 704910c3c36..5ddd2243d8f 100644&lt;br/&gt;
--- a/src/java.base/share/classes/java/lang/VirtualThread.java&lt;br/&gt;
+++ b/src/java.base/share/classes/java/lang/VirtualThread.java&lt;br/&gt;
@@ -302,7 +302,7 @@ final class VirtualThread extends BaseVirtualThread {&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// last unmount&lt;br/&gt;
-                if (notifyJvmti) notifyJvmtiUnmountBegin(true);&lt;br/&gt;
+                if (notifyJvmtiEvents) notifyJvmtiUnmountBegin(true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unmount();&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// final state</comment>
                            <comment id="14538901" author="sspitsyn" created="Fri, 18 Nov 2022 16:00:00 -0800"  >Changing priority to P2 after the failing tests have been problem-listed.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5089178">JDK-8298347</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5086404">JDK-8296324</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5097828">JDK-8305520</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5087905">JDK-8297289</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zbh7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>