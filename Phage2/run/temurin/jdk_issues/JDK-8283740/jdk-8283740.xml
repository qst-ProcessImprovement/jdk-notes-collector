<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:53:45 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8283740] C1: Convert flag TwoOperandLIRForm to a constant on all platforms</title>
                <link>https://bugs.openjdk.org/browse/JDK-8283740</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
OS: ubuntu18.04&lt;br/&gt;
$ java -version&lt;br/&gt;
openjdk version &amp;quot;11.0.15-internal&amp;quot; 2022-04-19&lt;br/&gt;
OpenJDK Runtime Environment (fastdebug build 11.0.15-internal+0-adhoc.user.jdk11u)&lt;br/&gt;
OpenJDK 64-Bit Server VM (fastdebug build 11.0.15-internal+0-adhoc.user.jdk11u, compiled mode&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Run arbitrary program with -XX:-TwoOperandLIRForm, VM crashes with bug report:&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/home/user/jdk_source/jdk11u/src/hotspot/share/c1/c1_LIR.hpp:413), pid=52625, tid=52792&lt;br/&gt;
#  assert(is_single_cpu() &amp;amp;&amp;amp; !is_virtual()) failed: type check&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (11.0.15) (fastdebug build 11.0.15-internal+0-adhoc.user.jdk11u)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 11.0.15-internal+0-adhoc.user.jdk11u, compiled mode, tiered, compressed oops, g1 gc, linux-amd64)&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
Host: wen-PowerEdge-R740, Intel(R) Xeon(R) Gold 6248R CPU @ 3.00GHz, 96 cores, 251G, Ubuntu 18.04.6 LTS&lt;br/&gt;
Time: Thu Mar 17 09:47:45 2022 CST elapsed time: 0.234313 seconds (0d 0h 0m 0s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f8518694800):  JavaThread &amp;quot;C1 CompilerThread0&amp;quot; daemon [_thread_in_native, id=52792, stack(0x00007f849f16a000,0x00007f849f26b000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C1:    234    5    b  3       java.lang.invoke.MethodHandleStatics::&amp;lt;clinit&amp;gt; (204 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f849f16a000,0x00007f849f26b000],  sp=0x00007f849f268b40,  free space=1018k&lt;br/&gt;
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x18de9ca]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x1ca&lt;br/&gt;
V  [libjvm.so+0x18dfabf]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, __va_list_tag*)+0x2f&lt;br/&gt;
V  [libjvm.so+0xb4cb80]  report_vm_error(char const*, int, char const*, char const*, ...)+0x100&lt;br/&gt;
V  [libjvm.so+0x7a49c0]  LIR_OprDesc::as_register() const+0x60&lt;br/&gt;
V  [libjvm.so+0x7c68ac]  LIR_Assembler::logic_op(LIR_Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*)+0x2ec&lt;br/&gt;
V  [libjvm.so+0x7b3196]  LIR_Assembler::emit_lir_list(LIR_List*)+0xb6&lt;br/&gt;
V  [libjvm.so+0x7b40c8]  LIR_Assembler::emit_code(BlockList*)+0x158&lt;br/&gt;
V  [libjvm.so+0x7505c3]  Compilation::emit_code_body()+0x1e3&lt;br/&gt;
V  [libjvm.so+0x750d8d]  Compilation::compile_java_method()+0x59d&lt;br/&gt;
V  [libjvm.so+0x751a94]  Compilation::compile_method()+0x1d4&lt;br/&gt;
V  [libjvm.so+0x752667]  Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*)+0x357&lt;br/&gt;
V  [libjvm.so+0x75485c]  Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)+0x14c&lt;br/&gt;
V  [libjvm.so+0xa7e2d0]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x390&lt;br/&gt;
V  [libjvm.so+0xa7f298]  CompileBroker::compiler_thread_loop()+0x418&lt;br/&gt;
V  [libjvm.so+0x181006b]  JavaThread::thread_main_inner()+0x20b&lt;br/&gt;
V  [libjvm.so+0x180bea5]  Thread::call_run()+0x75&lt;br/&gt;
V  [libjvm.so+0x151cb06]  thread_native_entry(Thread*)+0x106&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
java -Xcomp -XX:-TwoOperandLIRForm -version&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
openjdk version &amp;quot;11.0.15-internal&amp;quot; 2022-04-19&lt;br/&gt;
OpenJDK Runtime Environment (fastdebug build 11.0.15-internal+0-adhoc.user.jdk11u)&lt;br/&gt;
OpenJDK 64-Bit Server VM (fastdebug build 11.0.15-internal+0-adhoc.user.jdk11u, compiled mode&lt;br/&gt;
ACTUAL -&lt;br/&gt;
# To suppress the following error report, specify this argument&lt;br/&gt;
# after -XX: or in .hotspotrc:  SuppressErrorAt=/c1_LIR.hpp:413&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/home/user/jdk_source/jdk11u/src/hotspot/share/c1/c1_LIR.hpp:413), pid=97885, tid=98076&lt;br/&gt;
#  assert(is_single_cpu() &amp;amp;&amp;amp; !is_virtual()) failed: type check&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (11.0.15) (fastdebug build 11.0.15-internal+0-adhoc.user.jdk11u)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 11.0.15-internal+0-adhoc.user.jdk11u, compiled mode, tiered, compressed oops, g1 gc, linux-amd64)&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5070457">JDK-8283740</key>
            <summary>C1: Convert flag TwoOperandLIRForm to a constant on all platforms</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dfenacci">Damon Fenacci</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>c1</label>
                            <label>dcsswa</label>
                            <label>oracle-triage-19</label>
                            <label>reproducer-yes</label>
                            <label>starter</label>
                            <label>webbug</label>
                    </labels>
                <created>Wed, 16 Mar 2022 19:36:17 -0700</created>
                <updated>Wed, 21 Dec 2022 17:23:24 -0800</updated>
                            <resolved>Mon, 19 Dec 2022 00:50:56 -0800</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>18</version>
                    <version>19</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14546357" author="dukebot" created="Mon, 19 Dec 2022 00:50:55 -0800"  >Changeset: 86d588b0&lt;br/&gt;
Author:    Damon Fenacci &amp;lt;&lt;a href=&apos;mailto:damon.fenacci@oracle.com&apos;&gt;damon.fenacci@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2022-12-19 08:48:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/86d588b035d09141d807dbed6b91d9909782d61a&quot;&gt;https://git.openjdk.org/jdk/commit/86d588b035d09141d807dbed6b91d9909782d61a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14546008" author="roboduke" created="Fri, 16 Dec 2022 01:37:14 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11671&quot;&gt;https://git.openjdk.org/jdk/pull/11671&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-14 12:51:58 +0000</comment>
                            <comment id="14486093" author="chagedorn" created="Fri, 1 Apr 2022 00:25:19 -0700"  >Right, I agree with you. Then let&amp;#39;s make this a constant on all platforms. I&amp;#39;ve updated the bug title accordingly.</comment>
                            <comment id="14486040" author="dlong" created="Thu, 31 Mar 2022 20:27:32 -0700"  >&amp;gt; Could we use a constant value on platforms that must use one of the forms and keep the flag available for platforms that support both?&lt;br/&gt;
&lt;br/&gt;
[~chagedorn], I guess we could, but I don&amp;#39;t think it&amp;#39;s worth it.  I was just speculating if there could be reasons for keeping the flag settable at runtime.  But really I don&amp;#39;t think those scenarios are realistic, and if someone wanted to do that they could change the constant value and rebuild, right?  So forget what I said, let&amp;#39;s make it a constant on all platforms.</comment>
                            <comment id="14485490" author="chagedorn" created="Wed, 30 Mar 2022 00:23:12 -0700"  >[~dlong] Could we use a constant value on platforms that must use one of the forms and keep the flag available for platforms that support both? About (2), should this always work? Looks like aarch64 should support 2-operand LIR by looking at the assertion posted above with &amp;quot;|| threeOperandForm&amp;quot;.</comment>
                            <comment id="14485484" author="chagedorn" created="Wed, 30 Mar 2022 00:13:44 -0700"  >Thanks [~kvn] for the background. Would make sense that this was the original intention of the flag. Because I&amp;#39;ve just tried out -XX:+TwoOperandLIRForm --version on an aarch64 machine where the default is false and I hit the following assertion:&lt;br/&gt;
&lt;br/&gt;
assert(in_opr1() == result_opr() || threeOperandForm) failed: opr1 and result must match&lt;br/&gt;
&lt;br/&gt;
This supports this assumption. I&amp;#39;ll update the bug title.</comment>
                            <comment id="14485386" author="dlong" created="Tue, 29 Mar 2022 17:57:44 -0700"  >I agree with [~kvn].&lt;br/&gt;
&lt;br/&gt;
I can think of only two (dubious) scenarios where keeping it a flag might be useful:&lt;br/&gt;
1. Switching between 2- and 3-operand instructions on some theoretical platform that supports both&lt;br/&gt;
2. Force testing 2-operand LIR on a platform that supports 3-operand instructions</comment>
                            <comment id="14485327" author="kvn" created="Tue, 29 Mar 2022 10:40:53 -0700"  >I think bug&amp;#39;s subject should mention that failure happened when TwoOperandLIRForm flag is switched off on x86. The flag was added by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-6320351&quot; title=&quot;new register allocator for c1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-6320351&quot;&gt;&lt;strike&gt;JDK-6320351&lt;/strike&gt;&lt;/a&gt; with new RA for C1. I think originally it was used to distinguish code generation for different platforms (x64 an Sparc at that time) and never for switching of a &amp;quot;feature&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Per our discussion today we should replace this DEVELOP flag with constant which is set accordingly for different platforms.</comment>
                            <comment id="14485184" author="chagedorn" created="Tue, 29 Mar 2022 05:58:09 -0700"  >There are other assertion failures:&lt;br/&gt;
&lt;br/&gt;
$ java -Xcomp -XX:CompileCommand=compileonly,java.util.concurrent.ConcurrentHashMap::tabAt -XX:-TwoOperandLIRForm --version&lt;br/&gt;
&lt;br/&gt;
Results in:&lt;br/&gt;
assert(left == dest) failed: left and dest must be equal&lt;br/&gt;
&lt;br/&gt;
It looks like this flag was not actively been used/tested for quite a while. However, we cannot simply remove this flag since some platforms set this flag to true (x86, s390) while others to false (arm, aarch64, ppc, riscv) by default.&lt;br/&gt;
&lt;br/&gt;
If it turns out that fixing the failures with non-default flag values is too complex, we could think about hardcoding the default values for the different architectures as it is a develop flag.</comment>
                            <comment id="14484890" author="chagedorn" created="Mon, 28 Mar 2022 05:20:53 -0700"  >The flag seems to be broken since JDK 8 when running a simple HelloWorld program.</comment>
                            <comment id="14484885" author="chagedorn" created="Mon, 28 Mar 2022 05:02:51 -0700"  >ILW = C1 assertion in LIR generation with develop flag TwoOperandLIRForm, rare?, use -XX:+TwoOperandLIRForm = MLM = P4</comment>
                            <comment id="14483605" author="fmatte" created="Mon, 21 Mar 2022 02:17:57 -0700"  >Issue is reproducible on latest jdk19 build also,&lt;br/&gt;
&lt;br/&gt;
./build/linux-x64-debug/jdk/bin/java  -Xcomp -XX:-TwoOperandLIRForm -version&lt;br/&gt;
# To suppress the following error report, specify this argument&lt;br/&gt;
# after -XX: or in .hotspotrc:  SuppressErrorAt=/c1_LIR.hpp:433&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/tank/fmatte/repos/git/jdk/open/src/hotspot/share/c1/c1_LIR.hpp:433), pid=21420, tid=21484&lt;br/&gt;
#  assert(is_single_cpu() &amp;amp;&amp;amp; !is_virtual()) failed: type check&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (19.0) (fastdebug build 19-internal-2022-03-21-0843011.fmatte...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 19-internal-2022-03-21-0843011.fmatte..., compiled mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x7be2b2]  LIR_Opr::as_register() const+0x42&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport %p %s %c %d %P %E&amp;quot; (or dumping to /tank/fmatte/repos/git/jdk/core.21420)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /tank/fmatte/repos/git/jdk/hs_err_pid21420.log&lt;br/&gt;
#&lt;br/&gt;
# Compiler replay data is saved as:&lt;br/&gt;
# /tank/fmatte/repos/git/jdk/replay_pid21420.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
Aborted (core dumped)</comment>
                            <comment id="14483597" author="fmatte" created="Mon, 21 Mar 2022 01:40:49 -0700"  >I don&amp;#39;t think they are same...</comment>
                            <comment id="14483566" author="sswsharm" created="Sun, 20 Mar 2022 23:54:20 -0700"  >Duplicate submission of &lt;a href=&quot;https://bugs.openjdk.java.net/browse/JI-9072845&quot;&gt;https://bugs.openjdk.java.net/browse/JI-9072845&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="98341" name="hs_err_pid21420.log" size="64075" author="fmatte" created="Mon, 21 Mar 2022 02:19:08 -0700"/>
                            <attachment id="98342" name="replay_pid21420.log" size="112973" author="fmatte" created="Mon, 21 Mar 2022 02:19:07 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2wdar:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>