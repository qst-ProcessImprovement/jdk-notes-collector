<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 22:38:55 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8322645] Release Note: Parallel: Precise Parallel Scanning of Large Object Arrays for Young Collection Roots</title>
                <link>https://bugs.openjdk.org/browse/JDK-8322645</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>During a young collection, ParallelGC partitions the old generation into 64kB stripes when scanning it for references into the young generation. These stripes are assigned to worker threads that do the scanning in parallel as work units.&lt;br/&gt;
&lt;br/&gt;
Before this change, Parallel GC always scanned these stripes completely even if only a small part had been known to contain interesting references. Additionally, every worker thread processed the objects that start in that stripe by itself, including parts of objects that extend into other stripes.  This behavior limited parallelism when processing large objects. A single large object, potentially containing thousands of references, had been scanned by a single thread only and in full. This would cause bad scaling due to memory sharing and cache misses in the subsequent long, work stealing phase.&lt;br/&gt;
&lt;br/&gt;
With this change, Parallel GC workers limit work to their stripe and only process interesting parts of large object arrays. This reduces the work done by a single thread for a stripe, improves parallelism, and reduces the amount of work stealing. Parallel GC pauses are now on par with G1 in presence of large object arrays, reducing pause times by 4-5 times in some cases.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5117700">JDK-8322645</key>
            <summary>Release Note: Parallel: Precise Parallel Scanning of Large Object Arrays for Young Collection Roots</summary>
                <type id="5" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14716&amp;avatarType=issuetype">Sub-task</type>
                            <parent id="5103173">JDK-8310031</parent>
                                    <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="17">Delivered</resolution>
                                        <assignee username="rrich">Richard Reingruber</assignee>
                                    <reporter username="rrich">Richard Reingruber</reporter>
                        <labels>
                            <label>RN-NewFeature</label>
                            <label>gc-parallel</label>
                            <label>release-note</label>
                    </labels>
                <created>Thu, 21 Dec 2023 08:51:14 -0800</created>
                <updated>Fri, 15 Mar 2024 08:16:50 -0700</updated>
                            <resolved>Wed, 10 Jan 2024 04:08:15 -0800</resolved>
                                    <version>21.0.4-oracle</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="14639037" author="rrich" created="Wed, 10 Jan 2024 04:07:26 -0800"  >From my POV too. I&amp;#39;ll do it just now. Let&amp;#39;s see if I can :)&lt;br/&gt;
Thanks, Richard.</comment>
                            <comment id="14639026" author="tschatzl" created="Wed, 10 Jan 2024 03:22:35 -0800"  >From my POV you can set this release note to Resolved-&amp;gt;Delivered now so that it gets reviewed by the doc team and added to the release notes :) Thanks!</comment>
                            <comment id="14639017" author="tschatzl" created="Wed, 10 Jan 2024 02:50:36 -0800"  >&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322397&quot; title=&quot;Release Note: G1: More Deterministic Heap Resize at Remark &quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322397&quot;&gt;&lt;strike&gt;JDK-8322397&lt;/strike&gt;&lt;/a&gt; is maybe a bit misleading because the behavior of using the mentioned flags did not change; only their interpretation changed slightly. The release note first describes the previous interpretation, then the new one.</comment>
                            <comment id="14638205" author="rrich" created="Mon, 8 Jan 2024 09:25:03 -0800"  >Sorry, I misread the first paragraph as new behavior.&lt;br/&gt;
&lt;br/&gt;
My original version started with the new behavior (following the template &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322397&quot; title=&quot;Release Note: G1: More Deterministic Heap Resize at Remark &quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322397&quot;&gt;&lt;strike&gt;JDK-8322397&lt;/strike&gt;&lt;/a&gt;). I thought this would make sense for a release note. Optionally describing how things worked before in a subsequent section.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Maybe that part starting with &amp;quot;Every worker thread processes the objects that&lt;br/&gt;
&amp;gt; start in that stripe by itself including...&amp;quot; should be moved in the next&lt;br/&gt;
&amp;gt; paragraph where the old mechanism is described and likely makes more sense&lt;br/&gt;
&amp;gt; then.&lt;br/&gt;
&lt;br/&gt;
Yes sure :)</comment>
                            <comment id="14638193" author="tschatzl" created="Mon, 8 Jan 2024 08:45:02 -0800"  >Yeah, maybe the sentence is too confusing :) However I am not sure it is right now.&lt;br/&gt;
&lt;br/&gt;
I wanted to express that there is no parallelization going on for large objects extending over multiple stripes (if I got that right from the old code that had this comment:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Process a stripe iff it contains any obj-start&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!start_array-&amp;gt;object_starts_in_range(cur_stripe_addr, cur_stripe_end_addr)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
i.e. if there was no object start in a given stripe (e.g. another object from a previous stripe covered it completely), the thread would do no work for that stripe; from that follows that the thread that got the stripe with the humongous object start had to process the whole object by itself.&lt;br/&gt;
&lt;br/&gt;
Maybe that part starting with &amp;quot;Every worker thread processes the objects that start in that stripe by itself including...&amp;quot; should be moved in the next paragraph where the old mechanism is described and likely makes more sense then.&lt;br/&gt;
&lt;br/&gt;
To make the structure of this note also follow the structure I most of the time use:&lt;br/&gt;
&lt;br/&gt;
introduction, background&lt;br/&gt;
old behavior&lt;br/&gt;
new behavior&lt;br/&gt;
impact&lt;br/&gt;
&lt;br/&gt;
What do you think?&lt;br/&gt;
</comment>
                            <comment id="14638164" author="rrich" created="Mon, 8 Jan 2024 07:12:56 -0800"  >&amp;quot;Every worker thread processes the objects that start in that stripe by itself including any part of objects that extend into other stripes.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Hm, this sentence does not read right to me. Likely you meant &amp;quot;excluding&amp;quot;, right? I&amp;#39;ll come up with a suggestion...</comment>
                            <comment id="14638128" author="tschatzl" created="Mon, 8 Jan 2024 06:00:54 -0800"  >[~rrich]: I did a significant amount of edits which I believe improve the readability quite a bit. Please go over the text again, it could be that I got something wrong.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5124326">JDK-8328276</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34cqb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>