<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:50:44 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8320331] G1 Full GC Heap verification relies on metadata not reset before verification</title>
                <link>https://bugs.openjdk.org/browse/JDK-8320331</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>During Full GC &amp;quot;during gc&amp;quot; verification (-XX:VerifyDuringGC) g1 accesses the heap from top() to bottom() as if it were fully parsable.&lt;br/&gt;
&lt;br/&gt;
This is wrong, because we already started class unloading in phase 1/marking (full gc &amp;quot;during gc&amp;quot; verification is right after phase 1), but the region&amp;#39;s parsable bottom&amp;#39;s are not set correctly (i.e. are bottom()) and since verification walks heap region object by object it  accesses nominally unloaded klass data.&lt;br/&gt;
&lt;br/&gt;
There is no issue at this point as metaspace data has not really been unloaded yet, but if we want to move metaspace purging to an earlier stage this will be an issue.&lt;br/&gt;
&lt;br/&gt;
I.e. keeping this behavior would make &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317809&quot; title=&quot;Insertion of free code blobs into code cache can be very slow during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317809&quot;&gt;&lt;strike&gt;JDK-8317809&lt;/strike&gt;&lt;/a&gt; uglier than necessary.</description>
                <environment></environment>
        <key id="5114988">JDK-8320331</key>
            <summary>G1 Full GC Heap verification relies on metadata not reset before verification</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tschatzl">Thomas Schatzl</assignee>
                                    <reporter username="tschatzl">Thomas Schatzl</reporter>
                        <labels>
                            <label>gc-g1</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Fri, 17 Nov 2023 08:25:24 -0800</created>
                <updated>Thu, 17 Oct 2024 02:24:58 -0700</updated>
                            <resolved>Wed, 22 Nov 2023 09:19:23 -0800</resolved>
                                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14666863" author="roboduke" created="Mon, 22 Apr 2024 02:09:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/519&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/519&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-22 09:02:27 +0000</comment>
                            <comment id="14666840" author="goetz" created="Mon, 22 Apr 2024 01:28:58 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this as prereq of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317809&quot; title=&quot;Insertion of free code blobs into code cache can be very slow during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317809&quot;&gt;&lt;strike&gt;JDK-8317809&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
Low risk, rather simple modification.&lt;br/&gt;
Clean backport.  SAP nightly testing passed.</comment>
                            <comment id="14628491" author="dukebot" created="Wed, 22 Nov 2023 09:19:22 -0800"  >Changeset: 1629a905&lt;br/&gt;
Author:    Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-22 17:17:11 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1629a9059bd2e0f07559a384be4276c7dc13eff2&quot;&gt;https://git.openjdk.org/jdk/commit/1629a9059bd2e0f07559a384be4276c7dc13eff2&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14627571" author="roboduke" created="Mon, 20 Nov 2023 03:33:20 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16733&quot;&gt;https://git.openjdk.org/jdk/pull/16733&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-20 11:24:12 +0000</comment>
                            <comment id="14627259" author="tschatzl" created="Fri, 17 Nov 2023 08:27:11 -0800"  >Found during testing of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8317809&quot; title=&quot;Insertion of free code blobs into code cache can be very slow during class unloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8317809&quot;&gt;&lt;strike&gt;JDK-8317809&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
I think other STW collectors have the same issue (at least Serial GC), accessing objects with nominally unloaded data but not yet fully scrapped during full gc. Will file extra CRs if necessary.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5127664">JDK-8330912</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5141837">JDK-8342501</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5112056">JDK-8317809</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33wvn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>