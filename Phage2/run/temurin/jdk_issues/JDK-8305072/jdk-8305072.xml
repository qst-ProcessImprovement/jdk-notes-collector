<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:25:32 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8305072] Win32ShellFolder2.compareTo is inconsistent</title>
                <link>https://bugs.openjdk.org/browse/JDK-8305072</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Windows 11&lt;br/&gt;
Java version 19.0.2&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
One of our Windows users gets an IllegalArgumentException from Arrays.sort() when trying to open a JFileChooser. For more details about the investigation we did, see here:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://forum.vassalengine.org/t/cannot-open-window-for-load-save-or-beginlogs/76730/1&quot;&gt;https://forum.vassalengine.org/t/cannot-open-window-for-load-save-or-beginlogs/76730/1&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The cause of the problem is that Win32ShellFolder2.compareTo() and equals() disagree about how to order special and non-special folders.&lt;br/&gt;
&lt;br/&gt;
Our user has _two_ instances of &amp;quot;C:\Users\&amp;lt;FOLDER&amp;gt;\Documents&amp;quot; in the array returned by Win32ShellFolderManager2.get(), one of which has isSpecial() true and the other false. Call the special one &amp;quot;a&amp;quot;, the non-special one &amp;quot;b&amp;quot;, and let &amp;quot;c&amp;quot; be a non-special Win32ShellFolder2 for &amp;quot;C:\Users\\&amp;lt;FOLDER&amp;gt;&amp;quot;. We see the following from a test we had the user run:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;a.equals(b) == true&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;a.compareTo(c) == -1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;b.compareTo(c) == 10&lt;br/&gt;
&amp;nbsp;&amp;nbsp;a.compareTo(b) == 0&lt;br/&gt;
&lt;br/&gt;
This means that a &amp;lt; c, c &amp;lt; b, and a = b, which means that the &amp;lt; relation induced by compareTo() is not a linear order, in violation of the requirements of the Comparable interface. This is why Arrays.sort() throws an exception when attempting to sort an array containing Win32ShellFolder2&amp;#39;s like these.&lt;br/&gt;
&lt;br/&gt;
The intention of Win32ShellFolder2.compareTo() is clearly to sort specials before non-specials---which is fine---but in that case equals() must actually check whether the two items&amp;#39; isSpecial() agtree, and it does not. The lack of this check is also what makes Win32ShellFolder2.compareTo() fail. Win32ShellFolder2.compareTo() calls Win32ShellFolderManager2.compareShellFolders(). In the case where at least one of the folders being compared is special, they are both checked against the topFolderList for their index---and ArrayList.indexOf() uses equals(). Hence, if a (which is special) equals() one of the items in the topFolderList, so will b, even though it should not because b is not special. In this case a and b have the same index in the list, and compareShellFolders() returns indexOf(a) - indexOf(b), which is 0, thus declaring a and b to be equal---when in fact it should return negative because a is special and b is not.&lt;br/&gt;
&lt;br/&gt;
How can this be fixed?&lt;br/&gt;
&lt;br/&gt;
* It&amp;#39;s not clear to me whether anything relies on Win32ShellFolder2.equals() ignoring isSpecial(). If nothing does, then there is a very simple solution. Add &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (isSpecial() != rhs.isSpecial()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
to Win32ShellFolder2.equals().&lt;br/&gt;
&lt;br/&gt;
* If, on the other hand, something does depend on Win32ShellFolder2.equals() ignoring isSpecial(), the problem can be solved by adjusting Win32ShellFolderManager2.compareShellFolders():&lt;br/&gt;
&lt;br/&gt;
The line&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (special1 || special2) {&lt;br/&gt;
&lt;br/&gt;
ought to be &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (special1 &amp;amp;&amp;amp; special2) {&lt;br/&gt;
&lt;br/&gt;
instead.&lt;br/&gt;
&lt;br/&gt;
(In fact, that change should be made regardless---there is no reason to enter the block to check index in the topFolderList unless _both_ folders are special. If only one is special, the block after this one will handle it.)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run the test case on a Windows system where there is a special Win32ShellFolder2 in the topFolderList having the same path as a non-special Win32ShellFolder2, and also enough Win32ShellFolder2 in total which are children of `getDesktop()` to cause the &amp;quot;large&amp;quot; case of TimSort to execute.&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t know how to trigger the condition where you have a duplicate non-specialof a special in the topFolderList, only that the problem is 100% reproducible once you do have this condition. We have been seeing user reports of this problem a few times a year since TimSort became the default in Java 7, but only just now were we able to work though the problem with a user who was willing to run numerous diagnostic cases we provided.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
File dialog opens with no exception.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
java.lang.IllegalArgumentException: Comparison method violates its general contract! at java.base/java.util.ComparableTimSort.mergeHi(ComparableTimSort.java:870) at java.base/java.util.ComparableTimSort.mergeAt(ComparableTimSort.java:487) at java.base/java.util.ComparableTimSort.mergeForceCollapse(ComparableTimSort.java:426) at java.base/java.util.ComparableTimSort.sort(ComparableTimSort.java:222) at java.base/java.util.Arrays.sort(Arrays.java:1054) at java.desktop/sun.awt.shell.Win32ShellFolderManager2.get(Win32ShellFolderManager2.java:315) at java.desktop/sun.awt.shell.ShellFolder.get(ShellFolder.java:274) at java.desktop/com.sun.java.swing.plaf.windows.WindowsFileChooserUI$DirectoryComboBoxModel.addItem(WindowsFileChooserUI.java:1123) at java.desktop/com.sun.java.swing.plaf.windows.WindowsFileChooserUI.doDirectoryChanged(WindowsFileChooserUI.java:777) at java.desktop/com.sun.java.swing.plaf.windows.WindowsFileChooserUI$11.propertyChange(WindowsFileChooserUI.java:868) at java.desktop/java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.java:343) at java.desktop/java.beans.PropertyChangeSupport.firePropertyChange(PropertyChangeSupport.java:335) at java.desktop/java.beans.PropertyChangeSupport.firePropertyChange(PropertyChangeSupport.java:268) at java.desktop/java.awt.Component.firePropertyChange(Component.java:8716) at java.desktop/javax.swing.JFileChooser.setCurrentDirectory(JFileChooser.java:610) at Test.lambda$main$0(Test.java:21) at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:308) at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773) at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720) at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714) at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86) at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742) at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203) at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124) at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113) at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109) at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101) at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import java.io.File;&lt;br/&gt;
import javax.swing.JFileChooser;&lt;br/&gt;
import javax.swing.SwingUtilities;&lt;br/&gt;
import javax.swing.UIManager;&lt;br/&gt;
&lt;br/&gt;
class Test3 {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SwingUtilities.invokeAndWait(() -&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JFileChooser fd = new JFileChooser();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fd.setCurrentDirectory(new File(&amp;quot;C:\\Users&amp;quot;));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fd.showOpenDialog(null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch (Exception e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.exit(1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5097119">JDK-8305072</key>
            <summary>Win32ShellFolder2.compareTo is inconsistent</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aivanov">Alexey Ivanov</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>cssn24_02_02</label>
                            <label>cssn24_03_01</label>
                            <label>cssn24_04_01</label>
                            <label>dcsnr</label>
                            <label>dcspn</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>reproducer-yes</label>
                            <label>sustaining</label>
                            <label>webbug</label>
                    </labels>
                <created>Sat, 25 Mar 2023 08:03:10 -0700</created>
                <updated>Wed, 11 Sep 2024 20:01:45 -0700</updated>
                            <resolved>Tue, 9 Apr 2024 06:21:54 -0700</resolved>
                                    <version>17.0.8</version>
                    <version>19</version>
                                    <fixVersion>23</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14704397" author="roboduke" created="Wed, 11 Sep 2024 20:01:45 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk8u-dev/pull/522&quot;&gt;https://git.openjdk.org/jdk8u-dev/pull/522&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-18 17:03:12 +0000</comment>
                            <comment id="14680823" author="roboduke" created="Wed, 12 Jun 2024 00:59:54 -0700"  >[jdk11u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 11.0.25-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14680584" author="roboduke" created="Tue, 11 Jun 2024 06:56:31 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2764&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2764&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-11 13:50:28 +0000</comment>
                            <comment id="14679720" author="roboduke" created="Fri, 7 Jun 2024 01:46:39 -0700"  >[jdk17u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 17.0.13-oracle. Applies cleanly and tier1-4 have passed.</comment>
                            <comment id="14679507" author="roboduke" created="Thu, 6 Jun 2024 07:06:53 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2544&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2544&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-06 14:01:50 +0000</comment>
                            <comment id="14678149" author="roboduke" created="Mon, 3 Jun 2024 01:48:28 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14677912" author="roboduke" created="Fri, 31 May 2024 12:20:17 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/638&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/638&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 19:14:33 +0000</comment>
                            <comment id="14665922" author="roboduke" created="Wed, 17 Apr 2024 04:11:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/150&quot;&gt;https://git.openjdk.org/jdk22u/pull/150&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-17 11:04:48 +0000</comment>
                            <comment id="14665921" author="aivanov" created="Wed, 17 Apr 2024 04:06:01 -0700"  >Fix request: 22u&lt;br/&gt;
&lt;br/&gt;
This bug fix resolves an intermittent problem where using JFileChooser is impossible because an exception is thrown when files are sorted.&lt;br/&gt;
Clean backport. Low risk.&lt;br/&gt;
&lt;br/&gt;
Pull request: &lt;a href=&quot;https://github.com/openjdk/jdk22u/pull/150&quot;&gt;https://github.com/openjdk/jdk22u/pull/150&lt;/a&gt;</comment>
                            <comment id="14664046" author="dukebot" created="Tue, 9 Apr 2024 06:21:53 -0700"  >Changeset: 2fcb8168&lt;br/&gt;
Author:    Alexey Ivanov &amp;lt;&lt;a href=&apos;mailto:aivanov@openjdk.org&apos;&gt;aivanov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-09 13:19:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/2fcb816858406f33cefef3164b2c85f9f996c7da&quot;&gt;https://git.openjdk.org/jdk/commit/2fcb816858406f33cefef3164b2c85f9f996c7da&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14654853" author="roboduke" created="Tue, 5 Mar 2024 09:07:09 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18126&quot;&gt;https://git.openjdk.org/jdk/pull/18126&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-05 17:01:45 +0000</comment>
                            <comment id="14654398" author="aivanov" created="Mon, 4 Mar 2024 13:03:28 -0800"  >&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8140204&quot; title=&quot;IllegalArgumentException in Win32ShellFolder2 while sorting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8140204&quot;&gt;&lt;strike&gt;JDK-8140204&lt;/strike&gt;&lt;/a&gt; reports the same problem but that time we didn&amp;#39;t have such an extensive analysis of the problem, nor did we have an environment to reproduce the problem. It was reported in Windows Vista.&lt;br/&gt;
&lt;br/&gt;
If there&amp;#39;s an environment where the bug can be reproduced, we should collect more data to understand why there are two folders which refer to the same file system location. In other words, how is it possible that the Personal (Documents) folder has its shadow without `isPersonal` set to true.</comment>
                            <comment id="14654395" author="aivanov" created="Mon, 4 Mar 2024 12:44:15 -0800"  >I couldn&amp;#39;t reproduce the issue in the same way it fails. However, I created a test case using reflection which proves there&amp;#39;s inconsistency in the implementation of the Comparable interface in the Win32ShellFolder2 class.&lt;br/&gt;
&lt;br/&gt;
The reporter&amp;#39;s analysis is absolutely accurate.&lt;br/&gt;
&lt;br/&gt;
My test is inspired by the reporter&amp;#39;s tests at &lt;a href=&quot;https://forum.vassalengine.org/t/cannot-open-window-for-load-save-or-beginlogs/76730/2&quot;&gt;https://forum.vassalengine.org/t/cannot-open-window-for-load-save-or-beginlogs/76730/2&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I can&amp;#39;t explain how the list of files ended up with two directories for `Documents`. In my test, I create a fake personal using reflection.&lt;br/&gt;
&lt;br/&gt;
There must be another bug in JDK code which allows such duplicate entries in the list of files on desktop.</comment>
                            <comment id="14651659" author="aivanov" created="Thu, 22 Feb 2024 10:11:39 -0800"  >Using a localised version of Windows 11 could help to reproduce the bug. The folder names in the user&amp;#39;s home always have English names (Documents, Pictures), yet the displayed name is localised. It is possible to create a folder with the same name as localised one in the user&amp;#39;s home. Thus, there will be two folders with the same name as seen by the shell (yet different file system path).</comment>
                            <comment id="14611185" author="jdv" created="Thu, 14 Sep 2023 05:05:37 -0700"  >Went through &lt;a href=&quot;https://forum.vassalengine.org/t/cannot-open-window-for-load-save-or-beginlogs/76730/2&quot;&gt;https://forum.vassalengine.org/t/cannot-open-window-for-load-save-or-beginlogs/76730/2&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/skylot/jadx/issues/1628&quot;&gt;https://github.com/skylot/jadx/issues/1628&lt;/a&gt;.&lt;br/&gt;
I am unable to create 2 folders with same name, but based on what observations are shared by submitter i am triaging it.&lt;br/&gt;
Need more analysis on what we are doing in code.</comment>
                            <comment id="14610400" author="pnarayanaswa" created="Tue, 12 Sep 2023 05:57:17 -0700"  >Additional Information from submitter&lt;br/&gt;
=========================== &lt;br/&gt;
I can&amp;#39;t give you steps to reproduce the issue naturally. For that, you need a Windows machine where  Win32ShellFolder2.getDesktop().listFiles()&lt;br/&gt;
returns an array containing an element the same as one of the elements in topFolderList, and another element with the same path but not marked special. I don&amp;#39;t know how that comes about, only that it does sometimes.&lt;br/&gt;
&lt;br/&gt;
However, if you&amp;#39;re able to manually create Win32ShellFolder2 objects, you can do the following:&lt;br/&gt;
&lt;br/&gt;
1. Make a Win32ShellFolder2 for the path &amp;quot;C:\Users\duduy\Documents&amp;quot; for which isSpecial() and isFileSystem() are true. Call this one a.&lt;br/&gt;
&lt;br/&gt;
2. Make a Win32ShellFolder2 for the path &amp;quot;C:\Users\duduy\Documents&amp;quot; for which isSpecial() is false and isFileSystem() is true. Call this one b.&lt;br/&gt;
&lt;br/&gt;
3. Make a Win32ShellFolder2 for the path &amp;quot;C:\Users\duduy&amp;quot; for which&lt;br/&gt;
isSpecial() is false and isFileSystem() is true. Call this one c.&lt;br/&gt;
&lt;br/&gt;
4. Mock out Win32ShellFolderManager2.getPersonal() to return a.&lt;br/&gt;
&lt;br/&gt;
Then you&amp;#39;ll see the following things occur:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;a.compareTo(c) &amp;lt; 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;b.compareTo(c) &amp;gt; 0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;a.compareTo(b) == 0&lt;br/&gt;
&lt;br/&gt;
Those three things combined demonstrate that compareTo() violates its contract.&lt;br/&gt;
</comment>
                            <comment id="14570957" author="pnarayanaswa" created="Fri, 31 Mar 2023 04:53:54 -0700"  >Mail to submitter: &lt;br/&gt;
====================&lt;br/&gt;
Please share steps to reproduce the issue</comment>
                            <comment id="14570952" author="aghaisas" created="Fri, 31 Mar 2023 04:21:41 -0700"  >I was trying to reproduce this issue on Windows 11.&lt;br/&gt;
I am unable to create two directories with the same name.&lt;br/&gt;
&lt;br/&gt;
Need instructions on how to create the directory structure to reproduce this issue.</comment>
                            <comment id="14570594" author="pnarayanaswa" created="Wed, 29 Mar 2023 23:50:42 -0700"  >Additional Information from submitter&lt;br/&gt;
===========================&lt;br/&gt;
I see that you weren&amp;#39;t able to reproduce the bug from the test case, which doesn&amp;#39;t surprise me. You can only reproduce the bug from the test case on a machine where you have a duplicate entry where one is a &amp;quot;top&amp;quot; folder an the other is not special. It should nonetheless be possible to see from examining the code where the bug occurs when you do have such duplicate entries.&lt;br/&gt;
</comment>
                            <comment id="14570046" author="pnarayanaswa" created="Tue, 28 Mar 2023 05:34:19 -0700"  >Checked with attached testcase in Windows 10, Issue is not reproducible,&lt;br/&gt;
Test Result&lt;br/&gt;
==========&lt;br/&gt;
8u361: Pass&lt;br/&gt;
jdk11: Pass&lt;br/&gt;
jdk17: Pass&lt;br/&gt;
jdk19: Pass&lt;br/&gt;
jdk20: Pass&lt;br/&gt;
jdk21ea15: Pass</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5127825">JDK-8331058</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128414">JDK-8331470</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128416">JDK-8331472</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128418">JDK-8331474</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130501">JDK-8333101</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130876">JDK-8333419</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131341">JDK-8333810</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131770">JDK-8334193</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4842064">JDK-8140204</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103149" name="Test3.java" size="590" author="pnarayanaswa" created="Tue, 28 Mar 2023 05:34:17 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30w23:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="206"><![CDATA[javax.swing]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>