<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:16:09 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8329545] [s390x] Fix garbage value being passed in Argument Register</title>
                <link>https://bugs.openjdk.org/browse/JDK-8329545</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In FFI implementation on s390x, there is a bug due to which when 32-bit integer is loaded then it contains garbage value in other half of 32-bits. Which results into Segmentation Fault while doing some operations. &lt;br/&gt;
&lt;br/&gt;
(gdb) i r r2&lt;br/&gt;
r2      0x3ff00000019     4393751543833&lt;br/&gt;
&lt;br/&gt;
*3ff needs not be there.&lt;br/&gt;
&lt;br/&gt;
Error:&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x000003fefdeed1be, pid=827814, tid=827815&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (fastdebug build 23-internal-adhoc.amit.jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 23-internal-adhoc.amit.jdk, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-s390x)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# C  [libfontmanager.so+0xed1be]  getHBScriptCode+0x26&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /home/amit/daily_testing/jdk/core.827814)&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
# The crash happened outside the Java Virtual Machine in native code.&lt;br/&gt;
# See problematic frame for where to report the bug.&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Stack Trace: &lt;br/&gt;
Stack: [0x000003ffa5880000,0x000003ffa5980000],  sp=0x000003ffa597c700,  free space=1009k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
C  [libfontmanager.so+0xed1be]  getHBScriptCode+0x26  (scriptMapping.c:91)&lt;br/&gt;
v  ~RuntimeStub::nep_invoker_blob 0x000003ff9889f1ac&lt;br/&gt;
J 3130 c1 java.lang.invoke.LambdaForm$MH+0x0000000031301000.invoke(Ljava/lang/Object;JFJJJIIIIIFFIIJJ)V java.base (49 bytes) @ 0x000003ff9194a89c [0x000003ff9194a440+0x000000000000045c]&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x00000000312b7000.invokeExact_MT(Ljava/lang/Object;JFJJJIIIIIFFIIJJLjava/lang/Object;)V+49 java.base&lt;br/&gt;
j  jdk.internal.foreign.abi.DowncallStub+0x0000000031295400.invoke(Ljava/lang/foreign/SegmentAllocator;Ljava/lang/foreign/MemorySegment;FLjava/lang/foreign/MemorySegment;Ljava/lang/foreign/MemorySegment;Ljava/lang/foreign/MemorySegment;IIIIIFFIILjava/lang/foreign/MemorySegment;Ljava/lang/foreign/MemorySegment;)V+369 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$DMH+0x0000000031295800.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;FLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IIIIIFFIILjava/lang/Object;Ljava/lang/Object;)V+42 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031300c00.invoke(Ljava/lang/Object;FLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IIIIIFFIILjava/lang/Object;Ljava/lang/Object;)V+82 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x00000000312b6800.invokeExact_MT(Ljava/lang/Object;FLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IIIIIFFIILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V+46 java.base&lt;br/&gt;
j  sun.font.HBShaper.lambda$shape$0(Ljava/awt/geom/Point2D$Float;[F[CFLjava/lang/foreign/MemorySegment;IIIIII)V+79 java.desktop&lt;br/&gt;
J 3213 c1 sun.font.HBShaper$$Lambda+0x00000000312d3098.run()V java.desktop (48 bytes) @ 0x000003ff91935b88 [0x000003ff91935a40+0x0000000000000148]&lt;br/&gt;
J 3212 c1 jdk.internal.vm.ScopedValueContainer.runWithoutScope(Ljava/lang/Runnable;)V java.base (105 bytes) @ 0x000003ff9191c2d4 [0x000003ff9191c1c0+0x0000000000000114]&lt;br/&gt;
J 3208 c1 java.lang.ScopedValue$Carrier.run(Ljava/lang/Runnable;)V java.base (33 bytes) @ 0x000003ff9193c770 [0x000003ff9193c280+0x00000000000004f0]&lt;br/&gt;
J 3200 c1 sun.font.HBShaper.shape(Lsun/font/Font2D;Lsun/font/FontStrike;F[FLjava/lang/foreign/MemorySegment;[CLsun/font/GlyphLayout$GVData;IIIILjava/awt/geom/Point2D$Float;II)V java.desktop (52 bytes) @ 0x000003ff91936c20 [0x000003ff91936500+0x0000000000000720]&lt;br/&gt;
J 3197 c1 sun.font.SunLayoutEngine.layout(Lsun/font/FontStrikeDesc;[FFIILsun/font/TextRecord;ILjava/awt/geom/Point2D$Float;Lsun/font/GlyphLayout$GVData;)V java.desktop (141 bytes) @ 0x000003ff9192528c [0x000003ff91924f80+0x000000000000030c]&lt;br/&gt;
J 3189 c1 sun.font.GlyphLayout$EngineRecord.layout()V java.desktop (108 bytes) @ 0x000003ff9191814c [0x000003ff91917f80+0x00000000000001cc]&lt;br/&gt;
J 3114 c1 sun.font.GlyphLayout.layout(Ljava/awt/Font;Ljava/awt/font/FontRenderContext;[CIIILsun/font/StandardGlyphVector;)Lsun/font/StandardGlyphVector; java.desktop (683 bytes) @ 0x000003ff918f2120 [0x000003ff918f0640+0x0000000000001ae0]&lt;br/&gt;
J 3235 c1 sun.font.ExtendedTextSourceLabel.createGV()Lsun/font/StandardGlyphVector; java.desktop (79 bytes) @ 0x000003ff9193108c [0x000003ff91930ec0+0x00000000000001cc]&lt;br/&gt;
J 3163 c1 java.awt.font.TextLine.init()V java.desktop (1056 bytes) @ 0x000003ff9190aaf8 [0x000003ff91909c00+0x0000000000000ef8]&lt;br/&gt;
J 3234 c1 java.awt.font.TextLine.&amp;lt;init&amp;gt;(Ljava/awt/font/FontRenderContext;[Lsun/font/TextLineComponent;[F[CII[I[BZ)V java.desktop (83 bytes) @ 0x000003ff9192cf2c [0x000003ff9192cc00+0x000000000000032c]&lt;br/&gt;
J 3093 c1 java.awt.font.TextLine.fastCreateTextLine(Ljava/awt/font/FontRenderContext;[CLjava/awt/Font;Lsun/font/CoreMetrics;Ljava/util/Map;)Ljava/awt/font/TextLine; java.desktop (341 bytes) @ 0x000003ff918b3fd8 [0x000003ff918b3100+0x0000000000000ed8]&lt;br/&gt;
J 3142 c1 java.awt.font.TextLayout.fastInit([CLjava/awt/Font;Ljava/util/Map;Ljava/awt/font/FontRenderContext;)V java.desktop (90 bytes) @ 0x000003ff918e7b44 [0x000003ff918e7840+0x0000000000000304]&lt;br/&gt;
J 3140 c1 java.awt.font.TextLayout.&amp;lt;init&amp;gt;(Ljava/lang/String;Ljava/awt/Font;Ljava/awt/font/FontRenderContext;)V java.desktop (180 bytes) @ 0x000003ff918ea588 [0x000003ff918e9f00+0x0000000000000688]&lt;br/&gt;
J 3138 c1 minimalTest.runTest(Ljava/lang/Object;Ljava/lang/Object;)V (26 bytes) @ 0x000003ff918e2b48 [0x000003ff918e29c0+0x0000000000000188]&lt;br/&gt;
j  minimalTest.main([Ljava/lang/String;)V+210&lt;br/&gt;
j  java.lang.invoke.LambdaForm$DMH+0x00000000310f0000.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)V+10 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031229000.invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+33 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031229400.invokeExact_MT(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+20 java.base&lt;br/&gt;
j  jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+55 java.base&lt;br/&gt;
j  jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+23 java.base&lt;br/&gt;
j  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+102 java.base&lt;br/&gt;
j  com.sun.tools.javac.launcher.SourceLauncher.execute(Lcom/sun/tools/javac/launcher/MemoryContext;[Ljava/lang/String;)Ljava/lang/Class;+447 jdk.compiler&lt;br/&gt;
j  com.sun.tools.javac.launcher.SourceLauncher.run([Ljava/lang/String;[Ljava/lang/String;)Lcom/sun/tools/javac/launcher/Result;+62 jdk.compiler&lt;br/&gt;
j  com.sun.tools.javac.launcher.SourceLauncher.main([Ljava/lang/String;)V+17 jdk.compiler&lt;br/&gt;
v  ~StubRoutines::call_stub 0x000003ff983cfb1c&lt;br/&gt;
V  [libjvm.so+0xb1b51a]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x42a  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xb1a0d2]  JavaCalls::call(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x42  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0xc551c2]  jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*) [clone .constprop.1]+0x222  (jni.cpp:888)&lt;br/&gt;
V  [libjvm.so+0xc5871a]  jni_CallStaticVoidMethod+0x13a  (jni.cpp:1717)&lt;br/&gt;
C  [libjli.so+0x3e5c]  invokeStaticMainWithArgs+0x9c  (java.c:418)&lt;br/&gt;
C  [libjli.so+0x4fe8]  JavaMain+0xe28  (java.c:623)&lt;br/&gt;
C  [libjli.so+0x8100]  ThreadJavaMain+0x20  (java_md.c:650)&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
v  ~RuntimeStub::nep_invoker_blob 0x000003ff9889f0d6&lt;br/&gt;
J 3130 c1 java.lang.invoke.LambdaForm$MH+0x0000000031301000.invoke(Ljava/lang/Object;JFJJJIIIIIFFIIJJ)V java.base (49 bytes) @ 0x000003ff9194a89c [0x000003ff9194a440+0x000000000000045c]&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x00000000312b7000.invokeExact_MT(Ljava/lang/Object;JFJJJIIIIIFFIIJJLjava/lang/Object;)V+49 java.base&lt;br/&gt;
j  jdk.internal.foreign.abi.DowncallStub+0x0000000031295400.invoke(Ljava/lang/foreign/SegmentAllocator;Ljava/lang/foreign/MemorySegment;FLjava/lang/foreign/MemorySegment;Ljava/lang/foreign/MemorySegment;Ljava/lang/foreign/MemorySegment;IIIIIFFIILjava/lang/foreign/MemorySegment;Ljava/lang/foreign/MemorySegment;)V+369 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$DMH+0x0000000031295800.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;FLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IIIIIFFIILjava/lang/Object;Ljava/lang/Object;)V+42 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031300c00.invoke(Ljava/lang/Object;FLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IIIIIFFIILjava/lang/Object;Ljava/lang/Object;)V+82 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x00000000312b6800.invokeExact_MT(Ljava/lang/Object;FLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IIIIIFFIILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V+46 java.base&lt;br/&gt;
j  sun.font.HBShaper.lambda$shape$0(Ljava/awt/geom/Point2D$Float;[F[CFLjava/lang/foreign/MemorySegment;IIIIII)V+79 java.desktop&lt;br/&gt;
J 3213 c1 sun.font.HBShaper$$Lambda+0x00000000312d3098.run()V java.desktop (48 bytes) @ 0x000003ff91935b88 [0x000003ff91935a40+0x0000000000000148]&lt;br/&gt;
J 3212 c1 jdk.internal.vm.ScopedValueContainer.runWithoutScope(Ljava/lang/Runnable;)V java.base (105 bytes) @ 0x000003ff9191c2d4 [0x000003ff9191c1c0+0x0000000000000114]&lt;br/&gt;
J 3208 c1 java.lang.ScopedValue$Carrier.run(Ljava/lang/Runnable;)V java.base (33 bytes) @ 0x000003ff9193c770 [0x000003ff9193c280+0x00000000000004f0]&lt;br/&gt;
J 3200 c1 sun.font.HBShaper.shape(Lsun/font/Font2D;Lsun/font/FontStrike;F[FLjava/lang/foreign/MemorySegment;[CLsun/font/GlyphLayout$GVData;IIIILjava/awt/geom/Point2D$Float;II)V java.desktop (52 bytes) @ 0x000003ff91936c20 [0x000003ff91936500+0x0000000000000720]&lt;br/&gt;
J 3197 c1 sun.font.SunLayoutEngine.layout(Lsun/font/FontStrikeDesc;[FFIILsun/font/TextRecord;ILjava/awt/geom/Point2D$Float;Lsun/font/GlyphLayout$GVData;)V java.desktop (141 bytes) @ 0x000003ff9192528c [0x000003ff91924f80+0x000000000000030c]&lt;br/&gt;
J 3189 c1 sun.font.GlyphLayout$EngineRecord.layout()V java.desktop (108 bytes) @ 0x000003ff9191814c [0x000003ff91917f80+0x00000000000001cc]&lt;br/&gt;
J 3114 c1 sun.font.GlyphLayout.layout(Ljava/awt/Font;Ljava/awt/font/FontRenderContext;[CIIILsun/font/StandardGlyphVector;)Lsun/font/StandardGlyphVector; java.desktop (683 bytes) @ 0x000003ff918f2120 [0x000003ff918f0640+0x0000000000001ae0]&lt;br/&gt;
J 3235 c1 sun.font.ExtendedTextSourceLabel.createGV()Lsun/font/StandardGlyphVector; java.desktop (79 bytes) @ 0x000003ff9193108c [0x000003ff91930ec0+0x00000000000001cc]&lt;br/&gt;
J 3163 c1 java.awt.font.TextLine.init()V java.desktop (1056 bytes) @ 0x000003ff9190aaf8 [0x000003ff91909c00+0x0000000000000ef8]&lt;br/&gt;
J 3234 c1 java.awt.font.TextLine.&amp;lt;init&amp;gt;(Ljava/awt/font/FontRenderContext;[Lsun/font/TextLineComponent;[F[CII[I[BZ)V java.desktop (83 bytes) @ 0x000003ff9192cf2c [0x000003ff9192cc00+0x000000000000032c]&lt;br/&gt;
J 3093 c1 java.awt.font.TextLine.fastCreateTextLine(Ljava/awt/font/FontRenderContext;[CLjava/awt/Font;Lsun/font/CoreMetrics;Ljava/util/Map;)Ljava/awt/font/TextLine; java.desktop (341 bytes) @ 0x000003ff918b3fd8 [0x000003ff918b3100+0x0000000000000ed8]&lt;br/&gt;
J 3142 c1 java.awt.font.TextLayout.fastInit([CLjava/awt/Font;Ljava/util/Map;Ljava/awt/font/FontRenderContext;)V java.desktop (90 bytes) @ 0x000003ff918e7b44 [0x000003ff918e7840+0x0000000000000304]&lt;br/&gt;
J 3140 c1 java.awt.font.TextLayout.&amp;lt;init&amp;gt;(Ljava/lang/String;Ljava/awt/Font;Ljava/awt/font/FontRenderContext;)V java.desktop (180 bytes) @ 0x000003ff918ea588 [0x000003ff918e9f00+0x0000000000000688]&lt;br/&gt;
J 3138 c1 minimalTest.runTest(Ljava/lang/Object;Ljava/lang/Object;)V (26 bytes) @ 0x000003ff918e2b48 [0x000003ff918e29c0+0x0000000000000188]&lt;br/&gt;
j  minimalTest.main([Ljava/lang/String;)V+210&lt;br/&gt;
j  java.lang.invoke.LambdaForm$DMH+0x00000000310f0000.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)V+10 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031229000.invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+33 java.base&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031229400.invokeExact_MT(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+20 java.base&lt;br/&gt;
j  jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+55 java.base&lt;br/&gt;
j  jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+23 java.base&lt;br/&gt;
j  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+102 java.base&lt;br/&gt;
j  com.sun.tools.javac.launcher.SourceLauncher.execute(Lcom/sun/tools/javac/launcher/MemoryContext;[Ljava/lang/String;)Ljava/lang/Class;+447 jdk.compiler&lt;br/&gt;
j  com.sun.tools.javac.launcher.SourceLauncher.run([Ljava/lang/String;[Ljava/lang/String;)Lcom/sun/tools/javac/launcher/Result;+62 jdk.compiler&lt;br/&gt;
j  com.sun.tools.javac.launcher.SourceLauncher.main([Ljava/lang/String;)V+17 jdk.compiler&lt;br/&gt;
v  ~StubRoutines::call_stub 0x000003ff983cfb1c</description>
                <environment></environment>
        <key id="5126035">JDK-8329545</key>
            <summary>[s390x] Fix garbage value being passed in Argument Register</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sjayagond">Sidraya Jayagond</assignee>
                                    <reporter username="amitkumar">Amit Kumar</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Tue, 2 Apr 2024 09:25:40 -0700</created>
                <updated>Mon, 15 Apr 2024 20:50:08 -0700</updated>
                            <resolved>Wed, 10 Apr 2024 03:13:27 -0700</resolved>
                                    <version>21.0.2</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14664862" author="JIRAUSER20916" created="Fri, 12 Apr 2024 01:46:34 -0700"  >I have tested this backport patch for jdk21u-dev for release and fastdebug build. I do not see failures related to this patch.</comment>
                            <comment id="14664836" author="goetz" created="Fri, 12 Apr 2024 00:24:35 -0700"  >[21u] &lt;br/&gt;
Please comment on the testing you did for this in 21!</comment>
                            <comment id="14664801" author="roboduke" created="Thu, 11 Apr 2024 23:14:42 -0700"  >[jdk21u-fix-request] Approval Request from sid8606&lt;br/&gt;
Fix sign extension on 4 byte load from argument stack slot to GPR, without this change the code is throwing segmentation fault while doing some operations.</comment>
                            <comment id="14664800" author="roboduke" created="Thu, 11 Apr 2024 23:12:02 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/492&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/492&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-12 06:06:09 +0000</comment>
                            <comment id="14664378" author="roboduke" created="Wed, 10 Apr 2024 05:30:56 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/137&quot;&gt;https://git.openjdk.org/jdk22u/pull/137&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-10 12:26:00 +0000</comment>
                            <comment id="14664377" author="roboduke" created="Wed, 10 Apr 2024 05:29:55 -0700"  >[jdk22u-fix-request] Approval Request from sid8606&lt;br/&gt;
Fix sign extension on 4 byte load from argument stack slot to GPR, without this change the code is throwing segmentation fault while doing some operations.</comment>
                            <comment id="14664328" author="dukebot" created="Wed, 10 Apr 2024 03:13:26 -0700"  >Changeset: e0fd6c4c&lt;br/&gt;
Author:    Sidraya Jayagond &amp;lt;&lt;a href=&apos;mailto:sjayagond@openjdk.org&apos;&gt;sjayagond@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Amit Kumar &amp;lt;&lt;a href=&apos;mailto:amitkumar@openjdk.org&apos;&gt;amitkumar@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-10 10:12:21 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e0fd6c4c9e30ef107ea930c8ecc449842ae4b8d4&quot;&gt;https://git.openjdk.org/jdk/commit/e0fd6c4c9e30ef107ea930c8ecc449842ae4b8d4&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14662548" author="roboduke" created="Wed, 3 Apr 2024 04:44:30 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18601&quot;&gt;https://git.openjdk.org/jdk/pull/18601&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-03 11:40:44 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5126751">JDK-8330149</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126612">JDK-8330039</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5104968">JDK-8311630</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19600"><![CDATA[s390x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35rer:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>