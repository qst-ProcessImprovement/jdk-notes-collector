<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:01:57 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8300914] Allow `@` as an escape in documentation comments</title>
                <link>https://bugs.openjdk.org/browse/JDK-8300914</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>There are situations that may benefit from the introduction of an escape-character mechanism to workaround undesirable existing behavior.&lt;br/&gt;
&lt;br/&gt;
Some of these situations are exacerbated if using Markdown syntax in comments, although not inherently so.&lt;br/&gt;
&lt;br/&gt;
There are 3 known situations.&lt;br/&gt;
&lt;br/&gt;
1. To inhibit the use of `@` to introduce a block tag or inline tag.&lt;br/&gt;
2. To allow a line to begin with `whitespace asterisk` when that sequence might otherwise by ignored when obtaining the content of a doc comment&lt;br/&gt;
3. To allow writing `*/`, to avoid that sequence ending the enclosing comment.</description>
                <environment></environment>
        <key id="5092254">JDK-8300914</key>
            <summary>Allow `@` as an escape in documentation comments</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jjg">Jonathan Gibbons</assignee>
                                    <reporter username="jjg">Jonathan Gibbons</reporter>
                        <labels>
                            <label>javadoc-markdown</label>
                    </labels>
                <created>Mon, 23 Jan 2023 11:09:34 -0800</created>
                <updated>Wed, 22 Feb 2023 12:21:20 -0800</updated>
                            <resolved>Wed, 8 Feb 2023 13:59:44 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14558658" author="dukebot" created="Wed, 8 Feb 2023 13:59:37 -0800"  >Changeset: 873558ee&lt;br/&gt;
Author:    Jonathan Gibbons &amp;lt;&lt;a href=&apos;mailto:jjg@openjdk.org&apos;&gt;jjg@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-08 21:57:22 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/873558ee80d741469ade030c732091bead431c46&quot;&gt;https://git.openjdk.org/jdk/commit/873558ee80d741469ade030c732091bead431c46&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14556670" author="roboduke" created="Wed, 1 Feb 2023 11:28:40 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12372&quot;&gt;https://git.openjdk.org/jdk/pull/12372&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-01 19:16:17 +0000</comment>
                            <comment id="14555139" author="jjg" created="Fri, 27 Jan 2023 11:51:57 -0800"  >We cannot trivially use `TextTree` because of the requirement to maintain accurate source positions for the start and end of the node.&lt;br/&gt;
&lt;br/&gt;
Alternatives:&lt;br/&gt;
&lt;br/&gt;
* Use `TextTree` with a different `DocTree.Kind` and modify the support for start and end positions; this would likely imply _not_ updating the visitor APIs, but possibly having to update visitor implementations.&lt;br/&gt;
* Use a subtype of `TextTree`, again with a different `DocTree.Kind`, similar to the declaration of `ErroneousTree extends TextTree`; this would likely imply updating the visitor APIs and implementations thereof&lt;br/&gt;
* Use a new subtype of `DocTree`, similar to the declaration of `EntityTree`.&lt;br/&gt;
&lt;br/&gt;
Using `TextTree` or a subtype thereof without updating visitor APIs may seem more convenient in many cases, when just using `getBody` to access the &amp;quot;intended&amp;quot; text. But it provides no help to update other visitors where more complex handling is required.&lt;br/&gt;
&lt;br/&gt;
Using a new subtype of `TextTree` or `DocTree`, with a new `DocTree.Kind` and updating the visitor API, may seem less convenient, because it likely implies the need to update implementation classes for visitors and scanners, but it is the safer alternative to do so, forcing client software to consider this new kind of syntactic item.&lt;br/&gt;
&lt;br/&gt;
Using a new subtype of `DocTree` (not `TextTree`) prevents sharing behavior in switch-on-enum statements when all that is required is to call `getBody()`.</comment>
                            <comment id="14553655" author="jjg" created="Mon, 23 Jan 2023 13:58:14 -0800"  >For `DocPretty`, we may need a new modality ... whether to render a DocCommentTree as a block comment or not.&lt;br/&gt;
&lt;br/&gt;
In other words, the `whitespace asterisk` and `*/` issues only apply when the comment body is to appear in a block comment.&lt;br/&gt;
&lt;br/&gt;
Also, the protection against `@` introducing a block or inline tag depends whether a `TextTree` is being displayed as a child of `DocCommentTree` or as content of an inline tag. </comment>
                            <comment id="14553615" author="jjg" created="Mon, 23 Jan 2023 12:09:17 -0800"  >This affects the parser `DocCommentParser` which will now allow more character sequences in `TextTree` than before, and will affect `DocPretty` for the `toString()` form of those character sequences in `TextTree`.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5092730">JDK-8301294</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5093372">JDK-8301810</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093378">JDK-8301813</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5089247">JDK-8298405</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3021f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="224"><![CDATA[javadoc(tool)]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>