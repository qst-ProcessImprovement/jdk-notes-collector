<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:26:50 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8278527] java/util/concurrent/tck/JSR166TestCase.java fails nanoTime test</title>
                <link>https://bugs.openjdk.org/browse/JDK-8278527</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>JavaTest Message: JUnit Failure: testNanoTime(SystemTest): null&lt;br/&gt;
junit.framework.AssertionFailedError&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:55)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:22)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:31)&lt;br/&gt;
	at junit.framework.TestCase.assertTrue(TestCase.java:200)&lt;br/&gt;
	at SystemTest.testNanoTime(SystemTest.java:73)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
public void testNanoTime() throws InterruptedException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long m0 = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long n0 = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.sleep(1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long m1 = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long n1 = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.sleep(50);       // avoid possibly scaled SHORT_DELAY_MS&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long m2 = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long n2 = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.sleep(1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long m3 = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long n3 = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertTrue((n2 - n1) / 1_000_000 &amp;lt;= m3 - m0 + MILLIS_ROUND);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertTrue(m2 - m1 &amp;lt;= (n3 - n0) / 1_000_000 + MILLIS_ROUND);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
It is the final assertion that is failing.&lt;br/&gt;
&lt;br/&gt;
Platform: macOS x64&lt;br/&gt;
&lt;br/&gt;
The test really should print all the values so they can be examined in case of failures like this.</description>
                <environment></environment>
        <key id="5064447">JDK-8278527</key>
            <summary>java/util/concurrent/tck/JSR166TestCase.java fails nanoTime test</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="psandoz">Paul Sandoz</assignee>
                                    <reporter username="jwilhelm">Jesper Wilhelmsson</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>sust-test-stabilization</label>
                            <label>tier1</label>
                            <label>tier5</label>
                            <label>tier8</label>
                    </labels>
                <created>Thu, 9 Dec 2021 16:24:27 -0800</created>
                <updated>Thu, 7 Nov 2024 20:30:50 -0800</updated>
                            <resolved>Thu, 22 Feb 2024 16:55:06 -0800</resolved>
                                    <version>11.0.24-oracle</version>
                    <version>19</version>
                                    <fixVersion>23</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                                <comments>
                            <comment id="14705900" author="roboduke" created="Wed, 18 Sep 2024 07:24:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2892&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2892&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-18 14:16:39 +0000</comment>
                            <comment id="14705897" author="goetz" created="Wed, 18 Sep 2024 07:15:37 -0700"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.14-oracle.&lt;br/&gt;
No risk, only a test change. Related issues require no action.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed. &lt;br/&gt;
</comment>
                            <comment id="14655167" author="roboduke" created="Wed, 6 Mar 2024 06:28:11 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/331&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/331&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-05 18:45:20 +0000</comment>
                            <comment id="14655166" author="JIRAUSER20703" created="Wed, 6 Mar 2024 06:26:11 -0800"  >Fix request [21u]&lt;br/&gt;
I backport this for parity with 21.0.4-oracle. &lt;br/&gt;
Low risk, this patch deletes an existing test. &lt;br/&gt;
Patch is clean. &lt;br/&gt;
</comment>
                            <comment id="14651716" author="dukebot" created="Thu, 22 Feb 2024 16:54:57 -0800"  >Changeset: 54f09d73&lt;br/&gt;
Author:    Jaikiran Pai &amp;lt;&lt;a href=&apos;mailto:jpai@openjdk.org&apos;&gt;jpai@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-02-23 00:53:19 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/54f09d734584a71c648520664447f8395050adbe&quot;&gt;https://git.openjdk.org/jdk/commit/54f09d734584a71c648520664447f8395050adbe&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14651528" author="roboduke" created="Thu, 22 Feb 2024 01:52:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17960&quot;&gt;https://git.openjdk.org/jdk/pull/17960&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-22 09:49:31 +0000</comment>
                            <comment id="14650594" author="jpai" created="Mon, 19 Feb 2024 23:02:31 -0800"  >Both Martin and Paul have indicated in the comments of this JBS issue that it would be OK to delete this test (there&amp;#39;s only one test method in this test - the intermittently failing one). Today or tomorrow, I will go ahead and raise a PR which deletes this test, unless someone says we should retain this test.</comment>
                            <comment id="14529463" author="dcubed" created="Wed, 12 Oct 2022 06:57:36 -0700"  >Here&amp;#39;s a log file snippet from the jdk-20+19-1321-tier8 sighting: &lt;br/&gt;
&lt;br/&gt;
java/util/concurrent/tck/JSR166TestCase.java &lt;br/&gt;
&lt;br/&gt;
#section:junit&lt;br/&gt;
----------messages:(7/594)----------&lt;br/&gt;
command: junit --add-opens java.base/java.util.concurrent=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -Djsr166.testImplementationDetails=true JSR166TestCase&lt;br/&gt;
reason: User specified action: run junit/othervm/timeout=1000 --add-opens java.base/java.util.concurrent=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -Djsr166.testImplementationDetails=true JSR166TestCase &lt;br/&gt;
started: Wed Oct 12 00:31:54 GMT 2022&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
Additional options from @modules: --add-modules java.management&lt;br/&gt;
finished: Wed Oct 12 00:36:18 GMT 2022&lt;br/&gt;
elapsed time (seconds): 264.633&lt;br/&gt;
----------configuration:(5/175)----------&lt;br/&gt;
Boot Layer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;add modules: java.management                &lt;br/&gt;
&amp;nbsp;&amp;nbsp;add opens:   java.base/java.lang            ALL-UNNAMED&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.base/java.util.concurrent ALL-UNNAMED&lt;br/&gt;
&lt;br/&gt;
----------System.out:(0/0)----------&lt;br/&gt;
----------System.err:(72/4302)----------&lt;br/&gt;
JavaTest Message: JUnit Platform Failure(s): 1&lt;br/&gt;
&lt;br/&gt;
junit.framework.AssertionFailedError&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:55)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:22)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:31)&lt;br/&gt;
	at junit.framework.TestCase.assertTrue(TestCase.java:200)&lt;br/&gt;
	at SystemTest.testNanoTime(SystemTest.java:73)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:177)&lt;br/&gt;
	at JSR166TestCase.runTest(JSR166TestCase.java:382)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:142)&lt;br/&gt;
	at JSR166TestCase.runBare(JSR166TestCase.java:373)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:122)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:142)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:125)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:130)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:241)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:236)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:241)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:236)&lt;br/&gt;
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)&lt;br/&gt;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&lt;br/&gt;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&lt;br/&gt;
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)&lt;br/&gt;
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)&lt;br/&gt;
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)&lt;br/&gt;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)&lt;br/&gt;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)&lt;br/&gt;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)&lt;br/&gt;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)&lt;br/&gt;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)&lt;br/&gt;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)&lt;br/&gt;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)&lt;br/&gt;
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.runWithJUnitPlatform(JUnitRunner.java:126)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:85)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:51)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
Test run finished after 201490 ms&lt;br/&gt;
[       219 containers found      ]&lt;br/&gt;
[         0 containers skipped    ]&lt;br/&gt;
[       219 containers started    ]&lt;br/&gt;
[         0 containers aborted    ]&lt;br/&gt;
[       183 containers successful ]&lt;br/&gt;
[         0 containers failed     ]&lt;br/&gt;
[      4076 tests found           ]&lt;br/&gt;
[         0 tests skipped         ]&lt;br/&gt;
[      4055 tests started         ]&lt;br/&gt;
[         0 tests aborted         ]&lt;br/&gt;
[      4054 tests successful      ]&lt;br/&gt;
[         1 tests failed          ]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
java.lang.Exception: JUnit test failure&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.runWithJUnitPlatform(JUnitRunner.java:141)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:85)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:51)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception: JUnit test failure&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.Exception: JUnit test failure&lt;br/&gt;
----------rerun:(50/6557)*----------</comment>
                            <comment id="14508958" author="psandoz" created="Mon, 11 Jul 2022 14:47:57 -0700"  >I suspect we can delete this test. It does seem fragile with it being dependent (within some upper bound) on granularity of that provided by the OS.</comment>
                            <comment id="14499730" author="JIRAUSER19203" created="Thu, 2 Jun 2022 02:37:57 -0700"  >Failed for me on Win11 as well&lt;br/&gt;
&lt;br/&gt;
----------System.err:(55/3349)----------&lt;br/&gt;
JavaTest Message: JUnit Failure: testNanoTime(SystemTest): null&lt;br/&gt;
junit.framework.AssertionFailedError&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:55)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:22)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:31)&lt;br/&gt;
	at junit.framework.TestCase.assertTrue(TestCase.java:200)&lt;br/&gt;
	at SystemTest.testNanoTime(SystemTest.java:73)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:177)&lt;br/&gt;
	at JSR166TestCase.runTest(JSR166TestCase.java:382)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:142)&lt;br/&gt;
	at JSR166TestCase.runBare(JSR166TestCase.java:373)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:122)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:142)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:125)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:130)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:241)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:236)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:241)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:236)&lt;br/&gt;
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)&lt;br/&gt;
	at org.junit.runners.Suite.runChild(Suite.java:128)&lt;br/&gt;
	at org.junit.runners.Suite.runChild(Suite.java:27)&lt;br/&gt;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&lt;br/&gt;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&lt;br/&gt;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&lt;br/&gt;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&lt;br/&gt;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&lt;br/&gt;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&lt;br/&gt;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&lt;br/&gt;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&lt;br/&gt;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&lt;br/&gt;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:105)&lt;br/&gt;
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:62)&lt;br/&gt;
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:49)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:76)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:43)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
&lt;br/&gt;
java.lang.Exception: JUnit test failure&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:92)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:43)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception: JUnit test failure&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.Exception: JUnit test failure</comment>
                            <comment id="14463658" author="martin" created="Thu, 9 Dec 2021 22:19:27 -0800"  >This test has always seemed a little dodgy to me, and might be better suited to being a JVM test.&lt;br/&gt;
&lt;br/&gt;
Isn&amp;#39;t System.currentTimeMillis() allowed to have unpredictable jumps at the whim of a time synchronization daemon?&lt;br/&gt;
&lt;br/&gt;
I would be OK with simply deleting SystemTest.java.  No jsr166 APIs are being tested!</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5122576">JDK-8326812</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5123534">JDK-8327579</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139339">JDK-8340358</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139342">JDK-8340361</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139494">JDK-8340501</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5069185">JDK-8282313</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5106120">JDK-8312622</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vcpf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="215"><![CDATA[java.util.concurrent]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>