<!--
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Thu Oct 02 06:59:25 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://bugs.openjdk.org/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>Java Bug System</title>
        <link>https://bugs.openjdk.org/issues/?jql=project+%3D+JDK+AND+fixVersion+%3D+21.0.2+AND+resolution+%3D+Fixed+AND+%22resolved+in+build%22+%3D+b10</link>
        <description>An XML representation of a search request</description>
                <language>en-us</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>9.12.27</version>
            <build-number>9120027</build-number>
            <build-date>02-09-2025</build-date>
        </build-info>

<item>
            <title>[JDK-8321067] Unlock experimental options in EATests.java</title>
                <link>https://bugs.openjdk.org/browse/JDK-8321067</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test: com/sun/jdi/EATests.java&lt;br/&gt;
JDK Builds: jdk-21.0.2+9-51, jdk-21.0.3+1-24&lt;br/&gt;
OS: Generic&lt;br/&gt;
Regression: Yes, This failure is not seen in previous CI builds&lt;br/&gt;
Partial Error Log:&lt;br/&gt;
Target VM failed to initialize.&lt;br/&gt;
java.lang.NullPointerException: Cannot invoke &amp;quot;com.sun.jdi.VirtualMachine.setDebugTraceMode(int)&amp;quot; because &amp;quot;this.vm&amp;quot; is null&lt;br/&gt;
	at VMConnection.open(VMConnection.java:160)&lt;br/&gt;
	at TestScaffold.connect(TestScaffold.java:711)&lt;br/&gt;
	at TestScaffold.startUp(TestScaffold.java:403)&lt;br/&gt;
	at TestScaffold.startTo(TestScaffold.java:413)&lt;br/&gt;
	at TestScaffold.startToMain(TestScaffold.java:408)&lt;br/&gt;
	at EATests.runTests(EATests.java:343)&lt;br/&gt;
	at TestScaffold.startTests(TestScaffold.java:470)&lt;br/&gt;
	at EATests.main(EATests.java:308)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1583)&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5115810">JDK-8321067</key>
            <summary>Unlock experimental options in EATests.java</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rkennke">Roman Kennke</assignee>
                                    <reporter username="vagarwal">Vikrant Agarwal</reporter>
                        <labels>
                            <label>21u-tier3</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>sqebug</label>
                    </labels>
                <created>Wed, 29 Nov 2023 21:10:45 -0800</created>
                <updated>Wed, 6 Dec 2023 20:05:30 -0800</updated>
                            <resolved>Thu, 30 Nov 2023 06:18:04 -0800</resolved>
                                    <version>21.0.2</version>
                                    <fixVersion>21.0.2</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14630316" author="dukebot" created="Thu, 30 Nov 2023 06:18:02 -0800"  >Changeset: ba79073d&lt;br/&gt;
Author:    Roman Kennke &amp;lt;&lt;a href=&apos;mailto:rkennke@openjdk.org&apos;&gt;rkennke@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-30 14:15:10 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u/commit/ba79073da5baede8d381cd495fb82379b6775f09&quot;&gt;https://git.openjdk.org/jdk21u/commit/ba79073da5baede8d381cd495fb82379b6775f09&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14630253" author="roboduke" created="Thu, 30 Nov 2023 02:33:30 -0800"  >[jdk21u-fix-request] Approval Request from Roman Kennke&lt;br/&gt;
The backport for [&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319926&quot; title=&quot;Deoptimization results in incorrect lightweight locking stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8319926&quot;&gt;&lt;strike&gt;JDK-8319926&lt;/strike&gt;&lt;/a&gt;](&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319926&quot;&gt;https://bugs.openjdk.org/browse/JDK-8319926&lt;/a&gt;) was missing to unlock experimental options, because the LockingMode option only became non-experimental in JDK22. This change adds -XX:+UnlockExperimentalVMOptions to EATests.java run configurations. The fix is JDK21-specific.</comment>
                            <comment id="14630219" author="roboduke" created="Thu, 30 Nov 2023 00:33:42 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/414&quot;&gt;https://git.openjdk.org/jdk21u/pull/414&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-30 08:26:48 +0000</comment>
                            <comment id="14630182" author="dholmes" created="Wed, 29 Nov 2023 21:56:57 -0800"  >Yep the backport of the test was bad as LockingMode is experimental in 21.</comment>
                            <comment id="14630180" author="cjplummer" created="Wed, 29 Nov 2023 21:51:32 -0800"  >In JDK 22 &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318895&quot; title=&quot;Deoptimization results in incorrect lightweight locking stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318895&quot;&gt;&lt;strike&gt;JDK-8318895&lt;/strike&gt;&lt;/a&gt; modified this test to specify the LockingMode. That worked because LockingMode is not experimental in 22. However, it is experimental in JDK 21, so the backport (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319926&quot; title=&quot;Deoptimization results in incorrect lightweight locking stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8319926&quot;&gt;&lt;strike&gt;JDK-8319926&lt;/strike&gt;&lt;/a&gt;) is what introduced this issue. I think the fix is to have the test use -XX:+UnlockExperimentalVMOptions in JDK 21.</comment>
                            <comment id="14630179" author="vagarwal" created="Wed, 29 Nov 2023 21:49:16 -0800"  >Looks like changes in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318895&quot; title=&quot;Deoptimization results in incorrect lightweight locking stack&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318895&quot;&gt;&lt;strike&gt;JDK-8318895&lt;/strike&gt;&lt;/a&gt; have caused this regression</comment>
                            <comment id="14630178" author="cjplummer" created="Wed, 29 Nov 2023 21:41:01 -0800"  >The failure message is misleading. See &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8282712&quot; title=&quot;VMConnection.open() does not detect if VM failed to be created, resulting in NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8282712&quot;&gt;&lt;strike&gt;JDK-8282712&lt;/strike&gt;&lt;/a&gt; as to why (it was fixed in 22). However, there is a real issue here. Further up the log you see:&lt;br/&gt;
&lt;br/&gt;
Error: VM option &amp;#39;LockingMode&amp;#39; is experimental and must be enabled via -XX:+UnlockExperimentalVMOptions.&lt;br/&gt;
Error: The unlock option must precede &amp;#39;LockingMode&amp;#39;.&lt;br/&gt;
Error: Could not create the Java Virtual Machine.&lt;br/&gt;
Error: A fatal exception has occurred. Program will exit.&lt;br/&gt;
&lt;br/&gt;
This test does not enable UnlockExperimentalVMOptions. I assume there was some recent hotspot change that is causing this issue.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5114543">JDK-8319926</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i341yj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="369"><![CDATA[svc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>