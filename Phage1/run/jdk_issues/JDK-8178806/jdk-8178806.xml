<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:37:03 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8178806] Better exception logging in crypto code</title>
                <link>https://bugs.openjdk.org/browse/JDK-8178806</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Debugged an issue recently related to crypto provider jar file loading. Some of our crypto code handles failures silently. We should fix that.&lt;br/&gt;
&lt;br/&gt;
src/share/classes/javax/crypto/JceSecurity.java&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static synchronized Exception getVerificationResult(Provider p) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object o = verificationResults.get(p);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (o == PROVIDER_VERIFIED) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (o != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (Exception)o;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (verifyingProviders.get(p) != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// this method is static synchronized, must be recursion&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// return failure now but do not save the result&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new NoSuchProviderException(&amp;quot;Recursion during verification&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verifyingProviders.put(p, Boolean.FALSE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL providerURL = getCodeBase(p.getClass());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verifyProviderJar(providerURL);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Verified ok, cache result&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verificationResults.put(p, PROVIDER_VERIFIED);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (Exception e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verificationResults.put(p, e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return e;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verifyingProviders.remove(p);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
== &lt;br/&gt;
we should log issues which are detected with provider jar files.&lt;br/&gt;
==&lt;br/&gt;
&lt;br/&gt;
There may be other related cases to be examined.</description>
                <environment></environment>
        <key id="4921408">JDK-8178806</key>
            <summary>Better exception logging in crypto code</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kdriver">Kevin Driver</assignee>
                                    <reporter username="coffeys">Sean Coffey</reporter>
                        <labels>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>noreg-trivial</label>
                            <label>supportability:clarity</label>
                    </labels>
                <created>Fri, 14 Apr 2017 06:29:55 -0700</created>
                <updated>Thu, 20 Apr 2023 01:33:26 -0700</updated>
                            <resolved>Thu, 9 Feb 2023 14:33:40 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14574223" author="roboduke" created="Mon, 17 Apr 2023 08:22:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/1833&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/1833&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-17 15:15:36 +0000</comment>
                            <comment id="14574221" author="roboduke" created="Mon, 17 Apr 2023 08:17:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1253&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1253&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-17 15:10:10 +0000</comment>
                            <comment id="14574217" author="goetz" created="Mon, 17 Apr 2023 08:08:42 -0700"  >Fix request [11u,17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 11.0.20/17.0.8-oracle.&lt;br/&gt;
Very low risk, simple printout.&lt;br/&gt;
Clean backport. SAP nightly testing passed.</comment>
                            <comment id="14558974" author="dukebot" created="Thu, 9 Feb 2023 14:33:39 -0800"  >Changeset: b814cfc3&lt;br/&gt;
Author:    Kevin Driver &amp;lt;&lt;a href=&apos;mailto:kdriver@openjdk.org&apos;&gt;kdriver@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Valerie Peng &amp;lt;&lt;a href=&apos;mailto:valeriep@openjdk.org&apos;&gt;valeriep@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-09 22:31:00 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b814cfc39d2a49951e8e1839cb2f42d9b7cf705d&quot;&gt;https://git.openjdk.org/jdk/commit/b814cfc39d2a49951e8e1839cb2f42d9b7cf705d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14558966" author="roboduke" created="Thu, 9 Feb 2023 13:33:36 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12504&quot;&gt;https://git.openjdk.org/jdk/pull/12504&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-09 21:26:50 +0000</comment>
                            <comment id="14558965" author="JIRAUSER20204" created="Thu, 9 Feb 2023 13:33:25 -0800"  >Code pushed. Please review.</comment>
                            <comment id="14554528" author="JIRAUSER20204" created="Wed, 25 Jan 2023 13:59:34 -0800"  >[~coffeys] - the JceSecurity class is no longer present; however, I was looking at your other example in &amp;quot;isTrusted&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s my opinion that the method might be better designed as-is -- in other words, I like the behavior of &amp;quot;did it validate? otherwise silently return false.&amp;quot; &lt;br/&gt;
&lt;br/&gt;
If we did want to print some information about the cause for being untrusted, we would be at the mercy of the message having been set in an Exception bubbling up from implementors of Validator. &lt;br/&gt;
&lt;br/&gt;
A quick check of SimpleValidator (for example) shows that not all exceptions have meaningful messages set. Then, would we examine a set of possible Exceptions to see what information might be relevant to display for that particular type? It could quickly get untenable, especially if new specialized types of exceptions or new Validator implementations could be added someday. &lt;br/&gt;
&lt;br/&gt;
In PKIXValidator, some exceptions are eaten but the rest suffer from the same issues I described.&lt;br/&gt;
&lt;br/&gt;
[~mullan] do you have any thoughts about this one?&lt;br/&gt;
&lt;br/&gt;
Unless there are other examples besides the two provided, I suggest we close this bug as &amp;quot;works as designed&amp;quot; or &amp;quot;won&amp;#39;t fix&amp;quot; or whatever is appropriate.  </comment>
                            <comment id="14071122" author="wetmore" created="Wed, 19 Apr 2017 11:47:22 -0700"  >Agreed.&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5093825">JDK-8302208</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093892">JDK-8302261</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5098964">JDK-8306494</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5098986">JDK-8306515</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i27a8r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="229"><![CDATA[javax.crypto]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>