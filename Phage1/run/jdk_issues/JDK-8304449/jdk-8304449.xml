<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:49:52 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8304449] com/sun/jdi/ThreadMemoryLeakTest.java times out</title>
                <link>https://bugs.openjdk.org/browse/JDK-8304449</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test times out in the JDK21 CI:&lt;br/&gt;
&lt;br/&gt;
com/sun/jdi/ThreadMemoryLeakTest.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
----------System.err:(20/1009)----------&lt;br/&gt;
[3ms] run args: [ThreadMemoryLeakTarg]&lt;br/&gt;
[1533ms] Got ThreadStartEvent #1000 threads:308&lt;br/&gt;
[1882ms] Got ThreadDeathEvent #1000 threads:260&lt;br/&gt;
[2483ms] Got ThreadStartEvent #2000 threads:388&lt;br/&gt;
[2855ms] Got ThreadDeathEvent #2000 threads:409&lt;br/&gt;
[3598ms] Got ThreadStartEvent #3000 threads:184&lt;br/&gt;
[3763ms] Got ThreadDeathEvent #3000 threads:305&lt;br/&gt;
[4569ms] Got ThreadStartEvent #4000 threads:443&lt;br/&gt;
[4879ms] Got ThreadDeathEvent #4000 threads:389&lt;br/&gt;
[5526ms] Got ThreadStartEvent #5000 threads:400&lt;br/&gt;
[5683ms] Got ThreadDeathEvent #5000 threads:264&lt;br/&gt;
[6717ms] Got ThreadStartEvent #6000 threads:330&lt;br/&gt;
&lt;br/&gt;
Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread &amp;quot;Thread-1&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread &amp;quot;output reader&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread &amp;quot;JDI Target VM Interface&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread &amp;quot;process reaper (pid 49716)&amp;quot;&lt;br/&gt;
----------rerun:(39/6062)*----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
result: Error. Program `/System/Volumes/Data/mesos/work_dir/jib-master/install/jdk-21+15-1199/macosx-x64-debug.jdk/jdk-21/fastdebug/bin/java&amp;#39; timed out (timeout set to 480000ms, elapsed time including timeout handling was 1196969ms).&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5096564">JDK-8304449</key>
            <summary>com/sun/jdi/ThreadMemoryLeakTest.java times out</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>noreg-self</label>
                            <label>tier5</label>
                            <label>tier8</label>
                    </labels>
                <created>Sat, 18 Mar 2023 22:21:20 -0700</created>
                <updated>Thu, 11 May 2023 07:57:29 -0700</updated>
                            <resolved>Wed, 29 Mar 2023 16:31:07 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14580959" author="cjplummer" created="Thu, 11 May 2023 07:57:29 -0700"  >In case this issue ever turns up again, the following patch was useful during debugging:&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/jdk.jdi/share/classes/com/sun/tools/jdi/EventQueueImpl.java b/src/jdk.jdi/share/classes/com/sun/tools/jdi/EventQueueImpl.java&lt;br/&gt;
index 59361af69f8..1feb4918063 100644&lt;br/&gt;
--- a/src/jdk.jdi/share/classes/com/sun/tools/jdi/EventQueueImpl.java&lt;br/&gt;
+++ b/src/jdk.jdi/share/classes/com/sun/tools/jdi/EventQueueImpl.java&lt;br/&gt;
@@ -60,8 +60,14 @@ public class EventQueueImpl extends MirrorImpl implements EventQueue {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return System.identityHashCode(this);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+    private int numEvents = 0;&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;synchronized void enqueue(EventSet eventSet) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eventSets.add(eventSet);&lt;br/&gt;
+        numEvents++;&lt;br/&gt;
+        if (size() &amp;gt; 10000 &amp;amp;&amp;amp; (size() % 1000) == 0) {&lt;br/&gt;
+            System.out.println(&amp;quot;enqueue: &amp;quot; + numEvents + &amp;quot; &amp;quot; + size());&lt;br/&gt;
+        }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;notifyAll();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
diff --git a/src/jdk.jdi/share/classes/com/sun/tools/jdi/TargetVM.java b/src/jdk.jdi/share/classes/com/sun/tools/jdi/TargetVM.java&lt;br/&gt;
index 2a9e4555099..f843a22ab10 100644&lt;br/&gt;
--- a/src/jdk.jdi/share/classes/com/sun/tools/jdi/TargetVM.java&lt;br/&gt;
+++ b/src/jdk.jdi/share/classes/com/sun/tools/jdi/TargetVM.java&lt;br/&gt;
@@ -244,9 +244,11 @@ public class TargetVM implements Runnable {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private synchronized void controlEventFlow(int maxQueueSize) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!eventsHeld &amp;amp;&amp;amp; (maxQueueSize &amp;gt; OVERLOADED_QUEUE)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eventController().hold();&lt;br/&gt;
+            System.out.println(&amp;quot;HOLD: &amp;quot; + maxQueueSize);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eventsHeld = true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (eventsHeld &amp;amp;&amp;amp; (maxQueueSize &amp;lt; UNDERLOADED_QUEUE)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eventController().release();&lt;br/&gt;
+            System.out.println(&amp;quot;RELEASE: &amp;quot; + maxQueueSize);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eventsHeld = false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</comment>
                            <comment id="14571003" author="dcubed" created="Fri, 31 Mar 2023 08:11:55 -0700"  >The fix for this bug was integrated in jdk-21+16-1327.</comment>
                            <comment id="14570549" author="dukebot" created="Wed, 29 Mar 2023 16:31:05 -0700"  >Changeset: 9643f654&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-29 23:29:30 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/9643f654da23cfc336d36385031251d039e0550d&quot;&gt;https://git.openjdk.org/jdk/commit/9643f654da23cfc336d36385031251d039e0550d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14568662" author="roboduke" created="Tue, 21 Mar 2023 14:46:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13130&quot;&gt;https://git.openjdk.org/jdk/pull/13130&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-21 21:38:12 +0000</comment>
                            <comment id="14568632" author="cjplummer" created="Tue, 21 Mar 2023 12:02:49 -0700"  >macOS has a thread behavior that is not seen on linux and windows that is causing more memory usage, which sometimes leads to this unexpected OOME. The debuggee side of the test constantly creates threads that do little more than a short sleep. It has a counter of &amp;quot;live&amp;quot; threads, and won&amp;#39;t let that go over 500. On the debugger side it is just tracking ThreadStartEvents and ThreadDeathEvents. It keep tracks of threads (ThreadReferences) for which a ThreadStartEvent had been received but a ThreadDeathEvent has not. On linux and windows the count of outstanding threads is generally in the 200-400 range, sometime briefly going over 500. However, on macOS it is closer to 2400. This means a lot more ThreadReferences being tracked, which means more memory usage, so sometimes you see an OOME on macOS as a result.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not sure why there is a backlog of ThreadDeathEvents. The only thing that I can think of is that on macOS threads are slow to exit and generate the ThreadDeathEvent. I mentioned above that the debuggee limits the number of live threads to 500, but this is done with a semaphore, and the semaphore is released just before the thread exits its main method. So the thread is technically still alive at that point, but has freed up its semaphore allowing another thread to be created. So probably there is a significant delay between the semaphore release and the generation of the ThreadDeathEvent, allowing for a large number of delayed ThreadStartEvents.&lt;br/&gt;
&lt;br/&gt;
The easiest fix for this is to just not track all the outstanding ThreadReferences. There is no real reason to. It was just being done so the test could log the count of threads for which no ThreadDeathEvent have been received. This can also be done instead with simple counters of ThreadStartEvents and ThreadDeathEvents.</comment>
                            <comment id="14567968" author="dcubed" created="Sun, 19 Mar 2023 16:22:57 -0700"  >[~cjplummer] - This timeout happens without ZGC so I went&lt;br/&gt;
with a new bug.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5088325">JDK-8297638</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5096547">JDK-8304436</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30smr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>