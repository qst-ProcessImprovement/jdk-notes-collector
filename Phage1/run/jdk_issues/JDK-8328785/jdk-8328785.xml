<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:53:40 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8328785] IOException: Symbol not found: C_GetInterface for PKCS11 interface prior to V3.0</title>
                <link>https://bugs.openjdk.org/browse/JDK-8328785</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Our project uses a HSM with a PKCS11 interface and needs a truststore in the HSM to boot up (The HSM run a pkcs11 V2.4 interface). To check if the certificate is created before starting the project, we run a keytool command to list all certificate in the HSM. In JDK 17, we observe no issue but with the JDK 21, a IOException occured.&lt;br/&gt;
&lt;br/&gt;
After researched the root cause, we found the error in the library libj2pkcs11 with the commit 83e6a4c for the ticket &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8255409&quot; title=&quot;Support the new C_GetInterfaceList, C_GetInterface, and C_SessionCancel APIs in PKCS#11 v3.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8255409&quot;&gt;&lt;strike&gt;JDK-8255409&lt;/strike&gt;&lt;/a&gt;. On the src/jdk.crypto.cryptoki/unix/native/libj2pkcs11/p11_md.c file (same for windows), a check is done to know if the pkcs11 library supports the C_GetInterface function (implemented in PKcs11 V3.0) at line 182. &lt;br/&gt;
During the check the dlerror method is used to control if there are no error in the calling of the PKCS11 proprietary vendor library.&lt;br/&gt;
The dlerror method display all error that occurred from the last call of dlerror (see man for dlerror).&lt;br/&gt;
(from this point, the line number are describe with the file src/jdk.crypto.cryptoki/unix/native/libj2pkcs11/p11_md.c in the commit 83e6a4c )&lt;br/&gt;
On the line 183, dlerror is never called if the C_GetInterface pointer is null because of the short-circuit evaluation (GetInterface pointer will be set to NULL for every PKCS11 interface implemented with a version lesser than 3). &lt;br/&gt;
On the line 192, dlerror is called again for the C_GetFunctionList dlsym call, but as the dlerror was never called after the dlsym for C_GetInterface, the line 192 reports an error related for the C_GetInterface even if the C_GetFunctionList dlsym call did not produce any error.  As dlsym is not null, an exception is thrown and the PKCS11 library cannot be used.&lt;br/&gt;
Following the man for dlsym, dlerror shall be called before the test on the dlsym return pointer. Furthermore, dlsym can return the NULL value as a valid value (only the dlerror return value can differentiates errors from successes). &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
REGRESSION : Last worked in version 17.0.10&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
A keytool command is enough to reproduce the issue. We test with the following command:&lt;br/&gt;
keytool -v -keystore NONE -providername SunPKCS11-Proteccio -providerclass sun.security.pkcs11.SunPKCS11 -providerarg /opt/project/conf/pkcs11.cfg -storetype PKCS11 -list -alias s1as -storepass 12345678&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
The expected result is the print in the console of any field of the certificate &lt;br/&gt;
ACTUAL -&lt;br/&gt;
keytool error: java.security.ProviderException: Initialization failed&lt;br/&gt;
java.security.ProviderException: Initialization failed&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.SunPKCS11.&amp;lt;init&amp;gt;(SunPKCS11.java:391)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.SunPKCS11$1.run(SunPKCS11.java:126)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.SunPKCS11$1.run(SunPKCS11.java:123)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.SunPKCS11.configure(SunPKCS11.java:123)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.security.tools.KeyStoreUtil.loadProviderByName(KeyStoreUtil.java:283)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.security.tools.KeyStoreUtil.loadProviderByClass(KeyStoreUtil.java:316)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.security.tools.keytool.Main.doCommands(Main.java:834)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.security.tools.keytool.Main.run(Main.java:419)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.security.tools.keytool.Main.main(Main.java:412)&lt;br/&gt;
Caused by: java.io.IOException: Symbol not found: C_GetInterface&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.wrapper.PKCS11.connect(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.wrapper.PKCS11.&amp;lt;init&amp;gt;(PKCS11.java:155)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.wrapper.PKCS11.getInstance(PKCS11.java:186)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.crypto.cryptoki/sun.security.pkcs11.SunPKCS11.&amp;lt;init&amp;gt;(SunPKCS11.java:329)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 9 more&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
We test with success a fix that change the line 183 of the file p11_md.c (for unix) to:&lt;br/&gt;
if ((dlerror() == NULL)  &amp;amp;&amp;amp; (C_GetInterface != NULL)) {&lt;br/&gt;
from&lt;br/&gt;
if ((C_GetInterface != NULL) &amp;amp;&amp;amp; (dlerror() == NULL)) {&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5124632">JDK-8328785</key>
            <summary>IOException: Symbol not found: C_GetInterface for PKCS11 interface prior to V3.0</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="valeriep">Valerie Peng</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>dcsas</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-hard</label>
                            <label>regression</label>
                            <label>reproducer-hard</label>
                            <label>webbug</label>
                    </labels>
                <created>Tue, 19 Mar 2024 08:34:01 -0700</created>
                <updated>Mon, 3 Jun 2024 02:39:49 -0700</updated>
                            <resolved>Tue, 9 Apr 2024 14:54:36 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>23</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14678181" author="roboduke" created="Mon, 3 Jun 2024 02:17:31 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14677913" author="roboduke" created="Fri, 31 May 2024 12:23:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/639&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/639&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 19:17:56 +0000</comment>
                            <comment id="14664184" author="dukebot" created="Tue, 9 Apr 2024 14:54:35 -0700"  >Changeset: 6276789f&lt;br/&gt;
Author:    Valerie Peng &amp;lt;&lt;a href=&apos;mailto:valeriep@openjdk.org&apos;&gt;valeriep@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-09 21:51:51 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6276789fb5e283c11ac73602c2a5f646eab96975&quot;&gt;https://git.openjdk.org/jdk/commit/6276789fb5e283c11ac73602c2a5f646eab96975&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14662309" author="roboduke" created="Tue, 2 Apr 2024 18:16:34 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18588&quot;&gt;https://git.openjdk.org/jdk/pull/18588&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-03 01:11:47 +0000</comment>
                            <comment id="14661228" author="JIRAUSER20207" created="Thu, 28 Mar 2024 05:14:31 -0700"  >Additional Information from Submitter&lt;br/&gt;
============================== &lt;br/&gt;
Able to reproduce the bug with the softhsm provided by opendnssec on Alpine.&lt;br/&gt;
To obtain this bug I did the following :&lt;br/&gt;
1. apk add softhsm&lt;br/&gt;
2. softhsm2-util --init-token --slot 0 --label &amp;quot;token1&amp;quot;&lt;br/&gt;
3. retrieve the slot with : softhsm2-util --show-slots&lt;br/&gt;
4. write the pkcs11.cfg&lt;br/&gt;
5. execute the command keytool -v -keystore NONE -providername test -providerclass sun.security.pkcs11.SunPKCS11 -providerarg /tmp/pkcs11.cfg_softhsm  -storetype PKCS11 -list -alias s1as -storepass toto&lt;br/&gt;
</comment>
                            <comment id="14659571" author="JIRAUSER20207" created="Fri, 22 Mar 2024 02:27:50 -0700"  >Additional Information from Submitter&lt;br/&gt;
============================== &lt;br/&gt;
To reproduce the issue, a simple command of keytool can be used (command described in the ticket).&lt;br/&gt;
The important thing is to use an HSM with a PKCS11 version lower than 3.0. on a unix platform (as the issue is with the call of dlerror). &lt;br/&gt;
If the HSM supports the C_GetInterface method (created in the V3.0 of PKCS11), the bug cannot be triggered. &lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5128215">JDK-8331301</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130884">JDK-8333426</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5033175">JDK-8255409</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35itn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="249"><![CDATA[javax.crypto:pkcs11]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>