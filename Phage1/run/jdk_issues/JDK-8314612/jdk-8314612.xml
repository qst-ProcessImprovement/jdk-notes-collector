<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:52:17 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8314612] TestUnorderedReduction.java fails with -XX:MaxVectorSize=32 and -XX:+AlignVector</title>
                <link>https://bugs.openjdk.org/browse/JDK-8314612</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>1. How to produce the bug&lt;br/&gt;
&lt;br/&gt;
When changing -XX:MaxVectorSize to 32 in `test/hotspot/jtreg/compiler/loopopopts/superword/TestUnorderedReduction.java`, and executing it with the following command, we will get an execution error. &lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
&lt;a href=&apos;mailto:zifeihan@d915263bc793&apos;&gt;zifeihan@d915263bc793&lt;/a&gt;:~/jdk$ git diff test/hotspot/jtreg/compiler/loopopts/superword/TestUnorderedReduction.java&lt;br/&gt;
diff --git a/test/hotspot/jtreg/compiler/loopopts/superword/TestUnorderedReduction.java b/test/hotspot/jtreg/compiler/loopopts/superword/TestUnorderedReduction.java&lt;br/&gt;
index 18f3b6930ea..952a56dd842 100644&lt;br/&gt;
--- a/test/hotspot/jtreg/compiler/loopopts/superword/TestUnorderedReduction.java&lt;br/&gt;
+++ b/test/hotspot/jtreg/compiler/loopopts/superword/TestUnorderedReduction.java&lt;br/&gt;
@@ -40,7 +40,8 @@ public class TestUnorderedReduction {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TestFramework.runWithFlags(&amp;quot;-Xbatch&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;-XX:CompileCommand=compileonly,compiler.loopopts.superword.TestUnorderedReduction::test*&amp;quot;,&lt;br/&gt;
-                                   &amp;quot;-XX:MaxVectorSize=16&amp;quot;);&lt;br/&gt;
+                                   &amp;quot;-XX:MaxVectorSize=32&amp;quot;,&lt;br/&gt;
+                                   &amp;quot;-XX:+AvoidUnalignedAccesses&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Run(test = {&amp;quot;test1&amp;quot;, &amp;quot;test2&amp;quot;, &amp;quot;test3&amp;quot;})&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Execute the command as follows(The jdk executed as above is a version of sve packaged with qemu-user):&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
/home/zifeihan/jtreg/bin/jtreg \&lt;br/&gt;
-J-Djavatest.maxOutputSize=500000 \&lt;br/&gt;
-Djdk.lang.Process.launchMechanism=vfork \&lt;br/&gt;
-v:default \&lt;br/&gt;
-concurrency:32 \&lt;br/&gt;
-timeout:50 \&lt;br/&gt;
-javaoption:-XX:UseSVE=2 \&lt;br/&gt;
-jdk:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk \&lt;br/&gt;
/home/zifeihan/jdk/test/hotspot/jtreg/compiler/loopopts/superword/TestUnorderedReduction.java&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The exceptions are as follows:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
----------System.out:(19/3921)----------&lt;br/&gt;
Run Flag VM:&lt;br/&gt;
Command line: [/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/java -cp /home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/compiler/loopopts/superword/TestUnorderedReduction.d:/home/zifeihan/jdk/test/hotspot/jtreg/compiler/loopopts/superword:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/test/lib:/home/zifeihan/jdk/test/lib:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0:/home/zifeihan/jdk/test/hotspot/jtreg:/home/zifeihan/jtreg/lib/javatest.jar:/home/zifeihan/jtreg/lib/jtreg.jar -Djdk.lang.Process.launchMechanism=vfork -XX:UseSVE=2 -Dtest.jdk=/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk -Djava.library.path=. -cp /home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/compiler/loopopts/superword/TestUnorderedReduction.d:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/test/lib:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0 -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbatch -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestUnorderedReduction::test* -XX:MaxVectorSize=32 -XX:+AvoidUnalignedAccesses compiler.lib.ir_framework.flag.FlagVM compiler.loopopts.superword.TestUnorderedReduction ]&lt;br/&gt;
[2023-08-19T02:00:01.969752090Z] Gathering output for process 91032&lt;br/&gt;
[2023-08-19T02:00:08.177648302Z] Waiting for completion for process 91032&lt;br/&gt;
[2023-08-19T02:00:08.180735552Z] Waiting for completion finished for process 91032&lt;br/&gt;
Output and diagnostic info for process 91032 was saved into &amp;#39;pid-91032-output.log&amp;#39;&lt;br/&gt;
[2023-08-19T02:00:08.206587843Z] Waiting for completion for process 91032&lt;br/&gt;
[2023-08-19T02:00:08.208777677Z] Waiting for completion finished for process 91032&lt;br/&gt;
Run Test VM - [-Xbatch, -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestUnorderedReduction::test*, -XX:MaxVectorSize=32, -XX:+AvoidUnalignedAccesses]:&lt;br/&gt;
Command line: [/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/java -cp /home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/compiler/loopopts/superword/TestUnorderedReduction.d:/home/zifeihan/jdk/test/hotspot/jtreg/compiler/loopopts/superword:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/test/lib:/home/zifeihan/jdk/test/lib:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0:/home/zifeihan/jdk/test/hotspot/jtreg:/home/zifeihan/jtreg/lib/javatest.jar:/home/zifeihan/jtreg/lib/jtreg.jar -Djava.library.path=. -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Djdk.lang.Process.launchMechanism=vfork -XX:UseSVE=2 -Dir.framework.server.port=34611 -Xbatch -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestUnorderedReduction::test* -XX:MaxVectorSize=32 -XX:+AvoidUnalignedAccesses -XX:+PrintCompilation -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:CompilerDirectivesFile=test-vm-compile-commands-pid-91034.log -XX:CompilerDirectivesLimit=31 -XX:-OmitStackTraceInFastThrow -DShouldDoIRVerification=true -XX:-BackgroundCompilation -XX:CompileCommand=quiet compiler.lib.ir_framework.test.TestVM compiler.loopopts.superword.TestUnorderedReduction ]&lt;br/&gt;
[2023-08-19T02:00:08.628667469Z] Gathering output for process 91057&lt;br/&gt;
[2023-08-19T02:00:16.553228083Z] Waiting for completion for process 91057&lt;br/&gt;
[2023-08-19T02:00:16.554576500Z] Waiting for completion finished for process 91057&lt;br/&gt;
Output and diagnostic info for process 91057 was saved into &amp;#39;pid-91057-output.log&amp;#39;&lt;br/&gt;
[2023-08-19T02:00:16.712613250Z] Waiting for completion for process 91057&lt;br/&gt;
[2023-08-19T02:00:16.713073750Z] Waiting for completion finished for process 91057&lt;br/&gt;
[2023-08-19T02:00:16.719087791Z] Waiting for completion for process 91057&lt;br/&gt;
[2023-08-19T02:00:16.723273500Z] Waiting for completion finished for process 91057&lt;br/&gt;
&lt;br/&gt;
----------System.err:(65/4837)----------&lt;br/&gt;
&lt;br/&gt;
TestFramework test VM exited with code 1&lt;br/&gt;
&lt;br/&gt;
Command Line:&lt;br/&gt;
/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/java -DReproduce=true -cp /home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/compiler/loopopts/superword/TestUnorderedReduction.d:/home/zifeihan/jdk/test/hotspot/jtreg/compiler/loopopts/superword:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0/test/lib:/home/zifeihan/jdk/test/lib:/home/zifeihan/jdk/build/linux-aarch64-server-fastdebug/jdk/bin/JTwork/classes/0:/home/zifeihan/jdk/test/hotspot/jtreg:/home/zifeihan/jtreg/lib/javatest.jar:/home/zifeihan/jtreg/lib/jtreg.jar -Djava.library.path=. -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Djdk.lang.Process.launchMechanism=vfork -XX:UseSVE=2 -Dir.framework.server.port=34611 -Xbatch -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestUnorderedReduction::test* -XX:MaxVectorSize=32 -XX:+AvoidUnalignedAccesses -XX:+PrintCompilation -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:CompilerDirectivesFile=test-vm-compile-commands-pid-91034.log -XX:CompilerDirectivesLimit=31 -XX:-OmitStackTraceInFastThrow -DShouldDoIRVerification=true -XX:-BackgroundCompilation -XX:CompileCommand=quiet compiler.lib.ir_framework.test.TestVM compiler.loopopts.superword.TestUnorderedReduction&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Error Output&lt;br/&gt;
------------&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; compiler.lib.ir_framework.shared.TestRunException: &lt;br/&gt;
&lt;br/&gt;
Test Failures (1)&lt;br/&gt;
-----------------&lt;br/&gt;
Custom Run Test: @Run: runTests - @Tests: {test1,test2,test3}:&lt;br/&gt;
compiler.lib.ir_framework.shared.TestRunException: There was an error while invoking @Run method public void compiler.loopopts.superword.TestUnorderedReduction.runTests() throws java.lang.Exception&lt;br/&gt;
	at compiler.lib.ir_framework.test.CustomRunTest.invokeTest(CustomRunTest.java:162)&lt;br/&gt;
	at compiler.lib.ir_framework.test.AbstractTest.run(AbstractTest.java:104)&lt;br/&gt;
	at compiler.lib.ir_framework.test.CustomRunTest.run(CustomRunTest.java:89)&lt;br/&gt;
	at compiler.lib.ir_framework.test.TestVM.runTests(TestVM.java:822)&lt;br/&gt;
	at compiler.lib.ir_framework.test.TestVM.start(TestVM.java:249)&lt;br/&gt;
	at compiler.lib.ir_framework.test.TestVM.main(TestVM.java:164)&lt;br/&gt;
Caused by: java.lang.reflect.InvocationTargetException&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at compiler.lib.ir_framework.test.CustomRunTest.invokeTest(CustomRunTest.java:159)&lt;br/&gt;
	... 5 more&lt;br/&gt;
Caused by: java.lang.RuntimeException: Wrong result test2: 3469730 != 5772800&lt;br/&gt;
	at compiler.loopopts.superword.TestUnorderedReduction.runTests(TestUnorderedReduction.java:65)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	... 7 more&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
	at compiler.lib.ir_framework.test.TestVM.runTests(TestVM.java:857)&lt;br/&gt;
	at compiler.lib.ir_framework.test.TestVM.start(TestVM.java:249)&lt;br/&gt;
	at compiler.lib.ir_framework.test.TestVM.main(TestVM.java:164)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#############################################################&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;- To only run the failed tests use -DTest, -DExclude,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;and/or -DScenarios.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;- To also get the standard output of the test VM run with&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-DReportStdout=true or for even more fine-grained logging&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;use -DVerbose=true.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#############################################################&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2. Reduced test case&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
public class TestUnorderedReduction {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static final int RANGE = 512;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static final int ITER  = 10;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final TestUnorderedReduction testUnorderedReduction = new TestUnorderedReduction();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; 500; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testUnorderedReduction.runTests();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void runTests() throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int[] data = new int[RANGE];&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;init(data);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; ITER; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int r1 = test2(data, i);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int r2 = ref2(data, i);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (r1 != r2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RuntimeException(&amp;quot;Wrong result test2: &amp;quot; + r1 + &amp;quot; != &amp;quot; + r2);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int test2(int[] data, int sum) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; RANGE; i+=8) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+1];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+2];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+3];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+4];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+5];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+6];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+7];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return sum;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int ref2(int[] data, int sum) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; RANGE; i+=8) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+1];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+2];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+3];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+4];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+5];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+6];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += 3 * data[i+7];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return sum;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static void init(int[] data) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; RANGE; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data[i] = 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Execute this simple test case with:`./java -Xbatch -XX:CompileCommand=compileonly,TestUnorderedReduction::test* -XX:UseSVE=2 TestUnorderedReduction`, it passes normally. But it fails when using :`./java -XX:+AvoidUnalignedAccesses -Xbatch -XX:CompileCommand=compileonly,TestUnorderedReduction::test* -XX:UseSVE=2 TestUnorderedReduction`.&lt;br/&gt;
```&lt;br/&gt;
&lt;a href=&apos;mailto:zifeihan@d915263bc793&apos;&gt;zifeihan@d915263bc793&lt;/a&gt;:~/jdk/build/linux-aarch64-server-fastdebug/jdk/bin$ /home/zifeihan/qemu-7.1.0-rc1-aarch64/bin/qemu-aarch64 -cpu max,sve256=on ./java-bak -XX:+AvoidUnalignedAccesses -Xbatch -XX:CompileCommand=compileonly,TestUnorderedReduction::test* -XX:UseSVE=2 TestUnorderedReduction&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
CompileCommand: compileonly TestUnorderedReduction.test* bool compileonly = true&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.RuntimeException: Wrong result test2: 1034 != 1538&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestUnorderedReduction.runTests(TestUnorderedReduction.java:20)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestUnorderedReduction.main(TestUnorderedReduction.java:8)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The sve is emulated using qemu-user and the sve width is set to 256.&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
/home/zifeihan/qemu-7.1.0-rc1-aarch64/bin/qemu-aarch64 -cpu max,sve256=on ./java -XX:+AvoidUnalignedAccesses -Xbatch -XX:CompileCommand=compileonly,TestUnorderedReduction::test* -XX:UseSVE=2 TestUnorderedReduction&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
3. C2 JIT code&lt;br/&gt;
&lt;br/&gt;
3.1 C2 JIT code for TestUnorderedReduction::test2 when test case passes.&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
160     B15: #	out( B16 ) &amp;amp;lt;- in( B16 ) top-of-loop Freq: 64.0845&lt;br/&gt;
160     spill R13 -&amp;amp;gt; R10	# spill size = 32&lt;br/&gt;
&lt;br/&gt;
164     B16: #	out( B15 B17 ) &amp;amp;lt;- in( B13 B15 ) Loop( B16-B15 inner main of N53) Freq: 65.0845&lt;br/&gt;
164     add R12, R1, R10, I2L #2	# ptr&lt;br/&gt;
168     add R13, R12, #16	# ptr&lt;br/&gt;
16c     loadV V17, [R13]	# vector (sve)&lt;br/&gt;
170     add R13, R12, #48	# ptr&lt;br/&gt;
174     loadV V18, [R13]	# vector (sve)&lt;br/&gt;
178     vlsl_imm V19, V17, #1&lt;br/&gt;
17c     add R13, R12, #80	# ptr&lt;br/&gt;
180     vaddI V17, V19, V17&lt;br/&gt;
184     loadV V19, [R13]	# vector (sve)&lt;br/&gt;
188     vlsl_imm V20, V18, #1&lt;br/&gt;
18c     vaddI V16, V16, V17&lt;br/&gt;
190     vaddI V17, V20, V18&lt;br/&gt;
194     add R13, R12, #112	# ptr&lt;br/&gt;
198     loadV V18, [R13]	# vector (sve)&lt;br/&gt;
19c     vlsl_imm V20, V19, #1&lt;br/&gt;
1a0     vaddI V16, V16, V17&lt;br/&gt;
1a4     vaddI V17, V20, V19&lt;br/&gt;
1a8     add R13, R12, #144	# ptr&lt;br/&gt;
1ac     loadV V19, [R13]	# vector (sve)&lt;br/&gt;
1b0     vlsl_imm V20, V18, #1&lt;br/&gt;
1b4     add R13, R12, #176	# ptr&lt;br/&gt;
1b8     vaddI V18, V20, V18&lt;br/&gt;
1bc     loadV V20, [R13]	# vector (sve)&lt;br/&gt;
1c0     vaddI V16, V16, V17&lt;br/&gt;
1c4     vlsl_imm V17, V19, #1&lt;br/&gt;
1c8     vaddI V16, V16, V18&lt;br/&gt;
1cc     vaddI V17, V17, V19&lt;br/&gt;
1d0     add R13, R12, #208	# ptr&lt;br/&gt;
1d4     loadV V18, [R13]	# vector (sve)&lt;br/&gt;
1d8     vlsl_imm V19, V20, #1&lt;br/&gt;
1dc     add R12, R12, #240	# ptr&lt;br/&gt;
1e0     vaddI V19, V19, V20&lt;br/&gt;
1e4     loadV V20, [R12]	# vector (sve)&lt;br/&gt;
1e8     vaddI V16, V16, V17&lt;br/&gt;
1ec     vlsl_imm V17, V18, #1&lt;br/&gt;
1f0     vaddI V16, V16, V19&lt;br/&gt;
1f4     vaddI V17, V17, V18&lt;br/&gt;
1f8     vlsl_imm V18, V20, #1&lt;br/&gt;
1fc     vaddI V16, V16, V17&lt;br/&gt;
200     vaddI V17, V18, V20&lt;br/&gt;
204     vaddI V16, V16, V17&lt;br/&gt;
208     addw R13, R10, #64&lt;br/&gt;
20c     cmpw  R13, #456&lt;br/&gt;
210     blt B15 	// counted loop end  P=0.984636 C=48127.000000&lt;br/&gt;
&lt;br/&gt;
214     B17: #	out( B22 B18 ) &amp;amp;lt;- in( B16 )  Freq: 0.999989&lt;br/&gt;
214     reduce_addI_sve R0, R2, V16	# KILL V17&lt;br/&gt;
220     cmpw  R13, #512&lt;br/&gt;
224     bge  B22  P=0.500000 C=-1.000000&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
3.2 C2 JIT code for TestUnorderedReduction::test2 when test case fails.&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
170     B15: #	out( B16 ) &amp;amp;lt;- in( B16 ) top-of-loop Freq: 64.0845&lt;br/&gt;
170     spill R13 -&amp;amp;gt; R11	# spill size = 32&lt;br/&gt;
&lt;br/&gt;
174     B16: #	out( B15 B17 ) &amp;amp;lt;- in( B13 B15 ) Loop( B16-B15 inner main of N53) Freq: 65.0845&lt;br/&gt;
174     add R13, R10, R11, I2L #2	# ptr&lt;br/&gt;
178     loadV16 V17, [R13, #16]	# vector (128 bits)&lt;br/&gt;
17c     loadV V18, [R13, #32]	# vector (sve)&lt;br/&gt;
180     vlsl_imm V19, V17, #1&lt;br/&gt;
184     loadV V20, [R13, #64]	# vector (sve)&lt;br/&gt;
188     vaddI V17, V19, V17&lt;br/&gt;
18c     vlsl_imm V19, V18, #1&lt;br/&gt;
190     vaddI V16, V16, V17&lt;br/&gt;
194     vaddI V17, V19, V18&lt;br/&gt;
198     loadV V18, [R13, #96]	# vector (sve)&lt;br/&gt;
19c     vlsl_imm V19, V20, #1&lt;br/&gt;
1a0     vaddI V16, V16, V17&lt;br/&gt;
1a4     vaddI V17, V19, V20&lt;br/&gt;
1a8     loadV16 V19, [R13, #128]	# vector (128 bits)&lt;br/&gt;
1ac     vlsl_imm V20, V18, #1&lt;br/&gt;
1b0     vaddI V16, V16, V17&lt;br/&gt;
1b4     vaddI V17, V20, V18&lt;br/&gt;
1b8     loadV16 V18, [R13, #144]	# vector (128 bits)&lt;br/&gt;
1bc     vlsl_imm V20, V19, #1&lt;br/&gt;
1c0     loadV V21, [R13, #160]	# vector (sve)&lt;br/&gt;
1c4     vaddI V19, V20, V19&lt;br/&gt;
1c8     vaddI V16, V16, V17&lt;br/&gt;
1cc     vlsl_imm V17, V18, #1&lt;br/&gt;
1d0     vaddI V16, V16, V19&lt;br/&gt;
1d4     vaddI V17, V17, V18&lt;br/&gt;
1d8     loadV V18, [R13, #192]	# vector (sve)&lt;br/&gt;
1dc     vlsl_imm V19, V21, #1&lt;br/&gt;
1e0     loadV V20, [R13, #224]	# vector (sve)&lt;br/&gt;
1e4     vaddI V19, V19, V21&lt;br/&gt;
1e8     vaddI V16, V16, V17&lt;br/&gt;
1ec     vlsl_imm V17, V18, #1&lt;br/&gt;
1f0     loadV16 V21, [R13, #256]	# vector (128 bits)&lt;br/&gt;
1f4     vaddI V17, V17, V18&lt;br/&gt;
1f8     vaddI V16, V16, V19&lt;br/&gt;
1fc     vlsl_imm V18, V20, #1&lt;br/&gt;
200     vaddI V16, V16, V17&lt;br/&gt;
204     vaddI V17, V18, V20&lt;br/&gt;
208     vlsl_imm V18, V21, #1&lt;br/&gt;
20c     vaddI V16, V16, V17&lt;br/&gt;
210     vaddI V17, V18, V21&lt;br/&gt;
214     vaddI V16, V16, V17&lt;br/&gt;
218     addw R13, R11, #64&lt;br/&gt;
21c     cmpw  R13, #456&lt;br/&gt;
220     blt B15 	// counted loop end  P=0.984636 C=48127.000000&lt;br/&gt;
&lt;br/&gt;
224     B17: #	out( B22 B18 ) &amp;amp;lt;- in( B16 )  Freq: 0.999989&lt;br/&gt;
224     reduce_addI_neon R0, R2, V16	# KILL V17&lt;br/&gt;
230     cmpw  R13, #512&lt;br/&gt;
234     bge  B22  P=0.500000 C=-1.000000&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
From the C2 JIT code, we can see that `reduce_addI_neon R0, R2, V16 # KILL V17 ` uses V16, which is generated from the above `vaddI V16, V16, V17` in the loop, but V16 and V17 have different vector length, which may result in omitted or over-processed data.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5108416">JDK-8314612</key>
            <summary>TestUnorderedReduction.java fails with -XX:MaxVectorSize=32 and -XX:+AlignVector</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="gcao">Gui Cao</reporter>
                        <labels>
                            <label>c2</label>
                            <label>c2-superword</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-17</label>
                            <label>oracle-triage-22</label>
                            <label>regression</label>
                    </labels>
                <created>Fri, 18 Aug 2023 19:23:48 -0700</created>
                <updated>Fri, 15 Dec 2023 08:56:33 -0800</updated>
                            <resolved>Wed, 13 Sep 2023 03:48:58 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14634659" author="sgehwolf" created="Fri, 15 Dec 2023 07:24:26 -0800"  >Thanks!</comment>
                            <comment id="14634654" author="JIRAUSER20703" created="Fri, 15 Dec 2023 07:09:47 -0800"  >Hi Severin, apologies for that. I&#8217;ve updated the fix request and left details on additional testing on the PR. </comment>
                            <comment id="14634310" author="sgehwolf" created="Thu, 14 Dec 2023 06:30:50 -0800"  >[~szaldana] The fix request comment is misleading. It&amp;#39;s not only a test change. Changes some loop opt in c2 as well. Please mention what testing you have done. Should at least run the test before/after patch and the c2 compiler test suite.</comment>
                            <comment id="14634300" author="JIRAUSER20703" created="Thu, 14 Dec 2023 06:16:10 -0800"  >Fix request [21u]&lt;br/&gt;
I backport this for parity with 21.0.3-oracle. &lt;br/&gt;
Patch applies cleanly.&lt;br/&gt;
Affected test passes, compiler test suite passes and tier 1 passes with GHA. &lt;br/&gt;
&lt;br/&gt;
[Edited to correct mistake on what the backport touches on and add testing details]&lt;br/&gt;
</comment>
                            <comment id="14634048" author="roboduke" created="Wed, 13 Dec 2023 10:29:34 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/24&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/24&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-13 18:20:55 +0000</comment>
                            <comment id="14610845" author="dukebot" created="Wed, 13 Sep 2023 03:48:57 -0700"  >Changeset: f804f865&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-13 10:47:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f804f8652da71b18cc654c08c12d07d6fd43c2a7&quot;&gt;https://git.openjdk.org/jdk/commit/f804f8652da71b18cc654c08c12d07d6fd43c2a7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14610050" author="roboduke" created="Mon, 11 Sep 2023 04:34:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15654&quot;&gt;https://git.openjdk.org/jdk/pull/15654&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-11 09:17:46 +0000</comment>
                            <comment id="14607323" author="JIRAUSER19821" created="Tue, 29 Aug 2023 04:56:02 -0700"  >My suspicion was that we get vectors with different vector lengths. I asked [~chagedorn] to run it with &amp;quot;-XX:+TraceNewVectors&amp;quot;:&lt;br/&gt;
&lt;br/&gt;
with AlignVector:&lt;br/&gt;
TraceNewVectors [SuperWord]:  1606  MulVI  === _ 1604 1605  [[ 930 929 928 927 918 917 916 915 ]]  #vectory[8]:{int} !orig=[938],796,225 !jvms: TestUnorderedReduction::test2 @ bci:61 (line 77)&lt;br/&gt;
TraceNewVectors [SuperWord]:  1627  MulVI  === _ 1625 1626  [[ 226 251 276 301 ]]  #vectorx[4]:{int} !orig=[225] !jvms: TestUnorderedReduction::test2 @ bci:61 (line 77)&lt;br/&gt;
&lt;br/&gt;
without:&lt;br/&gt;
Only size 8&lt;br/&gt;
&lt;br/&gt;
I suspect that AlignVector creates different alignment boundaries. It cuts it into 4 and 8 elements. Without AlignVector, they happen to all have 8 elements.&lt;br/&gt;
&lt;br/&gt;
We need to add a corresponding check, to ensure that all vectors in question have the same number of elements (otherwise we miss some elements, or start hallucinating elements):&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/06b0a5e03852dfed9f1dee4791fc71b4e4e1eeda/src/hotspot/share/opto/loopopts.cpp#L4211C40-L4211C40&quot;&gt;https://github.com/openjdk/jdk/blob/06b0a5e03852dfed9f1dee4791fc71b4e4e1eeda/src/hotspot/share/opto/loopopts.cpp#L4211C40-L4211C40&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I can do it in two weeks when I am back, or someone else can take it over if it is more urgent.</comment>
                            <comment id="14605254" author="thartmann" created="Mon, 21 Aug 2023 02:10:27 -0700"  >Thanks for the details [~fgao]. Makes sense.&lt;br/&gt;
&lt;br/&gt;
Thanks for confirming [~gcao]. Emanuel can look into this once he&amp;#39;s back from vacation but feel free to take it if you have time.</comment>
                            <comment id="14605251" author="JIRAUSER20521" created="Mon, 21 Aug 2023 02:04:25 -0700"  >Hi [~thartmann],  I ran some tests to verify that the issue was introduced by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302652&quot; title=&quot;[SuperWord] Reduction should happen after loop, when possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302652&quot;&gt;&lt;strike&gt;JDK-8302652&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14605250" author="JIRAUSER19807" created="Mon, 21 Aug 2023 02:02:26 -0700"  >Hi [~thartmann], &amp;quot;AvoidUnalignedAccesses&amp;quot; is aarch64 or risc-v specific, but it also passes the value to &amp;quot;AlignVector&amp;quot; in superword. So I reproduced the same bug on 512-bit x86_64 platform as well, instead with &amp;quot;-XX:MaxVectorSize=32 -XX:+AlignVector&amp;quot;. </comment>
                            <comment id="14605225" author="thartmann" created="Mon, 21 Aug 2023 00:15:06 -0700"  >ILW = Wrong result with C2 compiled code, reproducible on AArch64 with SVE2 and -XX:+AvoidUnalignedAccesses, -XX:-SuperWordReductions or disable compilation of affected method = HLM = P3</comment>
                            <comment id="14605221" author="thartmann" created="Mon, 21 Aug 2023 00:08:49 -0700"  >Might be a regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302652&quot; title=&quot;[SuperWord] Reduction should happen after loop, when possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302652&quot;&gt;&lt;strike&gt;JDK-8302652&lt;/strike&gt;&lt;/a&gt;. [~gcao] could you check if disabling PhaseIdealLoop::move_unordered_reduction_out_of_loop helps?</comment>
                            <comment id="14605219" author="thartmann" created="Mon, 21 Aug 2023 00:04:35 -0700"  >Looks like a duplicate of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8310190&quot; title=&quot;C2 SuperWord: AlignVector is broken, generates misaligned packs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8310190&quot;&gt;&lt;strike&gt;JDK-8310190&lt;/strike&gt;&lt;/a&gt; to me. [~epeter] is currently on vacation. [~fgao], maybe you can confirm?&lt;br/&gt;
&lt;br/&gt;
EDIT: Okay, &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8310190&quot; title=&quot;C2 SuperWord: AlignVector is broken, generates misaligned packs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8310190&quot;&gt;&lt;strike&gt;JDK-8310190&lt;/strike&gt;&lt;/a&gt; is only about misaligned accesses. In this case, we get a wrong result. It&amp;#39;s probably something different then.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5116806">JDK-8321900</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117151">JDK-8322213</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5103367">JDK-8310190</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5094345">JDK-8302652</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32sr7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17352"><![CDATA[b15]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>