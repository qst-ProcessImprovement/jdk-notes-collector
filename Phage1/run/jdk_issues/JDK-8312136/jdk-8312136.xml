<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:48:55 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8312136] Modify runtime/ErrorHandling/TestDwarf.java to split dwarf and decoder testing</title>
                <link>https://bugs.openjdk.org/browse/JDK-8312136</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>From &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8305489&quot; title=&quot;runtime/ErrorHandling/TestDwarf.java fails in some Linux configurations after JDK-8303805&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8305489&quot;&gt;&lt;strike&gt;JDK-8305489&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Update TestDwarf to only test the source information (it now assumes that the decoder is always able to find a method name). However, it would still be nice to have such a decoder test, so maybe we can split TestDwarf into a DWARF only and a decoder only test and problemlist the latter.&lt;br/&gt;
&lt;br/&gt;
... fix the misleading exception message in the test</description>
                <environment></environment>
        <key id="5105566">JDK-8312136</key>
            <summary>Modify runtime/ErrorHandling/TestDwarf.java to split dwarf and decoder testing</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dholmes">David Holmes</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Sun, 16 Jul 2023 22:27:16 -0700</created>
                <updated>Fri, 20 Dec 2024 03:40:35 -0800</updated>
                            <resolved>Mon, 25 Sep 2023 16:43:38 -0700</resolved>
                                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14733849" author="mbaesken" created="Fri, 20 Dec 2024 03:39:10 -0800"  >Today I was running into a strange little issue with runtime/ErrorHandling/TestDwarf.java .&lt;br/&gt;
Seems sometimes we print the registers directly after the native frames and even miss printing a blank line between those 2 parts of hserr.&lt;br/&gt;
Example hserr part :&lt;br/&gt;
&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x7a8e63]  Compilation::~Compilation()+0x93  (c1_Compilation.cpp:627)&lt;br/&gt;
V  [libjvm.so+0x7af155]  Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0xb5  (c1_Compiler.cpp:264)&lt;br/&gt;
V  [libjvm.so+0xa94940]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xb60  (compileBroker.cpp:2319)&lt;br/&gt;
V  [libjvm.so+0xa95798]  CompileBroker::compiler_thread_loop()+0x5c8  (compileBroker.cpp:1977)&lt;br/&gt;
V  [libjvm.so+0xf7d56e]  JavaThread::thread_main_inner()+0xee  (javaThread.cpp:777)&lt;br/&gt;
V  [libjvm.so+0x1a7c7ba]  Thread::call_run()+0xba  (thread.cpp:232)&lt;br/&gt;
V  [libjvm.so+0x159dea3]  thread_native_entry(Thread*)+0x123  (os_linux.cpp:860)&lt;br/&gt;
Registers:&lt;br/&gt;
RAX=0x00007f9cea28c000&lt;br/&gt;
&amp;nbsp;... etc.  ...&lt;br/&gt;
&lt;br/&gt;
This leads to TestDwarf scanning the register info lines as part of the native stack trace.&lt;br/&gt;
And in our case (with slightly adjusted register output) it even runs into this error :&lt;br/&gt;
java.lang.RuntimeException: Must find library name in &amp;quot;CSGSFS=0x002b000000000033&amp;quot;: expected true, was false&lt;br/&gt;
	at jdk.test.lib.Asserts.fail(Asserts.java:691)&lt;br/&gt;
	at jdk.test.lib.Asserts.assertTrue(Asserts.java:543)&lt;br/&gt;
	at TestDwarf.checkMissingElement(TestDwarf.java:186)&lt;br/&gt;
	at TestDwarf.runAndCheck(TestDwarf.java:158)&lt;br/&gt;
	at TestDwarf.test(TestDwarf.java:101)&lt;br/&gt;
	at TestDwarf.main(TestDwarf.java:91)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1447)&lt;br/&gt;
&lt;br/&gt;
Because TestDwarf  assumes CSGSFS  starts with &amp;#39;C&amp;#39; and so it is a stack frame.&lt;br/&gt;
Probably the easiest way to fix this is to always print a blank line before the  &amp;#39;Registers:&amp;#39; line so that TestDwarf  does not scan the registers (looks better imho anyways in the hserr output) .  Should I open a new issue (or add this to the register printing adjustment (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8346661&quot; title=&quot;Add a register print helper method and unify register printing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8346661&quot;&gt;&lt;strike&gt;JDK-8346661&lt;/strike&gt;&lt;/a&gt;).</comment>
                            <comment id="14641150" author="roboduke" created="Wed, 17 Jan 2024 05:55:13 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/185&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/185&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-17 13:49:00 +0000</comment>
                            <comment id="14641144" author="goetz" created="Wed, 17 Jan 2024 05:40:59 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.3-oracle.&lt;br/&gt;
No risk, only a test change.  Don&amp;#39;t need the related issue, that just motivated the test improvement.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed.</comment>
                            <comment id="14613924" author="dukebot" created="Mon, 25 Sep 2023 16:43:36 -0700"  >Changeset: e2e8e8e2&lt;br/&gt;
Author:    David Holmes &amp;lt;&lt;a href=&apos;mailto:dholmes@openjdk.org&apos;&gt;dholmes@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-25 23:42:17 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e2e8e8e210ea9a7a9d901a1da729551714015d04&quot;&gt;https://git.openjdk.org/jdk/commit/e2e8e8e210ea9a7a9d901a1da729551714015d04&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14613439" author="roboduke" created="Sun, 24 Sep 2023 21:21:39 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15895&quot;&gt;https://git.openjdk.org/jdk/pull/15895&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-25 04:14:40 +0000</comment>
                            <comment id="14613436" author="dholmes" created="Sun, 24 Sep 2023 21:06:47 -0700"  >The new error message (as test on linux-x86 in GHA) is:&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: Could not find decoded method signature in &amp;quot;V  [libjvm.so+0x8f3651]  (debug.cpp:271)&amp;quot;&lt;br/&gt;
	at jdk.test.lib.Asserts.fail(Asserts.java:594)&lt;br/&gt;
	at TestDwarf.checkMissingElement(TestDwarf.java:211)&lt;br/&gt;
	at TestDwarf.runAndCheck(TestDwarf.java:169)&lt;br/&gt;
	at TestDwarf.test(TestDwarf.java:114)&lt;br/&gt;
	at TestDwarf.main(TestDwarf.java:101)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5119159">JDK-8323953</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5119361">JDK-8324139</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5097790">JDK-8305489</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32ba3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>