<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:53:06 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8282664] Unroll by hand StringUTF16 and StringLatin1 polynomial hash loops</title>
                <link>https://bugs.openjdk.org/browse/JDK-8282664</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Despite the hash value being cached for Strings, computing the hash still represents a significant CPU usage for applications handling lots of text.&lt;br/&gt;
&lt;br/&gt;
Even though it would be generally better to do it through an enhancement to the autovectorizer, the complexity of doing it by hand is trivial and the gain is sizable (2x speedup) even without the Vector API. The algorithm has been proposed by Richard Startin and Paul Sandoz [1].&lt;br/&gt;
&lt;br/&gt;
Speedup are as follows on a Intel(R) Xeon(R) E-2276G CPU @ 3.80GHz&lt;br/&gt;
&lt;br/&gt;
Benchmark                                        (size)  Mode  Cnt     Score    Error  Units&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1                 0  avgt   25     2.111 &amp;#xB1;  0.210  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1                 1  avgt   25     3.500 &amp;#xB1;  0.127  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1                10  avgt   25     7.001 &amp;#xB1;  0.099  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1               100  avgt   25    61.285 &amp;#xB1;  0.444  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1              1000  avgt   25   628.995 &amp;#xB1;  0.846  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1             10000  avgt   25  6307.990 &amp;#xB1;  4.071  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled16       0  avgt   25     2.358 &amp;#xB1;  0.092  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled16       1  avgt   25     3.631 &amp;#xB1;  0.159  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled16      10  avgt   25     7.049 &amp;#xB1;  0.019  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled16     100  avgt   25    33.626 &amp;#xB1;  1.218  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled16    1000  avgt   25   317.811 &amp;#xB1;  1.225  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled16   10000  avgt   25  3212.333 &amp;#xB1; 14.621  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled8        0  avgt   25     2.356 &amp;#xB1;  0.097  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled8        1  avgt   25     3.630 &amp;#xB1;  0.158  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled8       10  avgt   25     8.724 &amp;#xB1;  0.065  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled8      100  avgt   25    32.402 &amp;#xB1;  0.019  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled8     1000  avgt   25   321.949 &amp;#xB1;  0.251  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarLatin1Unrolled8    10000  avgt   25  3202.083 &amp;#xB1;  1.667  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16                  0  avgt   25     2.135 &amp;#xB1;  0.191  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16                  1  avgt   25     5.202 &amp;#xB1;  0.362  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16                 10  avgt   25    11.105 &amp;#xB1;  0.112  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16                100  avgt   25    75.974 &amp;#xB1;  0.702  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16               1000  avgt   25   716.429 &amp;#xB1;  3.290  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16              10000  avgt   25  7095.459 &amp;#xB1; 43.847  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled16        0  avgt   25     2.381 &amp;#xB1;  0.038  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled16        1  avgt   25     5.268 &amp;#xB1;  0.422  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled16       10  avgt   25    11.248 &amp;#xB1;  0.178  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled16      100  avgt   25    52.966 &amp;#xB1;  0.089  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled16     1000  avgt   25   450.912 &amp;#xB1;  1.834  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled16    10000  avgt   25  4403.988 &amp;#xB1;  2.927  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled8         0  avgt   25     2.401 &amp;#xB1;  0.032  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled8         1  avgt   25     5.091 &amp;#xB1;  0.396  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled8        10  avgt   25    12.801 &amp;#xB1;  0.189  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled8       100  avgt   25    52.068 &amp;#xB1;  0.032  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled8      1000  avgt   25   453.270 &amp;#xB1;  0.340  ns/op&lt;br/&gt;
StringHashCode.Algorithm.scalarUTF16Unrolled8     10000  avgt   25  4433.112 &amp;#xB1;  2.699  ns/op&lt;br/&gt;
&lt;br/&gt;
At Datadog, we handle a great amount of text (through logs management for example), and hashing String represents a large part of our CPU usage. It&amp;#39;s very unlikely that we are the only one as String.hashCode is such a core feature of the JVM-based languages with its use in HashMap for example. Having even only a 2x speedup would allow us to save thousands of CPU cores per month and improve correspondingly the energy/carbon impact.&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://static.rainfocus.com/oracle/oow18/sess/1525822677955001tLqU/PF/codeone18-vector-API-DEV5081_1540354883936001Q3Sv.pdf&quot;&gt;https://static.rainfocus.com/oracle/oow18/sess/1525822677955001tLqU/PF/codeone18-vector-API-DEV5081_1540354883936001Q3Sv.pdf&lt;/a&gt;</description>
                <environment></environment>
        <key id="5069674">JDK-8282664</key>
            <summary>Unroll by hand StringUTF16 and StringLatin1 polynomial hash loops</summary>
                <type id="5" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14716&amp;avatarType=issuetype">Sub-task</type>
                            <parent id="4747774">JDK-8059113</parent>
                                    <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luhenry">Ludovic Henry</assignee>
                                    <reporter username="luhenry">Ludovic Henry</reporter>
                        <labels>
                            <label>amazon-interest</label>
                    </labels>
                <created>Fri, 4 Mar 2022 07:52:35 -0800</created>
                <updated>Wed, 27 Nov 2024 03:45:30 -0800</updated>
                            <resolved>Tue, 17 Jan 2023 13:09:48 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14551890" author="dukebot" created="Tue, 17 Jan 2023 13:09:47 -0800"  >Changeset: e37078f5&lt;br/&gt;
Author:    Claes Redestad &amp;lt;&lt;a href=&apos;mailto:redestad@openjdk.org&apos;&gt;redestad@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-17 21:06:22 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e37078f5bb626c7ce0348a38bb86ca2ca62ba915&quot;&gt;https://git.openjdk.org/jdk/commit/e37078f5bb626c7ce0348a38bb86ca2ca62ba915&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14533176" author="roboduke" created="Fri, 28 Oct 2022 13:48:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/10847&quot;&gt;https://git.openjdk.org/jdk/pull/10847&lt;/a&gt;&lt;br/&gt;
Date: 2022-10-25 10:37:40 +0000</comment>
                            <comment id="14515705" author="roboduke" created="Thu, 4 Aug 2022 00:59:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/7700&quot;&gt;https://git.openjdk.org/jdk/pull/7700&lt;/a&gt;&lt;br/&gt;
Date: 2022-03-04 15:54:14 +0000</comment>
                            <comment id="14480694" author="roboduke" created="Fri, 4 Mar 2022 08:23:37 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.java.net/jdk/pull/7700&quot;&gt;https://git.openjdk.java.net/jdk/pull/7700&lt;/a&gt;&lt;br/&gt;
Date: 2022-03-04 15:54:14 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5117833">JDK-8322770</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5104300">JDK-8311023</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5092471">JDK-8301093</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5091723">JDK-8300448</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5144945">JDK-8345107</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116050">JDK-8321279</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2w8gr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="190"><![CDATA[java.lang]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>