<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:49:24 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8301553] Support Password-Based Cryptography in SunPKCS11</title>
                <link>https://bugs.openjdk.org/browse/JDK-8301553</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The goal of this enhancement is to support an initial set of Password-Based Cryptography algorithms in the SunPKCS11 security provider. These algorithms provide derivation of a binary key for encryption -referred as Password-Based Encryption (PBE)-, integrity or authentication out of a password, by means of a chosen key derivation function that also takes a salt and an iteration count as input. The SunJCE security provider supports a set of PBE algorithms already (see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-6383200&quot; title=&quot;PBE: need new algorithm support in password based encryption&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-6383200&quot;&gt;&lt;strike&gt;JDK-6383200&lt;/strike&gt;&lt;/a&gt; [1] and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8046111&quot; title=&quot;JEP 121: Stronger Algorithms for Password-Based Encryption&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8046111&quot;&gt;&lt;strike&gt;JDK-8046111&lt;/strike&gt;&lt;/a&gt; [2] for example). For better interoperability with SunJCE, we require alignment in terms of algorithm names. As a result of this enhancement, SunPKCS11 will support underlying primitives for PKCS #12 key stores with privacy and integrity checks. We will verify this capability with the SUN security provider implementation.&lt;br/&gt;
&lt;br/&gt;
For reference, the PKCS #11 standard v2.40 defines PBE mechanisms in its section &amp;quot;2.26 PKCS #5 and PKCS #5-style password-based encryption (PBE)&amp;quot; [3]. The PKCS #11 standard v3.0 defines PBE mechanisms in its section &amp;quot;2.37 PKCS #5 and PKCS #5-style password-based encryption (PBE)&amp;quot; [4]. The implementation must support both revisions of the standard. While there is high degree of compatibility between them, it might be necessary to implement different behavior based on the token&amp;#39;s supported standard in some places. The PBE algorithms themselves are defined in 1) section &amp;quot;Appendix B.  Deriving Keys and IVs from Passwords and Salt&amp;quot; of the &amp;quot;PKCS #12: Personal Information Exchange Syntax v1.1&amp;quot; RFC 7292 [5], and  in 2) &amp;quot;PKCS #5: Password-Based Cryptography Specification Version 2.1&amp;quot; RFC 8018 [6].&lt;br/&gt;
&lt;br/&gt;
The following PBE algorithms are under scope (grouped per service):&lt;br/&gt;
&lt;br/&gt;
Cipher&lt;br/&gt;
========================&lt;br/&gt;
&lt;br/&gt;
PBES2 (using PBKD2 underneath) &lt;br/&gt;
----------------------------------------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA1AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA224AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA256AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA384AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA512AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA1AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA224AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA256AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA384AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA512AndAES_256&lt;br/&gt;
&lt;br/&gt;
Mac&lt;br/&gt;
========================&lt;br/&gt;
&lt;br/&gt;
PKCS #12 General Method for Password Integrity&lt;br/&gt;
--------------------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* HmacPBESHA1&lt;br/&gt;
&amp;nbsp;* HmacPBESHA224 (*)&lt;br/&gt;
&amp;nbsp;* HmacPBESHA256 (*)&lt;br/&gt;
&amp;nbsp;* HmacPBESHA384 (*)&lt;br/&gt;
&amp;nbsp;* HmacPBESHA512 (*)&lt;br/&gt;
&lt;br/&gt;
SecretKeyFactory&lt;br/&gt;
========================&lt;br/&gt;
&lt;br/&gt;
PBES2 (using PBKD2 underneath) &lt;br/&gt;
----------------------------------------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA1AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA224AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA256AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA384AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA512AndAES_128&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA1AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA224AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA256AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA384AndAES_256&lt;br/&gt;
&amp;nbsp;* PBEWithHmacSHA512AndAES_256&lt;br/&gt;
&lt;br/&gt;
PBKD2&lt;br/&gt;
------------------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* PBKDF2WithHmacSHA1&lt;br/&gt;
&amp;nbsp;* PBKDF2WithHmacSHA224&lt;br/&gt;
&amp;nbsp;* PBKDF2WithHmacSHA256&lt;br/&gt;
&amp;nbsp;* PBKDF2WithHmacSHA384&lt;br/&gt;
&amp;nbsp;* PBKDF2WithHmacSHA512&lt;br/&gt;
&lt;br/&gt;
PKCS #12 General Method for Password Integrity&lt;br/&gt;
--------------------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* HmacPBESHA1&lt;br/&gt;
&amp;nbsp;* HmacPBESHA224 (*)&lt;br/&gt;
&amp;nbsp;* HmacPBESHA256 (*)&lt;br/&gt;
&amp;nbsp;* HmacPBESHA384 (*)&lt;br/&gt;
&amp;nbsp;* HmacPBESHA512 (*)&lt;br/&gt;
&lt;br/&gt;
(*) Note: neither the current PKCS #11 standard (v3.0) nor the previous one (v2.40) define mechanisms for these algorithms. Until a future revision of the standard introduces these mechanisms, NSS vendor-specific constants will be used. Thus, non-NSS tokens will probably not support these algorithms.&lt;br/&gt;
&lt;br/&gt;
PBES1 and PBMAC1 algorithms (defined by RFC 8018), as well as PKCS #12 General Method for Password Privacy, are out of the scope of this enhancement. While we have prioritized newer algorithms or algorithms needed for PKCS #12 key stores at this time, extensions can be considered in the future and should not have a significant impact on the overall design.&lt;br/&gt;
&lt;br/&gt;
Interoperability&lt;br/&gt;
&lt;br/&gt;
The following interoperability goals are defined:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* For SecretKeyFactory, Cipher and Mac services of PBE algorithms, SunPKCS11 must accept keys implementing the javax.crypto.interfaces.PBEKey interface. These keys contain all the information required for derivation. Also, in the interest of better interoperability with SunJCE, SecretKey keys whose algorithm name is &amp;quot;PBE&amp;quot; are also accepted for Cipher and Mac services. Notice that in the latter case, parameters with information for derivation must be passed as java.security.AlgorithmParameters or javax.crypto.spec.PBEParameterSpec instances because these keys contain a password only.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* PBE keys derived with SecretKeyFactory services must be usable in their corresponding PBE and non-PBE Cipher and Mac services. As an example, a PBE key derived with a SecretKeyFactory of the PBEWithHmacSHA1AndAES_256 algorithm must be usable in: 1) a Cipher of the PBEWithHmacSHA1AndAES_256 algorithm and 2) a Cipher of the AES algorithm. Notice that if the implementation of the Cipher algorithm comes from a non-SunPKCS11 provider, the key will be converted first.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* SunJCE and SunPKCS11 PBE keys must derive to the same value (given the same set of inputs) and be interoperable in the sense that 1) what is encrypted with one provider, must be decrypted with the other, and 2) a Mac calculated with one provider, must be verified with the other. The same holds true when comparing SunPKCS11 PBE results with external (non-OpenJDK) implementations.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* The SUN PKCS #12 implementation must be able to use SunPKCS11 for underlying PBE primitives to read and write key stores generated by other security providers or external libraries, in the same way that it does with SunJCE.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* SecretKeyFactory for PBKD2 algorithms in SunPKCS11 accepts unicode passwords and salts, in the same way than SunJCE. These passwords will be internally encoded as UTF-8, as required per the PKCS #5 v2.1 standard. SecretKeyFactory for PKCS #12 General Method in SunPKCS11 accepts unicode for passwords and salts, contrary to SunJCE where passwords must be ASCII. These passwords will be internally encoded as BMPString, as required per the PKCS #12 v1.1 standard.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* Cipher and Mac services are subject to the same password encoding constraints than SunJCE, which allows ASCII only at the moment when the key is derived by these services. It&amp;#39;s not in the scope of this enhancement to analyze the impact of lifting this contraint and allowing all unicode passwords for both security providers. Notice that in the SunPKCS11 case, it&amp;#39;s possible to derive a unicode key with SecretKeyFactory and pass it to a Cipher or Mac service.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;* To keep compatibility with SunJCE in the Cipher service case, a non-P11 key implementing the javax.crypto.interfaces.PBEKey interface must return the password in its &amp;quot;getEncoded&amp;quot; method. It&amp;#39;s not in the scope of this enhancement to consider a behavior change for both security providers.&lt;br/&gt;
&lt;br/&gt;
By following the previous list of interoperatibility requirements, we aim to have an implementation that works well with SunJCE-based code and allows the transition between security providers to be smooth.&lt;br/&gt;
&lt;br/&gt;
--&lt;br/&gt;
[1] - &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-6383200&quot;&gt;https://bugs.openjdk.org/browse/JDK-6383200&lt;/a&gt;&lt;br/&gt;
[2] - &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8046111&quot;&gt;https://bugs.openjdk.org/browse/JDK-8046111&lt;/a&gt;&lt;br/&gt;
[3] - &lt;a href=&quot;https://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/errata01/os/pkcs11-curr-v2.40-errata01-os-complete.html#_Toc441850587&quot;&gt;https://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/errata01/os/pkcs11-curr-v2.40-errata01-os-complete.html#_Toc441850587&lt;/a&gt;&lt;br/&gt;
[4] - &lt;a href=&quot;https://docs.oasis-open.org/pkcs11/pkcs11-curr/v3.0/os/pkcs11-curr-v3.0-os.html#_Toc30061409&quot;&gt;https://docs.oasis-open.org/pkcs11/pkcs11-curr/v3.0/os/pkcs11-curr-v3.0-os.html#_Toc30061409&lt;/a&gt;&lt;br/&gt;
[5] - &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7292#appendix-B&quot;&gt;https://datatracker.ietf.org/doc/html/rfc7292#appendix-B&lt;/a&gt;&lt;br/&gt;
[6] - &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8018&quot;&gt;https://datatracker.ietf.org/doc/html/rfc8018&lt;/a&gt;</description>
                <environment></environment>
        <key id="5093028">JDK-8301553</key>
            <summary>Support Password-Based Cryptography in SunPKCS11</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbalao">Martin Balao Alonso</assignee>
                                    <reporter username="mbalao">Martin Balao Alonso</reporter>
                        <labels>
                            <label>release-note=yes</label>
                    </labels>
                <created>Tue, 31 Jan 2023 07:31:50 -0800</created>
                <updated>Thu, 30 Jan 2025 12:46:02 -0800</updated>
                            <resolved>Tue, 6 Jun 2023 12:42:44 -0700</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                                                            <comments>
                            <comment id="14587454" author="dukebot" created="Tue, 6 Jun 2023 12:42:42 -0700"  >Changeset: 4a75fd46&lt;br/&gt;
Author:    Martin Balao &amp;lt;&lt;a href=&apos;mailto:mbalao@openjdk.org&apos;&gt;mbalao@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-06 19:39:34 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4a75fd462c002a209201d8bfc8d6c9eb286a7444&quot;&gt;https://git.openjdk.org/jdk/commit/4a75fd462c002a209201d8bfc8d6c9eb286a7444&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14557056" author="roboduke" created="Thu, 2 Feb 2023 17:46:53 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12396&quot;&gt;https://git.openjdk.org/jdk/pull/12396&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-03 01:41:41 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5101644">JDK-8308719</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10600">
                    <name>Causes</name>
                                            <outwardlinks description="causes">
                                        <issuelink>
            <issuekey id="5149216">JDK-8348732</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5132955">JDK-8335288</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5105276">JDK-8311902</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5102634">JDK-8309569</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5102132">JDK-8309132</subtask>
                                                              <subtask id="5102751">JDK-8309668</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i306tf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="249"><![CDATA[javax.crypto:pkcs11]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>