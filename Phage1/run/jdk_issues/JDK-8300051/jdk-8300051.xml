<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:48:15 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8300051] assert(JvmtiEnvBase::environments_might_exist()) failed: to enter event controller, JVM TI environments must exist</title>
                <link>https://bugs.openjdk.org/browse/JDK-8300051</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I&amp;#39;m get this assert if I press Ctrl+C while running Skynet with -XX:StartFlightRecording=dumponexit=true.&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
#  assert(JvmtiEnvBase::environments_might_exist()) failed: to enter event controller, JVM TI environments must exist&lt;br/&gt;
...&lt;br/&gt;
V  [libjvm.dylib+0x565d88]  report_vm_error(char const*, int, char const*, char const*, ...)+0x80&lt;br/&gt;
V  [libjvm.dylib+0xb20268]  JvmtiEventControllerPrivate::thread_started(JavaThread*)+0xd4&lt;br/&gt;
V  [libjvm.dylib+0x9ccc10]  JVM_VirtualThreadMountEnd+0x1c8&lt;br/&gt;
J 1384  java.lang.VirtualThread.notifyJvmtiMountEnd(Z)V &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (0 bytes) &lt;br/&gt;
J 1484 c2 jdk.internal.vm.Continuation.enter(Ljdk/internal/vm/Continuation;Z)V &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (19 bytes)&lt;br/&gt;
J 1234  jdk.internal.vm.Continuation.enterSpecial(Ljdk/internal/vm/Continuation;ZZ)V &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (0 bytes)&lt;br/&gt;
J 1523 c2 jdk.internal.vm.Continuation.run()V &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (586 bytes)&lt;br/&gt;
J 1476 c2 java.util.concurrent.ForkJoinTask.doExec()I &lt;a href=&apos;mailto:java.base@21-internal&apos;&gt;java.base@21-internal&lt;/a&gt; (37 bytes)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
I get this assert once every five to ten times I try this.</description>
                <environment></environment>
        <key id="5091285">JDK-8300051</key>
            <summary>assert(JvmtiEnvBase::environments_might_exist()) failed: to enter event controller, JVM TI environments must exist</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sspitsyn">Serguei Spitsyn</assignee>
                                    <reporter username="stefank">Stefan Karlsson</reporter>
                        <labels>
                            <label>hgupdate-sync</label>
                            <label>intermittent</label>
                            <label>jdk21-fix-request</label>
                            <label>jdk21-fix-yes</label>
                            <label>loom</label>
                            <label>tier1</label>
                            <label>tier3</label>
                            <label>tier5</label>
                    </labels>
                <created>Thu, 12 Jan 2023 06:50:17 -0800</created>
                <updated>Wed, 3 Jan 2024 16:42:26 -0800</updated>
                            <resolved>Thu, 20 Jul 2023 15:41:56 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                                                            <comments>
                            <comment id="14598644" author="sspitsyn" created="Tue, 25 Jul 2023 01:40:55 -0700"  >Alan, thank you for a backport approval!</comment>
                            <comment id="14597986" author="roboduke" created="Fri, 21 Jul 2023 15:38:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21/pull/143&quot;&gt;https://git.openjdk.org/jdk21/pull/143&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-21 22:32:29 +0000</comment>
                            <comment id="14597719" author="sspitsyn" created="Thu, 20 Jul 2023 17:04:11 -0700"  >Fix Request&lt;br/&gt;
This fix is important to support virtual threads for agents loaded into running VM.</comment>
                            <comment id="14597711" author="dukebot" created="Thu, 20 Jul 2023 15:41:55 -0700"  >Changeset: 783de32b&lt;br/&gt;
Author:    Serguei Spitsyn &amp;lt;&lt;a href=&apos;mailto:sspitsyn@openjdk.org&apos;&gt;sspitsyn@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-07-20 22:40:18 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/783de32b6af4383b5ba71b91c307a5dddd0dae13&quot;&gt;https://git.openjdk.org/jdk/commit/783de32b6af4383b5ba71b91c307a5dddd0dae13&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14597514" author="mbaesken" created="Thu, 20 Jul 2023 00:12:16 -0700"  >&amp;gt; Is it reproduced only when run together with other tests?&lt;br/&gt;
&lt;br/&gt;
Hi [~sspitsyn] , we run these tests with concurrency 15 or 20 (conc parameter of jtreg) and in agent mode (avm). This might be important to reproduce the issue. But great that you found a way too to reproduce it.</comment>
                            <comment id="14597509" author="roboduke" created="Wed, 19 Jul 2023 23:58:42 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14945&quot;&gt;https://git.openjdk.org/jdk/pull/14945&lt;/a&gt;&lt;br/&gt;
Date: 2023-07-20 06:53:26 +0000</comment>
                            <comment id="14597468" author="sspitsyn" created="Wed, 19 Jul 2023 20:23:51 -0700"  >Refactored test a little bit, added some TMP sleeps to implementation and was able to reproduce the issue on all platforms with a probability ~100%.</comment>
                            <comment id="14597454" author="sspitsyn" created="Wed, 19 Jul 2023 17:21:00 -0700"  >[~mbaesken] I ran this test hundreds of times on mach5 for Windows in fastdebug mode.&lt;br/&gt;
No luck so far. And it looks very strange.&lt;br/&gt;
Is it reproduced only when run together with other tests?</comment>
                            <comment id="14597204" author="mbaesken" created="Wed, 19 Jul 2023 01:15:58 -0700"  >[~sspitsyn]  The  test  serviceability/jvmti/vthread/VThreadTLSTest/VThreadTLSTest.java#id1  showed the issue very well on Windows in our nightly tests, so reproducing the issue should not be very hard. This was in the fastdebug tests , but not sure if it&amp;#39;s important that it is fastdebug.&lt;br/&gt;
So if you have a patch we could check it with our nightly tests (please remove the problemlisting with your patch too so that we really see anything).</comment>
                            <comment id="14596815" author="sspitsyn" created="Tue, 18 Jul 2023 01:24:01 -0700"  >In general, the root cause seemed to be understandable.&lt;br/&gt;
Unfortunately, I can&amp;#39;t reproduce this issue. I&amp;#39;m lost in guesses how to do it.&lt;br/&gt;
It is important to reproduce the problem to prove that my update will fix it.&lt;br/&gt;
I can try the Stefan&amp;#39;s approach though.</comment>
                            <comment id="14596657" author="sspitsyn" created="Mon, 17 Jul 2023 10:16:48 -0700"  >[~dholmes] Thanks, David. Will do.</comment>
                            <comment id="14596354" author="dholmes" created="Fri, 14 Jul 2023 14:14:50 -0700"  >&amp;gt; serviceability/jvmti/vthread/VThreadTLSTest/VThreadTLSTest.java#id1&lt;br/&gt;
&lt;br/&gt;
[~mbaesken] Yes sorry I should have listed that earlier. This test is failing on Windows x64 in most of our tier1, tier3 and some tier5 test runs.&lt;br/&gt;
&lt;br/&gt;
[~sspitsyn] if no fix is imminent can we get this ProblemListed please (quickly before Dan gets back :) ).</comment>
                            <comment id="14596223" author="mbaesken" created="Thu, 13 Jul 2023 23:52:46 -0700"  >&lt;br/&gt;
We noticed the assertion on Windows x86_64,  in the test  :&lt;br/&gt;
&lt;br/&gt;
serviceability/jvmti/vthread/VThreadTLSTest/VThreadTLSTest.java#id1&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (d:\jdk-dev\src\hotspot\share\prims\jvmtiEventController.cpp:736), pid=479212, tid=503772&lt;br/&gt;
#  assert(JvmtiEnvBase::environments_might_exist()) failed: to enter event controller, JVM TI environments must exist&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (22.0) (fastdebug build 22-internal-adhoc.GLOBALopenjdk.jdk-dev)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 22-internal-adhoc.GLOBALopenjdk.jdk-dev, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)&lt;br/&gt;
&amp;nbsp;.......&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000020e1425fef0):  JavaThread &amp;quot;ForkJoinPool-1-worker-16&amp;quot; daemon [_thread_in_vm, id=503772, stack(0x000000dce0700000,0x000000dce0800000) (1024K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000dce0700000,0x000000dce0800000]&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0xc59841]  os::win32::platform_print_native_stack+0x101  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0xfa31a0]  VMError::report+0x1460  (vmError.cpp:993)&lt;br/&gt;
V  [jvm.dll+0xfa5575]  VMError::report_and_die+0x645  (vmError.cpp:1799)&lt;br/&gt;
V  [jvm.dll+0xfa5c84]  VMError::report_and_die+0x64  (vmError.cpp:1564)&lt;br/&gt;
V  [jvm.dll+0x5429db]  report_vm_error+0x5b  (debug.cpp:191)&lt;br/&gt;
V  [jvm.dll+0xa1f124]  JvmtiEventControllerPrivate::thread_started+0x274  (jvmtiEventController.cpp:736)&lt;br/&gt;
V  [jvm.dll+0xa53799]  JvmtiVTMSTransitionDisabler::VTMS_vthread_start+0x59  (jvmtiThreadState.cpp:530)&lt;br/&gt;
V  [jvm.dll+0x8f4013]  JVM_VirtualThreadStart+0x173  (jvm.cpp:3919)&lt;br/&gt;
C  0x0000020e0745e9af  (no source info available)&lt;br/&gt;
&lt;br/&gt;
The last pc belongs to native method entry point (kind = native) (printed below).&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  java.lang.VirtualThread.notifyJvmtiStart()V+0 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.run(Ljava/lang/Runnable;)V+27 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$VThreadContinuation$1.run()V+8 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.enter0()V+4 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.enter(Ljdk/internal/vm/Continuation;Z)V+1 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
J 204  jdk.internal.vm.Continuation.enterSpecial(Ljdk/internal/vm/Continuation;ZZ)V &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt; (0 bytes) @ 0x0000020e07baf8e4 [0x0000020e07baf760+0x0000000000000184]&lt;br/&gt;
j  jdk.internal.vm.Continuation.run()V+122 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+71 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda+0x000000080104e4b8.run()V+4 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec()Z+4 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinTask.doExec()I+10 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+19 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;II)I+211 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+35 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ForkJoinWorkerThread.run()V+31 &lt;a href=&apos;mailto:java.base@22-internal&apos;&gt;java.base@22-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x0000020e0745107d</comment>
                            <comment id="14596075" author="sspitsyn" created="Thu, 13 Jul 2023 08:27:49 -0700"  >It looks like the newly added test is able reproduce the existing bug.&lt;br/&gt;
Interesting that I did not see it in my mach5 testing for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8311556&quot; title=&quot;GetThreadLocalStorage not working for vthreads mounted during JVMTI attach&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8311556&quot;&gt;&lt;strike&gt;JDK-8311556&lt;/strike&gt;&lt;/a&gt; even though this test was run hundreds of times. Probably, I need to use some specific options to reproduce the issue.</comment>
                            <comment id="14596034" author="dholmes" created="Thu, 13 Jul 2023 04:42:25 -0700"  >This test has now failed three times in a few hours! I have to suspect that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8311556&quot; title=&quot;GetThreadLocalStorage not working for vthreads mounted during JVMTI attach&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8311556&quot;&gt;&lt;strike&gt;JDK-8311556&lt;/strike&gt;&lt;/a&gt; may be to blame!&lt;br/&gt;
&lt;br/&gt;
Edit: Just realized this is a new test added by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8311556&quot; title=&quot;GetThreadLocalStorage not working for vthreads mounted during JVMTI attach&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8311556&quot;&gt;&lt;strike&gt;JDK-8311556&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14551148" author="sspitsyn" created="Fri, 13 Jan 2023 17:31:29 -0800"  >Need to fix this in 21.</comment>
                            <comment id="14550737" author="stefank" created="Thu, 12 Jan 2023 06:57:56 -0800"  >I&amp;#39;ve only tried this with JDK 21. Could be a problem in JDK 20.</comment>
                            <comment id="14550729" author="stefank" created="Thu, 12 Jan 2023 06:51:29 -0800"  >I originally triggered this while running with -XX:+UseZGC, but I&amp;#39;ve also managed to reproduce this with -XX:+UseG1GC.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5106126">JDK-8312627</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5106465">JDK-8312959</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5105629">JDK-8312189</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zw23:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17337"><![CDATA[b08]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>