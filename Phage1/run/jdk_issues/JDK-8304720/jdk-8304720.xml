<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:54:34 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8304720] SuperWord::schedule should rebuild C2-graph from SuperWord dependency-graph</title>
                <link>https://bugs.openjdk.org/browse/JDK-8304720</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>During work of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8304042&quot; title=&quot;C2 SuperWord: schedule must remove packs with cyclic dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8304042&quot;&gt;&lt;strike&gt;JDK-8304042&lt;/strike&gt;&lt;/a&gt; (and ultimately of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8298935&quot; title=&quot;fix independence bug in create_pack logic in SuperWord::find_adjacent_refs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8298935&quot;&gt;&lt;strike&gt;JDK-8298935&lt;/strike&gt;&lt;/a&gt;), I found an example where we have no cyclic dependency, but the C2 graph after SuperWord is not correct. It leads to WRONG RESULTS.&lt;br/&gt;
&lt;br/&gt;
The issue is that we do not re-order the graph for non-vectorized memory operations. But the vectorization of some memory operations may lead to a reordering of memory ops, not just for the vectorized ones but also the unvectorized ones.&lt;br/&gt;
&lt;br/&gt;
In SuperWord::co_locate_pack we have some complicated logic for Stores, where we try to find out what needs to be scheduled before (and presumably after). But we have nothing equivalent for Load.&lt;br/&gt;
&lt;br/&gt;
We could try to implement something equivalent to the logic for Stores. But I am not convinced that this works, because we might have to also re-order stores that are not packed.&lt;br/&gt;
&lt;br/&gt;
My suggestion:&lt;br/&gt;
We schedule all packs and left over scalars into a linear order (I already do that in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8304042&quot; title=&quot;C2 SuperWord: schedule must remove packs with cyclic dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8304042&quot;&gt;&lt;strike&gt;JDK-8304042&lt;/strike&gt;&lt;/a&gt;). From that order, we can re-construct all memory-state edges in the C2 memory slices.&lt;br/&gt;
&lt;br/&gt;
Reproduce like this:&lt;br/&gt;
&lt;br/&gt;
./java -XX:-TieredCompilation -Xbatch -XX:CompileCommand=compileonly,Test4::test -XX:CompileCommand=printcompilation,Test4::* -XX:LoopUnrollLimit=250 -XX:+TraceSuperWord  Test4.java&lt;br/&gt;
&lt;br/&gt;
./java -XX:-TieredCompilation -Xbatch --add-modules java.base --add-exports java.base/jdk.internal.misc=ALL-UNNAMED -XX:CompileCommand=compileonly,Test5::test -XX:CompileCommand=printcompilation,Test5::* -XX:LoopUnrollLimit=250 -XX:+TraceSuperWord -XX:LoopMaxUnroll=5 Test5.java&lt;br/&gt;
&lt;br/&gt;
I will describe Test4.java. Test5.java is very similar, just uses Unsafe so that it reproduces before we implemented conversions in SuperWord.&lt;br/&gt;
&lt;br/&gt;
We have:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; RANGE; i+=2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 0] = dataIa[i + 0] * 1.3f;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 0] = (int)dataFb[i + 0] * 11;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 1] = (int)dataFb[i + 1] * 11;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 1] = dataIa[i + 1] * 1.2f;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
This gets unrolled, for simplicity let&amp;#39;s say only 2x.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; RANGE; i+=4) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 0] = dataIa[i + 0] * 1.3f;          -&amp;gt; scalar, before&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 0] = (int)dataFb[i + 0] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 1] = (int)dataFb[i + 1] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 1] = dataIa[i + 1] * 1.2f;          -&amp;gt; scalar, after&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 2] = dataIa[i + 2] * 1.3f;          -&amp;gt; scalar, before&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 2] = (int)dataFb[i + 2] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 3] = (int)dataFb[i + 3] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 3] = dataIa[i + 3] * 1.2f;          -&amp;gt; scalar, after&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
We can only vectorize half of the statements, the other half does not work because the constants are not matching.&lt;br/&gt;
&lt;br/&gt;
To enable this vectorization, the statements have to be re-ordered.&lt;br/&gt;
We have to pay attention to the Store-Load dependencies.&lt;br/&gt;
For (i+0) and (i+2), we have a StoreF-LoadF dependency (&amp;quot;before&amp;quot;), for (i+1) and (i+3) we have a StoreI-LoadI dependency (&amp;quot;after&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; RANGE; i+=4) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 0] = dataIa[i + 0] * 1.3f;          -&amp;gt; scalar, before&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 2] = dataIa[i + 2] * 1.3f;          -&amp;gt; scalar, before&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 0] = (int)dataFb[i + 0] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 1] = (int)dataFb[i + 1] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 2] = (int)dataFb[i + 2] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataIb[i + 3] = (int)dataFb[i + 3] * 11;         -&amp;gt; vectorize&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 1] = dataIa[i + 1] * 1.2f;          -&amp;gt; scalar, after&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dataFa[i + 3] = dataIa[i + 3] * 1.2f;          -&amp;gt; scalar, after&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
We see that we had to re-order the memory ops. For example we had to swap the order of the StoreF for (i+1) and (i+2). This must be reflected in the C2 graph. Some of the scalar memory ops must be moved before the vector load/stores, some must be pushed to later. This should be determined by the dependency-graph of SuperWord.&lt;br/&gt;
&lt;br/&gt;
I think my Test5.java fails for JDK17.&lt;br/&gt;
&lt;br/&gt;
Task:&lt;br/&gt;
Un-comment &amp;quot;test5&amp;quot; from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8304042&quot; title=&quot;C2 SuperWord: schedule must remove packs with cyclic dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8304042&quot;&gt;&lt;strike&gt;JDK-8304042&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
And lift the platform restrictions at the test definitions.</description>
                <environment></environment>
        <key id="5096884">JDK-8304720</key>
            <summary>SuperWord::schedule should rebuild C2-graph from SuperWord dependency-graph</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="epeter">Emanuel Peter</reporter>
                        <labels>
                            <label>c2</label>
                            <label>c2-superword</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Wed, 22 Mar 2023 07:36:23 -0700</created>
                <updated>Mon, 10 Jul 2023 00:53:34 -0700</updated>
                            <resolved>Sun, 7 May 2023 23:10:40 -0700</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14579639" author="dukebot" created="Sun, 7 May 2023 23:10:38 -0700"  >Changeset: ad0e5a99&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-08 06:09:10 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ad0e5a99ca1ad9dd04105f502985735a3536c3f4&quot;&gt;https://git.openjdk.org/jdk/commit/ad0e5a99ca1ad9dd04105f502985735a3536c3f4&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14576688" author="roboduke" created="Tue, 25 Apr 2023 08:08:16 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13354&quot;&gt;https://git.openjdk.org/jdk/pull/13354&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-05 14:55:55 +0000</comment>
                            <comment id="14568983" author="chagedorn" created="Thu, 23 Mar 2023 00:33:02 -0700"  >ILW = Wrong execution due to wrong scheduling in SuperWord, rare, disable compilation of affected method or use -XX:-UseSuperWord = HLM = P3 </comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5098743">JDK-8306302</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5098515">JDK-8306088</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5096046">JDK-8304042</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103086" name="Test4.java" size="1696" author="epeter" created="Wed, 22 Mar 2023 07:36:47 -0700"/>
                            <attachment id="103085" name="Test5.java" size="2145" author="epeter" created="Wed, 22 Mar 2023 07:36:44 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30ulv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>