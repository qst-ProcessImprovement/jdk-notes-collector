<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:00:20 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8300865] C2: product reduction in ProdRed_Double is not vectorized</title>
                <link>https://bugs.openjdk.org/browse/JDK-8300865</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In the runs of test compiler.loopopts.superword.ProdRed_Double with -XX:+SuperWordReductions and -XX:LoopMaxUnroll&amp;gt;=8 on x86_64, C2 is expected to vectorize the product reduction loop in prodReductionInit(), but it fails to do so for any run on an array of x86_64 CPUs with different vectorization capabilities.&lt;br/&gt;
&lt;br/&gt;
HOW TO REPRODUCE&lt;br/&gt;
&lt;br/&gt;
On a linux-x86_64-server-fastdebug build, run&lt;br/&gt;
&lt;br/&gt;
$ make run-test TEST=&amp;quot;compiler/loopopts/superword/ProdRed_Double.java&amp;quot; TEST_VM_OPTS=&amp;quot;-XX:CompileCommand=PrintAssembly,compiler.loopopts.superword.ProdRed_Double::prodReductionImplement&amp;quot;&lt;br/&gt;
$ grep vector_reduction_double build/linux-x86_64-server-fastdebug/test-support/jtreg_test_hotspot_jtreg_compiler_loopopts_superword_ProdRed_Double_java/compiler/loopopts/superword/ProdRed_Double.jtr&lt;br/&gt;
&lt;br/&gt;
We expect to find some matches of &amp;#39;vector_reduction_double&amp;#39;, but get none.&lt;br/&gt;
&lt;br/&gt;
INITIAL ANALYSIS&lt;br/&gt;
&lt;br/&gt;
SuperWord::construct_bb() relies on ReductionNode::implemented() to identify vectorizable reduction uses [1]. Among other arguments, ReductionNode::implemented() takes the minimum vector size for the reduction type (vlen), and fails trivially if it is less or equal than 1 [2]. This is always the case in the context of SuperWord::construct_bb(), since vlen is just set to the result of Matcher::min_vector_size(), which since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8265783&quot; title=&quot;Create a separate library for x86 Intel SVML assembly intrinsics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8265783&quot;&gt;&lt;strike&gt;JDK-8265783&lt;/strike&gt;&lt;/a&gt; always returns 1 for the &amp;#39;double&amp;#39; type [3]. Reverting the changes made by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8265783&quot; title=&quot;Create a separate library for x86 Intel SVML assembly intrinsics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8265783&quot;&gt;&lt;strike&gt;JDK-8265783&lt;/strike&gt;&lt;/a&gt; to Matcher::min_vector_size (in x86.ad) re-enables vectorization of ProdRed_Double.&lt;br/&gt;
&lt;br/&gt;
Thanks to Daniel Skantz for pointing out the issue, found while working on &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8294715&quot; title=&quot;Add IR checks to the reduction vectorization tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8294715&quot;&gt;&lt;strike&gt;JDK-8294715&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/5a4945c0d95423d0ab07762c915e9cb4d3c66abb/src/hotspot/share/opto/superword.cpp#L3355&quot;&gt;https://github.com/openjdk/jdk/blob/5a4945c0d95423d0ab07762c915e9cb4d3c66abb/src/hotspot/share/opto/superword.cpp#L3355&lt;/a&gt;&lt;br/&gt;
[2] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/5a4945c0d95423d0ab07762c915e9cb4d3c66abb/src/hotspot/share/opto/vectornode.cpp#L1468&quot;&gt;https://github.com/openjdk/jdk/blob/5a4945c0d95423d0ab07762c915e9cb4d3c66abb/src/hotspot/share/opto/vectornode.cpp#L1468&lt;/a&gt;&lt;br/&gt;
[3] &lt;a href=&quot;https://github.com/openjdk/jdk/blob/5a4945c0d95423d0ab07762c915e9cb4d3c66abb/src/hotspot/cpu/x86/x86.ad#L2293-L2295&quot;&gt;https://github.com/openjdk/jdk/blob/5a4945c0d95423d0ab07762c915e9cb4d3c66abb/src/hotspot/cpu/x86/x86.ad#L2293-L2295&lt;/a&gt;</description>
                <environment></environment>
        <key id="5092203">JDK-8300865</key>
            <summary>C2: product reduction in ProdRed_Double is not vectorized</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sviswanathan">Sandhya Viswanathan</assignee>
                                    <reporter username="rcastanedalo">Roberto Castaneda Lozano</reporter>
                        <labels>
                            <label>c2</label>
                            <label>c2-superword</label>
                            <label>oracle-triage-21</label>
                            <label>performance</label>
                    </labels>
                <created>Mon, 23 Jan 2023 05:59:40 -0800</created>
                <updated>Sun, 4 Jun 2023 20:17:05 -0700</updated>
                            <resolved>Wed, 31 May 2023 15:43:01 -0700</resolved>
                                    <version>17</version>
                    <version>18</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14586146" author="dukebot" created="Wed, 31 May 2023 15:42:59 -0700"  >Changeset: f9ad7df4&lt;br/&gt;
Author:    Sandhya Viswanathan &amp;lt;&lt;a href=&apos;mailto:sviswanathan@openjdk.org&apos;&gt;sviswanathan@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-31 22:39:54 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f9ad7df4dafa0a2da38e8cbb4150049fb04f4327&quot;&gt;https://git.openjdk.org/jdk/commit/f9ad7df4dafa0a2da38e8cbb4150049fb04f4327&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14584166" author="kvn" created="Wed, 24 May 2023 08:37:15 -0700"  >[~epeter] since you commented here please review PR and submit mach5 testing for it.</comment>
                            <comment id="14583414" author="roboduke" created="Mon, 22 May 2023 10:04:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14065&quot;&gt;https://git.openjdk.org/jdk/pull/14065&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-19 23:27:32 +0000</comment>
                            <comment id="14560658" author="JIRAUSER19821" created="Thu, 16 Feb 2023 03:46:05 -0800"  >I also just discovered this issue independently.&lt;br/&gt;
I agree with the analysis above. Some other tests still do vectorize, but only if there is a Store that causes SuperWord::construct_bb() to return true.&lt;br/&gt;
For example&lt;br/&gt;
test/hotspot/jtreg/compiler/loopopts/superword/SumRed_Double.java&lt;br/&gt;
&lt;br/&gt;
for (int i = 0; i &amp;lt; a.length; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;total += d[i];&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The store to &amp;quot;d[i]&amp;quot; causes vectorization.&lt;br/&gt;
&lt;br/&gt;
We also need a regression test for these things, best with IR framework.&lt;br/&gt;
I am doing that with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302139&quot; title=&quot;Speed up SuperWord reduction tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302139&quot;&gt;&lt;strike&gt;JDK-8302139&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14554058" author="thartmann" created="Tue, 24 Jan 2023 07:13:35 -0800"  >[~sviswanathan], could you please have a look? Thanks.</comment>
                            <comment id="14553490" author="chagedorn" created="Mon, 23 Jan 2023 06:54:17 -0800"  >ILW = Missed vectorization opportunity, rare?, no workaround = MLH = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5084596">JDK-8294715</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5047704">JDK-8265783</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093745">JDK-8302139</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i301q3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>