<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:32:54 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8315969] compiler/rangechecks/TestRangeCheckHoistingScaledIV.java: make flagless</title>
                <link>https://bugs.openjdk.org/browse/JDK-8315969</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>==== Outcome ====&lt;br/&gt;
&lt;br/&gt;
The test fails with &amp;#39;-Xcomp&amp;#39; because of the &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316124&quot; title=&quot;Fix issues with ciMethod::call_method() which prevents inlining in Xcomp mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316124&quot;&gt;JDK-8316124&lt;/a&gt;. Temporarily made &amp;#39;vm.flagless&amp;#39; to get rid of CI failures. As soon as the blocking issue is fixed, we should remove the vm.flagless requirement (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8320495&quot; title=&quot;compiler/rangechecks/TestRangeCheckHoistingScaledIV.java: remove vm.flagless&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8320495&quot;&gt;JDK-8320495&lt;/a&gt;).&lt;br/&gt;
&lt;br/&gt;
==== Original Description ====&lt;br/&gt;
&lt;br/&gt;
The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
compiler/rangechecks/TestRangeCheckHoistingScaledIV.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
rc_predicate 0 &amp;lt;u range&lt;br/&gt;
lower bound check if: 239&lt;br/&gt;
rc_predicate (limit - 1) &amp;lt;u range&lt;br/&gt;
upper bound check if: 239&lt;br/&gt;
rc_predicate init &amp;lt;u range&lt;br/&gt;
rc_predicate init &amp;lt;u range&lt;br/&gt;
Predicate invariant if: 265   Loop: N234/N215  limit_check profile_predicated predicated counted [0,int),+1 (2147483648 iters)  rc  has_call rce sfpts={ 204 }&lt;br/&gt;
Predicate invariant if negated: 268   Loop: N234/N215  limit_check profile_predicated predicated counted [0,int),+1 (2147483648 iters)  rc  has_call rce sfpts={ 204 }&lt;br/&gt;
Loop Predication Performed:  Loop: N234/N215  limit_check profile_predicated predicated counted [0,int),+1 (2147483648 iters)  rc  has_call rce sfpts={ 204 }&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: [WARNING: Using incubator modules: jdk.incubator.vector&lt;br/&gt;
]&lt;br/&gt;
&amp;nbsp;exitValue = 0&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: &amp;#39;rc_predicate init * 6&amp;#39; missing from stdout&lt;br/&gt;
	at jdk.test.lib.process.OutputAnalyzer.stdoutShouldContain(OutputAnalyzer.java:236)&lt;br/&gt;
	at compiler.rangechecks.TestRangeCheckHoistingScaledIV.main(TestRangeCheckHoistingScaledIV.java:97)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException: &amp;#39;rc_predicate init * 6&amp;#39; missing from stdout&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.RuntimeException: &amp;#39;rc_predicate init * 6&amp;#39; missing from stdout&lt;br/&gt;
----------rerun:(45/8851)*----------</description>
                <environment></environment>
        <key id="5109971">JDK-8315969</key>
            <summary>compiler/rangechecks/TestRangeCheckHoistingScaledIV.java: make flagless</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enikitin">Evgeny Nikitin</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>oracle-triage-22</label>
                            <label>problemlist</label>
                            <label>tier6</label>
                            <label>tier7</label>
                            <label>tier8</label>
                    </labels>
                <created>Sun, 10 Sep 2023 08:18:06 -0700</created>
                <updated>Thu, 29 Aug 2024 03:27:12 -0700</updated>
                            <resolved>Tue, 21 Nov 2023 07:16:05 -0800</resolved>
                                    <version>19</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                                                            <comments>
                            <comment id="14683931" author="roboduke" created="Sun, 23 Jun 2024 17:43:36 -0700"  >[jdk21u-fix-request] Approval Request from Amos&lt;br/&gt;
&amp;quot;Backporting for parity with 21.0.5-oracle. No risk, test fix. Un-Clean backport. Test passes and SAP nightlies pass on 2024-06-23&#8221;</comment>
                            <comment id="14682778" author="roboduke" created="Tue, 18 Jun 2024 19:53:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/752&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/752&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-19 02:49:07 +0000</comment>
                            <comment id="14628136" author="dukebot" created="Tue, 21 Nov 2023 07:16:04 -0800"  >Changeset: 9598ff83&lt;br/&gt;
Author:    Evgeny Nikitin &amp;lt;&lt;a href=&apos;mailto:enikitin@openjdk.org&apos;&gt;enikitin@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-21 15:12:57 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/9598ff83860235281a08091128b5df90a4a76916&quot;&gt;https://git.openjdk.org/jdk/commit/9598ff83860235281a08091128b5df90a4a76916&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14627722" author="roboduke" created="Mon, 20 Nov 2023 11:16:50 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16746&quot;&gt;https://git.openjdk.org/jdk/pull/16746&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-20 19:09:18 +0000</comment>
                            <comment id="14610743" author="chagedorn" created="Tue, 12 Sep 2023 23:02:47 -0700"  >I&amp;#39;m fine with both, just thought to unproblem list the test again quickly since fixing ciMethod::check_call() might be too low of a priority to be addressed quickly (there is one more issue described in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316124&quot; title=&quot;Fix issues with ciMethod::call_method() which prevents inlining in Xcomp mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316124&quot;&gt;JDK-8316124&lt;/a&gt; that needs to be addressed in check_call() that prevents further inlining).</comment>
                            <comment id="14610708" author="dholmes" created="Tue, 12 Sep 2023 15:38:08 -0700"  >I don&amp;#39;t see the point in reverting the test to not use the test VM args. If the underlying Xcomp issue is fixed then the test can be unproblem-listed then, and continue to run with the VM flags.</comment>
                            <comment id="14610419" author="chagedorn" created="Tue, 12 Sep 2023 07:21:43 -0700"  >ILW = Test does not work with Xcomp, single test with Xcomp, no workaround = MLH = P4</comment>
                            <comment id="14610418" author="chagedorn" created="Tue, 12 Sep 2023 07:20:13 -0700"  >I propose to revert the change done in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8314838&quot; title=&quot;3 compiler tests ignore vm flags&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8314838&quot;&gt;&lt;strike&gt;JDK-8314838&lt;/strike&gt;&lt;/a&gt; for compiler/rangechecks/TestRangeCheckHoistingScaledIV.java and unproblemlist the test again. I&amp;#39;ve filed &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316124&quot; title=&quot;Fix issues with ciMethod::call_method() which prevents inlining in Xcomp mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316124&quot;&gt;JDK-8316124&lt;/a&gt; to fix ciMethod::call_method() together with another recently discovered issue in the same method.&lt;br/&gt;
&lt;br/&gt;
[~enikitin] can you undo the fix for this test done with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8314838&quot; title=&quot;3 compiler tests ignore vm flags&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8314838&quot;&gt;&lt;strike&gt;JDK-8314838&lt;/strike&gt;&lt;/a&gt;?</comment>
                            <comment id="14610350" author="chagedorn" created="Tue, 12 Sep 2023 02:38:19 -0700"  >Looks like this test is starting to fail after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8314838&quot; title=&quot;3 compiler tests ignore vm flags&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8314838&quot;&gt;&lt;strike&gt;JDK-8314838&lt;/strike&gt;&lt;/a&gt;. We now spawn the test VM with ProcessTools.createTestJvm() instead of ProcessTools.createJavaProcessBuilder() which passes the additional test.vm.opts and test.java.opts to the test VM.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve had a closer look and the test already fails with JDK 19 when passing the additional JTreg options to the test VM. It seems that inlining of the interface method jdk.incubator.vector.AbstractSpecies::vectorByteSize() from jdk.incubator.vector.ByteVector::fromMemorySegment() works with -Xbatch but fails with -Xcomp. The reason is that ciMethod::check_call() (only used with -Xcomp/-XX:-UseInterpreter) cannot handle the invokeinterface bytecode and forbids inlining in such a case (the inlining failure is reported with  &amp;quot;failed initial checks&amp;quot;). We only try to resolve the method with either invokestatic or invokevirtual but not with invokeinterface:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/455c471ee36e26dd1ece61c615b8421d65359d5d/src/hotspot/share/ci/ciMethod.cpp#L1201&quot;&gt;https://github.com/openjdk/jdk/blob/455c471ee36e26dd1ece61c615b8421d65359d5d/src/hotspot/share/ci/ciMethod.cpp#L1201&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
However, not being able to handle the invokeinterface bytecode seems to be known and is mentioned in the method comment together with a FIXME hint (added with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8014013&quot; title=&quot;CallInfo structure no longer accurately reports the result of a LinkResolver operation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8014013&quot;&gt;&lt;strike&gt;JDK-8014013&lt;/strike&gt;&lt;/a&gt;):&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/455c471ee36e26dd1ece61c615b8421d65359d5d/src/hotspot/share/ci/ciMethod.cpp#L1191-L1195&quot;&gt;https://github.com/openjdk/jdk/blob/455c471ee36e26dd1ece61c615b8421d65359d5d/src/hotspot/share/ci/ciMethod.cpp#L1191-L1195&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
So, I guess to fix this test, we should fix ciMethod::check_call() to address the FIXME. We should probably do that regardless. But a temporary solution would be to revert the test back to not pass any JTreg vm and java options to the spawned test VM in order to unproblemlist the test again.</comment>
                            <comment id="14610333" author="chagedorn" created="Tue, 12 Sep 2023 01:55:22 -0700"  >Test is now problemlisted with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316094&quot; title=&quot;Problemlist compiler/rangechecks/TestRangeCheckHoistingScaledIV.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316094&quot;&gt;&lt;strike&gt;JDK-8316094&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14610291" author="dholmes" created="Mon, 11 Sep 2023 23:13:50 -0700"  >This test is failing 6 times per tier6 and 16 times per tier7. Please ProblemList the test ASAP.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5130586">JDK-8333174</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5132787">JDK-8335097</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5108660">JDK-8314838</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5110134">JDK-8316124</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4672132">JDK-8014013</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5115172">JDK-8320495</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5110103">JDK-8316094</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i332cj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>