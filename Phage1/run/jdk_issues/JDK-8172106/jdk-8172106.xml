<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:36:25 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8172106] javac throws exception when compiling source file of size 1.5G</title>
                <link>https://bugs.openjdk.org/browse/JDK-8172106</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>FULL PRODUCT VERSION :&lt;br/&gt;
java version &amp;quot;1.8.0_112&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.8.0_112-b16)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 25.112-b16, mixed mode)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
ADDITIONAL OS VERSION INFORMATION :&lt;br/&gt;
OSX Yosemite (10.10.5) / Darwin macbook.home 14.5.0 Darwin Kernel Version 14.5.0: Sun Sep 25 22:07:15 PDT 2016; root:xnu-2782.50.9~1/RELEASE_X86_64 x86_64&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
I created a small program that outputs a Java source file. If you try to compile the generated source file, the compiler throws the exception below. This may be related to the size of the source file (1.5Gb).&lt;br/&gt;
&lt;br/&gt;
java.lang.IllegalArgumentException&lt;br/&gt;
	at java.nio.ByteBuffer.allocate(ByteBuffer.java:334)&lt;br/&gt;
	at com.sun.tools.javac.util.BaseFileManager$ByteBufferCache.get(BaseFileManager.java:325)&lt;br/&gt;
	at com.sun.tools.javac.util.BaseFileManager.makeByteBuffer(BaseFileManager.java:294)&lt;br/&gt;
	at com.sun.tools.javac.file.RegularFileObject.getCharContent(RegularFileObject.java:114)&lt;br/&gt;
	at com.sun.tools.javac.file.RegularFileObject.getCharContent(RegularFileObject.java:53)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.readSource(JavaCompiler.java:602)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.parse(JavaCompiler.java:665)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.parseFiles(JavaCompiler.java:950)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:857)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:523)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:381)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:370)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:361)&lt;br/&gt;
	at com.sun.tools.javac.Main.compile(Main.java:56)&lt;br/&gt;
	at com.sun.tools.javac.Main.main(Main.java:42)&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run the code below (change the &amp;quot;folder&amp;quot; variable to a valid directory on your computer) and then try to compile the output (namely the Performance.java file)&lt;br/&gt;
-------&lt;br/&gt;
import java.io.BufferedWriter;&lt;br/&gt;
import java.io.FileWriter;&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
&lt;br/&gt;
public class Main {&lt;br/&gt;
&lt;br/&gt;
	public static void main(String[] args) throws IOException {&lt;br/&gt;
		final String folder = &amp;quot;/Users/hugo/temp/&amp;quot;;&lt;br/&gt;
		try (BufferedWriter out = new BufferedWriter(&lt;br/&gt;
				new FileWriter(folder + &amp;quot;Performance.java&amp;quot;))&lt;br/&gt;
		) {&lt;br/&gt;
			out.write(&amp;quot;public class Performance {\n&amp;quot;);&lt;br/&gt;
			out.write(&amp;quot;\tpublic static int doNothing() {\n&amp;quot;);&lt;br/&gt;
			out.write(&amp;quot;\t\tint i = 0;\n&amp;quot;);&lt;br/&gt;
			for (int i = 1; i &amp;lt; 99999999; i++) {&lt;br/&gt;
				out.write(&amp;quot;\t\ti = &amp;quot; + i + &amp;quot;;\n&amp;quot;);&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
After trying to compile the generated class, the compiler should print an error message saying that the source file has a syntax error (the compiler should NEVER throw an exception).&lt;br/&gt;
ACTUAL -&lt;br/&gt;
If you go to the console and try to compile the generated source file (javac Performance.java) you get the following exception:&lt;br/&gt;
&lt;br/&gt;
java.lang.IllegalArgumentException&lt;br/&gt;
	at java.nio.ByteBuffer.allocate(ByteBuffer.java:334)&lt;br/&gt;
	at com.sun.tools.javac.util.BaseFileManager$ByteBufferCache.get(BaseFileManager.java:325)&lt;br/&gt;
	at com.sun.tools.javac.util.BaseFileManager.makeByteBuffer(BaseFileManager.java:294)&lt;br/&gt;
	at com.sun.tools.javac.file.RegularFileObject.getCharContent(RegularFileObject.java:114)&lt;br/&gt;
	at com.sun.tools.javac.file.RegularFileObject.getCharContent(RegularFileObject.java:53)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.readSource(JavaCompiler.java:602)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.parse(JavaCompiler.java:665)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.parseFiles(JavaCompiler.java:950)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:857)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:523)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:381)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:370)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:361)&lt;br/&gt;
	at com.sun.tools.javac.Main.compile(Main.java:56)&lt;br/&gt;
	at com.sun.tools.javac.Main.main(Main.java:42)&lt;br/&gt;
&lt;br/&gt;
ERROR MESSAGES/STACK TRACES THAT OCCUR :&lt;br/&gt;
An exception has occurred in the compiler (1.8.0_112). Please file a bug against the Java compiler via the Java bug reporting page (&lt;a href=&quot;http://bugreport.java.com&quot;&gt;http://bugreport.java.com&lt;/a&gt;) after checking the Bug Database (&lt;a href=&quot;http://bugs.java.com&quot;&gt;http://bugs.java.com&lt;/a&gt;) for duplicates. Include your program and the following diagnostic in your report. Thank you.&lt;br/&gt;
java.lang.IllegalArgumentException&lt;br/&gt;
	at java.nio.ByteBuffer.allocate(ByteBuffer.java:334)&lt;br/&gt;
	at com.sun.tools.javac.util.BaseFileManager$ByteBufferCache.get(BaseFileManager.java:325)&lt;br/&gt;
	at com.sun.tools.javac.util.BaseFileManager.makeByteBuffer(BaseFileManager.java:294)&lt;br/&gt;
	at com.sun.tools.javac.file.RegularFileObject.getCharContent(RegularFileObject.java:114)&lt;br/&gt;
	at com.sun.tools.javac.file.RegularFileObject.getCharContent(RegularFileObject.java:53)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.readSource(JavaCompiler.java:602)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.parse(JavaCompiler.java:665)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.parseFiles(JavaCompiler.java:950)&lt;br/&gt;
	at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:857)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:523)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:381)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:370)&lt;br/&gt;
	at com.sun.tools.javac.main.Main.compile(Main.java:361)&lt;br/&gt;
	at com.sun.tools.javac.Main.compile(Main.java:56)&lt;br/&gt;
	at com.sun.tools.javac.Main.main(Main.java:42)&lt;br/&gt;
&lt;br/&gt;
REPRODUCIBILITY :&lt;br/&gt;
This bug can be reproduced always.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
The code below generates the source file that allows you to reproduce the issue:&lt;br/&gt;
-----&lt;br/&gt;
&lt;br/&gt;
import java.io.BufferedWriter;&lt;br/&gt;
import java.io.FileWriter;&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
&lt;br/&gt;
public class Main {&lt;br/&gt;
&lt;br/&gt;
	public static void main(String[] args) throws IOException {&lt;br/&gt;
		final String folder = &amp;quot;/Users/hugo/temp/&amp;quot;;&lt;br/&gt;
		try (BufferedWriter out = new BufferedWriter(&lt;br/&gt;
				new FileWriter(folder + &amp;quot;Performance.java&amp;quot;))&lt;br/&gt;
		) {&lt;br/&gt;
			out.write(&amp;quot;public class Performance {\n&amp;quot;);&lt;br/&gt;
			out.write(&amp;quot;\tpublic static int doNothing() {\n&amp;quot;);&lt;br/&gt;
			out.write(&amp;quot;\t\tint i = 0;\n&amp;quot;);&lt;br/&gt;
			for (int i = 1; i &amp;lt; 99999999; i++) {&lt;br/&gt;
				out.write(&amp;quot;\t\ti = &amp;quot; + i + &amp;quot;;\n&amp;quot;);&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4911049">JDK-8172106</key>
            <summary>javac throws exception when compiling source file of size 1.5G</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vromero">Vicente Arturo Romero Zaldivar</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcsfai</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Wed, 28 Dec 2016 12:10:12 -0800</created>
                <updated>Mon, 9 Jan 2023 11:14:37 -0800</updated>
                            <resolved>Wed, 4 Jan 2023 08:04:41 -0800</resolved>
                                    <version>8</version>
                    <version>9</version>
                                    <fixVersion>21</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14548716" author="dukebot" created="Wed, 4 Jan 2023 08:04:39 -0800"  >Changeset: 6a07fd0e&lt;br/&gt;
Author:    Archie L. Cobbs &amp;lt;&lt;a href=&apos;mailto:archie.cobbs@gmail.com&apos;&gt;archie.cobbs@gmail.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Vicente Romero &amp;lt;&lt;a href=&apos;mailto:vromero@openjdk.org&apos;&gt;vromero@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-04 16:01:59 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6a07fd0ec1e6b57ffff852bcdc4f3304ac828018&quot;&gt;https://git.openjdk.org/jdk/commit/6a07fd0ec1e6b57ffff852bcdc4f3304ac828018&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14531423" author="roboduke" created="Thu, 20 Oct 2022 15:09:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/10803&quot;&gt;https://git.openjdk.org/jdk/pull/10803&lt;/a&gt;&lt;br/&gt;
Date: 2022-10-20 20:15:12 +0000</comment>
                            <comment id="14036657" author="fmatte" created="Wed, 28 Dec 2016 21:13:26 -0800"  >Looking into other way round, user is not directly using ByteBuffer, it was interanlly used by javac compiler.&lt;br/&gt;
Definetly we should have prompted with proper error message then such an Exception&lt;br/&gt;
Steps to reproduce&lt;br/&gt;
==&lt;br/&gt;
1. javac Main.java&lt;br/&gt;
2. java Main (Geretaes the Performance.java as output file)&lt;br/&gt;
3. javac Performance.java&lt;br/&gt;
==&lt;br/&gt;
</comment>
                            <comment id="14036656" author="fmatte" created="Wed, 28 Dec 2016 21:09:44 -0800"  >Noit sure  about this as an issue when you tried to compile a source file of sizeof 1.5G.  java.lang.IllegalArgumentException is occuring as capacity is becoming negative &amp;quot;capacity &amp;lt; 0: (-558594710 &amp;lt; 0)&amp;quot;&lt;br/&gt;
It depends upon the native IO capacity of buffer allocation, as the spec says&lt;br/&gt;
&amp;quot;Given a direct byte buffer, the Java virtual machine will make a best effort to perform native I/O operations directly upon it. That is, it will attempt to avoid copying the buffer&amp;#39;s content to (or from) an intermediate buffer before (or after) each invocation of one of the underlying operating system&amp;#39;s native I/O operations&amp;quot;&lt;br/&gt;
&lt;br/&gt;
-sh-4.1$ /opt/java/jdk-9_ea-149/bin/javac /scratch/fairoz/Performance.java&lt;br/&gt;
An exception has occurred in the compiler (9-ea). Please file a bug against the Java compiler via the Java bug reporting page (&lt;a href=&quot;http://bugreport.java.com&quot;&gt;http://bugreport.java.com&lt;/a&gt;) after checking the Bug Database (&lt;a href=&quot;http://bugs.java.com&quot;&gt;http://bugs.java.com&lt;/a&gt;) for duplicates. Include your program and the following diagnostic in your report. Thank you.&lt;br/&gt;
java.lang.IllegalArgumentException: capacity &amp;lt; 0: (-558594710 &amp;lt; 0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.nio.Buffer.createCapacityException(Buffer.java:251)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.nio.ByteBuffer.allocate(ByteBuffer.java:340)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.file.BaseFileManager$ByteBufferCache.get(BaseFileManager.java:454)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.file.BaseFileManager.makeByteBuffer(BaseFileManager.java:422)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.file.PathFileObject.getCharContent(PathFileObject.java:458)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.readSource(JavaCompiler.java:607)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.parse(JavaCompiler.java:669)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.parseFiles(JavaCompiler.java:1029)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:942)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:307)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:160)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:55)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:41)&lt;br/&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="65676" name="Main.java" size="539" author="fmatte" created="Wed, 28 Dec 2016 21:13:59 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i25iu3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17314"><![CDATA[b04]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="212"><![CDATA[javac]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>