<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:48:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302453] RISC-V: Add support for small width vector operations</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302453</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>1. In the process of using qemu to open RVV test vector api, currently if you set RVV vlen and java vector api&amp;#39;s VectorSpecies are not equal, the instruction set related to RVV will not be used, and the scalar simulation implementation is used. For example, if RVV vlen = 256, the java program will execute normally when the VectorSpecies of the java vector api is SPECIES_256, and if you look at the java compilation log, the compilation log will also show that the current program does use the RVV-related instruction set. However, when RVV vlen = 256 and the VectorSpecies of the java vector api is SPECIES_64 or SPECIES_128, the java program executes normally, but no RVV-related instructions are generated in the compilation log. The reason for this is that Matcher::vector_size_supported function returns false during vectorization compilation, and thus no vectorization compilation is performed. This function is implemented as follows.&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;static const bool vector_size_supported(const BasicType bt, int size) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (Matcher::max_vector_size(bt) &amp;gt;= size &amp;amp;&amp;amp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matcher::min_vector_size(bt) &amp;lt;= size);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
```&lt;br/&gt;
The maximum and minimum values are implemented in the individual architecture AD files, and the current RISC-V implementation is as follows.&lt;br/&gt;
```&lt;br/&gt;
// Vector width in bytes.&lt;br/&gt;
const int Matcher::vector_width_in_bytes(BasicType bt) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (UseRVV) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// The MaxVectorSize should have been set by detecting RVV max vector register size when check UseRVV.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// MaxVectorSize == VM_Version::_initial_vector_length&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return MaxVectorSize;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return 0;&lt;br/&gt;
}&lt;br/&gt;
// Limits on vector size (number of elements) loaded into vector.&lt;br/&gt;
const int Matcher::max_vector_size(const BasicType bt) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return vector_width_in_bytes(bt) / type2aelembytes(bt);&lt;br/&gt;
}&lt;br/&gt;
const int Matcher::min_vector_size(const BasicType bt) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return max_vector_size(bt);&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
In the above implementation, we can see that Matcher::max_vector_size, Matcher::min_vector_size are calculated to the maximum value (i.e. the maximum number of elements of that type that can be processed by the current vector register at one time). When RVV vlen and java vector api&amp;#39;s VectorSpecies are not equal, the number of elements processed is not the maximum, so Matcher::vector_size_supported returns false during vectorization compilation, resulting in no vectorization compilation and no use of RVV instruction set optimization.&lt;br/&gt;
&lt;br/&gt;
2. Need to enhance the vload, vstore node, java vector api of VectorSpecies actually indicates a vectorization operation memory size, before the operation need to load the data from memory to the register, after the operation need to store the data in the register to memory. However, the current RISC-V operation on vector register data loading and storage is based on the maximum register width, assuming RVV vlen = 256, for loading, it means that all 256 bits of data are loaded into the vector register, for storage, it means that all 256 bits of data in the register are stored in memory, if the java vector api VectorSpecies is SPECIES_128, if the actual data that needs to be stored at this time is 128 bits, then it stores 128 more bits of data, which also destroys other data.</description>
                <environment></environment>
        <key id="5094112">JDK-8302453</key>
            <summary>RISC-V: Add support for small width vector operations</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gcao">Gui Cao</assignee>
                                    <reporter username="gcao">Gui Cao</reporter>
                        <labels>
                            <label>oraclejdk-na</label>
                            <label>vectorapi</label>
                    </labels>
                <created>Tue, 14 Feb 2023 01:57:12 -0800</created>
                <updated>Sun, 20 Aug 2023 22:46:38 -0700</updated>
                            <resolved>Mon, 20 Feb 2023 17:41:34 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14561519" author="dukebot" created="Mon, 20 Feb 2023 17:41:33 -0800"  >Changeset: 43c71ddf&lt;br/&gt;
Author:    Gui Cao &amp;lt;&lt;a href=&apos;mailto:gcao@openjdk.org&apos;&gt;gcao@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Fei Yang &amp;lt;&lt;a href=&apos;mailto:fyang@openjdk.org&apos;&gt;fyang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-21 01:39:13 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/43c71ddf923d442499449948f4bf8a7c79249af0&quot;&gt;https://git.openjdk.org/jdk/commit/43c71ddf923d442499449948f4bf8a7c79249af0&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14559930" author="roboduke" created="Tue, 14 Feb 2023 02:31:45 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12553&quot;&gt;https://git.openjdk.org/jdk/pull/12553&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-14 10:23:29 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5108427">JDK-8314618</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="20300"><![CDATA[riscv]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30di3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>