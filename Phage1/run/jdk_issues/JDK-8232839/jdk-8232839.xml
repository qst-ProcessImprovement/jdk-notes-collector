<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:54:57 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8232839] JDI AfterThreadDeathTest.java failed due to &quot;FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8232839</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK14 CI:&lt;br/&gt;
&lt;br/&gt;
com/sun/jdi/AfterThreadDeathTest.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
----------System.err:(25/1393)----------&lt;br/&gt;
[1ms] run args: [AfterDeathTarg]&lt;br/&gt;
[521ms] Got ThreadDeathEvent: ThreadDeathEvent in thread main&lt;br/&gt;
[525ms] Got ThreadStartEvent: ThreadStartEvent in thread Common-Cleaner&lt;br/&gt;
[525ms] FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&lt;br/&gt;
[534ms] Got ThreadStartEvent: ThreadStartEvent in thread DestroyJavaVM&lt;br/&gt;
[534ms] Deleted stepRequest&lt;br/&gt;
[536ms] Ok; got expected IllegalThreadStateException&lt;br/&gt;
[544ms] Got ThreadDeathEvent: ThreadDeathEvent in thread DestroyJavaVM&lt;br/&gt;
[545ms] Got VMDeathEvent&lt;br/&gt;
[545ms] Got VMDeathEvent&lt;br/&gt;
[883ms] Got VMDisconnectEvent&lt;br/&gt;
java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
	at AfterThreadDeathTest.runTests(AfterThreadDeathTest.java:156)&lt;br/&gt;
	at TestScaffold.startTests(TestScaffold.java:431)&lt;br/&gt;
	at AfterThreadDeathTest.main(AfterThreadDeathTest.java:63)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:830)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
----------System.out:(10/419)----------&lt;br/&gt;
vmOpts: &amp;#39;-Xmx512m -XX:MaxRAMPercentage=6 -ea -esa&amp;#39;&lt;br/&gt;
javaOpts: &amp;#39;-XX:NativeMemoryTracking=detail&amp;#39;&lt;br/&gt;
JVM version:14-ea&lt;br/&gt;
JDI version: 14.0&lt;br/&gt;
JVM description: Java Debug Interface (Reference Implementation) version 14.0 &lt;br/&gt;
Java Debug Wire Protocol (Reference Implementation) version 14.0&lt;br/&gt;
JVM Debug Interface version 14.0&lt;br/&gt;
JVM version 14-ea (Java HotSpot(TM) 64-Bit Server VM, mixed mode, sharing)&lt;br/&gt;
Howdy!&lt;br/&gt;
Goodbye from AfterDeathTarg!&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
test result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: AfterThreadDeathTest: failed</description>
                <environment></environment>
        <key id="5002654">JDK-8232839</key>
            <summary>JDI AfterThreadDeathTest.java failed due to &quot;FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok-next</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>tier3</label>
                            <label>tier5</label>
                            <label>tier6</label>
                            <label>tier7</label>
                    </labels>
                <created>Tue, 22 Oct 2019 14:32:29 -0700</created>
                <updated>Mon, 25 Dec 2023 10:20:00 -0800</updated>
                            <resolved>Fri, 9 Jun 2023 11:04:26 -0700</resolved>
                                    <version>11</version>
                    <version>14</version>
                    <version>15</version>
                    <version>16</version>
                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                                                            <comments>
                            <comment id="14634574" author="roboduke" created="Fri, 15 Dec 2023 01:32:45 -0800"  >[jdk11u-fix-request] Approval Request from Amos&lt;br/&gt;
&#8220;Backporting for parity with jdk 11.0.22-oracle. No risk, test fix. Unclean back port. SAP nightlies passed on 2023-12-23&#8221;</comment>
                            <comment id="14634099" author="roboduke" created="Wed, 13 Dec 2023 12:40:12 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2376&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2376&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-13 20:35:40 +0000</comment>
                            <comment id="14616430" author="roboduke" created="Fri, 6 Oct 2023 03:04:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/229&quot;&gt;https://git.openjdk.org/jdk21u/pull/229&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-06 07:56:23 +0000</comment>
                            <comment id="14616232" author="roboduke" created="Thu, 5 Oct 2023 08:32:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1843&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1843&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-05 15:25:17 +0000</comment>
                            <comment id="14616229" author="goetz" created="Thu, 5 Oct 2023 08:25:34 -0700"  >Fix request [21u,17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.10-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed (17,21).</comment>
                            <comment id="14588235" author="dukebot" created="Fri, 9 Jun 2023 11:04:25 -0700"  >Changeset: 84184f94&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-09 18:01:22 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/84184f947342fd1adbe4e3f2230ce3de4ae6007e&quot;&gt;https://git.openjdk.org/jdk/commit/84184f947342fd1adbe4e3f2230ce3de4ae6007e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14587796" author="roboduke" created="Wed, 7 Jun 2023 16:21:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14372&quot;&gt;https://git.openjdk.org/jdk/pull/14372&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-07 23:17:18 +0000</comment>
                            <comment id="14587787" author="cjplummer" created="Wed, 7 Jun 2023 15:12:29 -0700"  >The test waits for a ThreadDeathEvent for &amp;quot;main&amp;quot;. Once that arrives, it then waits for the next ThreadStartEvent (for any thread). Once it arrives, it tries to create and enable a StepRequest on the &amp;quot;main&amp;quot; thread. Since &amp;quot;main&amp;quot; is dead, the expectation is an IllegalThreadStateException. However, if the ThreadStartEvent is for one of these spurious thread creations, sometimes there is no IllegalThreadStateException.&lt;br/&gt;
&lt;br/&gt;
I experimented by enabling the StepRequest when the ThreadDeathEvent arrived for &amp;quot;main&amp;quot;. This didn&amp;#39;t reproduce the problem on every run, but makes it much more likely. &lt;br/&gt;
&lt;br/&gt;
There appears to be a bit of timing issue with the debug agent. When the debug agent first sends the ThreadDeathEvent, the thread is still alive and will allow a StepRequest to be enabled. However, shortly after the event is sent the debug agent &amp;quot;forgets&amp;quot; about the thread. This is done in threadControl_onEventHandlerEntry():&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ei == EI_THREAD_END) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;removeThread(env, node);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node = NULL;   /* has been freed */&lt;br/&gt;
&lt;br/&gt;
After this point any attempt to enable a StepRequest on the thread will result in IllegalThreadStateException. This is triggered in stepControl_beginStep() when the threadControl_getStepRequest() call returns NULL (because the lookup of the thread fails). However, if the enabling of the StepRequest happens before the removeThread() is done, then it will succeed. Spurious thread creations just make it more likely that when the next ThreadStartEvent arrives, the debug agent is not yet done with the cleanup of the ThreadDeathEvent for &amp;quot;main&amp;quot;, so the StepRequest enable is allowed.&lt;br/&gt;
&lt;br/&gt;
The question is should this be considered a debug agent bug or a test bug. The spec would need to make it clear that once a ThreadDeathEvent has arrived, the thread is indeed dead and attempts to perform any action on it will result in IllegalThreadStateException. I don&amp;#39;t think the spec does. In fact the JDWP spec seems to say otherwise for JDWP.EventKind.THREAD_DEATH:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Notification of a completed thread in the target VM. The notification is generated by the dying thread before it terminates. Because of this timing, it is possible for {@link VirtualMachine#allThreads} to return this thread after this event is received.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Note that this event gives no information about the lifetime of the thread object. It may or may not be collected soon depending on what references exist in the target VM.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
The JDI language for ThreadDeathEvent is identical. Based on this I&amp;#39;m going to conclude this is a test bug. I&amp;#39;m not sure if there a way that can guarantee the expected IllegalThreadStateException without making assumptions about the debug agent implementation, but that might be ok in this case. What should work is waiting for the creation of the DestroyJavaVM ThreadStartEvent, and not just any ThreadStartEvent. By the time it is sent it seems that the debug agent is alway done with the ThreadDeathEvent for &amp;quot;main&amp;quot;.</comment>
                            <comment id="14587740" author="cjplummer" created="Wed, 7 Jun 2023 11:39:17 -0700"  >For all the passing test cases I looked at, the log contained:&lt;br/&gt;
&lt;br/&gt;
[0ms] run args: [AfterDeathTarg]&lt;br/&gt;
[291ms] Got ThreadDeathEvent: ThreadDeathEvent in thread main&lt;br/&gt;
[291ms] Got ThreadStartEvent: ThreadStartEvent in thread DestroyJavaVM&lt;br/&gt;
[293ms] Ok; got expected IllegalThreadStateException&lt;br/&gt;
[293ms] Got ThreadDeathEvent: ThreadDeathEvent in thread DestroyJavaVM&lt;br/&gt;
[294ms] Got VMDeathEvent&lt;br/&gt;
[294ms] Got VMDeathEvent&lt;br/&gt;
[2557ms] AfterThreadDeathTest: passed&lt;br/&gt;
[2557ms] Got VMDisconnectEvent&lt;br/&gt;
&lt;br/&gt;
All the failing ones look something like:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;[1ms] run args: [AfterDeathTarg]&lt;br/&gt;
[521ms] Got ThreadDeathEvent: ThreadDeathEvent in thread main&lt;br/&gt;
[525ms] Got ThreadStartEvent: ThreadStartEvent in thread Common-Cleaner&lt;br/&gt;
[525ms] FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&lt;br/&gt;
[534ms] Got ThreadStartEvent: ThreadStartEvent in thread DestroyJavaVM&lt;br/&gt;
[534ms] Deleted stepRequest&lt;br/&gt;
[536ms] Ok; got expected IllegalThreadStateException&lt;br/&gt;
[544ms] Got ThreadDeathEvent: ThreadDeathEvent in thread DestroyJavaVM&lt;br/&gt;
[545ms] Got VMDeathEvent&lt;br/&gt;
[545ms] Got VMDeathEvent&lt;br/&gt;
[883ms] Got VMDisconnectEvent &lt;br/&gt;
&lt;br/&gt;
The difference being first ThreadStartEvent in the log belonging to something other than DestroyJavaVM, usually Common-Cleaner or a carrier thread in the case of running in virtual thread mode. These are what I normally refer to as &amp;quot;spurious&amp;quot; threads, which are ones that the test does not expect to startup while it is running. We&amp;#39;ve had many tests failing due to these spurious thread startups. The test needs to adapt.</comment>
                            <comment id="14587639" author="dcubed" created="Wed, 7 Jun 2023 06:35:18 -0700"  >Here&amp;#39;s a log file snippet from the jdk-21+26-2273-tier5 sighting:&lt;br/&gt;
&lt;br/&gt;
com/sun/jdi/RedefineCrossEvent.java&lt;br/&gt;
&lt;br/&gt;
#section:driver&lt;br/&gt;
----------messages:(7/283)----------&lt;br/&gt;
command: driver AfterThreadDeathTest -redefstart -redefevent&lt;br/&gt;
reason: User specified action: run driver AfterThreadDeathTest -redefstart -redefevent &lt;br/&gt;
started: Wed Jun 07 01:27:45 UTC 2023&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 21&lt;br/&gt;
finished: Wed Jun 07 01:27:46 UTC 2023&lt;br/&gt;
elapsed time (seconds): 0.802&lt;br/&gt;
----------configuration:(12/1409)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------System.err:(33/2000)----------&lt;br/&gt;
[1ms] run args: [-redefstart, -redefevent, AfterDeathTarg]&lt;br/&gt;
[364ms] Redefining class AfterDeathTarg (loaded by instance of jdk.internal.loader.ClassLoaders$AppClassLoader(id=267))&lt;br/&gt;
[368ms] Redefining class AfterDeathTarg (loaded by instance of jdk.internal.loader.ClassLoaders$AppClassLoader(id=267))&lt;br/&gt;
[389ms] Got ThreadStartEvent: ThreadStartEvent in thread ForkJoinPool-1-worker-2&lt;br/&gt;
[394ms] Got ThreadDeathEvent: ThreadDeathEvent in thread main&lt;br/&gt;
[395ms] Got ThreadStartEvent: ThreadStartEvent in thread ForkJoinPool-1-worker-3&lt;br/&gt;
[395ms] FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&lt;br/&gt;
	at java.base/java.lang.Thread.getStackTrace(Thread.java:2450)&lt;br/&gt;
	at TestScaffold.failure(TestScaffold.java:493)&lt;br/&gt;
	at AfterThreadDeathTest.threadStarted(AfterThreadDeathTest.java:99)&lt;br/&gt;
	at TestScaffold$EventHandler.notifyEvent(TestScaffold.java:221)&lt;br/&gt;
	at TestScaffold$EventHandler.run(TestScaffold.java:279)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1583)&lt;br/&gt;
[404ms] Got ThreadDeathEvent: ThreadDeathEvent in thread old-m-a-i-n&lt;br/&gt;
[405ms] Got ThreadStartEvent: ThreadStartEvent in thread DestroyJavaVM&lt;br/&gt;
[405ms] Deleted stepRequest&lt;br/&gt;
[407ms] Ok; got expected IllegalThreadStateException&lt;br/&gt;
[410ms] Got ThreadDeathEvent: ThreadDeathEvent in thread DestroyJavaVM&lt;br/&gt;
[411ms] Got VMDeathEvent&lt;br/&gt;
[411ms] Got VMDeathEvent&lt;br/&gt;
[726ms] Got VMDisconnectEvent&lt;br/&gt;
java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
	at AfterThreadDeathTest.runTests(AfterThreadDeathTest.java:156)&lt;br/&gt;
	at TestScaffold.startTests(TestScaffold.java:470)&lt;br/&gt;
	at AfterThreadDeathTest.main(AfterThreadDeathTest.java:63)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:311)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
----------System.out:(10/885)----------&lt;br/&gt;
vmOpts: &amp;#39;-Xmx768m -XX:MaxRAMPercentage=4.16667 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-x64/jdk-20_linux-x64_bin.tar.gz/jdk-20 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S1260/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/973a07ef-dfc5-4ade-8d3b-77ccb75416e4/runs/0e5d1d79-1a02-4d6a-8c39-bf8662e1f45d/testoutput/test-support/jtreg_open_test_jdk_jdk_jdi/tmp -ea -esa&amp;#39;&lt;br/&gt;
javaOpts: &amp;#39;-Duse.JTREG_TEST_THREAD_FACTORY=Virtual -XX:+UseZGC -XX:-VerifyContinuations&amp;#39;&lt;br/&gt;
JVM version:21-ea&lt;br/&gt;
JDI version: 21.0&lt;br/&gt;
JVM description: Java Debug Interface (Reference Implementation) version 21.0 &lt;br/&gt;
Java Debug Wire Protocol (Reference Implementation) version 21.0&lt;br/&gt;
JVM Debug Interface version 21.0&lt;br/&gt;
JVM version 21-ea (Java HotSpot(TM) 64-Bit Server VM, mixed mode, sharing)&lt;br/&gt;
Howdy!&lt;br/&gt;
Goodbye from AfterDeathTarg!&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: AfterThreadDeathTest: failed</comment>
                            <comment id="14493824" author="dcubed" created="Wed, 4 May 2022 11:19:37 -0700"  >Here&amp;#39;s a log file snippet from the jdk-19-loomvt+1-52-tier5 sighting: &lt;br/&gt;
&lt;br/&gt;
com/sun/jdi/RedefineCrossEvent.java&lt;br/&gt;
&lt;br/&gt;
#section:driver&lt;br/&gt;
----------messages:(5/206)----------&lt;br/&gt;
command: driver AfterThreadDeathTest -redefstart -redefevent&lt;br/&gt;
reason: User specified action: run driver AfterThreadDeathTest -redefstart -redefevent &lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 15&lt;br/&gt;
elapsed time (seconds): 0.728&lt;br/&gt;
----------configuration:(14/1602)----------&lt;br/&gt;
Boot Layer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;class path: /opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/javatest.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/jtreg.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/junit.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/hamcrest.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/testng.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/jcommander.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jtreg/6.1/1/bundles/jtreg-6.1+1.zip/jtreg/lib/guice.jar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;patch:      java.base /opt/mach5/mesos/work_dir/slaves/c82600aa-2448-475c-8c08-6f02a5b3f3af-S11695/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/eb857753-89bb-4524-a953-881f04669850/runs/b52b5f7d-7e3e-4f6b-88fa-da751ae5cda4/testoutput/test-support/jtreg_open_test_jdk_jdk_jdi/patches/java.base&lt;br/&gt;
&lt;br/&gt;
Test Layer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;class path: /opt/mach5/mesos/work_dir/slaves/c82600aa-2448-475c-8c08-6f02a5b3f3af-S11695/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/eb857753-89bb-4524-a953-881f04669850/runs/b52b5f7d-7e3e-4f6b-88fa-da751ae5cda4/testoutput/test-support/jtreg_open_test_jdk_jdk_jdi/classes/1/com/sun/jdi/RedefineCrossEvent.d&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/opt/mach5/mesos/work_dir/jib-master/install/jdk-19-loomvt+1-52/src.full/open/test/jdk/com/sun/jdi&lt;br/&gt;
&lt;br/&gt;
----------rerun:(31/4796)*----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------System.err:(27/1621)----------&lt;br/&gt;
[0ms] run args: [-redefstart, -redefevent, AfterDeathTarg]&lt;br/&gt;
[296ms] Redefining class AfterDeathTarg (loaded by instance of jdk.internal.loader.ClassLoaders$AppClassLoader(id=282))&lt;br/&gt;
[300ms] Redefining class AfterDeathTarg (loaded by instance of jdk.internal.loader.ClassLoaders$AppClassLoader(id=282))&lt;br/&gt;
[325ms] Got ThreadStartEvent: ThreadStartEvent in thread ForkJoinPool-1-worker-2&lt;br/&gt;
[332ms] Got ThreadDeathEvent: ThreadDeathEvent in thread &lt;br/&gt;
[332ms] Got ThreadStartEvent: ThreadStartEvent in thread ForkJoinPool-1-worker-3&lt;br/&gt;
[346ms] FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&lt;br/&gt;
[355ms] Got ThreadDeathEvent: ThreadDeathEvent in thread main&lt;br/&gt;
[356ms] Got ThreadStartEvent: ThreadStartEvent in thread DestroyJavaVM&lt;br/&gt;
[356ms] Deleted stepRequest&lt;br/&gt;
[358ms] Ok; got expected IllegalThreadStateException&lt;br/&gt;
[360ms] Got ThreadDeathEvent: ThreadDeathEvent in thread DestroyJavaVM&lt;br/&gt;
[361ms] Got VMDeathEvent&lt;br/&gt;
[361ms] Got VMDeathEvent&lt;br/&gt;
[693ms] Got VMDisconnectEvent&lt;br/&gt;
java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
	at AfterThreadDeathTest.runTests(AfterThreadDeathTest.java:156)&lt;br/&gt;
	at TestScaffold.startTests(TestScaffold.java:432)&lt;br/&gt;
	at AfterThreadDeathTest.main(AfterThreadDeathTest.java:63)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1585)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
----------System.out:(10/738)----------&lt;br/&gt;
vmOpts: &amp;#39;-Xmx768m -XX:MaxRAMPercentage=6.25 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/c82600aa-2448-475c-8c08-6f02a5b3f3af-S11695/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/eb857753-89bb-4524-a953-881f04669850/runs/b52b5f7d-7e3e-4f6b-88fa-da751ae5cda4/testoutput/test-support/jtreg_open_test_jdk_jdk_jdi/tmp -ea -esa&amp;#39;&lt;br/&gt;
javaOpts: &amp;#39;-Dmain.wrapper=Virtual -XX:-VerifyContinuations&amp;#39;&lt;br/&gt;
JVM version:19-loomvt&lt;br/&gt;
JDI version: 19.0&lt;br/&gt;
JVM description: Java Debug Interface (Reference Implementation) version 19.0 &lt;br/&gt;
Java Debug Wire Protocol (Reference Implementation) version 19.0&lt;br/&gt;
JVM Debug Interface version 19.0&lt;br/&gt;
JVM version 19-loomvt (Java HotSpot(TM) 64-Bit Server VM, mixed mode, sharing)&lt;br/&gt;
Howdy!&lt;br/&gt;
Goodbye from AfterDeathTarg!&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: AfterThreadDeathTest: failed</comment>
                            <comment id="14431895" author="sspitsyn" created="Fri, 2 Jul 2021 13:30:49 -0700"  >See also this dup &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8269005&quot; title=&quot;com/sun/jdi/RedefineCrossEvent.java failed: Did not get expected IllegalThreadStateException on a StepRequest.enable()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8269005&quot;&gt;&lt;strike&gt;JDK-8269005&lt;/strike&gt;&lt;/a&gt; which is about RedefineCrossEvent test failing with the same mode.</comment>
                            <comment id="14382499" author="dcubed" created="Fri, 20 Nov 2020 08:41:11 -0800"  >Here&amp;#39;s a snippet from the log file for the jdk-16+26-1681-tier3 sighting:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
----------System.err:(25/1394)----------&lt;br/&gt;
[1ms] run args: [AfterDeathTarg]&lt;br/&gt;
[888ms] Got ThreadDeathEvent: ThreadDeathEvent in thread main&lt;br/&gt;
[890ms] Got ThreadStartEvent: ThreadStartEvent in thread Common-Cleaner&lt;br/&gt;
[896ms] FAILED: Did not get expected IllegalThreadStateException on a StepRequest.enable()&lt;br/&gt;
[899ms] Got ThreadStartEvent: ThreadStartEvent in thread DestroyJavaVM&lt;br/&gt;
[901ms] Deleted stepRequest&lt;br/&gt;
[902ms] Ok; got expected IllegalThreadStateException&lt;br/&gt;
[905ms] Got ThreadDeathEvent: ThreadDeathEvent in thread DestroyJavaVM&lt;br/&gt;
[915ms] Got VMDeathEvent&lt;br/&gt;
[916ms] Got VMDeathEvent&lt;br/&gt;
[1231ms] Got VMDisconnectEvent&lt;br/&gt;
java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
	at AfterThreadDeathTest.runTests(AfterThreadDeathTest.java:156)&lt;br/&gt;
	at TestScaffold.startTests(TestScaffold.java:431)&lt;br/&gt;
	at AfterThreadDeathTest.main(AfterThreadDeathTest.java:63)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:831)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
----------System.out:(10/738)----------&lt;br/&gt;
vmOpts: &amp;#39;-Xmx512m -XX:MaxRAMPercentage=6 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/47535081-0322-4d83-bb78-f7e11abb86d0-S45905/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/dfb423d9-0752-4022-a4e9-0621eba52b77/runs/18bffcb5-0cf6-4e93-9f51-a47352d1c7d8/testoutput/test-support/jtreg_open_test_jdk_jdk_jdi/tmp -ea -esa&amp;#39;&lt;br/&gt;
javaOpts: &amp;#39;-XX:+CreateCoredumpOnCrash -XX:+UseParallelGC -XX:+UseNUMA&amp;#39;&lt;br/&gt;
JVM version:16-ea&lt;br/&gt;
JDI version: 16.0&lt;br/&gt;
JVM description: Java Debug Interface (Reference Implementation) version 16.0 &lt;br/&gt;
Java Debug Wire Protocol (Reference Implementation) version 16.0&lt;br/&gt;
JVM Debug Interface version 16.0&lt;br/&gt;
JVM version 16-ea (Java HotSpot(TM) 64-Bit Server VM, mixed mode, sharing)&lt;br/&gt;
Howdy!&lt;br/&gt;
Goodbye from AfterDeathTarg!&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
test result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.Exception: AfterThreadDeathTest: failed&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5109803">JDK-8315832</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5109809">JDK-8315838</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5112071">JDK-8317825</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5112128">JDK-8317882</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117795">JDK-8322740</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5052176">JDK-8269005</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5038038">JDK-8258832</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5052176">JDK-8269005</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5038038">JDK-8258832</subtask>
                                                              <subtask id="5042278">JDK-8261925</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2kxrf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17317"><![CDATA[b02]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>