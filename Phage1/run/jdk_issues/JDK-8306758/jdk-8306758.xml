<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:52:18 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306758] com/sun/jdi/ConnectedVMs.java fails with &quot;Non-zero debuggee exitValue: 143&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306758</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test started failing in my stress testing in jdk-21+18:&lt;br/&gt;
&lt;br/&gt;
com/sun/jdi/ConnectedVMs.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:driver&lt;br/&gt;
----------messages:(7/229)----------&lt;br/&gt;
command: driver ConnectedVMs Kill&lt;br/&gt;
reason: User specified action: run driver ConnectedVMs Kill&lt;br/&gt;
started: Sat Apr 15 06:02:08 EDT 2023&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 25&lt;br/&gt;
finished: Sat Apr 15 06:02:08 EDT 2023&lt;br/&gt;
elapsed time (seconds): 0.318&lt;br/&gt;
----------configuration:(12/1238)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------System.out:(10/712)----------&lt;br/&gt;
create Kill&lt;br/&gt;
Testing Kill&lt;br/&gt;
vmOpts: &amp;#39;-Xmx768m -XX:MaxRAMPercentage=2.08333 -Dtest.boot.jdk=/work/local/jib-dcubed/install/jdk/19/36/bundles/macos-aarch64/jdk-19_macos-aarch64_bin.tar.gz/jdk-19.jdk/Contents/Home -Djava.io.tmpdir=/System/Volumes/Data/work/shared/bug_hunt/thread_SMR_stress/jdk21_exp.git/build/macosx-aarch64-normal-server-fastdebug/test-support/jtreg_open_test_jdk_jdk_svc/tmp -ea -esa&amp;#39;&lt;br/&gt;
javaOpts: &amp;#39;&amp;#39;&lt;br/&gt;
JVM version:21-internal&lt;br/&gt;
JDI version: 21.0&lt;br/&gt;
JVM description: Java Debug Interface (Reference Implementation) version 21.0&lt;br/&gt;
Java Debug Wire Protocol (Reference Implementation) version 21.0&lt;br/&gt;
JVM Debug Interface version 21.0&lt;br/&gt;
JVM version 21-internal (Java HotSpot(TM) 64-Bit Server VM, mixed mode, sharing)&lt;br/&gt;
----------System.err:(15/779)----------&lt;br/&gt;
[1ms] run args: [InstTarg]&lt;br/&gt;
java.lang.RuntimeException: Non-zero debuggee exitValue: 143&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestScaffold.waitForVMDisconnect(TestScaffold.java:724)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestScaffold.resumeToVMDisconnect(TestScaffold.java:952)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at ConnectedVMs.runTests(ConnectedVMs.java:97)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestScaffold.startTests(TestScaffold.java:434)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at ConnectedVMs.main(ConnectedVMs.java:48)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:1592)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.RuntimeException: Non-zero debuggee exitValue: 143</description>
                <environment></environment>
        <key id="5099276">JDK-8306758</key>
            <summary>com/sun/jdi/ConnectedVMs.java fails with &quot;Non-zero debuggee exitValue: 143&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cjplummer">Chris Plummer</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Mon, 24 Apr 2023 08:38:14 -0700</created>
                <updated>Thu, 20 Jul 2023 16:45:00 -0700</updated>
                            <resolved>Wed, 10 May 2023 12:13:57 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14580643" author="dukebot" created="Wed, 10 May 2023 12:13:56 -0700"  >Changeset: 26883648&lt;br/&gt;
Author:    Chris Plummer &amp;lt;&lt;a href=&apos;mailto:cjplummer@openjdk.org&apos;&gt;cjplummer@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-10 19:09:24 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/268836482d0688bd1952bf634ceee4463dfca66f&quot;&gt;https://git.openjdk.org/jdk/commit/268836482d0688bd1952bf634ceee4463dfca66f&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14579536" author="roboduke" created="Fri, 5 May 2023 18:14:09 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13848&quot;&gt;https://git.openjdk.org/jdk/pull/13848&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-05 22:21:36 +0000</comment>
                            <comment id="14578418" author="dcubed" created="Tue, 2 May 2023 12:08:29 -0700"  >&amp;gt; That is why sometimes Dan sees the 143 exit code. &lt;br/&gt;
&lt;br/&gt;
This test failure only occurs during my stress kit runs on my macosx-aarch64 machine.&lt;br/&gt;
The test suite that I&amp;#39;m running is open/test/hotspot/jtreg/vmTestbase/nsk/jdi and it&amp;#39;s&lt;br/&gt;
executed with a concurrency of 12. At the same time, there are three other java stress&lt;br/&gt;
processes running: one is executing &amp;#39;release&amp;#39; bits, one is executing &amp;#39;fastdebug&amp;#39; bits and&lt;br/&gt;
one is executing &amp;#39;slowdebug&amp;#39; bits.&lt;br/&gt;
&lt;br/&gt;
Basically the machine is swamped.</comment>
                            <comment id="14578130" author="dholmes" created="Mon, 1 May 2023 19:10:27 -0700"  >If being suspended means the signal is blocked (it shouldn&amp;#39;t!) then you can easily imagine that when you send the signal the OS selects one thread at &amp;quot;random&amp;quot; to deliver it to and you then start to resume the threads - one of which will process the signal and one of which will do the normal exit. Hence the race is evident in that scenario.&lt;br/&gt;
&lt;br/&gt;
But the issue is that any thread in the VM should be able to process the TERM, and the Java threads should not be blocking TERM just because they are suspended.&lt;br/&gt;
&lt;br/&gt;
Investigating ...&lt;br/&gt;
&lt;br/&gt;
Update: I mistakenly thought the TERM signal was not processed directly by the JVM but it is. So the signal is not blocked as such, rather the Signal thread can&amp;#39;t respond to it because it is suspended just like the other Java threads. So you have a race which depends on the order in which the Java threads get resumed, and the amount of work involved in a normal exit (by the main thread) and termination initiated by the Signal thread (which has to create a new Java thread to call ShutDown.exit.).&lt;br/&gt;
&lt;br/&gt;
Edit: contrary to what I mis-wrote before, signal handlers are per-process so any thread (with the signal unblocked) will do the right thing. Even the main process thread (which is not attached to the VM) can process these signals.</comment>
                            <comment id="14578104" author="cjplummer" created="Mon, 1 May 2023 15:03:47 -0700"  >I just replicated the 0 exitCode using jdb. I ran simple test program as follows:&lt;br/&gt;
&lt;br/&gt;
java -agentlib:jdwp=transport=dt_socket,address=5000,server=y Test&lt;br/&gt;
&lt;br/&gt;
And then I ran jdb:&lt;br/&gt;
&lt;br/&gt;
$ jdb -attach 5000&lt;br/&gt;
main[1] stop at Test:4&lt;br/&gt;
Deferring breakpoint Test:4.&lt;br/&gt;
It will be set after the class is loaded.&lt;br/&gt;
main[1] run&lt;br/&gt;
&amp;gt; Set deferred breakpoint Test:4&lt;br/&gt;
Breakpoint hit: &amp;quot;thread=main&amp;quot;, Test.main(), line=4 bci=0&lt;br/&gt;
4            System.out.println(&amp;quot;Entering &amp;quot;);&lt;br/&gt;
&lt;br/&gt;
At this point I used &amp;quot;kill -TERM &amp;lt;pid&amp;gt;&amp;quot; on the debuggee. There was no immediate affect. The debuggee was still running (although threads were suspended) and jdb was still at the command prompt. I that point I did a continue from jdb:&lt;br/&gt;
&lt;br/&gt;
main[1] cont&lt;br/&gt;
&amp;gt; &lt;br/&gt;
The application exited&lt;br/&gt;
&lt;br/&gt;
And on the debuggee side the app exited cleanly, including execution of a println that was after the breakpoint, and $? was 0. It looks like there is a race on the debuggee side that allows the debuggee to usually exit cleanly before the -TERM handling is completed.&lt;br/&gt;
&lt;br/&gt;
The test does a Process.destroy() followed immediately by a vm.resume(). I think the resume is happening (and the debuggee doing a clean exit with exitcode 0) before the TERM signal is done doing all its work (termination of the app and clean shutdown of the jvm with exitcode 143). That is why sometimes Dan sees the 143 exit code. With this in mind I added a 2 second sleep before the debuggee exits. Now it gets 143 every time.  Probably this sleep should be left in place, and I should find a way to get this test to pass even with this exitcode. I could rev the exitcode check I added to TestScaffold with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8305209&quot; title=&quot;JDWP exit error AGENT_ERROR_INVALID_THREAD(203): missing entry in running thread table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8305209&quot;&gt;&lt;strike&gt;JDK-8305209&lt;/strike&gt;&lt;/a&gt; so it allows 143.</comment>
                            <comment id="14578077" author="cjplummer" created="Mon, 1 May 2023 13:33:54 -0700"  >I did about 3000 runs of the test on macosx-aarch64-debug using mach5 and could not reproduce the failure.</comment>
                            <comment id="14578056" author="cjplummer" created="Mon, 1 May 2023 12:21:03 -0700"  >The test does the Process.destroy() while the process is suspended after a single step completed. If I change the debuggee so it instead sits in a while(true) loop and change the debugger side of the test to do a vm.resume() before the Process.destroy(), then I get the expected 143 exitValue every time. So it appears that for some reason doing a Process.destroy() while the debugger is suspended results in hiding this exit code as if the destroy was never done, although indications are that the destroy() is actually destroying the process (the java app is not exiting gracefully).</comment>
                            <comment id="14578048" author="cjplummer" created="Mon, 1 May 2023 11:28:29 -0700"  >From the shell I just tried a &amp;quot;kill -TERM &amp;lt;pid&amp;gt;&amp;quot; of a running java process. The exit code (as seen by using the bash &amp;quot;echo $?&amp;quot; command) was 143. So again, the issue actually seems to be that we don&amp;#39;t always see 143.</comment>
                            <comment id="14578042" author="cjplummer" created="Mon, 1 May 2023 11:08:41 -0700"  >JNIEXPORT jboolean JNICALL&lt;br/&gt;
Java_java_lang_ProcessHandleImpl_destroy0(JNIEnv *env,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jobject obj,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jlong jpid,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jlong startTime,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jboolean force) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pid_t pid = (pid_t) jpid;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int sig = (force == JNI_TRUE) ? SIGKILL : SIGTERM;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jlong start = Java_java_lang_ProcessHandleImpl_isAlive0(env, obj, jpid);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (start == startTime || start == 0 || startTime == 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (kill(pid, sig) &amp;lt; 0) ? JNI_FALSE : JNI_TRUE;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JNI_FALSE;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Since force is false in this case, SIGTERM is being used. However, I&amp;#39;m still not sure why only very rarely this results in exitValue being 143. For this test it usually ends up being 0 after doing the Process.destroy().</comment>
                            <comment id="14577868" author="cjplummer" created="Mon, 1 May 2023 09:57:26 -0700"  >Yes.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// pick a way to die based on the input arg.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (passName.equals(&amp;quot;Kill&amp;quot;)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vm().process().destroy();&lt;br/&gt;
&lt;br/&gt;
I need to figure out what role this is playing in the running of the test, and why we don&amp;#39;t see exitValue 143 every time.</comment>
                            <comment id="14577867" author="dcubed" created="Mon, 1 May 2023 09:49:24 -0700"  >Here&amp;#39;s the logs from my jdk-21+20 stress run sighting on macosx-aarch64:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-21+20_macosx-aarch64.8306758.zip&lt;br/&gt;
Archive:  jdk-21+20_macosx-aarch64.8306758.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30918  04-30-2023 10:00   jdk-21+20_3/failures.macosx-aarch64/ConnectedVMs.jtr.fastdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30918                     1 file&lt;br/&gt;
&lt;br/&gt;
According to the .jtr file for this latest failure:&lt;br/&gt;
&lt;br/&gt;
----------messages:(7/229)----------&lt;br/&gt;
command: driver ConnectedVMs Kill&lt;br/&gt;
reason: User specified action: run driver ConnectedVMs Kill&lt;br/&gt;
started: Sun Apr 30 10:00:43 EDT 2023&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 27&lt;br/&gt;
finished: Sun Apr 30 10:00:45 EDT 2023&lt;br/&gt;
elapsed time (seconds): 1.905&lt;br/&gt;
&lt;br/&gt;
so this test ran for 1.905 seconds which isn&amp;#39;t long enough for the JTREG failure&lt;br/&gt;
handler to get involved.&lt;br/&gt;
&lt;br/&gt;
Since this test invocation looks like:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;command: driver ConnectedVMs Kill&lt;br/&gt;
&lt;br/&gt;
is it possible that the test itself is generating that SIGTERM?</comment>
                            <comment id="14576183" author="dcubed" created="Mon, 24 Apr 2023 11:30:14 -0700"  >I _think_ SIGTERM is issued by the failure handler in JTREG. There are&lt;br/&gt;
no other artifacts for the failures. I&amp;#39;ll have to look at the execution times&lt;br/&gt;
for all three sightings...</comment>
                            <comment id="14576161" author="cjplummer" created="Mon, 24 Apr 2023 11:13:31 -0700"  >This is likely due to the extra checking of the debuggee process&amp;#39;s exitCode that was added to TestScaffold by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8305209&quot; title=&quot;JDWP exit error AGENT_ERROR_INVALID_THREAD(203): missing entry in running thread table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8305209&quot;&gt;&lt;strike&gt;JDK-8305209&lt;/strike&gt;&lt;/a&gt;. Previously this bad exitCode (143) would have gone undetected.&lt;br/&gt;
&lt;br/&gt;
ExitCode 143 seems to be due to a SIGTERM. I&amp;#39;m not sure when we ever issue this. Possibly jtreg does as part of the timeout handling, so this could be a timeout issue. The jtr file doesn&amp;#39;t offer much in the way of useful info as to why the debuggee exited. [~dcubed] Are there any other artifacts to look at?</comment>
                            <comment id="14576095" author="dcubed" created="Mon, 24 Apr 2023 08:42:58 -0700"  >Here&amp;#39;s the logs from my jdk-21+19 stress run sighting on macosx-aarch64:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-21+19_macosx-aarch64.8306758.zip&lt;br/&gt;
Archive:  jdk-21+19_macosx-aarch64.8306758.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30956  04-21-2023 08:42   jdk-21+19_1/failures.macosx-aarch64/ConnectedVMs.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30951  04-22-2023 10:04   jdk-21+19_2/failures.macosx-aarch64/ConnectedVMs.jtr.fastdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;61907                     2 files</comment>
                            <comment id="14576093" author="dcubed" created="Mon, 24 Apr 2023 08:40:34 -0700"  >Here&amp;#39;s the logs from my jdk-21+18 stress run sighting on macosx-aarch64:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-21+18_macosx-aarch64.8306758.zip&lt;br/&gt;
Archive:  jdk-21+18_macosx-aarch64.8306758.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30953  04-15-2023 06:02   jdk-21+18_2/failures.macosx-aarch64/ConnectedVMs.jtr.fastdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30953                     1 file</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5100633">JDK-8307857</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5097434">JDK-8305209</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100241">JDK-8307559</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100672">JDK-8307885</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="103538" name="jdk-21+18_macosx-aarch64.8306758.zip" size="3488" author="dcubed" created="Mon, 24 Apr 2023 08:40:29 -0700"/>
                            <attachment id="103539" name="jdk-21+19_macosx-aarch64.8306758.zip" size="6987" author="dcubed" created="Mon, 24 Apr 2023 08:58:04 -0700"/>
                            <attachment id="103654" name="jdk-21+20_macosx-aarch64.8306758.zip" size="3504" author="dcubed" created="Mon, 1 May 2023 09:46:18 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3192r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>