<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:42:22 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8322985] [BACKOUT] 8318562: Computational test more than 2x slower when AVX instructions are used</title>
                <link>https://bugs.openjdk.org/browse/JDK-8322985</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318562&quot; title=&quot;Computational test more than 2x slower when AVX instructions are used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318562&quot;&gt;&lt;strike&gt;JDK-8318562&lt;/strike&gt;&lt;/a&gt; broke implicit null checking for floating point conversions (cvt instructions).&lt;br/&gt;
&lt;br/&gt;
Tests crash with SEGV in &lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007fac4cda8afe, pid=3587986, tid=3589638&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0+27) (fastdebug build 22-ea+27-2262)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-ea+27-2262, compiled mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 18755 c2 java.awt.geom.Line2D.intersectsLine(Ljava/awt/geom/Line2D;)Z &lt;a href=&apos;mailto:java.desktop@22-ea&apos;&gt;java.desktop@22-ea&lt;/a&gt; (36 bytes) @ 0x00007fac4cda8afe [0x00007fac4cda8ac0+0x000000000000003e]&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/0db9c48f-6638-40d0-9a4b-bd9cc7533eb8-S39947/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/583b6396-b783-4894-899d-abfe6471de40/runs/610a295e-384f-48df-9949-0e9d7ebd14f1/testoutput/test-support/jck_runtime_api_java_awt/core.3587986)&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: --enable-preview -Djava.awt.headless=true -Xcomp -ea -esa -XX:CompileThreshold=100 -XX:+UnlockExperimentalVMOptions -XX:-TieredCompilation -XX:MaxRAMPercentage=4.16667 -XX:+EnableDynamicAgentLoading -XX:TieredStopAtLevel=1 -Xms32m -Xmx1024m -Djdk.attach.allowAttachSelf=true -Djava.security.properties=/opt/mach5/mesos/work_dir/jib-master/install/jck/22/b14/extra/bundles/JCK-extra-22.zip/JCK-extra-22/extra.security.properties -Djava.security.policy=/opt/mach5/mesos/work_dir/jib-master/install/jck/22/b14/bundles/JCK-runtime-22.jar/JCK-runtime-22/lib/jck.policy com.sun.jck.lib.multijvm.group.wrapper.ActiveMain -id 1 -host 100.73.200.120 -port 33093 -idleTimeout 1200000 -testTimeout 6000000&lt;br/&gt;
&lt;br/&gt;
Host: ol9-x64-558391, AMD EPYC 7J13 64-Core Processor, 12 cores, 23G, Oracle Linux Server release 9.2&lt;br/&gt;
Time: Sat Dec  9 22:44:58 2023 UTC elapsed time: 198.110719 seconds (0d 0h 3m 18s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007faba802a200):  JavaThread &amp;quot;CommandExecutor executeThread for command args: [-loadDir, /opt/mach5/mesos/work_dir/jib-master/install/jck/22/b14/bundles/JCK-runtime-22.jar/JCK-runtime-22/classes:, javasoft.sqe.tests.api.java.awt.geom.Line2DFloat.IntersectsLineTest, -TestCaseID, testCase4]&amp;quot;        [_thread_in_Java, id=3589638, stack(0x00007fac33a3f000,0x00007fac33b3f000) (1024K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fac33a3f000,0x00007fac33b3f000],  sp=0x00007fac33b3d3a0,  free space=1016k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
J 18755 c2 java.awt.geom.Line2D.intersectsLine(Ljava/awt/geom/Line2D;)Z &lt;a href=&apos;mailto:java.desktop@22-ea&apos;&gt;java.desktop@22-ea&lt;/a&gt; (36 bytes) @ 0x00007fac4cda8afe [0x00007fac4cda8ac0+0x000000000000003e]&lt;br/&gt;
j  javasoft.sqe.tests.api.java.awt.geom.Line2DFloat.IntersectsLineTest.testCase4()Ljavasoft/sqe/javatest/Status;+63&lt;br/&gt;
J 3779 c2 java.lang.invoke.DirectMethodHandle$Holder.invokeVirtual(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (14 bytes) @ 0x00007fac4d6b6b54 [0x00007fac4d6b6ae0+0x0000000000000074]&lt;br/&gt;
J 3782 c2 java.lang.invoke.LambdaForm$MH+0x00007fabf300e000.invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (35 bytes) @ 0x00007fac4d6b9d44 [0x00007fac4d6b9ca0+0x00000000000000a4]&lt;br/&gt;
J 2070 c2 java.lang.invoke.Invokers$Holder.invokeExact_MT(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (23 bytes) @ 0x00007fac4d2bcb84 [0x00007fac4d2bcb00+0x0000000000000084]&lt;br/&gt;
J 9466 c2 jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (92 bytes) @ 0x00007fac4dff7994 [0x00007fac4dff78c0+0x00000000000000d4]&lt;br/&gt;
J 3772 c2 javasoft.sqe.javatest.lib.MultiTest.invokeTestCase(Ljava/lang/reflect/Method;)Ljavasoft/sqe/javatest/Status; (15 bytes) @ 0x00007fac4d6b56e8 [0x00007fac4d6b5520+0x00000000000001c8]&lt;br/&gt;
J 17623 c2 javasoft.sqe.javatest.lib.MultiTest.run([Ljava/lang/String;Ljava/io/PrintWriter;Ljava/io/PrintWriter;)Ljavasoft/sqe/javatest/Status; (293 bytes) @ 0x00007fac4df695dc [0x00007fac4df692c0+0x000000000000031c]&lt;br/&gt;
J 3692 c2 java.lang.invoke.LambdaForm$DMH+0x00007fabf300c400.invokeVirtual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (20 bytes) @ 0x00007fac4d68db40 [0x00007fac4d68dae0+0x0000000000000060]&lt;br/&gt;
J 17605 c2 java.lang.invoke.LambdaForm$MH+0x00007fabf3291000.invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (103 bytes) @ 0x00007fac4d77b968 [0x00007fac4d77b880+0x00000000000000e8]&lt;br/&gt;
J 3739 c2 java.lang.invoke.LambdaForm$MH+0x00007fabf300dc00.invokeExact_MT(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (28 bytes) @ 0x00007fac4d69f6a4 [0x00007fac4d69f600+0x00000000000000a4]&lt;br/&gt;
J 9466 c2 jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (92 bytes) @ 0x00007fac4dff7a48 [0x00007fac4dff78c0+0x0000000000000188]&lt;br/&gt;
J 8009 c2 com.sun.jck.lib.ExecJCKTestSameJVMCmd$Version2Test.execute([Ljava/lang/String;Ljava/io/PrintWriter;Ljava/io/PrintWriter;)Lcom/sun/javatest/Status; (137 bytes) @ 0x00007fac4dec8540 [0x00007fac4dec7ec0+0x0000000000000680]&lt;br/&gt;
J 3685 c2 com.sun.jck.lib.ExecJCKTestSameJVMCmd$StandardTest.run([Ljava/lang/String;Ljava/io/PrintWriter;Ljava/io/PrintWriter;)Lcom/sun/javatest/Status; (320 bytes) @ 0x00007fac4d68576c [0x00007fac4d685700+0x000000000000006c]&lt;br/&gt;
J 4069 c2 com.sun.jck.lib.ExecJCKTestSameJVMCmd.execute(Ljava/lang/ClassLoader;Ljava/lang/String;[Ljava/lang/String;Ljava/io/PrintWriter;Ljava/io/PrintWriter;I)Lcom/sun/javatest/Status; (414 bytes) @ 0x00007fac4d7547c4 [0x00007fac4d754480+0x0000000000000344]&lt;br/&gt;
J 8004 c2 com.sun.jck.lib.ExecJCKTestSameJVMCmd.run([Ljava/lang/String;Ljava/io/PrintWriter;Ljava/io/PrintWriter;)Lcom/sun/javatest/Status; (1182 bytes) @ 0x00007fac4ded3288 [0x00007fac4decf700+0x0000000000003b88]&lt;br/&gt;
J 3350 c2 com.sun.javatest.agent.Agent$CommandExecutor.lambda$execute$1()V (190 bytes) @ 0x00007fac4d5a5fec [0x00007fac4d5a5f20+0x00000000000000cc]&lt;br/&gt;
J 18700 c2 com.sun.javatest.agent.Agent$CommandExecutor$$Lambda+0x00007fabf3009f20.run()V (8 bytes) @ 0x00007fac4e55828c [0x00007fac4e558240+0x000000000000004c]&lt;br/&gt;
J 2816 c2 java.lang.Thread.run()V &lt;a href=&apos;mailto:java.base@22-ea&apos;&gt;java.base@22-ea&lt;/a&gt; (23 bytes) @ 0x00007fac4d487264 [0x00007fac4d4871c0+0x00000000000000a4]&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007fac4cc4bd21&lt;br/&gt;
V  [libjvm.so+0xe82f59]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x4a9&lt;br/&gt;
V  [libjvm.so+0xe83615]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x345&lt;br/&gt;
V  [libjvm.so+0xe83836]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x76&lt;br/&gt;
V  [libjvm.so+0xfec673]  thread_entry(JavaThread*, JavaThread*)+0x93&lt;br/&gt;
V  [libjvm.so+0xeb7fcc]  JavaThread::thread_main_inner()+0xcc&lt;br/&gt;
V  [libjvm.so+0x179cbb6]  Thread::call_run()+0xb6&lt;br/&gt;
V  [libjvm.so+0x14a6f47]  thread_native_entry(Thread*)+0x127&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x000000000000000c&lt;br/&gt;
&lt;br/&gt;
Registers:&lt;br/&gt;
RAX=0x00007fabe9701478, RBX=0x00007fabe9701478, RCX=0xfffffffffffffff5, RDX=0x0000000000000000&lt;br/&gt;
RSP=0x00007fac33b3d3a0, RBP=0x00007fac33b3d418, RSI=0x00000000fff38d78, RDI=0x00007faba802a200&lt;br/&gt;
R8 =0x00007faba8030260, R9 =0x0000000000000004, R10=0x00007fabf2000000, R11=0x00007fac4cda8ae0&lt;br/&gt;
R12=0x0000000000000000, R13=0x00007fac33b3d3c0, R14=0x00007fabe88907c8, R15=0x00007faba802a200&lt;br/&gt;
RIP=0x00007fac4cda8afe, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000004&lt;br/&gt;
&amp;nbsp;&amp;nbsp;TRAPNO=0x000000000000000e&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5118075">JDK-8322985</key>
            <summary>[BACKOUT] 8318562: Computational test more than 2x slower when AVX instructions are used</summary>
                <type id="5" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14716&amp;avatarType=issuetype">Sub-task</type>
                            <parent id="5118231">JDK-8323116</parent>
                                    <priority id="1" iconUrl="https://bugs.openjdk.org/images/jbsImages/p1.png">P1</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thartmann">Tobias Hartmann</assignee>
                                    <reporter username="lmesnik">Leonid Mesnik</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>atr</label>
                            <label>c2</label>
                            <label>conformance</label>
                            <label>hgupdate-sync</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>regression</label>
                            <label>tier9</label>
                    </labels>
                <created>Wed, 3 Jan 2024 21:12:17 -0800</created>
                <updated>Thu, 25 Jan 2024 05:58:30 -0800</updated>
                            <resolved>Fri, 5 Jan 2024 07:41:45 -0800</resolved>
                                    <version>17.0.11</version>
                    <version>21.0.2</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                                <comments>
                            <comment id="14637936" author="thartmann" created="Sun, 7 Jan 2024 21:57:59 -0800"  >Thanks [~sviswanathan]! I created the REDO &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8323116&quot; title=&quot;[REDO] Computational test more than 2x slower when AVX instructions are used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8323116&quot;&gt;&lt;strike&gt;JDK-8323116&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14637845" author="sviswanathan" created="Fri, 5 Jan 2024 14:08:14 -0800"  >[~thartmann] Firstly, thanks a lot for quickly jumping in and taking care of this through backout and multiple backports.&lt;br/&gt;
The attached cvtfix.patch on top of 8318562 fixes the issue and retains the performance improvement. It basically forces the memory operand to be loaded in a register for AVX &amp;gt; 0 and only emits the register version while retaining the correct idiom for the register format to get the best perf. I will plan to prepare a redo patch sometime in near future and send towards jdk mainline.</comment>
                            <comment id="14637794" author="roboduke" created="Fri, 5 Jan 2024 10:00:35 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/431&quot;&gt;https://git.openjdk.org/jdk21u/pull/431&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-05 17:52:37 +0000</comment>
                            <comment id="14637762" author="roboduke" created="Fri, 5 Jan 2024 07:59:25 -0800"  >[jdk17u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
This reverts the patch that caused recently identified regression. Clean git revert on jdk17u-dev commit works without problems. GHA will sanity-check it.</comment>
                            <comment id="14637761" author="roboduke" created="Fri, 5 Jan 2024 07:58:30 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2103&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2103&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-05 15:54:28 +0000</comment>
                            <comment id="14637760" author="roboduke" created="Fri, 5 Jan 2024 07:56:58 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22/pull/33&quot;&gt;https://git.openjdk.org/jdk22/pull/33&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-05 15:50:39 +0000</comment>
                            <comment id="14637757" author="dukebot" created="Fri, 5 Jan 2024 07:41:44 -0800"  >Changeset: ed9f3243&lt;br/&gt;
Author:    Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-01-05 15:40:32 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ed9f3243f04718a50bbdc589437872f7215c0e08&quot;&gt;https://git.openjdk.org/jdk/commit/ed9f3243f04718a50bbdc589437872f7215c0e08&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14637727" author="roboduke" created="Fri, 5 Jan 2024 05:46:54 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17279&quot;&gt;https://git.openjdk.org/jdk/pull/17279&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-05 13:41:51 +0000</comment>
                            <comment id="14637725" author="thartmann" created="Fri, 5 Jan 2024 05:44:35 -0800"  >I think this is rather critical and a potential showstopper for JDK 17.0.11, 21.0.2 and 22. I&amp;#39;ll backout &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318562&quot; title=&quot;Computational test more than 2x slower when AVX instructions are used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318562&quot;&gt;&lt;strike&gt;JDK-8318562&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14637721" author="thartmann" created="Fri, 5 Jan 2024 05:06:04 -0800"  >ILW = SIGSEGV in compiled code because implicit null check is registered for the wrong instruction (regression), cvt instructions on x86 with UseAVX &amp;gt;= 1; easy to reproduce, -XX:UseAVX=0 -XX:-ImplicitNullChecks = HHM = P1</comment>
                            <comment id="14637720" author="thartmann" created="Fri, 5 Jan 2024 05:00:15 -0800"  >I was able to extract a simple test:&lt;br/&gt;
java -XX:CompileCommand=quiet -XX:CompileCommand=compileonly,Test::test -XX:CompileCommand=print,Test::setCurve -XX:-TieredCompilation -Xbatch Test.java&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f3da8dce144, pid=3855132, tid=3855133&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0+4) (fastdebug build 23-ea+4-173)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+4-173, mixed mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 84 c2 Test.test(LTest;)D (5 bytes) @ 0x00007f3da8dce144 [0x00007f3da8dce120+0x0000000000000024]&lt;br/&gt;
&lt;br/&gt;
I narrowed it down to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318562&quot; title=&quot;Computational test more than 2x slower when AVX instructions are used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318562&quot;&gt;&lt;strike&gt;JDK-8318562&lt;/strike&gt;&lt;/a&gt; in jdk-22+25-1954. Looks like that change broke implicit null checks.&lt;br/&gt;
&lt;br/&gt;
Before:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;# {method} {0x00007f1b010683e0} &amp;#39;test&amp;#39; &amp;#39;(LTest;)D&amp;#39; in &amp;#39;Test&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# parm0:    rsi:rsi   = &amp;#39;Test&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#           [sp+0x20]  (sp of caller)&lt;br/&gt;
&lt;br/&gt;
[...]&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f1b29184e3a:   cvtss2sd 0xc(%rsi),%xmm0            ; implicit exception: dispatches to 0x00007f1b29184e52&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;;*f2d {reexecute=0 rethrow=0 return_oop=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:get@4&apos;&gt;get@4&lt;/a&gt; (line 35)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@1&apos;&gt;test@1&lt;/a&gt; (line 39)&lt;br/&gt;
&lt;br/&gt;
After &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8318562&quot; title=&quot;Computational test more than 2x slower when AVX instructions are used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8318562&quot;&gt;&lt;strike&gt;JDK-8318562&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# {method} {0x00007ffb35060378} &amp;#39;test&amp;#39; &amp;#39;(LTest;)D&amp;#39; in &amp;#39;Test&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# parm0:    rsi:rsi   = &amp;#39;Test&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#           [sp+0x20]  (sp of caller)&lt;br/&gt;
&lt;br/&gt;
[...]&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007ffb64a09f40:   vxorpd %xmm0,%xmm0,%xmm0            ; implicit exception: dispatches to 0x00007ffb64a09f5c&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007ffb64a09f44:   vcvtss2sd 0xc(%rsi),%xmm0,%xmm0     ;*f2d {reexecute=0 rethrow=0 return_oop=0}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:get@4&apos;&gt;get@4&lt;/a&gt; (line 10)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;; - Test::&lt;a href=&apos;mailto:test@1&apos;&gt;test@1&lt;/a&gt; (line 14)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The implicit exception now points to the newly added vxorpd instead of the vcvtss2sd which then SIGSEGVs because rsi is null.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5118186">JDK-8323081</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118249">JDK-8323134</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118441">JDK-8323311</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5119212">JDK-8324004</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118187">JDK-8323082</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5118694">JDK-8323549</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5117520">JDK-8322479</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5112898">JDK-8318562</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5117526">JDK-8322484</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="107809" name="Test.java" size="1879" author="thartmann" created="Fri, 5 Jan 2024 06:13:13 -0800"/>
                            <attachment id="107813" name="cvtfix.patch" size="1677" author="sviswanathan" created="Fri, 5 Jan 2024 14:07:03 -0800"/>
                            <attachment id="107789" name="hs_err_pid3587986.log" size="135856" author="lmesnik" created="Wed, 3 Jan 2024 21:16:49 -0800"/>
                            <attachment id="107790" name="hs_err_pid3587988.log" size="133274" author="lmesnik" created="Wed, 3 Jan 2024 21:16:49 -0800"/>
                            <attachment id="107791" name="hs_err_pid3587989.log" size="133576" author="lmesnik" created="Wed, 3 Jan 2024 21:16:49 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17438"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="23031">22</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34f1n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>