<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:21:10 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8316304] (fs) Add support for BasicFileAttributes.creationTime() for Linux</title>
                <link>https://bugs.openjdk.org/browse/JDK-8316304</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>On Linux (kernel version 4.11 and better, glibc 2.28 and better) there is a Linux specific statx system call that supports reading the birth time of a file. We should add specific code on that platform to support reading the creation time for files on Linux. Windows and MacOSX already support this on the common filesystems.&lt;br/&gt;
&lt;br/&gt;
This code:&lt;br/&gt;
&lt;br/&gt;
import java.nio.file.*;&lt;br/&gt;
import java.nio.file.attribute.BasicFileAttributes;&lt;br/&gt;
&lt;br/&gt;
public class LastModified {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var attrs = Files.readAttributes(Path.of(args[0]), BasicFileAttributes.class);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.printf(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;created: %s\nmodified: %s\n%n&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attrs.creationTime(),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attrs.lastModifiedTime()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
... shows the last modified time as the creation time on Linux. Example sequence:&lt;br/&gt;
&lt;br/&gt;
$ echo testme &amp;gt; testing.txt&lt;br/&gt;
$ touch -m -t 200001010101 testing.txt&lt;br/&gt;
$ java LastModified testing.txt &lt;br/&gt;
created: 2000-01-01T00:01:00Z&lt;br/&gt;
modified: 2000-01-01T00:01:00Z&lt;br/&gt;
$ stat testing.txt | grep Birth&lt;br/&gt;
&amp;nbsp;Birth: 2023-09-14 17:43:04.893739324 +0200&lt;br/&gt;
&lt;br/&gt;
The expected output of the above program would be something resembling the &amp;quot;Birth:&amp;quot; time as shown by the native &amp;#39;stat&amp;#39; tool (which internally uses &amp;#39;statx&amp;#39;).</description>
                <environment></environment>
        <key id="5110345">JDK-8316304</key>
            <summary>(fs) Add support for BasicFileAttributes.creationTime() for Linux</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sgehwolf">Severin Gehwolf</assignee>
                                    <reporter username="sgehwolf">Severin Gehwolf</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>redhat-interest</label>
                            <label>release-note=yes</label>
                    </labels>
                <created>Thu, 14 Sep 2023 08:49:38 -0700</created>
                <updated>Wed, 24 Sep 2025 02:18:40 -0700</updated>
                            <resolved>Mon, 16 Oct 2023 00:43:17 -0700</resolved>
                                    <version>openjdk8u402</version>
                    <version>11.0.20</version>
                    <version>17.0.8</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                                                            <comments>
                            <comment id="14703984" author="goetz" created="Tue, 10 Sep 2024 10:03:49 -0700"  >[21u]&lt;br/&gt;
Note: the test was adapted not to use JEP 454 (FFM API). See also the description in the backport PR.</comment>
                            <comment id="14700310" author="bpb" created="Fri, 23 Aug 2024 08:37:58 -0700"  >[~syan] &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8338696&quot; title=&quot;(fs) BasicFileAttributes.creationTime() falls back to epoch if birth time is unavailable (Linux)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8338696&quot;&gt;&lt;strike&gt;JDK-8338696&lt;/strike&gt;&lt;/a&gt; fixes the issue of creationTime() returning the epoch instead of the last-modified time when the the statx(2) system call is supported but the file system does not store the creation time.</comment>
                            <comment id="14700196" author="JIRAUSER21405" created="Thu, 22 Aug 2024 20:24:46 -0700"  >On alinux3 system, the &amp;#39;/tmp&amp;#39; disk partition is mounted as tmpfs filesystem type, this filesystem type doesn&amp;#39;t support create time. Show as below:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&apos;mailto:yansendao@j66e07344&apos;&gt;yansendao@j66e07344&lt;/a&gt;:[jdk]&amp;gt; touch /tmp/file&lt;br/&gt;
&lt;a href=&apos;mailto:yansendao@j66e07344&apos;&gt;yansendao@j66e07344&lt;/a&gt;:[jdk]&amp;gt; stat /tmp/file &lt;br/&gt;
&amp;nbsp;&amp;nbsp;File: /tmp/file&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Size: 0               Blocks: 0          IO Block: 4096   regular empty file&lt;br/&gt;
Device: 2ch/44d Inode: 938412162   Links: 1&lt;br/&gt;
Access: (0664/-rw-rw-r--)  Uid: (  995/yansendao)   Gid: (  992/yansendao)&lt;br/&gt;
Access: 2024-08-23 11:21:47.402042707 +0800&lt;br/&gt;
Modify: 2024-08-23 11:21:47.402042707 +0800&lt;br/&gt;
Change: 2024-08-23 11:21:47.402042707 +0800&lt;br/&gt;
&amp;nbsp;Birth: -&lt;br/&gt;
&lt;a href=&apos;mailto:yansendao@j66e07344&apos;&gt;yansendao@j66e07344&lt;/a&gt;:[jdk]&amp;gt; java LastModified /tmp/file &lt;br/&gt;
created: 2024-08-23T03:21:47.402042707Z&lt;br/&gt;
modified: 2024-08-23T03:21:47.402042707Z&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&apos;mailto:yansendao@j66e07344&apos;&gt;yansendao@j66e07344&lt;/a&gt;:[jdk]&amp;gt; cat /etc/os-release &lt;br/&gt;
NAME=&amp;quot;Alibaba Cloud Linux&amp;quot;&lt;br/&gt;
VERSION=&amp;quot;3 (Soaring Falcon)&amp;quot;&lt;br/&gt;
ID=&amp;quot;alinux&amp;quot;&lt;br/&gt;
ID_LIKE=&amp;quot;rhel fedora centos anolis&amp;quot;&lt;br/&gt;
VERSION_ID=&amp;quot;3&amp;quot;&lt;br/&gt;
UPDATE_ID=&amp;quot;9&amp;quot;&lt;br/&gt;
PLATFORM_ID=&amp;quot;platform:al8&amp;quot;&lt;br/&gt;
PRETTY_NAME=&amp;quot;Alibaba Cloud Linux 3 (Soaring Falcon)&amp;quot;&lt;br/&gt;
ANSI_COLOR=&amp;quot;0;31&amp;quot;&lt;br/&gt;
HOME_URL=&amp;quot;&lt;a href=&quot;https://www.aliyun.com/&quot;&gt;https://www.aliyun.com/&lt;/a&gt;&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&apos;mailto:yansendao@j66e07344&apos;&gt;yansendao@j66e07344&lt;/a&gt;:[jdk]&amp;gt; df -h /tmp/&lt;br/&gt;
Filesystem      Size  Used Avail Use% Mounted on&lt;br/&gt;
tmpfs            94G  1.6G   93G   2% /tmp</comment>
                            <comment id="14643800" author="sgehwolf" created="Thu, 25 Jan 2024 09:24:24 -0800"  >Fix Request (OpenJDK 17u):&lt;br/&gt;
&lt;br/&gt;
Please approve this enhancement so as to support creation time on linux for JDK 17 users. The patch has been reviewed by Thomas Stuefe. The fix is medium risk as it changes the underlying system call from `stat64` to `statx` on Linux systems that support it. Systems without &amp;#39;statx&amp;#39; support fall back to &amp;#39;stat64&amp;#39; as before. It should be mentioned that on some filesystems (e.g. NFS) which don&amp;#39;t support birth time natively, the returned value might change (returned the modified time previously and returns &amp;#39;1970-01-01T00:00:00Z&amp;#39; after this patch), but that&amp;#39;s OK and according to spec in the javadoc. The benefits of getting parity with the native &amp;#39;stat&amp;#39; tool on Linux outweigh the risk, IMO. Note that the JDK build itself exercises this code well and would fail strangely if there was a problem with the basic functionality. The risk lies in changed behaviour of BasicFileAttributes.creationTime() which is clearly documented in it&amp;#39;s javadoc. Build testing has been performed on a variety of Linux/Unix systems. nio tests pass with this as well. This has shipped in JDK 21 with the 21.0.2 release (January). We haven&amp;#39;t seen any issues in JDK 22/21 since it&amp;#39;s been available. The follow-up fix for a testlib compile issue (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319922&quot; title=&quot;libCreationTimeHelper.so fails to link in JDK 21&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8319922&quot;&gt;&lt;strike&gt;JDK-8319922&lt;/strike&gt;&lt;/a&gt;) has been requested for approval as well.</comment>
                            <comment id="14643768" author="roboduke" created="Thu, 25 Jan 2024 07:13:28 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2175&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2175&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-25 15:05:49 +0000</comment>
                            <comment id="14621581" author="roboduke" created="Fri, 27 Oct 2023 02:09:13 -0700"  >[jdk21u-fix-request] Approval Request from Severin Gehwolf&lt;br/&gt;
Fix Request (21u):&lt;br/&gt;
Please approve this enhancement so as to support creation time on linux for JDK 21 users. The fix is medium risk as it changes the underlying system call from `stat64` to `statx` on Linux systems that support it. Systems without &amp;#39;statx&amp;#39; support fall back to &amp;#39;stat64&amp;#39; as before. It should be mentioned that on some filesystems which don&amp;#39;t support birt time natively, the returned value might change (returned the modified time previously and returns &amp;#39;1970-01-01T00:00:00Z&amp;#39; after this patch), but that&amp;#39;s OK and according to spec in the javadoc. The benefits of getting parity with the native &amp;#39;stat&amp;#39; tool on Linux outweigh the risk, IMO. Build testing has been performed on a variety of Linux/Unix systems. nio tests pass with this as well. We haven&amp;#39;t seen any issues in JDK 22 since it&amp;#39;s been integrated.</comment>
                            <comment id="14620148" author="roboduke" created="Mon, 23 Oct 2023 04:59:22 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/282&quot;&gt;https://git.openjdk.org/jdk21u/pull/282&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-23 11:53:06 +0000</comment>
                            <comment id="14619830" author="alanb" created="Fri, 20 Oct 2023 05:52:28 -0700"  >The spec is okay with any default so returning 1970-01-01T00:00:00Z or the file&amp;#39;s last modified time is okay.</comment>
                            <comment id="14619825" author="mbaesken" created="Fri, 20 Oct 2023 05:19:27 -0700"  >&amp;gt; Seems according to spec: &lt;a href=&quot;https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/attribute/BasicFileAttributes.html#creationTime()&quot;&gt;https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/attribute/BasicFileAttributes.html#creationTime()&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Hi [~sgehwolf], looks like jdk21 behaves currently not like the spec  (at least for my SLES15 example) but maybe you plan to backport &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316304&quot; title=&quot;(fs) Add support for BasicFileAttributes.creationTime() for Linux&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316304&quot;&gt;&lt;strike&gt;JDK-8316304&lt;/strike&gt;&lt;/a&gt;, then it would behave like what was documented.  Was still a bit surprised about the change (my goal was to check what it does on AIX).</comment>
                            <comment id="14619822" author="alanb" created="Fri, 20 Oct 2023 05:15:34 -0700"  >AFAIK, NFSv4 does support an attribute to represent the time that a file was created. So in theory it should be possible to get the birth time for a file on a network file system.&lt;br/&gt;
&lt;br/&gt;
In any case, the spec is setup to allow for cases where the file create time is supported at the &amp;quot;file system level&amp;quot; but not supported by a specific volume or underlying file system. It&amp;#39;s not possible to specify what the default should be when not supported so it&amp;#39;s whatever the OS returns.</comment>
                            <comment id="14619819" author="mbaesken" created="Fri, 20 Oct 2023 05:08:09 -0700"  >&amp;gt; What does the &amp;#39;stat&amp;#39; tool report on the NFS share? I.e. output of &amp;#39;stat testing.txt&amp;#39;.&lt;br/&gt;
&lt;br/&gt;
This is what we get on the NFS share on LINUX (SLES15.4) :&lt;br/&gt;
&lt;br/&gt;
stat testing.txt&lt;br/&gt;
&amp;nbsp;&amp;nbsp;File: testing.txt&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Size: 7         	Blocks: 0          IO Block: 65536  regular file&lt;br/&gt;
Device: 38h/56d	Inode: 2256648730  Links: 1&lt;br/&gt;
Access: (0644/-rw-r--r--)                                            Uid: / Gid:  &amp;lt;removed&amp;gt;&lt;br/&gt;
Access: 2023-10-20 12:31:59.629052000 +0200&lt;br/&gt;
Modify: 2000-01-01 01:01:00.000000000 +0100&lt;br/&gt;
Change: 2023-10-20 12:32:10.228086000 +0200&lt;br/&gt;
&amp;nbsp;Birth: -&lt;br/&gt;
&lt;br/&gt;
macOS 11.7.10 reports on the same file :&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Oct 20 12:31:59 2023&amp;quot; &lt;br/&gt;
&amp;quot;Jan  1 01:01:00 2000&amp;quot; &lt;br/&gt;
&amp;quot;Oct 20 12:32:10 2023&amp;quot; &lt;br/&gt;
&amp;quot;Jan  1 01:00:00 1970&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Do not really use Windows on those NFS share, I think it is not even set up here.</comment>
                            <comment id="14619816" author="sgehwolf" created="Fri, 20 Oct 2023 04:53:35 -0700"  >[~mbaesken] What does the &amp;#39;stat&amp;#39; tool report on the NFS share? I.e. output of &amp;#39;stat testing.txt&amp;#39;. Also what does Windows and/or Mac OSX - which support creationTime() - report on a not supported filesystems? This is what we should be looking at in terms of consistency. We could perhaps return last modified as before, but it would be arbitrary.</comment>
                            <comment id="14619812" author="sgehwolf" created="Fri, 20 Oct 2023 04:46:15 -0700"  >Seems according to spec: &lt;a href=&quot;https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/attribute/BasicFileAttributes.html#creationTime()&quot;&gt;https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/attribute/BasicFileAttributes.html#creationTime()&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Specifically:&lt;br/&gt;
&amp;quot;&amp;quot;&amp;quot;&lt;br/&gt;
If the file system implementation does not support a time stamp to indicate the time when the file was created then this method returns an implementation specific default value, typically the last-modified-time or a FileTime representing the epoch (1970-01-01T00:00:00Z).&lt;br/&gt;
&amp;quot;&amp;quot;&amp;quot;</comment>
                            <comment id="14619804" author="mbaesken" created="Fri, 20 Oct 2023 04:04:07 -0700"  >Unfortunately when testing.txt  is located on an NFS share we seem to get a regression; instead of  getting the birth time or at least  the old  modified time, we get this  :&lt;br/&gt;
On Linux SLES15.4  (5.14.21-150400.24.21-default)&lt;br/&gt;
&lt;br/&gt;
old behavior :&lt;br/&gt;
&lt;br/&gt;
jdk21-dev-build/images/jdk/bin/java LastModified testing.txt&lt;br/&gt;
created: 2000-01-01T00:01:00Z&lt;br/&gt;
modified: 2000-01-01T00:01:00Z&lt;br/&gt;
&lt;br/&gt;
new behavior after this patch :&lt;br/&gt;
&lt;br/&gt;
jdk22-dev-build/images/jdk/bin/java LastModified testing.txt&lt;br/&gt;
created: 1970-01-01T00:00:00Z&lt;br/&gt;
modified: 2000-01-01T00:01:00Z&lt;br/&gt;
&lt;br/&gt;
Created more than 50 years ago looks wrong , maybe we should in this case (Birth time seems to be missing/not stored) use the previously reported last modified time ?</comment>
                            <comment id="14619793" author="mbaesken" created="Fri, 20 Oct 2023 03:46:51 -0700"  >Looks like AIX is suffering from the same problem Linux had before this patch :&lt;br/&gt;
&lt;br/&gt;
jdk-build/images/jdk/bin/java  LastModified  testing.txt&lt;br/&gt;
created: 2023-10-20T10:43:32.904930816Z&lt;br/&gt;
modified: 2023-10-20T10:43:32.904930816Z&lt;br/&gt;
&lt;br/&gt;
On Linux  (tested on SLES15.4, kernel and glibc is new enough) I noticed that the &amp;#39;birth&amp;#39; is not stored when  testing.txt is located on some NFS share, is this a know issue (or limitation) ?</comment>
                            <comment id="14618289" author="dukebot" created="Mon, 16 Oct 2023 00:43:16 -0700"  >Changeset: 0275efac&lt;br/&gt;
Author:    Severin Gehwolf &amp;lt;&lt;a href=&apos;mailto:sgehwolf@openjdk.org&apos;&gt;sgehwolf@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-10-16 07:40:29 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0275efac882d263f85a723828a95d621f8dadbfb&quot;&gt;https://git.openjdk.org/jdk/commit/0275efac882d263f85a723828a95d621f8dadbfb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14612232" author="roboduke" created="Tue, 19 Sep 2023 06:58:37 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15792&quot;&gt;https://git.openjdk.org/jdk/pull/15792&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-18 17:05:11 +0000</comment>
                            <comment id="14611245" author="sgehwolf" created="Thu, 14 Sep 2023 08:54:21 -0700"  >Note that there is no way (AFAIK), to change the creation time after the file has been written (unlike Windows and MacOSX). So this feature tracks the feature of *reading* the creation time.</comment>
                            <comment id="14611241" author="sgehwolf" created="Thu, 14 Sep 2023 08:51:22 -0700"  >From the statx man page:&lt;br/&gt;
&lt;br/&gt;
VERSIONS&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;statx() was added to Linux in kernel 4.11; library support was added in glibc 2.28.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5114110">JDK-8319533</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120208">JDK-8324842</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5171788">JDK-8368522</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5114538">JDK-8319922</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137154">JDK-8338696</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5136286">JDK-8337966</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137366">JDK-8338879</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128473">JDK-8331533</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131946">JDK-8334339</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137372">JDK-8338884</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135249">JDK-8337275</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137240">JDK-8338767</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5128957">JDK-8331874</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i334nn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="228"><![CDATA[java.nio]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>