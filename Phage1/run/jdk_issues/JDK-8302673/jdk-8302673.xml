<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 08:50:56 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302673] [SuperWord] MaxReduction and MinReduction should vectorize for int</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302673</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I found this during the work of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302139&quot; title=&quot;Speed up SuperWord reduction tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302139&quot;&gt;&lt;strike&gt;JDK-8302139&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
See example Test.java&lt;br/&gt;
&lt;br/&gt;
./java -XX:-TieredCompilation -Xbatch -XX:CompileCommand=compileonly,Test::test -XX:+TraceSuperWord Test.java&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static int test(int[] data) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int res = 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 2; i &amp;lt; N-2; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int v = data[i] * 11;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res = Math.min(res, v);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return res;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
In TraceSuperWord, we can see that it tries to vectorize.&lt;br/&gt;
find_adjacent_refs: we detect the LoadI&lt;br/&gt;
extend_packlist: we extend to the MulI, but unfortunately not the MinI&lt;br/&gt;
combine_packs: combines the LoadI and MulI (we are missing the MinI)&lt;br/&gt;
filter_packs: rejects the whole vectorization because the MinI were not put in a pack, now the MulI has a non-vectorized use in the loop.&lt;br/&gt;
&lt;br/&gt;
A first analysis showed that maybe something with the order of the MinI is unexpected.&lt;br/&gt;
Maybe the inputs of the min / max get flipped, and it does not get detected correctly in SuperWord::reduction(Node* s1, Node* s2)&lt;br/&gt;
&lt;br/&gt;
This is both for Math.min and Math.max.&lt;br/&gt;
&lt;br/&gt;
The same example with float array does already vectorize.&lt;br/&gt;
&lt;br/&gt;
Double does not vectorize because of this issue: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8300865&quot; title=&quot;C2: product reduction in ProdRed_Double is not vectorized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8300865&quot;&gt;&lt;strike&gt;JDK-8300865&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
For long it did not even try to vectorize with SuperWord. Maybe because of this line in x86.ad:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (bt == T_LONG &amp;amp;&amp;amp; (UseAVX &amp;lt; 3 || !VM_Version::supports_avx512vlbwdq())) {&lt;br/&gt;
Yeah, probably. I have AVX512 on my laptop, but avx512vlbwdq is missing. So it would have to be tested on a machine that has that hardware support.</description>
                <environment></environment>
        <key id="5094376">JDK-8302673</key>
            <summary>[SuperWord] MaxReduction and MinReduction should vectorize for int</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rcastanedalo">Roberto Castaneda Lozano</assignee>
                                    <reporter username="epeter">Emanuel Peter</reporter>
                        <labels>
                            <label>c2-superword</label>
                            <label>performance</label>
                    </labels>
                <created>Thu, 16 Feb 2023 07:45:07 -0800</created>
                <updated>Thu, 1 Aug 2024 01:59:35 -0700</updated>
                            <resolved>Mon, 5 Jun 2023 00:10:00 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14586953" author="dukebot" created="Mon, 5 Jun 2023 00:09:59 -0700"  >Changeset: 3fa776d6&lt;br/&gt;
Author:    Roberto Casta&amp;#xF1;eda Lozano &amp;lt;&lt;a href=&apos;mailto:rcastanedalo@openjdk.org&apos;&gt;rcastanedalo@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-05 07:08:33 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3fa776d66a8eb117410025bca870b2e7f3f00517&quot;&gt;https://git.openjdk.org/jdk/commit/3fa776d66a8eb117410025bca870b2e7f3f00517&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14581139" author="roboduke" created="Fri, 12 May 2023 00:57:59 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13924&quot;&gt;https://git.openjdk.org/jdk/pull/13924&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-11 09:18:21 +0000</comment>
                            <comment id="14573823" author="rcastanedalo" created="Fri, 14 Apr 2023 05:38:30 -0700"  >Here is a prototype (WIP) that performs the same Ideal optimization without canonicalization: &lt;a href=&quot;https://github.com/openjdk/jdk/compare/master...robcasloz:jdk:JDK-8302673&quot;&gt;https://github.com/openjdk/jdk/compare/master...robcasloz:jdk:JDK-8302673&lt;/a&gt;. This approach has the advantage of not interfering with auto-vectorization (thus regaining the missing optimization reported in this RFE), and generally separating concerns (so that we do not need to e.g. reason within Ideal() about whether the involved nodes are part of a reduction chain). [~jbhateja] would you like me to take over this RFE?</comment>
                            <comment id="14573818" author="rcastanedalo" created="Fri, 14 Apr 2023 05:33:10 -0700"  >Re-opened, as this RFE is orthogonal to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8287087&quot; title=&quot;C2: perform SLP reduction analysis on-demand&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8287087&quot;&gt;&lt;strike&gt;JDK-8287087&lt;/strike&gt;&lt;/a&gt;, see &lt;a href=&quot;https://github.com/openjdk/jdk/pull/13120#discussion_r1166778814&quot;&gt;https://github.com/openjdk/jdk/pull/13120#discussion_r1166778814&lt;/a&gt;.</comment>
                            <comment id="14571101" author="jbhateja" created="Sat, 1 Apr 2023 03:11:40 -0700"  >Marking as duplicate of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8287087&quot; title=&quot;C2: perform SLP reduction analysis on-demand&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8287087&quot;&gt;&lt;strike&gt;JDK-8287087&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14570890" author="roboduke" created="Fri, 31 Mar 2023 00:35:31 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13260&quot;&gt;https://git.openjdk.org/jdk/pull/13260&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-31 07:30:30 +0000</comment>
                            <comment id="14570507" author="jbhateja" created="Wed, 29 Mar 2023 12:18:07 -0700"  >Min/MaxI1( Min/MaxI2(a,b), c) into Min/MaxI1( a, Min/MaxI2(b,c) ) looks like a canonicalizing transformation to supplement downstream optimization. We can prevent this if participating nodes are marked with reduction flags.&lt;br/&gt;
</comment>
                            <comment id="14569290" author="JIRAUSER19821" created="Fri, 24 Mar 2023 02:02:45 -0700"  >[~sviswanathan] thinks it is because of&lt;br/&gt;
&amp;quot;Force a right-spline graph&amp;quot; in MinINode::Ideal&lt;br/&gt;
&lt;br/&gt;
This transforms  MinI1( MinI2(a,b), c)  into  MinI1( a, MinI2(b,c) )&lt;br/&gt;
&lt;br/&gt;
But that then destroys the ordering we expect in SuperWord for reductions.&lt;br/&gt;
We need to figure out if the optimization in MinINode::Ideal has a good reason.&lt;br/&gt;
Maybe we can also improve the detection in SuperWord, and allow this reordering to be re-reordered there.&lt;br/&gt;
&lt;br/&gt;
We are discussing this because of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8302652&quot; title=&quot;[SuperWord] Reduction should happen after loop, when possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8302652&quot;&gt;&lt;strike&gt;JDK-8302652&lt;/strike&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/openjdk/jdk/pull/13056&quot;&gt;https://github.com/openjdk/jdk/pull/13056&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
What are your plans with this [~jbhateja] ?</comment>
                            <comment id="14560907" author="JIRAUSER19821" created="Fri, 17 Feb 2023 01:01:11 -0800"  >As discussed in email, I assign this to you, [~jbhateja]</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="5102313">JDK-8309295</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5093745">JDK-8302139</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102680" name="Test.java" size="554" author="epeter" created="Thu, 16 Feb 2023 07:45:40 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30f4r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>