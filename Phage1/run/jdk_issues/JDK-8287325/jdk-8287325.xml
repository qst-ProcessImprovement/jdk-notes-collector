<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:24:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8287325] AArch64: fix virtual threads with -XX:UseBranchProtection=pac-ret</title>
                <link>https://bugs.openjdk.org/browse/JDK-8287325</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The continuation freeze/thaw mechanism introduced with Loom moves the thread stack in memory. However when PAC is enabled on supported AArch64 CPUs, the saved LR on the stack contains a pointer authentication code signed with the stack pointer at the time the frame was created. After relocating a frame, we need to re-sign the LR with the new stack pointer. </description>
                <environment></environment>
        <key id="5075614">JDK-8287325</key>
            <summary>AArch64: fix virtual threads with -XX:UseBranchProtection=pac-ret</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="haosun">Hao Sun</assignee>
                                    <reporter username="ngasson">Nick Gasson</reporter>
                        <labels>
                            <label>aarch64-related</label>
                            <label>amazon-interest</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>loom</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Wed, 25 May 2022 06:31:30 -0700</created>
                <updated>Wed, 8 Jan 2025 02:34:04 -0800</updated>
                            <resolved>Sun, 24 Sep 2023 22:40:43 -0700</resolved>
                                    <version>19</version>
                    <version>21</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                                                                <comments>
                            <comment id="14679594" author="roboduke" created="Thu, 6 Jun 2024 12:12:42 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve PAC-RET support with Virtual Threads. Makes further Loom backports clean. All testing passes without branch protection, with branch protection with and without PAC-RET. Risk is on lower side: change touches the shared code, but in most (all?) cases only active under relevant feature flags.</comment>
                            <comment id="14679405" author="roboduke" created="Thu, 6 Jun 2024 01:25:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/671&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/671&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-06 08:20:25 +0000</comment>
                            <comment id="14613448" author="dukebot" created="Sun, 24 Sep 2023 22:40:42 -0700"  >Changeset: 481cfc79&lt;br/&gt;
Author:    Hao Sun &amp;lt;&lt;a href=&apos;mailto:haosun@openjdk.org&apos;&gt;haosun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-25 05:38:51 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/481cfc798533f5b3adae7cc4a076a98b0b3f9737&quot;&gt;https://git.openjdk.org/jdk/commit/481cfc798533f5b3adae7cc4a076a98b0b3f9737&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14583269" author="haosun" created="Mon, 22 May 2023 01:38:07 -0700"  >[~thartmann] Agree. Will fix it in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8308503&quot;&gt;https://bugs.openjdk.org/browse/JDK-8308503&lt;/a&gt; separately. Thanks.</comment>
                            <comment id="14581527" author="thartmann" created="Mon, 15 May 2023 03:54:30 -0700"  >I think the _rop_protection bug should be fixed separately.&lt;br/&gt;
&lt;br/&gt;
Updated ILW for this bug = Virtual threads don&amp;#39;t work with PAC-RET, non-default AArch64 build with PAC/RET, UseBranchProtection = &amp;quot;none&amp;quot; = HLL = P4</comment>
                            <comment id="14581289" author="lfoltan" created="Fri, 12 May 2023 11:08:53 -0700"  >[RT Triage]: moving to Compiler for their evaluation and triage.</comment>
                            <comment id="14581144" author="haosun" created="Fri, 12 May 2023 01:20:40 -0700"  >** My test&lt;br/&gt;
&lt;br/&gt;
I built jvm and tried &amp;quot;java --version&amp;quot; with the following matrix {Config X VM_option X Machine}.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Config = {--enable-branch-protection, null}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;VM_option = {-XX:UseBranchProtection=pac-ret, -XX:UseBranchProtection=standard}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Machine = {with-PAC, without-PAC}&lt;br/&gt;
&lt;br/&gt;
1) JVM builds: all passed&lt;br/&gt;
2) JVM execution with &amp;quot;java --version&amp;quot;: Only &amp;quot;Config=null, VM_option=pac-ret, Machine=without-PAC&amp;quot; crashed.&lt;br/&gt;
&lt;br/&gt;
** UseBranchProtection flag&lt;br/&gt;
&lt;br/&gt;
In my understanding, the code (&lt;a href=&quot;https://github.com/openjdk/jdk/blob/73491fa452e73cf7c02c577f4e3f1a34c02bea6d/src/hotspot/cpu/aarch64/vm_version_aarch64.cpp#LL464C1-L478C1&quot;&gt;https://github.com/openjdk/jdk/blob/73491fa452e73cf7c02c577f4e3f1a34c02bea6d/src/hotspot/cpu/aarch64/vm_version_aarch64.cpp#LL464C1-L478C1&lt;/a&gt;) implements Alan&amp;#39;s definition of &amp;quot;UseBranchProtection=pac-ret&amp;quot;, i.e. &amp;quot;pac-ret - PAC support, regardless if the system supports it or the java binary was compiled with PAC.&amp;quot;. See the comment in the initial PAC-RET patch(&lt;a href=&quot;https://github.com/openjdk/jdk/pull/6334#discussion_r767685235&quot;&gt;https://github.com/openjdk/jdk/pull/6334#discussion_r767685235&lt;/a&gt;)&lt;br/&gt;
&lt;br/&gt;
However, from the document &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/doc/building.md#branch-protection,&quot;&gt;https://github.com/openjdk/jdk/blob/master/doc/building.md#branch-protection,&lt;/a&gt; &amp;quot;In order to use Branch Protection features in the VM, --enable-branch-protection must be used.&amp;quot; Hence, for the failed case, where Config=null, we should disable &amp;quot;_rop_protection&amp;quot;, which is also what Dean suggested.&lt;br/&gt;
&lt;br/&gt;
I personally agree with Dean, i.e. for both &amp;quot;pac-ret&amp;quot; and &amp;quot;standard&amp;quot;, PAC should be only enabled if the hardware supports it and the java binary is compiled with PAC already.&lt;br/&gt;
&lt;br/&gt;
[~ahayward] [~aph], May I have your opinions? Thanks</comment>
                            <comment id="14581099" author="dlong" created="Thu, 11 May 2023 21:15:23 -0700"  >&lt;a href=&quot;https://github.com/openjdk/jdk/blob/73491fa452e73cf7c02c577f4e3f1a34c02bea6d/src/hotspot/cpu/aarch64/vm_version_aarch64.cpp#LL464C1-L478C1&quot;&gt;https://github.com/openjdk/jdk/blob/73491fa452e73cf7c02c577f4e3f1a34c02bea6d/src/hotspot/cpu/aarch64/vm_version_aarch64.cpp#LL464C1-L478C1&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
It looks like there is a bug when the feature is disable at build time.  The #else part for __ARM_FEATURE_PAC_DEFAULT gives a warning but doesn&amp;#39;t set _rop_protection back to false.  Maybe the &amp;quot;_rop_protection = true&amp;quot; should be inside the #ifdef __ARM_FEATURE_PAC_DEFAULT.</comment>
                            <comment id="14581063" author="coleenp" created="Thu, 11 May 2023 15:41:00 -0700"  >If it&amp;#39;s a build-time option, that&amp;#39;s different. The likelihood and workaround are LL, making it HLL?  impact high because it crashes (?)</comment>
                            <comment id="14580974" author="aph" created="Thu, 11 May 2023 08:27:24 -0700"  >It makes no sense at all for this to be a P2 bug.&lt;br/&gt;
&lt;br/&gt;
Making PAC/RET work with virtual threads is an enhancement, and PAC/RET is a non-default build-time option. I don&amp;#39;t know that any distribution of OpenJDK builds with it enabled.&lt;br/&gt;
</comment>
                            <comment id="14580216" author="lfoltan" created="Tue, 9 May 2023 07:12:49 -0700"  >[RT Triage]: ILW = HMM = P2</comment>
                            <comment id="14571579" author="roboduke" created="Tue, 4 Apr 2023 01:07:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13322&quot;&gt;https://git.openjdk.org/jdk/pull/13322&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-04 08:00:20 +0000</comment>
                            <comment id="14546384" author="ngasson" created="Mon, 19 Dec 2022 02:21:45 -0800"  >One workaround is to use the ZR register instead of SP (PACIAZ instruction).</comment>
                            <comment id="14546289" author="alanb" created="Sun, 18 Dec 2022 03:13:56 -0800"  >[~ngasson] We are starting to think about virtual threads as a permanent feature. An early step may be to enable VMContinuations by default, which means PAC-RET would have to be disabled completely until it is changed to sign with something other than the stack pointer. Is this still on your radar to re-examine?</comment>
                            <comment id="14501103" author="ngasson" created="Wed, 8 Jun 2022 06:07:59 -0700"  >For now we will just disable PAC-RET when --enable-preview is passed.</comment>
                            <comment id="14500784" author="roboduke" created="Tue, 7 Jun 2022 09:47:15 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.java.net/jdk/pull/9067&quot;&gt;https://git.openjdk.java.net/jdk/pull/9067&lt;/a&gt;&lt;br/&gt;
Date: 2022-06-07 16:42:14 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131413">JDK-8333869</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131503">JDK-8333945</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5076494">JDK-8288023</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5101417">JDK-8308503</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2x8o3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>