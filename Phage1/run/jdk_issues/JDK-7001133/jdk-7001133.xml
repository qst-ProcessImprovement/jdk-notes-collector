<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:25:47 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-7001133] OutOfMemoryError by CustomMediaSizeName implementation</title>
                <link>https://bugs.openjdk.org/browse/JDK-7001133</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>FULL PRODUCT VERSION :&lt;br/&gt;
java version &amp;quot;1.6.0_22&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_22-b04)&lt;br/&gt;
&lt;br/&gt;
ADDITIONAL OS VERSION INFORMATION :&lt;br/&gt;
Linux &amp;lt;user&amp;gt; 2.6.34.7-61.fc13.i686.PAE #1 SMP Tue Oct 19 04:24:06 UTC 2010 i686 i686 i386 GNU/Linux&lt;br/&gt;
&lt;br/&gt;
EXTRA RELEVANT SYSTEM CONFIGURATION :&lt;br/&gt;
Cups version 1.4.4 with four printers installed&lt;br/&gt;
&lt;br/&gt;
VM arguments:&lt;br/&gt;
-Xmx4m (reduce to get the OutOfMemoryError faster)&lt;br/&gt;
-XX:-HeapDumpOnOutOfMemoryError&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
There is a memory leak in class sun.print.CustomMediaSizeName that can be forced by using the PrintService.addPrintServiceAttributeListener().&lt;br/&gt;
&lt;br/&gt;
The constructor of class CustomMediaSizeName adds the name and itself into a static list. So with every creation the list gets bigger and bigger and will never be cleared.&lt;br/&gt;
Using the PrintService.addPrintServiceAttributeListener() always creates a set of ~60 instances of this class that will be added to the list.&lt;br/&gt;
&lt;br/&gt;
Using a HashMap would solve this problem, because there is no need to have thousands of &amp;quot;A4&amp;quot; media size names in memory.&lt;br/&gt;
&lt;br/&gt;
Source code (&lt;a href=&quot;http://www.docjar.com/html/api/sun/print/CustomMediaSizeName.java.html):&quot;&gt;http://www.docjar.com/html/api/sun/print/CustomMediaSizeName.java.html):&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
class CustomMediaSizeName extends MediaSizeName {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static ArrayList customStringTable = new ArrayList();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static ArrayList customEnumTable = new ArrayList();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private String choiceName;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private MediaSizeName mediaName;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private CustomMediaSizeName(int x) {&lt;br/&gt;
	super(x);&lt;br/&gt;
	&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private synchronized static int nextValue(String name) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customStringTable.add(name);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (customStringTable.size()-1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public CustomMediaSizeName(String name) {&lt;br/&gt;
	super(nextValue(name));&lt;br/&gt;
	customEnumTable.add(this);&lt;br/&gt;
	choiceName = null;&lt;br/&gt;
	mediaName = null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;....&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
see source code&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
REPRODUCIBILITY :&lt;br/&gt;
This bug can be reproduced always.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
package de.comsoft.cadas.tools;&lt;br/&gt;
&lt;br/&gt;
import javax.print.DocFlavor;&lt;br/&gt;
import javax.print.PrintService;&lt;br/&gt;
import javax.print.PrintServiceLookup;&lt;br/&gt;
import javax.print.event.PrintServiceAttributeEvent;&lt;br/&gt;
import javax.print.event.PrintServiceAttributeListener;&lt;br/&gt;
&lt;br/&gt;
public class TestCustomMediaSizeName&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;implements PrintServiceAttributeListener {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(final String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final TestCustomMediaSizeName test = new TestCustomMediaSizeName();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;test.run();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private void run() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final PrintService[] services = PrintServiceLookup.lookupPrintServices(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DocFlavor.SERVICE_FORMATTED.PRINTABLE, null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (final PrintService printService : services) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printService.addPrintServiceAttributeListener(this);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.sleep(Long.MAX_VALUE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (final InterruptedException ex) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// TODO Auto-generated catch block&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ex.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void attributeUpdate(final PrintServiceAttributeEvent pPsae) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// nothing&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4195877">JDK-7001133</key>
            <summary>OutOfMemoryError by CustomMediaSizeName implementation</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="prr">Philip Race</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>8-defer-approved</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>sf_040315</label>
                            <label>webbug</label>
                    </labels>
                <created>Thu, 18 Nov 2010 03:07:17 -0800</created>
                <updated>Wed, 30 Oct 2024 07:00:04 -0700</updated>
                            <resolved>Mon, 18 Dec 2023 04:13:54 -0800</resolved>
                                    <version>6u22</version>
                    <version>7</version>
                    <version>8</version>
                    <version>11</version>
                    <version>15</version>
                    <version>16</version>
                                    <fixVersion>23</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14656573" author="alexsch" created="Tue, 12 Mar 2024 00:57:33 -0700"  >[jdk21u-fix-request]&lt;br/&gt;
The fix allows to avoid OutOfMemoryError when a lot of different printers are installed in the operation system.&lt;br/&gt;
The fix has been tested on Ubuntu and MacOS. The `test test/jdk/javax/print/CustomMediaSizeNameOOMETest.java` passes with the fix and fails without the fix.&lt;br/&gt;
</comment>
                            <comment id="14656568" author="roboduke" created="Tue, 12 Mar 2024 00:46:13 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/349&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/349&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-12 07:41:55 +0000</comment>
                            <comment id="14635011" author="dukebot" created="Mon, 18 Dec 2023 04:13:53 -0800"  >Changeset: 10335f60&lt;br/&gt;
Author:    Alexander Scherbatiy &amp;lt;&lt;a href=&apos;mailto:alexsch@openjdk.org&apos;&gt;alexsch@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-12-18 12:11:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/10335f60f923aa4f315e64acb2bfd7bb06d47a1b&quot;&gt;https://git.openjdk.org/jdk/commit/10335f60f923aa4f315e64acb2bfd7bb06d47a1b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14617793" author="roboduke" created="Thu, 12 Oct 2023 09:01:24 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16167&quot;&gt;https://git.openjdk.org/jdk/pull/16167&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-12 15:51:28 +0000</comment>
                            <comment id="14378953" author="rpatil" created="Thu, 5 Nov 2020 02:52:03 -0800"  >Hi Phil,&lt;br/&gt;
Were you able to reproduce the issue with above steps?&lt;br/&gt;
I am increasing the priority as the issue is OOM crash and is reproducible in latest JDK consistently.</comment>
                            <comment id="14370856" author="rpatil" created="Mon, 28 Sep 2020 04:57:25 -0700"  >Here are more details:&lt;br/&gt;
- Tested it on Ubuntu 18.04.5 LTS using Virtual-box on Windows-10 host machine.&lt;br/&gt;
- You need to have at-least one printer added(Connecting to a physical printer is not required).&lt;br/&gt;
- On Ubuntu 18.04, you can add a generic printer by following these steps:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Go to Setting -&amp;gt; Devices -&amp;gt; Printers -&amp;gt; Add a Printer...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- The &amp;quot;Add Printer&amp;quot; window opens and after searching for few seconds, it shows a printer named &amp;quot;CUPS-BRF-Printer&amp;quot; (Generic Text-Only Printer)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Add this printer and we are good to run the test&lt;br/&gt;
- I have used -Xmx3m for the test. (-Xmx2m didn&amp;#39;t work but Xmx3m worked for me, see the logs below for details)&lt;br/&gt;
&lt;br/&gt;
Important note: You have to wait for a long time to see this issue. I got OOM after waiting for more than an hour(~70 minutes).&lt;br/&gt;
&lt;br/&gt;
Below is the test run output from my system:&lt;br/&gt;
&lt;br/&gt;
$ ~/sdks/OpenJDK/jdk-16/bin/java -version&lt;br/&gt;
openjdk version &amp;quot;16-ea&amp;quot; 2021-03-16&lt;br/&gt;
OpenJDK Runtime Environment (build 16-ea+16-712)&lt;br/&gt;
OpenJDK 64-Bit Server VM (build 16-ea+16-712, mixed mode, sharing)&lt;br/&gt;
&lt;br/&gt;
$ ~/sdks/OpenJDK/jdk-16/bin/javac TestCustomMediaSizeName.java &lt;br/&gt;
&lt;br/&gt;
$ ~/sdks/OpenJDK/jdk-16/bin/java -Xmx2m TestCustomMediaSizeName &lt;br/&gt;
Error occurred during initialization of VM&lt;br/&gt;
GC triggered before VM initialization completed. Try increasing NewSize, current value 1331K.&lt;br/&gt;
&lt;br/&gt;
$ ~/sdks/OpenJDK/jdk-16/bin/java -Xmx3m TestCustomMediaSizeName &lt;br/&gt;
Exception in thread &amp;quot;CUPS-BRF-Printer notifier&amp;quot; java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
	at java.base/sun.net.&lt;a href=&quot;http://www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3520)&quot;&gt;www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3520)&lt;/a&gt;&lt;br/&gt;
	at java.base/java.io.DataInputStream.readShort(DataInputStream.java:317)&lt;br/&gt;
	at java.desktop/sun.print.IPPPrintService.readIPPResponse(IPPPrintService.java:1971)&lt;br/&gt;
	at java.desktop/sun.print.IPPPrintService.opGetAttributes(IPPPrintService.java:1793)&lt;br/&gt;
	at java.desktop/sun.print.IPPPrintService.initAttributes(IPPPrintService.java:415)&lt;br/&gt;
	at java.desktop/sun.print.IPPPrintService.getAttributes(IPPPrintService.java:1193)&lt;br/&gt;
	at java.desktop/sun.print.ServiceNotifier.run(ServiceNotifier.java:131)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread &amp;quot;Keep-Alive-Timer&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread &amp;quot;PrinterListener&amp;quot;&lt;br/&gt;
^COpenJDK 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminated&lt;br/&gt;
^COpenJDK 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminated&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Also, observe that after the OOM Error, VM is in hung state and needs to be killed manually to get out of it.</comment>
                            <comment id="14370524" author="prr" created="Thu, 24 Sep 2020 15:51:52 -0700"  >Please provide exact details on what printer you have configured that reproduces this.&lt;br/&gt;
You didn&amp;#39;t use -Xmx4m like suggested above, did you ?&lt;br/&gt;
A 64 bit VM today won&amp;#39;t even start in that config</comment>
                            <comment id="14370523" author="prr" created="Thu, 24 Sep 2020 15:51:04 -0700"  >1) I can&amp;#39;t reproduce this but maybe it depends on the printer&lt;br/&gt;
2) I don&amp;#39;t get how this can grow without bounds unless you have thousands of printers.&lt;br/&gt;
If there&amp;#39;s a bug where we re-create for the same printer I don&amp;#39;t see it&lt;br/&gt;
3) I don&amp;#39;t see how adding the listener will trigger it.&lt;br/&gt;
I instrumented the constructor for this class it wasn&amp;#39;t called even once.&lt;br/&gt;
4) This is the only bug on this.&lt;br/&gt;
&lt;br/&gt;
Probably it should be closed as not reproducible since I can&amp;#39;t .. but I&amp;#39;ll keep it around in case&lt;br/&gt;
I get a chance to test it on some other config some day in the future.</comment>
                            <comment id="14370436" author="rpatil" created="Thu, 24 Sep 2020 04:55:31 -0700"  >Reopening the bug as the issue is seen with the latest JDK as well. Tested on Ubuntu-18.04 with the test case provided in the bug description.&lt;br/&gt;
Used JDK 16 Early-Access Build 16&lt;br/&gt;
&lt;br/&gt;
$ java -version&lt;br/&gt;
openjdk version &amp;quot;16-ea&amp;quot; 2021-03-16&lt;br/&gt;
OpenJDK Runtime Environment (build 16-ea+16-712)&lt;br/&gt;
OpenJDK 64-Bit Server VM (build 16-ea+16-712, mixed mode, sharing)&lt;br/&gt;
</comment>
                            <comment id="13887138" author="scfitch" created="Thu, 14 Jan 2016 03:07:22 -0800"  >No plans to address for this release family.&lt;br/&gt;
&lt;br/&gt;
If there is a concern, please open a new bug against JDK &amp;gt;= 8 and provide a test case.</comment>
                            <comment id="13536024" author="vdyakov" created="Sun, 10 Aug 2014 07:42:27 -0700"  >&amp;nbsp;- this is an issue reported against 7(7u),&lt;br/&gt;
&amp;nbsp;- there are now affected version 9 filed for this issue&lt;br/&gt;
&amp;nbsp;- 7u issues are transferred to Sustaining&lt;br/&gt;
Nevertheless if someone have a report against 9 - please reopen and add affectedVersion 9&lt;br/&gt;
or&lt;br/&gt;
7u specific escalations might be reopen to Sustaining</comment>
                            <comment id="13379272" author="vdyakov" created="Thu, 29 Aug 2013 12:23:03 -0700"  >These are all approved for deferral to JDK 9 so you can update the FixVersion to state JDK 9. &lt;br/&gt;
Kind regards,&lt;br/&gt;
Mathias</comment>
                            <comment id="13378954" author="vdyakov" created="Thu, 29 Aug 2013 12:17:57 -0700"  >These are all approved for deferral to JDK 9 so you can update the FixVersion to state JDK 9. &lt;br/&gt;
Kind regards,&lt;br/&gt;
Mathias</comment>
                            <comment id="13378878" author="vdyakov" created="Thu, 29 Aug 2013 12:08:52 -0700"  >These are all approved for deferral to JDK 9 so you can update the FixVersion to state JDK 9. &lt;br/&gt;
Kind regards,&lt;br/&gt;
Mathias</comment>
                            <comment id="13373089" author="vdyakov" created="Thu, 15 Aug 2013 09:44:47 -0700"  >Converted &amp;quot;8-client-defer-candidate&amp;quot; label to &amp;quot;8-defer-request&amp;quot; by SQE&amp;#39; OK.</comment>
                            <comment id="13372809" author="vdyakov" created="Thu, 15 Aug 2013 08:43:46 -0700"  >*This is anti-deferral criteria list*:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- P2&lt;br/&gt;
-------------- Engineering&amp;#39;s Criteria -------------------------------------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- tck-red labeled&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- conformance labeled&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- P3 regressions reported/labeled against jdk8&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- findbugs, parfait, eht labeled bugs&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- CAP &amp;lt;1 year reported&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- netbeans  &amp;lt;1 year reported &lt;br/&gt;
&lt;br/&gt;
Victor&lt;br/&gt;
----------------- SQE&amp;#39;s OK ---------------------------------&lt;br/&gt;
Yes, we are ok with that&lt;br/&gt;
&lt;br/&gt;
thanks, Mikhail&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5124643">JDK-8328537</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5142665">JDK-8343224</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10001" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Imported</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 15 Sep 2012 15:47:44 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10002" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Indexed</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 17 Jul 2012 13:15:11 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0lxyv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>127976</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="197"><![CDATA[2d]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>