<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:56:55 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306929] Avoid CleanClassLoaderDataMetaspaces safepoints when previous versions are shared</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306929</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When transforming/redefining classes a previous version list is linked together in the InstanceKlass if the original class is still used or shared. This difference between shared and used is not currently noted. This leads to a problem when doing concurrent class unloading, because during that we postpone some potential work to a safepoint (since we are not in one). This is the CleanClassLoaderDataMetaspaces and it is triggered by the ServiceThread if there is work to be done, for example if InstanceKlass::_has_previous_versions is true. &lt;br/&gt;
&lt;br/&gt;
Since we currently does not differentiate between shared and &amp;quot;in use&amp;quot; we always set _has_previous_versions if anything is on this list. This together with the fact that shared previous versions should never be cleaned out leads to this safepoint being triggered after every concurrent class unloading even though there is no work to be done.&lt;br/&gt;
&lt;br/&gt;
This can be avoided by making sure the _previous_versions list is only cleaned when there are non-shared classes on it.</description>
                <environment></environment>
        <key id="5099534">JDK-8306929</key>
            <summary>Avoid CleanClassLoaderDataMetaspaces safepoints when previous versions are shared</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sjohanss">Stefan Johansson</assignee>
                                    <reporter username="sjohanss">Stefan Johansson</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>metadata</label>
                    </labels>
                <created>Wed, 26 Apr 2023 07:26:55 -0700</created>
                <updated>Tue, 6 Aug 2024 02:04:12 -0700</updated>
                            <resolved>Thu, 4 May 2023 04:08:46 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14695941" author="roboduke" created="Mon, 5 Aug 2024 10:15:48 -0700"  >[jdk17u-fix-request] Approval Request from olivergillespie&lt;br/&gt;
Performance enhancement - avoids repeated unnecessary safepoints in reasonably common cases like when using JFR, seen in real applications. Originally landed in JDK21 so has had lots of bake time. Clean except for nullptr/NULL distinction, trivial to resolve. Simple change but in common path so some risk. Confirmed fix against included test and also reproducer from issue.</comment>
                            <comment id="14695413" author="roboduke" created="Fri, 2 Aug 2024 06:29:18 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2776&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2776&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-02 13:20:38 +0000</comment>
                            <comment id="14695179" author="JIRAUSER20804" created="Thu, 1 Aug 2024 09:29:27 -0700"  >Thanks for fixing this. We saw this issue when using JFR, which redefines some core classes on initialization, and from then on all Shenandoah cycles are guaranteed to have a CleanClassLoaderDataMetaspaces safepoint. It&amp;#39;s trivial to reproduce:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;public class Shen {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (true) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.gc();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.sleep(1000L);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
java -Xlog:safepoint -XX:+UseShenandoahGC Shen.java&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
[27.652s][info][safepoint] Safepoint &amp;quot;ShenandoahInitMark&amp;quot;, Time since last: 1002440825 ns, Reaching safepoint: 4065 ns, At safepoint: 50401 ns, Total: 54466 ns&lt;br/&gt;
[27.654s][info][safepoint] Safepoint &amp;quot;ShenandoahFinalMarkStartEvac&amp;quot;, Time since last: 1218379 ns, Reaching safepoint: 2309 ns, At safepoint: 162705 ns, Total: 165014 ns&lt;br/&gt;
[27.655s][info][safepoint] Safepoint &amp;quot;ShenandoahFinalRoots&amp;quot;, Time since last: 1064095 ns, Reaching safepoint: 1864 ns, At safepoint: 4681 ns, Total: 6545 ns&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
jcmd $pid JFR.check # initialize JFR to redefine some classes&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
[44.745s][info][safepoint] Safepoint &amp;quot;ShenandoahInitMark&amp;quot;, Time since last: 1001020033 ns, Reaching safepoint: 6497 ns, At safepoint: 46065 ns, Total: 52562 ns&lt;br/&gt;
[44.747s][info][safepoint] Safepoint &amp;quot;ShenandoahFinalMarkStartEvac&amp;quot;, Time since last: 1755369 ns, Reaching safepoint: 1693 ns, At safepoint: 158210 ns, Total: 159903 ns&lt;br/&gt;
[44.748s][info][safepoint] Safepoint &amp;quot;ShenandoahFinalRoots&amp;quot;, Time since last: 1241035 ns, Reaching safepoint: 1655 ns, At safepoint: 4835 ns, Total: 6490 ns&lt;br/&gt;
[44.749s][info][safepoint] Safepoint &amp;quot;CleanClassLoaderDataMetaspaces&amp;quot;, Time since last: 35124 ns, Reaching safepoint: 939 ns, At safepoint: 312719 ns, Total: 313658 ns&lt;br/&gt;
&lt;br/&gt;
... all cycles have CleanClassLoaderDataMetaspaces now&lt;br/&gt;
```</comment>
                            <comment id="14579027" author="dukebot" created="Thu, 4 May 2023 04:04:46 -0700"  >Changeset: 408cec51&lt;br/&gt;
Author:    Stefan Johansson &amp;lt;&lt;a href=&apos;mailto:sjohanss@openjdk.org&apos;&gt;sjohanss@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-04 11:00:44 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/408cec516bb5fd82fb6dcddeee934ac0c5ecffaf&quot;&gt;https://git.openjdk.org/jdk/commit/408cec516bb5fd82fb6dcddeee934ac0c5ecffaf&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14577619" author="roboduke" created="Fri, 28 Apr 2023 05:57:50 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13716&quot;&gt;https://git.openjdk.org/jdk/pull/13716&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-28 12:48:44 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5136196">JDK-8337882</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5133048">JDK-8335327</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5100115">JDK-8307448</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31a8j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>