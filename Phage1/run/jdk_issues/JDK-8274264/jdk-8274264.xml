<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:48:00 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8274264] Not all of G1 young collection verification honors the verification type</title>
                <link>https://bugs.openjdk.org/browse/JDK-8274264</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>VerifyGCType is a flag to control during which pauses to do verification.&lt;br/&gt;
&lt;br/&gt;
Verification before and after young collection checks this flag only for the &amp;quot;main&amp;quot; bulk of verification, not others.&lt;br/&gt;
&lt;br/&gt;
Eg. from G1CollectedHeap::verify_before_young_collection:&lt;br/&gt;
&lt;br/&gt;
void G1CollectedHeap::verify_before_young_collection(G1HeapVerifier::G1VerifyType type) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!VerifyBeforeGC) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Ticks start = Ticks::now();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_verifier-&amp;gt;verify_region_sets_optional();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_verifier-&amp;gt;verify_dirty_young_regions();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (VerifyRememberedSets) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log_info(gc, verify)(&amp;quot;[Verifying RemSets before GC]&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VerifyRegionRemSetClosure v_cl;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;heap_region_iterate(&amp;amp;v_cl);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_verifier-&amp;gt;verify_before_gc(type);         &amp;lt;---- !!!! only this call honors verification type&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_verifier-&amp;gt;check_bitmaps(&amp;quot;GC Start&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;verify_numa_regions(&amp;quot;GC Start&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;phase_times()-&amp;gt;record_verify_before_time_ms((Ticks::now() - start).seconds() * MILLIUNITS);&lt;br/&gt;
&lt;br/&gt;
Only the marked call honors the verification type. Everything else is executed unconditionally when VerifyBeforeGC is enabled. Similar with VerifyAfterGC.</description>
                <environment></environment>
        <key id="5059179">JDK-8274264</key>
            <summary>Not all of G1 young collection verification honors the verification type</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bstafford">Brian Stafford</assignee>
                                    <reporter username="tschatzl">Thomas Schatzl</reporter>
                        <labels>
                            <label>gc-g1</label>
                            <label>starter</label>
                    </labels>
                <created>Fri, 24 Sep 2021 00:55:25 -0700</created>
                <updated>Thu, 16 Mar 2023 00:17:28 -0700</updated>
                            <resolved>Thu, 9 Mar 2023 01:41:03 -0800</resolved>
                                    <version>18</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14565484" author="dukebot" created="Thu, 9 Mar 2023 01:41:01 -0800"  >Changeset: 34a92466&lt;br/&gt;
Author:    Ahmed Muhsin &amp;lt;36454324+&lt;a href=&apos;mailto:ahmedmuhsin@users.noreply.github.com&apos;&gt;ahmedmuhsin@users.noreply.github.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Thomas Schatzl &amp;lt;&lt;a href=&apos;mailto:tschatzl@openjdk.org&apos;&gt;tschatzl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-09 09:39:39 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/34a92466a615415b76c8cb6010ff7e6e1a1d63b4&quot;&gt;https://git.openjdk.org/jdk/commit/34a92466a615415b76c8cb6010ff7e6e1a1d63b4&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14565115" author="roboduke" created="Tue, 7 Mar 2023 11:46:58 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12818&quot;&gt;https://git.openjdk.org/jdk/pull/12818&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-01 22:24:03 +0000</comment>
                            <comment id="14511811" author="tschatzl" created="Thu, 21 Jul 2022 13:54:13 -0700"  >[~macarte]: sorry for the late answer, these two comments slipped through the cracks - I only noticed when going through issues, looking for a few easy cleanups. I really recommend posting questions about issues to the hotspot-gc-dev mailing list, as at least I&amp;#39;m getting quite a lot of automatic notifications from JBS at this point. Or just create a pull request.&lt;br/&gt;
&lt;br/&gt;
About your question: yes, the solution you suggest is roughly what is expected to be done here.</comment>
                            <comment id="14496550" author="JIRAUSER19300" created="Tue, 17 May 2022 07:17:51 -0700"  >Un-assigning from myself (on behalf of Ana Marsh), without some answers to the previously posted question we feel this is a non-starter</comment>
                            <comment id="14467196" author="JIRAUSER19300" created="Tue, 4 Jan 2022 17:36:38 -0800"  >[posted on behalf of Ana Marsh]&lt;br/&gt;
&lt;br/&gt;
I have a few clarifying questions about this issue.&lt;br/&gt;
&lt;br/&gt;
It appears that the best way to honor the verification type for all calls in this function would be to add a conditional statement that does similar logic to the type check happening in verify_before_gc(type).&lt;br/&gt;
&lt;br/&gt;
This would result in another if statement right after confirming that VerifyBeforeGC is enabled:&lt;br/&gt;
&lt;br/&gt;
void G1CollectedHeap::verify_before_young_collection(G1HeapVerifier::G1VerifyType type) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!VerifyBeforeGC) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!G1HeapVerifier::should_verify(type)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
.....&lt;br/&gt;
&lt;br/&gt;
Does this seem like the appropriate fix to the issue above? And if this is the case then it seems that we should remove passing the type to verify_before_gc(type), as that would be redundant?&lt;br/&gt;
&lt;br/&gt;
Furthermore, upon investigation of this issue I see that there are two calls that are not a function specific to G1HeapVerifier and are therefore not called with _verifier. These two functions are heap_region_iterate and verify_numa_regions. Is there a particular reason why these are instead defined in G1CollectedHeap?</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2uga3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>