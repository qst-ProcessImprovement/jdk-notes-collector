<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:55:07 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302732] sun/net/www/http/HttpClient/MultiThreadTest.java still failing intermittently</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302732</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>INFO: 11 have been used, with 6 becoming idle for more than 1s while using 5 threads to make concurrent connections&lt;br/&gt;
waiting for worker to shutdown at 1760ms&lt;br/&gt;
worker: 1 end at 1699ms,  elapsed since worker start: 1687ms, elapsed since accept: 1687ms, timeout exceeded: 1, successfuly handled 12/12 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 4 end at 1699ms,  elapsed since worker start: 1685ms, elapsed since accept: 1686ms, timeout exceeded: 1, successfuly handled 10/10 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 2 end at 1700ms,  elapsed since worker start: 1688ms, elapsed since accept: 1688ms, timeout exceeded: 1, successfuly handled 11/11 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 3 end at 1700ms,  elapsed since worker start: 1687ms, elapsed since accept: 1687ms, timeout exceeded: 1, successfuly handled 12/12 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 5 end at 1699ms,  elapsed since worker start: 1654ms, elapsed since accept: 1655ms, timeout exceeded: 1, successfuly handled 8/8 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 7: Shutdown at 5190ms&lt;br/&gt;
worker: 6: Shutdown at 5190ms&lt;br/&gt;
worker: 8: Shutdown at 5190ms&lt;br/&gt;
worker: 6 end at 5190ms,  elapsed since worker start: 3521ms, elapsed since accept: 3522ms, timeout exceeded: 0, successfuly handled 11/11 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 7 end at 5190ms,  elapsed since worker start: 3521ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 9/9 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 10: Shutdown at 5190ms&lt;br/&gt;
worker: 9: Shutdown at 5190ms&lt;br/&gt;
worker: 8 end at 5190ms,  elapsed since worker start: 3521ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 8/8 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 9 end at 5191ms,  elapsed since worker start: 3521ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 9/9 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 10 end at 5191ms,  elapsed since worker start: 3519ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 8/8 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
main thread end - 61858ms&lt;br/&gt;
----------System.err:(15/719)----------&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test complete.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Problem cleaning up the following threads:&lt;br/&gt;
Worker-0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.read(SocketInputStream.java:168)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.read(SocketInputStream.java:140)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.io.BufferedInputStream.read(BufferedInputStream.java:271)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at Worker.readUntil(MultiThreadTest.java:427)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at Worker.run(MultiThreadTest.java:469)&lt;br/&gt;
&lt;br/&gt;
result: Error. Error while cleaning up threads after test&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5094450">JDK-8302732</key>
            <summary>sun/net/www/http/HttpClient/MultiThreadTest.java still failing intermittently</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djelinski">Daniel Jelinski</assignee>
                                    <reporter username="dfuchs">Daniel Fuchs</reporter>
                        <labels>
                            <label>11u-tier2</label>
                            <label>noreg-hard</label>
                    </labels>
                <created>Fri, 17 Feb 2023 02:28:43 -0800</created>
                <updated>Thu, 11 Apr 2024 05:57:15 -0700</updated>
                            <resolved>Sun, 26 Feb 2023 23:53:34 -0800</resolved>
                                    <version>11.0.20-oracle</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14562978" author="dukebot" created="Sun, 26 Feb 2023 23:53:33 -0800"  >Changeset: a2c5a4ac&lt;br/&gt;
Author:    Daniel Jeli&#324;ski &amp;lt;&lt;a href=&apos;mailto:djelinski@openjdk.org&apos;&gt;djelinski@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-27 07:52:03 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a2c5a4ac9ee10281470f291f5a8f8393acea02cc&quot;&gt;https://git.openjdk.org/jdk/commit/a2c5a4ac9ee10281470f291f5a8f8393acea02cc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14561657" author="roboduke" created="Tue, 21 Feb 2023 03:44:05 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12676&quot;&gt;https://git.openjdk.org/jdk/pull/12676&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-20 19:38:35 +0000</comment>
                            <comment id="14561480" author="JIRAUSER19825" created="Mon, 20 Feb 2023 09:49:57 -0800"  >We still have a race in the keepalive cache.&lt;br/&gt;
&lt;br/&gt;
The keepalive sweeper thread terminates when it finds an empty cache after doing its job. The check for empty cache is performed without holding the cache lock.&lt;br/&gt;
&lt;br/&gt;
When a worker thread adds a connection to cache, it first acquires the lock, then checks if the sweeper thread is running (and start it if needed), then adds the connection to cache.&lt;br/&gt;
&lt;br/&gt;
When the sweeper thread is started, the cache is cleared. This is probably a safeguard to protect against situations where the cleaner thread dies for whatever reason.&lt;br/&gt;
&lt;br/&gt;
The race is as follows:&lt;br/&gt;
- the sweeper thread finishes removing connections from cache and releases the lock&lt;br/&gt;
- a worker thread acquires the lock, checks that the sweeper thread is alive&lt;br/&gt;
- the sweeper thread checks that the cache is empty and terminates&lt;br/&gt;
- the worker thread adds its connection to cache and releases the lock&lt;br/&gt;
- another worker thread acquires the lock, finds that the sweeper thread is dead, starts another sweeper thread and clears the cache, losing the recently added connection.&lt;br/&gt;
&lt;br/&gt;
The window of opportunity for this race is very short, which explains why we only saw this failure once. It can be increased by adding a few Thread.sleep() calls, but reproducing this with a regression test is next to impossible.</comment>
                            <comment id="14561017" author="dfuchs" created="Fri, 17 Feb 2023 05:54:46 -0800"  >Worker 0 didn&amp;#39;t finish in the 60s time slot main tried to join it at the end of the test. JTreg also gave up waiting on it.  The HttpClient of the HttpURLConnection or the KAC should have closed the connection after a while - which didn&amp;#39;t seem to happen for the connection created for Worker 0.</comment>
                            <comment id="14560961" author="dfuchs" created="Fri, 17 Feb 2023 02:30:21 -0800"  >Here is the whole log:&lt;br/&gt;
&lt;br/&gt;
----------System.out:(279/11775)----------&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 2ms)&lt;br/&gt;
server: Started worker 0&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 11ms)&lt;br/&gt;
server: Started worker 1&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 11ms)&lt;br/&gt;
server: Started worker 2&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 12ms)&lt;br/&gt;
server: Started worker 3&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 12ms)&lt;br/&gt;
server: Started worker 4&lt;br/&gt;
server: calling accept.&lt;br/&gt;
worker 1: Read request from client (204 bytes) at 12ms&lt;br/&gt;
worker 3: Read request from client (204 bytes) at 13ms&lt;br/&gt;
worker 4: Read request from client (204 bytes) at 13ms&lt;br/&gt;
worker 0: Read request from client (204 bytes) at 11ms&lt;br/&gt;
worker 2: Read request from client (204 bytes) at 12ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 0: Read request from client (204 bytes) at 39ms&lt;br/&gt;
worker 2: Read request from client (204 bytes) at 40ms&lt;br/&gt;
worker 1: Read request from client (204 bytes) at 41ms&lt;br/&gt;
worker 3: Read request from client (204 bytes) at 41ms&lt;br/&gt;
worker 4: Read request from client (204 bytes) at 41ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 43ms&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 43ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 43ms&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 43ms&lt;br/&gt;
server: return accept (at 43ms)&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
server: Started worker 5&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
server: calling accept.&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 44ms&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 44ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 45ms&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 45ms&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 45ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 47ms&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 47ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 47ms&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 48ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 48ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 48ms&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 49ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 49ms&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 49ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 49ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 50ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 50ms&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 51ms&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 51ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 51ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 52ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 52ms&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 52ms&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 53ms&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 53ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 53ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 54ms&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 54ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 54ms&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 54ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 54ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 55ms&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 55ms&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 56ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 56ms&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 56ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 3: Read request from client (205 bytes) at 57ms&lt;br/&gt;
worker 2: Read request from client (205 bytes) at 57ms&lt;br/&gt;
worker 5: Read request from client (205 bytes) at 57ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 1: Read request from client (205 bytes) at 57ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 4: Read request from client (205 bytes) at 57ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
server: return accept (at 1668ms)&lt;br/&gt;
server: Started worker 6&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 1669ms)&lt;br/&gt;
server: Started worker 7&lt;br/&gt;
server: calling accept.&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1669ms&lt;br/&gt;
server: return accept (at 1669ms)&lt;br/&gt;
server: Started worker 8&lt;br/&gt;
server: calling accept.&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1669ms&lt;br/&gt;
server: return accept (at 1669ms)&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1670ms&lt;br/&gt;
server: Started worker 9&lt;br/&gt;
server: calling accept.&lt;br/&gt;
server: return accept (at 1670ms)&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
server: Started worker 10&lt;br/&gt;
server: calling accept.&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1670ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1673ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1673ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1674ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1677ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1679ms&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1679ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1680ms&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1680ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1682ms&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1683ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1683ms&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1683ms&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1683ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1686ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1686ms&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1686ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1687ms&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1687ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1688ms&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1688ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1688ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1689ms&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1689ms&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1689ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1689ms&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1690ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1691ms&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1691ms&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1691ms&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1691ms&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1691ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 7: Read request from client (205 bytes) at 1692ms&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1693ms&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1693ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1693ms&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1693ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 10: Read request from client (205 bytes) at 1694ms&lt;br/&gt;
worker 9: Read request from client (205 bytes) at 1694ms&lt;br/&gt;
worker 8: Read request from client (205 bytes) at 1694ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1695ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker 6: Read request from client (205 bytes) at 1696ms&lt;br/&gt;
client: read 11 bytes&lt;br/&gt;
worker: 5: Shutdown at 1677ms&lt;br/&gt;
worker: 4: Shutdown at 1684ms&lt;br/&gt;
worker: 1: Shutdown at 1682ms&lt;br/&gt;
worker: 3: Shutdown at 1670ms&lt;br/&gt;
worker: 2: Shutdown at 1670ms&lt;br/&gt;
client: end at 1698ms, thread duration 1697ms&lt;br/&gt;
client: end at 1695ms, thread duration 1693ms&lt;br/&gt;
client: end at 1695ms, thread duration 1694ms&lt;br/&gt;
client: end at 1695ms, thread duration 1693ms&lt;br/&gt;
client: end at 1694ms, thread duration 1692ms&lt;br/&gt;
DONE at 1698ms&lt;br/&gt;
server: STE&lt;br/&gt;
Connections = 11&lt;br/&gt;
server: Shuting down at: 1724ms&lt;br/&gt;
Requests = 100&lt;br/&gt;
Connection count = 11 Request count = 100&lt;br/&gt;
Worker 0 may have timed out&lt;br/&gt;
Worker 1 may have timed out&lt;br/&gt;
Worker 2 may have timed out&lt;br/&gt;
Worker 3 may have timed out&lt;br/&gt;
Worker 4 may have timed out&lt;br/&gt;
Worker 5 may have timed out&lt;br/&gt;
Worker 6 has not timed out - last used at 1696&lt;br/&gt;
Worker 7 has not timed out - last used at 1693&lt;br/&gt;
Worker 8 has not timed out - last used at 1695&lt;br/&gt;
Worker 9 has not timed out - last used at 1694&lt;br/&gt;
Worker 10 has not timed out - last used at 1694&lt;br/&gt;
INFO: 11 have been used, with 6 becoming idle for more than 1s while using 5 threads to make concurrent connections&lt;br/&gt;
waiting for worker to shutdown at 1760ms&lt;br/&gt;
worker: 1 end at 1699ms,  elapsed since worker start: 1687ms, elapsed since accept: 1687ms, timeout exceeded: 1, successfuly handled 12/12 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 4 end at 1699ms,  elapsed since worker start: 1685ms, elapsed since accept: 1686ms, timeout exceeded: 1, successfuly handled 10/10 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 2 end at 1700ms,  elapsed since worker start: 1688ms, elapsed since accept: 1688ms, timeout exceeded: 1, successfuly handled 11/11 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 3 end at 1700ms,  elapsed since worker start: 1687ms, elapsed since accept: 1687ms, timeout exceeded: 1, successfuly handled 12/12 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 5 end at 1699ms,  elapsed since worker start: 1654ms, elapsed since accept: 1655ms, timeout exceeded: 1, successfuly handled 8/8 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 7: Shutdown at 5190ms&lt;br/&gt;
worker: 6: Shutdown at 5190ms&lt;br/&gt;
worker: 8: Shutdown at 5190ms&lt;br/&gt;
worker: 6 end at 5190ms,  elapsed since worker start: 3521ms, elapsed since accept: 3522ms, timeout exceeded: 0, successfuly handled 11/11 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 7 end at 5190ms,  elapsed since worker start: 3521ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 9/9 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 10: Shutdown at 5190ms&lt;br/&gt;
worker: 9: Shutdown at 5190ms&lt;br/&gt;
worker: 8 end at 5190ms,  elapsed since worker start: 3521ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 8/8 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 9 end at 5191ms,  elapsed since worker start: 3521ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 9/9 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
worker: 10 end at 5191ms,  elapsed since worker start: 3519ms, elapsed since accept: 3521ms, timeout exceeded: 0, successfuly handled 8/8 genuine requests, , mayHaveTimedOut: true&lt;br/&gt;
main thread end - 61858ms&lt;br/&gt;
----------System.err:(15/719)----------&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test complete.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Problem cleaning up the following threads:&lt;br/&gt;
Worker-0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.read(SocketInputStream.java:168)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.net.SocketInputStream.read(SocketInputStream.java:140)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at &lt;a href=&apos;mailto:java.base@11.0.20-ea&apos;&gt;java.base@11.0.20-ea&lt;/a&gt;/java.io.BufferedInputStream.read(BufferedInputStream.java:271)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at Worker.readUntil(MultiThreadTest.java:427)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;at Worker.run(MultiThreadTest.java:469)&lt;br/&gt;
&lt;br/&gt;
result: Error. Error while cleaning up threads after test&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="4936024">JDK-8185090</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5087491">JDK-8296943</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30fl7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="193"><![CDATA[java.net]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>