<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:07:56 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8303070] Memory leak in DCmdArgument&lt;char*&gt;::parse_value</title>
                <link>https://bugs.openjdk.org/browse/JDK-8303070</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Direct leak of 3 byte(s) in 1 object(s) allocated from:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x7fcbd10b89cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:69&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x7fcbcd6aefbf in os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&amp;amp;) src/hotspot/share/runtime/os.cpp:654&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x7fcbcb21dd17 in AllocateHeap(unsigned long, MEMFLAGS, NativeCallStack const&amp;amp;, AllocFailStrategy::AllocFailEnum) src/hotspot/share/memory/allocation.cpp:42&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x7fcbcb21dd17 in AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum) src/hotspot/share/memory/allocation.cpp:52&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x7fcbcbf7cf17 in DCmdArgument&amp;lt;char*&amp;gt;::parse_value(char const*, unsigned long, JavaThread*) src/hotspot/share/services/diagnosticArgument.cpp:186&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x7fcbcbf7cf17 in DCmdArgument&amp;lt;char*&amp;gt;::init_value(JavaThread*) src/hotspot/share/services/diagnosticArgument.cpp:194&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x7fcbcbfa9d92 in DCmdParser::add_dcmd_option(GenDCmdArgument*) src/hotspot/share/services/diagnosticFramework.cpp:165&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x7fcbcd4123ba in DCmdFactoryImpl&amp;lt;NMTDCmd&amp;gt;::create_resource_instance(outputStream*) const src/hotspot/share/services/diagnosticFramework.hpp:418&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x7fcbcbfad5d2 in DCmd::parse_and_execute(DCmdSource, outputStream*, char const*, char, JavaThread*) src/hotspot/share/services/diagnosticFramework.cpp:405&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x7fcbcb51604e in jcmd src/hotspot/share/services/attachListener.cpp:203&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x7fcbcb518abe in attach_listener_thread_entry src/hotspot/share/services/attachListener.cpp:427&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x7fcbcb518abe in attach_listener_thread_entry src/hotspot/share/services/attachListener.cpp:377&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x7fcbcc7b81e8 in JavaThread::thread_main_inner() src/hotspot/share/runtime/javaThread.cpp:710&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x7fcbcc7b861f in JavaThread::thread_main_inner() src/hotspot/share/runtime/javaThread.cpp:689&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#14 0x7fcbcc7b861f in JavaThread::run() src/hotspot/share/runtime/javaThread.cpp:695&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#15 0x7fcbce0639e5 in Thread::call_run() src/hotspot/share/runtime/thread.cpp:224&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#16 0x7fcbcd6c753f in thread_native_entry src/hotspot/os/linux/os_linux.cpp:740&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#17 0x7fcbd0ea7fd3 in start_thread nptl/pthread_create.c:442</description>
                <environment></environment>
        <key id="5094839">JDK-8303070</key>
            <summary>Memory leak in DCmdArgument&lt;char*&gt;::parse_value</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dholmes">David Holmes</assignee>
                                    <reporter username="jcking">Justin King</reporter>
                        <labels>
                            <label>dcmd</label>
                            <label>lsan</label>
                            <label>memory</label>
                    </labels>
                <created>Wed, 22 Feb 2023 05:40:52 -0800</created>
                <updated>Mon, 6 Mar 2023 11:46:50 -0800</updated>
                            <resolved>Wed, 1 Mar 2023 13:47:16 -0800</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14563945" author="dukebot" created="Wed, 1 Mar 2023 13:47:15 -0800"  >Changeset: 6e19387f&lt;br/&gt;
Author:    David Holmes &amp;lt;&lt;a href=&apos;mailto:dholmes@openjdk.org&apos;&gt;dholmes@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-01 21:45:11 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6e19387f29944aa9d5c82bf0ece3abf0ca53b39c&quot;&gt;https://git.openjdk.org/jdk/commit/6e19387f29944aa9d5c82bf0ece3abf0ca53b39c&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14562578" author="roboduke" created="Thu, 23 Feb 2023 16:31:53 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12737&quot;&gt;https://git.openjdk.org/jdk/pull/12737&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-24 00:26:13 +0000</comment>
                            <comment id="14562576" author="dholmes" created="Thu, 23 Feb 2023 15:37:30 -0800"  >Well spotted [~jcking]! Thanks for the assist.</comment>
                            <comment id="14562551" author="JIRAUSER20603" created="Thu, 23 Feb 2023 14:11:54 -0800"  >Its being called once to set the default and another time to parse the argument provided.</comment>
                            <comment id="14562549" author="JIRAUSER20603" created="Thu, 23 Feb 2023 14:11:24 -0800"  >You are right, however I think _value is being set twice leaking the first allocation. parse_value should really be using realloc.</comment>
                            <comment id="14562535" author="dholmes" created="Thu, 23 Feb 2023 13:15:39 -0800"  >The cleanup() function is called which in turn will call destroy_value() which calls FREE_C_HEAP_ARRAY. I&amp;#39;m struggling to see how any leak can arise here.</comment>
                            <comment id="14562469" author="JIRAUSER20603" created="Thu, 23 Feb 2023 07:49:33 -0800"  >I think this is because the `char*` is allocated on the heap and the DCmd is allocated on the resource area, and the destructor of the DCmd is never called?</comment>
                            <comment id="14562467" author="JIRAUSER20603" created="Thu, 23 Feb 2023 07:41:43 -0800"  >This happens during the `runtime/NMT/JcmdWithNMTDisabled.java` jtreg test.</comment>
                            <comment id="14562383" author="dholmes" created="Wed, 22 Feb 2023 21:41:16 -0800"  >[~jcking] can you provide the java command that was used to detect this problem? Was it the actual execution of the NMTDCmd or just running e.g. `java -version`?</comment>
                            <comment id="14562335" author="dholmes" created="Wed, 22 Feb 2023 14:59:01 -0800"  >I think this is more runtime than svc - anyway I have taken it.</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30hzn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>