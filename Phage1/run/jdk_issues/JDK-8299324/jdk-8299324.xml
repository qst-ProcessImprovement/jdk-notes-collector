<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:13:12 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299324] inline_native_setCurrentThread lacks GC barrier for Shenandoah</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299324</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>inline_native_setCurrentThread was added for loom. It should have been the first IN_NATIVE oop store in C2. Instead of interfacing this properly, a raw store was used. For Shenandoah, this is not enough. Shenandoah scans OopStorage concurrently, and therefore, SATB barriers are required, so the root snapshot is kept consistent.</description>
                <environment></environment>
        <key id="5090373">JDK-8299324</key>
            <summary>inline_native_setCurrentThread lacks GC barrier for Shenandoah</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="wkemper">William Kemper</assignee>
                                    <reporter username="eosterlund">Erik &#214;sterlund</reporter>
                        <labels>
                            <label>gc-shenandoah</label>
                            <label>loom</label>
                            <label>oracle-triage-21</label>
                    </labels>
                <created>Fri, 23 Dec 2022 05:49:58 -0800</created>
                <updated>Tue, 1 Aug 2023 04:44:25 -0700</updated>
                            <resolved>Mon, 6 Feb 2023 11:55:04 -0800</resolved>
                                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14557745" author="dukebot" created="Mon, 6 Feb 2023 11:55:03 -0800"  >Changeset: 3ac2bedd&lt;br/&gt;
Author:    William Kemper &amp;lt;&lt;a href=&apos;mailto:wkemper@openjdk.org&apos;&gt;wkemper@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Paul Hohensee &amp;lt;&lt;a href=&apos;mailto:phh@openjdk.org&apos;&gt;phh@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-06 19:53:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3ac2beddbaa4e974f6d16d578505473a2e1d2a75&quot;&gt;https://git.openjdk.org/jdk/commit/3ac2beddbaa4e974f6d16d578505473a2e1d2a75&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14555737" author="roboduke" created="Mon, 30 Jan 2023 14:45:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12300&quot;&gt;https://git.openjdk.org/jdk/pull/12300&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-30 22:32:05 +0000</comment>
                            <comment id="14554785" author="wkemper" created="Thu, 26 Jan 2023 10:49:55 -0800"  >Reopening to address the issues pointed out by Erik. This isn&amp;#39;t really a duplicate of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299032&quot; title=&quot;Interface IN_NATIVE oop stores for C2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299032&quot;&gt;&lt;strike&gt;JDK-8299032&lt;/strike&gt;&lt;/a&gt;, but it is related.</comment>
                            <comment id="14554597" author="chagedorn" created="Wed, 25 Jan 2023 23:05:50 -0800"  >I&amp;#39;ve changed the status to &amp;quot;closed as dup&amp;quot; instead of &amp;quot;resolved&amp;quot; as there is no change set. But please feel free to open this again as there seem to be more problems as pointed out by [~eosterlund].</comment>
                            <comment id="14554581" author="eosterlund" created="Wed, 25 Jan 2023 21:29:46 -0800"  >While it&#8217;s true that Shenandoah does indeed override store_at_resolved, the very first thing that function does is to bail out if the access isn&#8217;t IN_HEAP, which an IN_NATIVE access is not. That implies that Shenandoah will just generate a raw access, which is kind of the problem I&#8217;m getting at. Even if tests are passing, this is wrong as long as these IN_NATIVE roots are scanned concurrently. For G1 it&#8217;s okay, because they are scanned STW. Getting the JVM to crash though because of this is exceptionally hard. For the missed barrier to cause a crash, this edge would have to be the last edge in the graph to a virtual thread, so that when the thread is set to the new current thread, the previous current thread isn&#8217;t kept alive, even though it&#8217;s part of the snapshot-at-the-beginning. And while that is a violation of the constraints of the concurrent marking algorithm, someone would have to store Thread.currentThread() into a field during concurrent marking as well, and the last edge in the Java heap to said thread would have to be removed just before marking started, so that it&#8217;s really just the root having a reference to the thread. I believe that is all possible, and that hence this isn&#8217;t sound unless the contract for SATB marking is honoured, and pre-write barriers are emitted as required by concurrent root processing.</comment>
                            <comment id="14554553" author="wkemper" created="Wed, 25 Jan 2023 16:42:28 -0800"  >Shenandoah already overrides `store_at_resolved` which is  now invoked for `inline_native_setCurrentThread` after the changes for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299032&quot; title=&quot;Interface IN_NATIVE oop stores for C2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299032&quot;&gt;&lt;strike&gt;JDK-8299032&lt;/strike&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/openjdk/jdk/commit/e7fa150bc15b1bf5ab8921bfdf1a628ae08f5624&quot;&gt;https://github.com/openjdk/jdk/commit/e7fa150bc15b1bf5ab8921bfdf1a628ae08f5624&lt;/a&gt;).</comment>
                            <comment id="14549767" author="wkemper" created="Mon, 9 Jan 2023 14:02:23 -0800"  >I&amp;#39;ve tried the naive change of just removing the assert from `BarrierSetC2::store_at_resolved`. I&amp;#39;ve run `hotspot_gc` and `hotspot_loom` tests without any errors. None of the gc jtreg tests exercise this code. Was the original assert meant to prevent card tables from seeing an oop that wouldn&amp;#39;t be covered by any card? or?</comment>
                            <comment id="14548277" author="rkennke" created="Tue, 3 Jan 2023 03:24:42 -0800"  >William, could you look at this, please?</comment>
                            <comment id="14548251" author="chagedorn" created="Tue, 3 Jan 2023 00:35:29 -0800"  >ILW = inconsistent root snapshot for Shenandoah with Loom, only Shenandoah, no workaround = MLH = P4</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5090037">JDK-8299032</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5106787">JDK-8313248</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zqff:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17336"><![CDATA[b09]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>