<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:14:37 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8328938] C2 SuperWord: disable vectorization for large stride and scale</title>
                <link>https://bugs.openjdk.org/browse/JDK-8328938</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Probably a regression of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8310190&quot; title=&quot;C2 SuperWord: AlignVector is broken, generates misaligned packs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8310190&quot;&gt;&lt;strike&gt;JDK-8310190&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Only hits the assert in fastdebug, not slowdebug, and product seems unaffected (no failure, results correct).&lt;br/&gt;
&lt;br/&gt;
Reproduce:&lt;br/&gt;
&lt;br/&gt;
java --add-modules java.base --add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/jdk.internal.util=ALL-UNNAMED -XX:CompileCommand=compileonly,TestMinIntScale::test* -XX:CompileCommand=printcompilation,TestMinIntScale::test* -XX:CompileCommand=TraceAutoVectorization,TestMinIntScale::test*,ALIGN_VECTOR -XX:+TraceNewVectors -Xbatch -XX:LoopUnrollLimit=1000 -XX:+TraceLoopOpts TestMinIntScale.java&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/oracle-work/jdk-fork2/open/src/hotspot/share/utilities/powerOfTwo.hpp:76), pid=550535, tid=550549&lt;br/&gt;
#  assert(is_power_of_2(value)) failed: value must be a power of 2: 0xffffffff80000000&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0) (fastdebug build 23-internal-2024-03-12-0734066.emanuel...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-internal-2024-03-12-0734066.emanuel..., mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x172ebba]  SuperWord::adjust_pre_loop_limit_to_align_main_loop_vectors()+0xaba&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /oracle-work/jdk-fork2/build/linux-x64-slowdebug/jdk/bin/core.550535)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /oracle-work/jdk-fork2/build/linux-x64-slowdebug/jdk/bin/hs_err_pid550535.log&lt;br/&gt;
#&lt;br/&gt;
# Compiler replay data is saved as:&lt;br/&gt;
# /oracle-work/jdk-fork2/build/linux-x64-slowdebug/jdk/bin/replay_pid550535.log</description>
                <environment></environment>
        <key id="5125119">JDK-8328938</key>
            <summary>C2 SuperWord: disable vectorization for large stride and scale</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="epeter">Emanuel Peter</assignee>
                                    <reporter username="epeter">Emanuel Peter</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>c2-superword</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>regression</label>
                    </labels>
                <created>Mon, 25 Mar 2024 06:25:55 -0700</created>
                <updated>Mon, 10 Jun 2024 23:13:01 -0700</updated>
                            <resolved>Wed, 3 Apr 2024 22:04:58 -0700</resolved>
                                    <version>20</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14666287" author="roboduke" created="Thu, 18 Apr 2024 09:00:12 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Unclean backport to prevent accidents in C2 loop optimizations. The patch is unclean, because JDK 21u misses major SuperWord refactorings; 21u PR acked by Emanuel and Volker. Passes all aggressive compiler testing. Risk is usual for C2 changes, but on the lower side, as it bails out of optimizations cleanly; minor risk of performance regressions.</comment>
                            <comment id="14665153" author="roboduke" created="Mon, 15 Apr 2024 01:11:25 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/495&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/495&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-12 08:04:17 +0000</comment>
                            <comment id="14662740" author="dukebot" created="Wed, 3 Apr 2024 22:04:57 -0700"  >Changeset: 29314587&lt;br/&gt;
Author:    Emanuel Peter &amp;lt;&lt;a href=&apos;mailto:epeter@openjdk.org&apos;&gt;epeter@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-04 05:01:30 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/2931458711244e20eb7845a1aefcf6ed4206bce1&quot;&gt;https://git.openjdk.org/jdk/commit/2931458711244e20eb7845a1aefcf6ed4206bce1&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14660722" author="roboduke" created="Tue, 26 Mar 2024 23:20:51 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18485&quot;&gt;https://git.openjdk.org/jdk/pull/18485&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-26 10:03:29 +0000</comment>
                            <comment id="14660499" author="JIRAUSER19821" created="Tue, 26 Mar 2024 05:31:30 -0700"  >I strongly suspect &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8286197&quot; title=&quot;C2: Optimize MemorySegment shape in int loop&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8286197&quot;&gt;&lt;strike&gt;JDK-8286197&lt;/strike&gt;&lt;/a&gt;, which is part of JDK20 b2. It makes certain Unsafe patterns vectorize, and I need this pattern for my reproducer.</comment>
                            <comment id="14660487" author="thartmann" created="Tue, 26 Mar 2024 04:28:29 -0700"  >Seems to be a regression in JDK 20 b2 (commit-search is currently broken, so I can&amp;#39;t narrow it down):&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%20%2220%22%20AND%20component%20%3D%20hotspot%20AND%20%22Resolved%20In%20Build%22%20%3D%20b02%20AND%20Subcomponent%20%3D%20compiler%20ORDER%20BY%20resolved%20DESC&quot;&gt;https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%20%2220%22%20AND%20component%20%3D%20hotspot%20AND%20%22Resolved%20In%20Build%22%20%3D%20b02%20AND%20Subcomponent%20%3D%20compiler%20ORDER%20BY%20resolved%20DESC&lt;/a&gt;</comment>
                            <comment id="14660475" author="JIRAUSER19821" created="Tue, 26 Mar 2024 03:38:55 -0700"  >[~thartmann] Turns out that this reproducer fails further back, with&lt;br/&gt;
-XX:+AlignVector&lt;br/&gt;
&lt;br/&gt;
It fails with JDK20, but not with JDK19 for me.&lt;br/&gt;
&lt;br/&gt;
I get:&lt;br/&gt;
&lt;br/&gt;
/oracle-work/jdk-20.0.2/fastdebug/bin/java --add-modules java.base --add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/jdk.internal.util=ALL-UNNAMED -XX:CompileCommand=printcompilation,TestMinIntScale::test* -Xbatch -XX:LoopUnrollLimit=1000 -XX:+AlignVector TestMinIntScale.java&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4296 1590 % b 3 TestMinIntScale::test3 @ 16 (197 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4297 1591 b 3 TestMinIntScale::test3 (197 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4298 1592 % b 4 TestMinIntScale::test3 @ 16 (197 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4522 1593 % b 3 TestMinIntScale::test1 @ 5 (173 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4522 1594 b 3 TestMinIntScale::test1 (173 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4523 1595 % b 4 TestMinIntScale::test1 @ 5 (173 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4525 1596 b 4 TestMinIntScale::test1 (173 bytes)&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
# SIGFPE (0x8) at pc=0x00007f783bc6e21a, pid=843863, tid=843876&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0.2+6) (fastdebug build 20.0.2+6-59)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20.0.2+6-59, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V [libjvm.so+0x19d221a] SuperWord::ref_is_alignable(SWPointer&amp;amp;) [clone .part.0]+0x47a&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /oracle-work/jdk-fork2/build/linux-x64-slowdebug/jdk/bin/core.843863)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /oracle-work/jdk-fork2/build/linux-x64-slowdebug/jdk/bin/hs_err_pid843863.log&lt;br/&gt;
#&lt;br/&gt;
# Compiler replay data is saved as:&lt;br/&gt;
# /oracle-work/jdk-fork2/build/linux-x64-slowdebug/jdk/bin/replay_pid843863.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
# &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
Aborted (core dumped)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f77b6537000,0x00007f77b6638000], sp=0x00007f77b6631c70, free space=1003k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V [libjvm.so+0x19d221a] SuperWord::ref_is_alignable(SWPointer&amp;amp;) [clone .part.0]+0x47a&lt;br/&gt;
V [libjvm.so+0x19dafb4] SuperWord::find_align_to_ref(Node_List&amp;amp;, int&amp;amp;)+0x194&lt;br/&gt;
V [libjvm.so+0x19e436e] SuperWord::find_adjacent_refs()+0x12e&lt;br/&gt;
V [libjvm.so+0x19eba58] SuperWord::SLP_extract()+0x498&lt;br/&gt;
V [libjvm.so+0x19ebd92] SuperWord::transform_loop(IdealLoopTree*, bool)+0x262&lt;br/&gt;
V [libjvm.so+0x14afb11] PhaseIdealLoop::build_and_optimize()+0x1361&lt;br/&gt;
V [libjvm.so+0xaef581] PhaseIdealLoop::optimize(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x261&lt;br/&gt;
V [libjvm.so+0xae964f] Compile::Optimize()+0xe2f&lt;br/&gt;
V [libjvm.so+0xaed7ae] Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x18ce&lt;br/&gt;
V [libjvm.so+0x8ff7c7] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7&lt;br/&gt;
V [libjvm.so+0xafa84c] CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c&lt;br/&gt;
V [libjvm.so+0xafb608] CompileBroker::compiler_thread_loop()+0x5d8&lt;br/&gt;
V [libjvm.so+0x106a046] JavaThread::thread_main_inner()+0x206&lt;br/&gt;
V [libjvm.so+0x1a702c0] Thread::call_run()+0x100&lt;br/&gt;
V [libjvm.so+0x17038b3] thread_native_entry(Thread*)+0x103&lt;br/&gt;
&lt;br/&gt;
The failing instruction is the idiv, with a zero input. I suspect it must be these lines:&lt;br/&gt;
&lt;br/&gt;
int span = preloop_stride * p.scale_in_bytes();&lt;br/&gt;
...&lt;br/&gt;
if (vw % span == 0) {&lt;br/&gt;
&lt;br/&gt;
if &amp;quot;span == 0&amp;quot;, then the idiv from the modulo gets a division by zero -&amp;gt; SIGFPE&lt;br/&gt;
&lt;br/&gt;
Draft PR:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/pull/18485&quot;&gt;https://github.com/openjdk/jdk/pull/18485&lt;/a&gt;</comment>
                            <comment id="14660085" author="thartmann" created="Mon, 25 Mar 2024 07:09:39 -0700"  >ILW = Assert during C2 compilation (regression), edge case but easy to reproduce, disable superword or compilation of affected method = HLM = P3</comment>
                            <comment id="14660070" author="JIRAUSER19821" created="Mon, 25 Mar 2024 06:32:31 -0700"  >&amp;quot;scale = min_int&amp;quot; really can only be acheived with UNSAFE, otherwise RangeChecks would not allow that to get to SuperWord.&lt;br/&gt;
This is certainly not a very common usecase. Hence, I could either just forbid it from vectorizing, or just handle the calculations more carefully by using &amp;quot;jlong&amp;quot; instead of &amp;quot;int&amp;quot;.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5128733">JDK-8331712</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131499">JDK-8333941</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5074216">JDK-8286197</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5103367">JDK-8310190</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108727" name="TestMinIntScale.java" size="1645" author="epeter" created="Mon, 25 Mar 2024 06:25:09 -0700"/>
                            <attachment id="108729" name="hs_err_pid550535.log" size="84091" author="epeter" created="Mon, 25 Mar 2024 06:24:38 -0700"/>
                            <attachment id="108728" name="replay_pid550535.log" size="265771" author="epeter" created="Mon, 25 Mar 2024 06:24:58 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17318"><![CDATA[b02]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22023">20</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35lrn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>