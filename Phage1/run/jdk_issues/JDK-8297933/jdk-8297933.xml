<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:31:31 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8297933] [REDO] Compiler should only use verified interface types for optimization</title>
                <link>https://bugs.openjdk.org/browse/JDK-8297933</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When a JIT compiles bytecode verified by the VM, any classes it encounters are guaranteed to be type-safe in their usages.  However, the VM verifier has never verified  the use of interfaces at all, as noted recently in the discussion of 5041456.&lt;br/&gt;
&lt;br/&gt;
In the type system which controls the C2 parser and optimizer, unverified interfaces are freely mixed with verified classes.  The result is that the code which makes decisions based on statically predicted reference types must always have a cutout which disables the decision if the type in question is an interface instead of a class.  If such a cutout is missing, there will be a bug, but only in rare cases where a class is recompiled without an interface, and client classes continue to assume it has the interface.&lt;br/&gt;
&lt;br/&gt;
Our system has a more or less complete set of such cutouts, because we have fixed a number of historical bugs involving interface paradoxes.  However, there may be remaining bugs in the system, and new code involving reference type checks will always be somewhat buggy until the proper interface cutouts are coded.&lt;br/&gt;
&lt;br/&gt;
One reason we do not perform certain optimizations, such as CHA on interfaces and recognition of unique implementors, is that the new code to do this would have to &amp;quot;undo&amp;quot; some of the interface cutouts, and would therefore be risky.  C1 has one such optimization, at the cost of inserting a local &amp;#39;instanceof&amp;#39; check guarding the optimized &amp;#39;invokeinterface&amp;#39;.  Such an optimization in C2 is best done by the type system, which is impossible as long as type system assertions about interfaces are untrustworthy.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5088685">JDK-8297933</key>
            <summary>[REDO] Compiler should only use verified interface types for optimization</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="roland">Roland Westrelin</reporter>
                        <labels>
                            <label>c1</label>
                            <label>c2</label>
                    </labels>
                <created>Thu, 1 Dec 2022 02:20:00 -0800</created>
                <updated>Mon, 29 Sep 2025 07:14:37 -0700</updated>
                            <resolved>Mon, 9 Jan 2023 00:27:40 -0800</resolved>
                                    <version>6</version>
                    <version>9</version>
                    <version>10</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                                                            <comments>
                            <comment id="14579638" author="thartmann" created="Sun, 7 May 2023 22:58:51 -0700"  >Thanks Tom, I found these as well and fill fix with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8305339&quot; title=&quot;fatal error: meet not symmetric&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8305339&quot;&gt;&lt;strike&gt;JDK-8305339&lt;/strike&gt;&lt;/a&gt; / &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8303512&quot; title=&quot;Race condition when computing is_loaded property of TypePtr::InterfaceSet&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8303512&quot;&gt;&lt;strike&gt;JDK-8303512&lt;/strike&gt;&lt;/a&gt; which are regressions of this.</comment>
                            <comment id="14579435" author="never" created="Fri, 5 May 2023 10:23:41 -0700"  >Just as an FYI, a few #ifdef DEBUG that should be #ifdef ASSERT ended up in type.cpp from this fix.</comment>
                            <comment id="14549505" author="dukebot" created="Mon, 9 Jan 2023 00:27:39 -0800"  >Changeset: 05a0a710&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-09 08:26:08 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/05a0a710313917fe7124ff43fe9c9af1d649bcac&quot;&gt;https://git.openjdk.org/jdk/commit/05a0a710313917fe7124ff43fe9c9af1d649bcac&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14545314" author="roboduke" created="Wed, 14 Dec 2022 02:03:04 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11666&quot;&gt;https://git.openjdk.org/jdk/pull/11666&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-14 09:55:27 +0000</comment>
                            <comment id="14541895" author="JIRAUSER19821" created="Thu, 1 Dec 2022 06:04:57 -0800"  >This is a list of failing tests, together with the extra flags, and the failure information:&lt;br/&gt;
&lt;br/&gt;
1)&lt;br/&gt;
compiler/arraycopy/TestArrayCopyStoppedAfterGuards.java&lt;br/&gt;
-XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks -XX:-ReduceBulkZeroing -XX:-ReduceFieldZeroing -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/memnode.cpp:2272), pid=822515, tid=822541&lt;br/&gt;
#  assert(adr_type != __null) failed: expecting TypeKlassPtr&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, compiled mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x15c704c]  LoadKlassNode::make(PhaseGVN&amp;amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*)+0x1fc&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f8cec344590):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=822541, stack(0x00007f8cc39fa000,0x00007f8cc3afb000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    144   13    b        compiler.arraycopy.TestArrayCopyStoppedAfterGuards::test (23 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f8cc39fa000,0x00007f8cc3afb000],  sp=0x00007f8cc3af7080,  free space=1012k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x15c704c]  LoadKlassNode::make(PhaseGVN&amp;amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*)+0x1fc  (memnode.cpp:2272)&lt;br/&gt;
V  [libjvm.so+0xf1c8f1]  GraphKit::load_object_klass(Node*)+0x151  (graphKit.cpp:1179)&lt;br/&gt;
V  [libjvm.so+0x1419a26]  LibraryCallKit::inline_arraycopy()+0x7c6  (library_call.cpp:5276)&lt;br/&gt;
V  [libjvm.so+0x1437662]  LibraryIntrinsic::generate(JVMState*)+0x302  (library_call.cpp:115)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xafdb6d]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x168d  (compile.cpp:760)&lt;br/&gt;
V  [libjvm.so+0x90eed7]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0xb0b06c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xb0be58]  CompileBroker::compiler_thread_loop()+0x608  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0x107ba26]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x1a80eb0]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1712f03]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:739)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2)&lt;br/&gt;
compiler/escapeAnalysis/cr6716441/Tester.java&lt;br/&gt;
-XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks -XX:-ReduceBulkZeroing -XX:-ReduceFieldZeroing -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/type.hpp:2057), pid=669037, tid=669072&lt;br/&gt;
#  assert(_base &amp;gt;= OopPtr &amp;amp;&amp;amp; _base &amp;lt;= AryPtr) failed: Not a Java pointer&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, compiled mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xf24cf4]  GraphKit::gen_checkcast(Node*, Node*, Node**)+0x844&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f0bb83444d0):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=669072, stack(0x00007f0b9b6a5000,0x00007f0b9b7a6000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:  15728 1948    b        compiler.escapeAnalysis.cr6716441.Tester::test (1743 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f0b9b6a5000,0x00007f0b9b7a6000],  sp=0x00007f0b9b7a2700,  free space=1013k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xf24cf4]  GraphKit::gen_checkcast(Node*, Node*, Node**)+0x844  (type.hpp:2057)&lt;br/&gt;
V  [libjvm.so+0x1779174]  Parse::do_checkcast()+0x1d4  (parseHelper.cpp:93)&lt;br/&gt;
V  [libjvm.so+0x176f518]  Parse::do_one_bytecode()+0xcb8  (parse2.cpp:2707)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xafdb6d]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x168d  (compile.cpp:760)&lt;br/&gt;
V  [libjvm.so+0x90eed7]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0xb0b06c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xb0be58]  CompileBroker::compiler_thread_loop()+0x608  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0x107ba26]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x1a80eb0]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1712f03]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:739)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
3)&lt;br/&gt;
compiler/intrinsics/sha/TestDigest.java&lt;br/&gt;
-XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks -XX:-ReduceBulkZeroing -XX:-ReduceFieldZeroing -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/library_call.cpp:6289), pid=1833897, tid=1833912&lt;br/&gt;
#  assert(tinst != __null) failed: obj is null&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, mixed mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1427049]  LibraryCallKit::load_field_from_object(Node*, char const*, char const*, unsigned long, bool, ciInstanceKlass*)+0x589&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f661c344440):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=1833912, stack(0x00007f661034d000,0x00007f661044e000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:   1184  181    b        java.security.MessageDigest::update (45 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f661034d000,0x00007f661044e000],  sp=0x00007f6610448a70,  free space=1006k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1427049]  LibraryCallKit::load_field_from_object(Node*, char const*, char const*, unsigned long, bool, ciInstanceKlass*)+0x589  (library_call.cpp:6289)&lt;br/&gt;
V  [libjvm.so+0x142d677]  LibraryCallKit::get_state_from_digest_object(Node*, BasicType)+0x87  (library_call.cpp:7406)&lt;br/&gt;
V  [libjvm.so+0x143130b]  LibraryCallKit::inline_digestBase_implCompressMB(Node*, ciInstanceKlass*, BasicType, unsigned char*, char const*, Node*, Node*, Node*)+0x17b  (library_call.cpp:7238)&lt;br/&gt;
V  [libjvm.so+0x1431a77]  LibraryCallKit::inline_digestBase_implCompressMB(int)+0x337  (library_call.cpp:7224)&lt;br/&gt;
V  [libjvm.so+0x1437662]  LibraryIntrinsic::generate(JVMState*)+0x302  (library_call.cpp:115)&lt;br/&gt;
V  [libjvm.so+0x911d32]  PredicatedIntrinsicGenerator::generate(JVMState*)+0x7d2  (callGenerator.cpp:1239)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0x914f43]  PredictedCallGenerator::generate(JVMState*)+0x223  (callGenerator.cpp:894)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xafdb6d]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x168d  (compile.cpp:760)&lt;br/&gt;
V  [libjvm.so+0x90eed7]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0xb0b06c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xb0be58]  CompileBroker::compiler_thread_loop()+0x608  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0x107ba26]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x1a80eb0]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1712f03]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:739)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
4) (intermittent? macosx-64 and linux-aarch only?)&lt;br/&gt;
compiler/intrinsics/unsafe/AllocateUninitializedArray.java&lt;br/&gt;
-XX:TypeProfileLevel=222&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/type.cpp:821), pid=3762749, tid=3762777&lt;br/&gt;
#  fatal error: meet not symmetric&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x180b8fc]  Type::check_symmetrical(Type const*, Type const*) const+0x2bc&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000fffcf4365900):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=3762777, stack(0x0000fffcbf1e0000,0x0000fffcbf3e0000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:   2900  321       4       compiler.intrinsics.unsafe.AllocateUninitializedArray$$Lambda$38/0x0000000801006c70::call (4 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000fffcbf1e0000,0x0000fffcbf3e0000],  sp=0x0000fffcbf3dbe30,  free space=2031k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x180b8fc]  Type::check_symmetrical(Type const*, Type const*) const+0x2bc  (type.cpp:821)&lt;br/&gt;
V  [libjvm.so+0x181326c]  Type::meet_helper(Type const*, bool) const+0xec  (type.cpp:850)&lt;br/&gt;
V  [libjvm.so+0x1813ab8]  TypePtr::xmeet_speculative(TypePtr const*) const+0x68  (type.hpp:227)&lt;br/&gt;
V  [libjvm.so+0x1822ecc]  TypeInstPtr::xmeet_helper(Type const*) const+0x31c  (type.cpp:4143)&lt;br/&gt;
V  [libjvm.so+0x180507c]  TypePtr::xmeet(Type const*) const+0x18  (type.cpp:2540)&lt;br/&gt;
V  [libjvm.so+0x1813204]  Type::meet_helper(Type const*, bool) const+0x84  (type.cpp:842)&lt;br/&gt;
V  [libjvm.so+0x181381c]  TypeOopPtr::filter_helper(Type const*, bool) const+0x18  (type.hpp:184)&lt;br/&gt;
V  [libjvm.so+0x7ffd68]  ConstraintCastNode::Value(PhaseGVN*) const+0xc8  (type.hpp:265)&lt;br/&gt;
V  [libjvm.so+0x15801a8]  PhaseGVN::transform_no_reclaim(Node*)+0x424  (phaseX.cpp:862)&lt;br/&gt;
V  [libjvm.so+0xd88d74]  GraphKit::record_profile_for_speculation(Node*, ciKlass*, ProfilePtrKind)+0x1a4  (graphKit.cpp:2219)&lt;br/&gt;
V  [libjvm.so+0xd89bb8]  GraphKit::record_profiled_return_for_speculation()+0xa8  (graphKit.cpp:2327)&lt;br/&gt;
V  [libjvm.so+0xb40500]  Parse::do_call()+0x15e0  (doCall.cpp:773)&lt;br/&gt;
V  [libjvm.so+0x1551ca8]  Parse::do_one_bytecode()+0x554  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x1540e14]  Parse::do_one_block()+0x820  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x1541dcc]  Parse::do_all_blocks()+0x148  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x15462d4]  Parse::Parse(JVMState*, ciMethod*, float)+0xa94  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x7c80a0]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x9a7484]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0xfe0  (compile.cpp:760)&lt;br/&gt;
V  [libjvm.so+0x7c5c88]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x1b4  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0x9b4414]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa10  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0x9b4e78]  CompileBroker::compiler_thread_loop()+0x5b8  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0xed7100]  JavaThread::thread_main_inner()+0x21c  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x17e5f98]  Thread::call_run()+0xf8  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x14f8944]  thread_native_entry(Thread*)+0x100  (os_linux.cpp:739)&lt;br/&gt;
C  [libpthread.so.0+0x7908]  start_thread+0x188&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
5)&lt;br/&gt;
compiler/jvmci/jdk.vm.ci.runtime.test/src/jdk/vm/ci/runtime/test/TestResolvedJavaType.java	&lt;br/&gt;
-XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks -XX:-ReduceBulkZeroing -XX:-ReduceFieldZeroing -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/graphKit.hpp:362), pid=677067, tid=677250&lt;br/&gt;
#  assert(argument(0)-&amp;gt;bottom_type()-&amp;gt;isa_ptr()) failed: must be&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, mixed mode, sharing, jvmci, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x91e684]  GraphKit::null_check_receiver_before_call(ciMethod*)+0x3e4&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f1bac49c6d0):  JavaThread &amp;quot;C2 CompilerThread1&amp;quot; daemon [_thread_in_native, id=677250, stack(0x00007f1bc74f9000,0x00007f1bc75fa000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:   6151  629 %           jdk.vm.ci.runtime.test.TestResolvedJavaType::isAssignableFromTest @ 38 (143 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f1bc74f9000,0x00007f1bc75fa000],  sp=0x00007f1bc75f5690,  free space=1009k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x91e684]  GraphKit::null_check_receiver_before_call(ciMethod*)+0x3e4  (graphKit.hpp:362)&lt;br/&gt;
V  [libjvm.so+0x914e7e]  PredictedCallGenerator::generate(JVMState*)+0x15e  (callGenerator.cpp:870)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0x914f43]  PredictedCallGenerator::generate(JVMState*)+0x223  (callGenerator.cpp:894)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xafdb6d]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x168d  (compile.cpp:760)&lt;br/&gt;
V  [libjvm.so+0x90eed7]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0xb0b06c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xb0be58]  CompileBroker::compiler_thread_loop()+0x608  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0x107ba26]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x1a80eb0]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1712f03]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:739)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
6)&lt;br/&gt;
compiler/uncommontrap/TestNullAssertAtCheckCast.java&lt;br/&gt;
-XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks -XX:-ReduceBulkZeroing -XX:-ReduceFieldZeroing -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: TestNullAssertAtCheckCast::test1 not compilable&lt;br/&gt;
	at compiler.uncommontrap.TestNullAssertAtCheckCast.main(TestNullAssertAtCheckCast.java:103)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:125)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
7) (linux only?)&lt;br/&gt;
compiler/unsafe/OpaqueAccesses.java&lt;br/&gt;
-XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation -XX:+StressArrayCopyMacroNode -XX:+StressLCM -XX:+StressGCM -XX:+StressIGVN -XX:+StressCCP -XX:+StressMethodHandleLinkerInlining -XX:+StressCompiledExceptionHandlers&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/type.cpp:2995), pid=1430703, tid=1430722&lt;br/&gt;
#  assert(ptr != Constant) failed: what is the constant?&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, mixed mode, sharing, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1aab1d4]  TypeRawPtr::cast_to_ptr_type(TypePtr::PTR) const+0xe4&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f72a032f800):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=1430722, stack(0x00007f7246e1c000,0x00007f7246f1d000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    312   88    b        compiler.unsafe.OpaqueAccesses::testMixedAccess (53 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f7246e1c000,0x00007f7246f1d000],  sp=0x00007f7246f18130,  free space=1008k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1aab1d4]  TypeRawPtr::cast_to_ptr_type(TypePtr::PTR) const+0xe4  (type.cpp:2995)&lt;br/&gt;
V  [libjvm.so+0x179d0fd]  PhaseCCP::analyze()+0x19d  (phaseX.cpp:1793)&lt;br/&gt;
V  [libjvm.so+0xafb071]  Compile::Optimize()+0x701  (compile.cpp:2360)&lt;br/&gt;
V  [libjvm.so+0xafddae]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x18ce  (compile.cpp:830)&lt;br/&gt;
V  [libjvm.so+0x90eed7]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0xb0b06c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xb0be58]  CompileBroker::compiler_thread_loop()+0x608  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0x107ba26]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x1a80eb0]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1712f03]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:739)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
8) (linux only?)&lt;br/&gt;
compiler/vectorapi/reshape/TestVectorReinterpret.java&lt;br/&gt;
-XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks -XX:-ReduceBulkZeroing -XX:-ReduceFieldZeroing -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (.../open/src/hotspot/share/opto/graphKit.hpp:362), pid=1836792, tid=1836807&lt;br/&gt;
#  assert(argument(0)-&amp;gt;bottom_type()-&amp;gt;isa_ptr()) failed: must be&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, mixed mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x91e684]  GraphKit::null_check_receiver_before_call(ciMethod*)+0x3e4&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007fed8c3331f0):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=1836807, stack(0x00007fed80652000,0x00007fed80753000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:   6694  841    b        jdk.incubator.vector.AbstractVector$$Lambda$105/0x0000000801022428::apply (15 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fed80652000,0x00007fed80753000],  sp=0x00007fed8074de50,  free space=1007k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x91e684]  GraphKit::null_check_receiver_before_call(ciMethod*)+0x3e4  (graphKit.hpp:362)&lt;br/&gt;
V  [libjvm.so+0x914e7e]  PredictedCallGenerator::generate(JVMState*)+0x15e  (callGenerator.cpp:870)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0x915249]  PredictedCallGenerator::generate(JVMState*)+0x529  (callGenerator.cpp:915)&lt;br/&gt;
V  [libjvm.so+0xcbcec9]  Parse::do_call()+0x389  (doCall.cpp:662)&lt;br/&gt;
V  [libjvm.so+0x176ee98]  Parse::do_one_bytecode()+0x638  (parse2.cpp:2704)&lt;br/&gt;
V  [libjvm.so+0x175c994]  Parse::do_one_block()+0x844  (parse1.cpp:1557)&lt;br/&gt;
V  [libjvm.so+0x175d8f7]  Parse::do_all_blocks()+0x137  (parse1.cpp:709)&lt;br/&gt;
V  [libjvm.so+0x17626cd]  Parse::Parse(JVMState*, ciMethod*, float)+0xb3d  (parse1.cpp:616)&lt;br/&gt;
V  [libjvm.so+0x911320]  ParseGenerator::generate(JVMState*)+0x110  (callGenerator.cpp:99)&lt;br/&gt;
V  [libjvm.so+0xafdb6d]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x168d  (compile.cpp:760)&lt;br/&gt;
V  [libjvm.so+0x90eed7]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x4e7  (c2compiler.cpp:113)&lt;br/&gt;
V  [libjvm.so+0xb0b06c]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa7c  (compileBroker.cpp:2237)&lt;br/&gt;
V  [libjvm.so+0xb0be58]  CompileBroker::compiler_thread_loop()+0x608  (compileBroker.cpp:1916)&lt;br/&gt;
V  [libjvm.so+0x107ba26]  JavaThread::thread_main_inner()+0x206  (javaThread.cpp:697)&lt;br/&gt;
V  [libjvm.so+0x1a80eb0]  Thread::call_run()+0x100  (thread.cpp:224)&lt;br/&gt;
V  [libjvm.so+0x1712f03]  thread_native_entry(Thread*)+0x103  (os_linux.cpp:739)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
9) (macosx-x64 only?)&lt;br/&gt;
compiler/c1/TestArrayCopy.java&lt;br/&gt;
-XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation -XX:+StressArrayCopyMacroNode -XX:+StressLCM -XX:+StressGCM -XX:+StressIGVN -XX:+StressCCP -XX:+StressMethodHandleLinkerInlining -XX:+StressCompiledExceptionHandlers&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x000000010a6f24db, pid=55355, tid=40451&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (20.0) (fastdebug build 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 20-internal-2022-11-30-1648355.emanuel.peter.fork6-jdk, mixed mode, compressed oops, compressed class ptrs, g1 gc, bsd-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.dylib+0xef24db]  LShiftLNode::Ideal(PhaseGVN*, bool)+0x18b&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f8acb812610):  JavaThread &amp;quot;C2 CompilerThread3&amp;quot; daemon [_thread_in_native, id=40451, stack(0x0000700007552000,0x0000700007652000)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    895  214             compiler.c1.TestArrayCopy::main (71 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000700007552000,0x0000700007652000],  sp=0x000070000764e240,  free space=1008k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.dylib+0xef24db]  LShiftLNode::Ideal(PhaseGVN*, bool)+0x18b&lt;br/&gt;
V  [libjvm.dylib+0xfc3223]  PhaseIterGVN::transform_old(Node*)+0x3b3&lt;br/&gt;
V  [libjvm.dylib+0x32adb1]  ArrayCopyNode::prepare_array_copy(PhaseGVN*, bool, Node*&amp;amp;, Node*&amp;amp;, Node*&amp;amp;, Node*&amp;amp;, BasicType&amp;amp;, Type const*&amp;amp;, bool&amp;amp;)+0x1001&lt;br/&gt;
V  [libjvm.dylib+0x32d29d]  ArrayCopyNode::Ideal(PhaseGVN*, bool)+0x81d&lt;br/&gt;
V  [libjvm.dylib+0xfc2f9e]  PhaseIterGVN::transform_old(Node*)+0x12e&lt;br/&gt;
V  [libjvm.dylib+0xfc2916]  PhaseIterGVN::optimize()+0x146&lt;br/&gt;
V  [libjvm.dylib+0x6373df]  Compile::Optimize()+0x1ff&lt;br/&gt;
V  [libjvm.dylib+0x635be7]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1a77&lt;br/&gt;
V  [libjvm.dylib+0x51c867]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x167&lt;br/&gt;
V  [libjvm.dylib+0x65487b]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x63b&lt;br/&gt;
V  [libjvm.dylib+0x654038]  CompileBroker::compiler_thread_loop()+0x288&lt;br/&gt;
V  [libjvm.dylib+0xa1f158]  JavaThread::thread_main_inner()+0x288&lt;br/&gt;
V  [libjvm.dylib+0x120fac7]  Thread::call_run()+0x177&lt;br/&gt;
V  [libjvm.dylib+0xf68e5f]  thread_native_entry(Thread*)+0x14f&lt;br/&gt;
C  [libsystem_pthread.dylib+0x68fc]  _pthread_start+0xe0&lt;br/&gt;
C  [libsystem_pthread.dylib+0x2443]  thread_start+0xf&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14541833" author="roland" created="Thu, 1 Dec 2022 02:25:04 -0800"  >Also redo  &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297556&quot; title=&quot;Parse::check_interpreter_type fails with assert &amp;quot;must constrain OSR typestate&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297556&quot;&gt;&lt;strike&gt;JDK-8297556&lt;/strike&gt;&lt;/a&gt; and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297343&quot; title=&quot;TestStress*.java fail with &amp;quot;got different traces for the same seed&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297343&quot;&gt;&lt;strike&gt;JDK-8297343&lt;/strike&gt;&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10600">
                    <name>Causes</name>
                                            <outwardlinks description="causes">
                                        <issuelink>
            <issuekey id="5137462">JDK-8339526</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5158230">JDK-8356989</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>Cloners</name>
                                            <outwardlinks description="clones">
                                        <issuelink>
            <issuekey id="4343592">JDK-6312651</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5091270">JDK-8300040</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5091356">JDK-8300113</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116889">JDK-8321974</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124847">JDK-8328702</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5097318">JDK-8305103</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5102214">JDK-8309203</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5162630">JDK-8361117</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5089769">JDK-8298848</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095379">JDK-8303512</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095673">JDK-8303737</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093161">JDK-8301630</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5106485">JDK-8312980</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5101500">JDK-8308583</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139090">JDK-8340214</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5110605">JDK-8316533</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5066827">JDK-8280469</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5149337">JDK-8348853</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5088686">JDK-8297934</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10001" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Imported</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Sep 2012 18:28:50 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10002" key="com.atlassian.jira.plugin.system.customfieldtypes:datetime">
                        <customfieldname>Indexed</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Jul 2012 09:34:36 -0700</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zgb7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>