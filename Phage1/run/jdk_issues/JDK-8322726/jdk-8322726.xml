<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:41:08 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8322726] C2: Unloaded signature class kills argument value</title>
                <link>https://bugs.openjdk.org/browse/JDK-8322726</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>test/langtools/tools/javac/switchnull/SwitchNull.java fails -XX:+VerifyOops.&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/workspace/open/src/hotspot/cpu/aarch64/macroAssembler_aarch64.cpp:3013), pid=3731060, tid=3731082&lt;br/&gt;
#  fatal error: DEBUG MESSAGE: verify_oop: c_rarg4: broken oop r-&amp;gt;as_Register() (/workspace/open/src/hotspot/share/c1/c1_LIRAssembler.cpp:846)&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0+4) (fastdebug build 23-ea+4-147)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+4-147, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1184484]  MacroAssembler::debug64(char*, long, long*)+0x54&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000ffff5ca0c000,0x0000ffff5cc0a000],  sp=0x0000ffff5cc07ce0,  free space=2031k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1184484]  MacroAssembler::debug64(char*, long, long*)+0x54  (macroAssembler_aarch64.cpp:3013)&lt;br/&gt;
v  ~StubRoutines::verify_oop 0x0000ffff741a94a0&lt;br/&gt;
j  SwitchNull.run()V+267&lt;br/&gt;
j  SwitchNull.main([Ljava/lang/String;)V+9&lt;br/&gt;
j  java.lang.invoke.LambdaForm$DMH+0x00000000310c0000.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)V+10 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x0000000031145800.invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+33 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.invoke.Invokers$Holder.invokeExact_MT(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+20 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+55 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+23 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+102 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run()V+10&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x0000ffff7415e1c0&lt;br/&gt;
V  [libjvm.so+0xd3eb4c]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x43c  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0xd3f0ec]  JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, JavaThread*)+0x29c  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0xd3f2ec]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x6c  (javaCalls.cpp:191)&lt;br/&gt;
V  [libjvm.so+0xe98300]  thread_entry(JavaThread*, JavaThread*)+0xa0  (jvm.cpp:2937)&lt;br/&gt;
V  [libjvm.so+0xd72d6c]  JavaThread::thread_main_inner()+0xcc  (javaThread.cpp:721)&lt;br/&gt;
V  [libjvm.so+0x15abd60]  Thread::call_run()+0xac  (thread.cpp:220)&lt;br/&gt;
V  [libjvm.so+0x131f0bc]  thread_native_entry(Thread*)+0x12c  (os_linux.cpp:789)&lt;br/&gt;
C  [libpthread.so.0+0x7928]  start_thread+0x188</description>
                <environment></environment>
        <key id="5117780">JDK-8322726</key>
            <summary>C2: Unloaded signature class kills argument value</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vlivanov">Vladimir Ivanov</assignee>
                                    <reporter username="alanb">Alan Bateman</reporter>
                        <labels>
                            <label>17bpr-critical-approved</label>
                            <label>21bpr-critical-approved</label>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>regression</label>
                            <label>starter</label>
                            <label>tier4</label>
                    </labels>
                <created>Sat, 23 Dec 2023 23:07:33 -0800</created>
                <updated>Fri, 25 Oct 2024 10:22:37 -0700</updated>
                            <resolved>Mon, 6 May 2024 05:22:30 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14679719" author="roboduke" created="Fri, 7 Jun 2024 01:45:02 -0700"  >[jdk17u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 17.0.13-oracle. The backport requires very small adaptations which have been reviewed. Tier1-4 have passed.</comment>
                            <comment id="14679207" author="roboduke" created="Wed, 5 Jun 2024 07:34:08 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2540&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2540&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-05 14:28:55 +0000</comment>
                            <comment id="14678699" author="roboduke" created="Tue, 4 Jun 2024 02:42:50 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Applies cleanly. Tier 1-4 have passed.</comment>
                            <comment id="14678249" author="roboduke" created="Mon, 3 Jun 2024 05:54:11 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/659&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/659&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-03 12:45:50 +0000</comment>
                            <comment id="14672127" author="fmatte" created="Wed, 8 May 2024 21:12:17 -0700"  >Fix request justification:&lt;br/&gt;
Fix request: 22u&lt;br/&gt;
It resolves a regression introduced in jdk17 by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8269285&quot; title=&quot;Crash/miscompile in CallGenerator::for_method_handle_inline after JDK-8191998&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8269285&quot;&gt;&lt;strike&gt;JDK-8269285&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
Clean backport. Low risk.&lt;br/&gt;
Pull request: &lt;a href=&quot;https://github.com/openjdk/jdk22u/pull/187&quot;&gt;https://github.com/openjdk/jdk22u/pull/187&lt;/a&gt;</comment>
                            <comment id="14671391" author="roboduke" created="Tue, 7 May 2024 03:30:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/187&quot;&gt;https://git.openjdk.org/jdk22u/pull/187&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-07 10:24:03 +0000</comment>
                            <comment id="14671124" author="dukebot" created="Mon, 6 May 2024 05:22:29 -0700"  >Changeset: fa02667d&lt;br/&gt;
Author:    Vladimir Ivanov &amp;lt;&lt;a href=&apos;mailto:vlivanov@openjdk.org&apos;&gt;vlivanov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-05-06 12:21:15 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/fa02667d838f08cac7d41dfb4c3e8056ae6165cc&quot;&gt;https://git.openjdk.org/jdk/commit/fa02667d838f08cac7d41dfb4c3e8056ae6165cc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14668434" author="roboduke" created="Fri, 26 Apr 2024 10:01:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18973&quot;&gt;https://git.openjdk.org/jdk/pull/18973&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-26 11:35:25 +0000</comment>
                            <comment id="14663230" author="dcubed" created="Fri, 5 Apr 2024 06:23:20 -0700"  >Here&amp;#39;s a log file snippet for the jdk-23+18-1394-tier4 sighting:&lt;br/&gt;
&lt;br/&gt;
tools/javac/switchnull/SwitchNull.java&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(7/224)----------&lt;br/&gt;
command: main SwitchNull&lt;br/&gt;
reason: Assumed action based on file name: run main SwitchNull &lt;br/&gt;
started: Fri Apr 05 13:03:13 UTC 2024&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 32&lt;br/&gt;
finished: Fri Apr 05 13:03:27 UTC 2024&lt;br/&gt;
elapsed time (seconds): 14.311&lt;br/&gt;
----------configuration:(12/1459)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------stdout:(19/1711)----------&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/5d6a85b5-2f2b-4de6-96cc-33d0a2e4f73e-S9595/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/1aaee60a-3a59-4ed4-9f52-62197d95968e/runs/948c032d-3766-4228-bee2-78b0baafb447/workspace/open/src/hotspot/share/oops/compressedOops.inline.hpp:87), pid=1356319, tid=1357108&lt;br/&gt;
#  assert(Universe::is_in_heap(v)) failed: object not in heap 0x00007f41506ba530&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0+18) (fastdebug build 23-ea+18-1394)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+18-1394, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xaa6e7e]  CompressedOops::decode_not_null(oop)+0x6e&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/core.sh %p&amp;quot; (or dumping to /opt/mach5/mesos/work_dir/slaves/0db9c48f-6638-40d0-9a4b-bd9cc7533eb8-S39884/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/b0bcd06e-e2ef-4da1-adb0-9fdf7506a2b1/runs/639493e3-6d18-467c-9ba9-bf7eccd7ba3c/testoutput/test-support/jtreg_open_test_langtools_tier1/scratch/0/core.1356319)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /opt/mach5/mesos/work_dir/slaves/0db9c48f-6638-40d0-9a4b-bd9cc7533eb8-S39884/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/b0bcd06e-e2ef-4da1-adb0-9fdf7506a2b1/runs/639493e3-6d18-467c-9ba9-bf7eccd7ba3c/testoutput/test-support/jtreg_open_test_langtools_tier1/scratch/0/hs_err_pid1356319.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
result: Error. Agent communication error: java.io.EOFException; check console log for any additional details&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the crashing thread&amp;#39;s stack:&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f411400b9b0):  WorkerThread &amp;quot;GC Thread#4&amp;quot;    [id=1357108, stack(0x00007f413400e000,0x00007f413410e000) (1024K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f413400e000,0x00007f413410e000],  sp=0x00007f413410b450,  free space=1013k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xaa6e7e]  CompressedOops::decode_not_null(oop)+0x6e  (compressedOops.inline.hpp:87)&lt;br/&gt;
V  [libjvm.so+0xd24d47]  void G1ParCopyClosure&amp;lt;(G1Barrier)0, true&amp;gt;::do_oop_work&amp;lt;oop&amp;gt;(oop*)+0x97  (g1OopClosures.inline.hpp:222)&lt;br/&gt;
V  [libjvm.so+0x148c06c]  InterpreterOopMap::iterate_oop(OffsetClosure*) const+0xfc  (oopMapCache.cpp:226)&lt;br/&gt;
V  [libjvm.so+0xc04b2e]  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const+0x43e  (frame.cpp:956)&lt;br/&gt;
V  [libjvm.so+0xea7ecf]  JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]+0x9f  (frame.hpp:471)&lt;br/&gt;
V  [libjvm.so+0x17a3f79]  Thread::oops_do(OopClosure*, CodeBlobClosure*)+0x89  (thread.cpp:436)&lt;br/&gt;
V  [libjvm.so+0x17bc284]  Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)+0x1c4  (threads.cpp:1155)&lt;br/&gt;
V  [libjvm.so+0xd288e2]  G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)+0x72  (g1RootProcessor.cpp:180)&lt;br/&gt;
V  [libjvm.so+0xd289cc]  G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)+0x6c  (g1RootProcessor.cpp:61)&lt;br/&gt;
V  [libjvm.so+0xd3a4c2]  G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)+0x22  (g1YoungCollector.cpp:673)&lt;br/&gt;
V  [libjvm.so+0xd3aa07]  G1EvacuateRegionsBaseTask::work(unsigned int)+0x87  (g1YoungCollector.cpp:660)&lt;br/&gt;
V  [libjvm.so+0x18e0ed0]  WorkerThread::run()+0x80  (workerThread.cpp:70)&lt;br/&gt;
V  [libjvm.so+0x17a4816]  Thread::call_run()+0xb6  (thread.cpp:221)&lt;br/&gt;
V  [libjvm.so+0x14aa457]  thread_native_entry(Thread*)+0x127  (os_linux.cpp:853)&lt;br/&gt;
JavaThread 0x00007f41506b9c70 (nid = 1361002) was being processed&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
v  ~SafepointBlob 0x00007f413ff4817b&lt;br/&gt;
j  SwitchNull$$TypeSwitch+0x00000000713c5000.typeSwitch(Ljava/lang/Object;ILjava/util/function/BiPredicate;Ljava/util/List;)I+35&lt;br/&gt;
J 9577% c2 SwitchNull.testSwitchIntegerBoxExhaustive()V (50 bytes) @ 0x00007f4140e202fc [0x00007f4140e20260+0x000000000000009c]&lt;br/&gt;
j  SwitchNull.run()V+267&lt;br/&gt;
j  SwitchNull.main([Ljava/lang/String;)V+9&lt;br/&gt;
j  java.lang.invoke.LambdaForm$DMH+0x00000000710c0000.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)V+10 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.invoke.LambdaForm$MH+0x000000007114d400.invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;+33 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
J 8741 c1 jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt; (92 bytes) @ 0x00007f4139ea1694 [0x00007f4139e9fe00+0x0000000000001894]&lt;br/&gt;
J 8667 c1 java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt; (108 bytes) @ 0x00007f4139e59c6c [0x00007f4139e59760+0x000000000000050c]&lt;br/&gt;
j  com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run()V+10&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@23-ea&apos;&gt;java.base@23-ea&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f413fe2ad01</comment>
                            <comment id="14641996" author="dlong" created="Fri, 19 Jan 2024 13:59:32 -0800"  >This reproduces locally for me using the mach5 flags [~thartmann] listed.&lt;br/&gt;
I printed the value of the bad oop in gdb and it came up with this symbol:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)&lt;br/&gt;
&lt;br/&gt;
I suspect the problem is in the C2 caller, SwitchNull.switchIntegerBoxExhaustive().  If it calls  SharedRuntime::on_slowpath_allocation_exit(current) then it appears register r8 will get the value above.</comment>
                            <comment id="14637448" author="thartmann" created="Thu, 4 Jan 2024 07:16:03 -0800"  >ILW = Invalid oop caught by -XX:+VerifyOop / -XX:+VerifyStack, single test using pattern matching for switch and VM verification options, no workaround but disable compilation of affected method = HLM = P3</comment>
                            <comment id="14637425" author="thartmann" created="Thu, 4 Jan 2024 05:17:09 -0800"  >The failing &amp;#39;verify_oop_map&amp;#39; is the one emitted by CounterOverflowStub::emit_code. When running with -XX:+VerifyStack, we hit:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/0db9c48f-6638-40d0-9a4b-bd9cc7533eb8-S10119/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/6358784c-fae1-4f0c-afa4-29ace04323e6/runs/1d80984e-c65b-4275-a365-699cfbde002d/workspace/open/src/hotspot/share/oops/oop.cpp:145), pid=2704550, tid=2704582&lt;br/&gt;
#  guarantee(oopDesc::is_oop_or_null(obj)) failed: invalid oop: 0x00007f221c1c0a90&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0+26) (fastdebug build 22-ea+26-2041)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-ea+26-2041, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1464b79]  VerifyOopClosure::do_oop(oop*)+0x209&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f221437a000,0x00007f221447a000],  sp=0x00007f22144756e0,  free space=1005k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1464b79]  VerifyOopClosure::do_oop(oop*)+0x209  (oop.cpp:145)&lt;br/&gt;
V  [libjvm.so+0x1475b80]  void OopMapDo&amp;lt;OopClosure, DerivedOopClosure, SkipNullValue&amp;gt;::iterate_oops_do&amp;lt;RegisterMap&amp;gt;(frame const*, RegisterMap const*, ImmutableOopMap const*)+0x2d0  (oopMap.inline.hpp:135)&lt;br/&gt;
V  [libjvm.so+0x1474e29]  ImmutableOopMap::oops_do(frame const*, RegisterMap const*, OopClosure*, DerivedPointerIterationMode) const+0x59  (oopMap.inline.hpp:157)&lt;br/&gt;
V  [libjvm.so+0xc0c76e]  frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, DerivedOopClosure*, DerivedPointerIterationMode, RegisterMap const*) const+0x10e  (frame.cpp:977)&lt;br/&gt;
V  [libjvm.so+0xc117e2]  frame::verify(RegisterMap const*) const+0x102  (frame.cpp:1202)&lt;br/&gt;
V  [libjvm.so+0xe4ed29]  InterfaceSupport::verify_stack()+0x179  (interfaceSupport.cpp:226)&lt;br/&gt;
V  [libjvm.so+0x80191e]  Runtime1::counter_overflow(JavaThread*, int, Method*)+0x20e  (c1_Runtime1.cpp:497)&lt;br/&gt;
v  ~RuntimeStub::counter_overflow Runtime1 stub 0x00007f221c369bb1&lt;br/&gt;
J 835 c1 SwitchNull$$TypeSwitch+0x000000006310da10.typeSwitch(Ljava/lang/Object;ILjava/util/function/BiPredicate;Ljava/util/List;)I (64 bytes) @ 0x00007f2214e3b75e [0x00007f2214e3b1c0+0x000000000000059e]&lt;br/&gt;
J 838 c2 SwitchNull.switchIntegerBoxExhaustive(Ljava/lang/Integer;)I (46 bytes) @ 0x00007f221c7a3180 [0x00007f221c7a3140+0x0000000000000040]&lt;br/&gt;
j  SwitchNull.testSwitchIntegerBoxExhaustive()V+8&lt;br/&gt;
j  SwitchNull.run()V+267&lt;br/&gt;
j  SwitchNull.main([Ljava/lang/String;)V+9&lt;br/&gt;
&lt;br/&gt;
Where the invalid oop 0x00007f221c1c0a90 is at code_begin+-112 in &lt;br/&gt;
[CodeBlob (0x00007f221c1c0a90)]&lt;br/&gt;
Framesize: 0&lt;br/&gt;
BufferBlob (0x00007f221c1c0a90) used for Interpreter&lt;br/&gt;
&lt;br/&gt;
I think the oop comes from parm3: r8 and is part of the oop map of the Runtime1::counter_overflow call:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# {method} {0x00007f21f4a3a618} &amp;#39;typeSwitch&amp;#39; &amp;#39;(Ljava/lang/Object;ILjava/util/function/BiPredicate;Ljava/util/List;)I&amp;#39; in &amp;#39;SwitchNull$$TypeSwitch+0x000000006310da10&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# parm0:    rsi:rsi   = &amp;#39;java/lang/Object&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# parm1:    rdx       = int&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# parm2:    rcx:rcx   = &amp;#39;java/util/function/BiPredicate&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;# parm3:    r8:r8     = &amp;#39;java/util/List&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;#           [sp+0x30]  (sp of caller)&lt;br/&gt;
&amp;nbsp;;;  block B10 [0, 0]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1c0: 8984 2400 | 80fe ff55 | 4883 ec20 | 4181 7f20 | 0100 0000 &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1d4: ;   {runtime_call StubRoutines (final stubs)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1d4: 7405 e805 &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1d8: ;   {metadata(method data for {method} {0x00007f21f4a3a618} &amp;#39;typeSwitch&amp;#39; &amp;#39;(Ljava/lang/Object;ILjava/util/function/BiPredicate;Ljava/util/List;)I&amp;#39; in &amp;#39;SwitchNull$$TypeSwitch+0x000000006310da10&amp;#39;)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1d8: a63f 0748 | bf60 aba3 | f421 7f00 | 008b 9f1c | 0100 0083 | c302 899f | 1c01 0000 | 81e3 fe07 &lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1f8: 0000 85db &lt;br/&gt;
&amp;nbsp;;;   24 branch [EQ]   [CounterOverflowStub: 0x00007f21d411a710]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007f2214e3b1fc: 0f84 4005 </comment>
                            <comment id="14637050" author="thartmann" created="Wed, 3 Jan 2024 00:50:37 -0800"  >First fails with jdk-22+26-2041 which means that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319220&quot; title=&quot;Pattern matching switch with a lot of cases is unduly slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8319220&quot;&gt;&lt;strike&gt;JDK-8319220&lt;/strike&gt;&lt;/a&gt; triggers this.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131020">JDK-8333549</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131339">JDK-8333808</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5133131">JDK-8335399</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128833">JDK-8331762</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5129080">JDK-8331981</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5129326">JDK-8332140</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5129520">JDK-8332298</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5133191">JDK-8335456</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5113685">JDK-8319220</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128971">JDK-8331885</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5052570">JDK-8269285</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                                        </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34d83:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>