<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:41:44 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8225641] Calendar.roll(int field) does not work correctly for WEEK_OF_YEAR</title>
                <link>https://bugs.openjdk.org/browse/JDK-8225641</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
When the current date is &amp;quot;Monday,  30  December  2019&amp;quot; and you roll +1 the WEEK_OF_YEAR field, the result gets &amp;quot;Monday,  31  December  2018&amp;quot; which is completely wrong and violating the rule of &amp;quot;Not Changing The Larger Fields&amp;quot;. The desired result is &amp;quot;Tuesday,  1  January 2019&amp;quot; (like WEEK_OF_MONTH behavior in rolling).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4992592">JDK-8225641</key>
            <summary>Calendar.roll(int field) does not work correctly for WEEK_OF_YEAR</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jlu">Justin Lu</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>dcs-pso</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 10 Jun 2019 02:20:53 -0700</created>
                <updated>Fri, 21 Jul 2023 07:34:56 -0700</updated>
                            <resolved>Tue, 4 Apr 2023 14:03:14 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>13</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14571820" author="dukebot" created="Tue, 4 Apr 2023 14:03:13 -0700"  >Changeset: a324fa26&lt;br/&gt;
Author:    Justin Lu &amp;lt;&lt;a href=&apos;mailto:jlu@openjdk.org&apos;&gt;jlu@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Naoto Sato &amp;lt;&lt;a href=&apos;mailto:naoto@openjdk.org&apos;&gt;naoto@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-04 21:01:24 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a324fa2639d29f0c5b2928e7f15ec67e396c2648&quot;&gt;https://git.openjdk.org/jdk/commit/a324fa2639d29f0c5b2928e7f15ec67e396c2648&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14566901" author="roboduke" created="Tue, 14 Mar 2023 15:39:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13031&quot;&gt;https://git.openjdk.org/jdk/pull/13031&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-14 22:16:45 +0000</comment>
                            <comment id="14565950" author="JIRAUSER20507" created="Fri, 10 Mar 2023 10:30:05 -0800"  >This bug IS Locale dependent, because Locale determines the first day of the week. Consider France, which has a first day of the week landing on Monday. (Sunday for US)&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Calendar calendar = Calendar.getInstance(Locale.FRANCE); // Using Locale.ENGLISH would NOT return correct roll&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.set(Calendar.YEAR, 2019);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.set(Calendar.MONTH, 11); // December, 0-index based&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.set(Calendar.DAY_OF_MONTH, 29);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.roll(Calendar.WEEK_OF_YEAR, +1); // Rolling 12/29/2019 (Sunday)&lt;br/&gt;
&lt;br/&gt;
This will successfully roll into 1/6/2019 (Sunday), since week 1 of January 2019 (France) contains the days Tuesday to Sunday.</comment>
                            <comment id="14565098" author="JIRAUSER20507" created="Tue, 7 Mar 2023 10:03:00 -0800"  >This bug occurs during the roll, and any method that calls the Calendar method complete() would likely expose the bug.&lt;br/&gt;
&lt;br/&gt;
This bug is a result of an edge case when during a roll that ends up on the first week of a year, if the original day of the week does not exist in the first week, unexpected behavior occurs. For example, &lt;br/&gt;
&lt;br/&gt;
Rolling 12/31/2019 (Tuesday) correctly returns 1/1/2019 (Tuesday)&lt;br/&gt;
&lt;br/&gt;
Rolling 12/28/2019 (Saturday) correctly returns 1/3/2019 (Saturday)&lt;br/&gt;
&lt;br/&gt;
But rolling 12/30/2019 (Monday) and 12/29/2019 (Sunday) will not return correct behavior. Since week 1 of January 2019 (U.S) only contains the days Tuesday to Saturday.&lt;br/&gt;
&lt;br/&gt;
In GetDisplayName()... get()... complete() &#8230; getFixedDate() , an incorrect fixed date will be calculated, since the provided field mask will use week of year, and day of week to calculate the fixed date. However, the combo of week of year, with a non existent day of week returns an unexpected fixed date, which propagated back up returns a completely wrong date.</comment>
                            <comment id="14271969" author="psonal" created="Tue, 18 Jun 2019 00:16:35 -0700"  >Additional Information from submitter:&lt;br/&gt;
I have provided a sample test code which shows the case. It doesn&amp;#39;t matter what locale you use in the snippet, the result is always incorrect.&lt;br/&gt;
I took a look at java.time package, there is no functionality provided for rolling &amp;quot;week of year&amp;quot;, so I did it using java.util.Calendar.&lt;br/&gt;
&lt;br/&gt;
Test Code:&lt;br/&gt;
&lt;br/&gt;
import org.junit.Test;&lt;br/&gt;
&lt;br/&gt;
import java.util.Calendar;&lt;br/&gt;
import java.util.Locale;&lt;br/&gt;
&lt;br/&gt;
public class ExampleUnitTest {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Test&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void rollingWeekOfYear() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//TODO: It doesn&amp;#39;t matter what Locale you pass&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Calendar calendar = Calendar.getInstance(Locale.getDefault());&lt;br/&gt;
//        Calendar calendar = Calendar.getInstance(Locale.US);&lt;br/&gt;
//        Calendar calendar = Calendar.getInstance(Locale.FRENCH);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.set(Calendar.YEAR, 2019);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.set(Calendar.MONTH, 11);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.set(Calendar.DAY_OF_MONTH, 30);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(longDateString(calendar));&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.roll(Calendar.WEEK_OF_YEAR, +1);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(longDateString(calendar));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private String longDateString(Calendar calendar) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return calendar.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.ENGLISH) +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;,  &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.get(Calendar.DAY_OF_MONTH) +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;  &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH) +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;  &amp;quot; + &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calendar.get(Calendar.YEAR);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
Result:&lt;br/&gt;
Monday,  30  December  2019&lt;br/&gt;
Monday,  31  December  2018&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
Review comment&lt;br/&gt;
Edit Comment:&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14270422" author="naoto" created="Wed, 12 Jun 2019 11:02:43 -0700"  >The last cal.getTime() is doing something wrong. the Calendar instance seems legit before the call, as cal.toString() immediately after the roll() invocation generates:&lt;br/&gt;
java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=&amp;quot;America/Los_Angeles&amp;quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=America/Los_Angeles,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2019,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=364,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=58,SECOND=24,MILLISECOND=199,ZONE_OFFSET=-28800000,DST_OFFSET=0]&lt;br/&gt;
</comment>
                            <comment id="14270256" author="psonal" created="Wed, 12 Jun 2019 00:11:02 -0700"  >To reproduce, run the attached test case :&lt;br/&gt;
JDK 8u212 - Fail&lt;br/&gt;
JDK 11.0.3 - Fail&lt;br/&gt;
JDK 13-ea + 22 - Fail&lt;br/&gt;
&lt;br/&gt;
Output : &lt;br/&gt;
Mon Dec 30 12:39:02 IST 2019&lt;br/&gt;
Mon Dec 31 12:39:02 IST 2018&lt;br/&gt;
</comment>
                            <comment id="14270253" author="psonal" created="Wed, 12 Jun 2019 00:08:25 -0700"  >From submitter:&lt;br/&gt;
It doesn&amp;#39;t matter what locale you use in the snippet, the result is always incorrect.&lt;br/&gt;
I took a look at java.time package, there is no functionality provided for rolling &amp;quot;week of year&amp;quot;, so I did it using java.util.Calendar.</comment>
                            <comment id="14270235" author="psonal" created="Tue, 11 Jun 2019 22:12:26 -0700"  >To submitter:&lt;br/&gt;
Can you please provide the complete details like the locale you are using along with a test case to reproduce the issue you have reported. Have you tried using the classes in java.time package for the same test case and did you face the same issue there ?&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4944059">JDK-8190952</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="82780" name="JI9061140.java" size="378" author="psonal" created="Wed, 12 Jun 2019 00:10:09 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19301"><![CDATA[windows_10]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2jaaj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="239"><![CDATA[java.util:i18n]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>