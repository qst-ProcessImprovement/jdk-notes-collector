<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:04:23 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8292206] TestCgroupMetrics.java fails as getMemoryUsage() is lower than expected</title>
                <link>https://bugs.openjdk.org/browse/JDK-8292206</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK19 CI:&lt;br/&gt;
&lt;br/&gt;
jdk/internal/platform/cgroup/TestCgroupMetrics.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(6/232)----------&lt;br/&gt;
command: main TestCgroupMetrics&lt;br/&gt;
reason: User specified action: run main TestCgroupMetrics &lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 4&lt;br/&gt;
Additional exports to unnamed modules from @modules: java.base/jdk.internal.platform&lt;br/&gt;
elapsed time (seconds): 1.709&lt;br/&gt;
----------configuration:(17/2159)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------System.err:(14/960)----------&lt;br/&gt;
java.lang.RuntimeException: Test failed for - memory:getMemoryUsage, expected [23031517184], got [22767202304]&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.CgroupMetricsTester.fail(CgroupMetricsTester.java:71)&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.MetricsTesterCgroupV1.fail(MetricsTesterCgroupV1.java:188)&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.MetricsTesterCgroupV1.testMemoryUsage(MetricsTesterCgroupV1.java:555)&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.MetricsTester.testAll(MetricsTester.java:62)&lt;br/&gt;
	at TestCgroupMetrics.main(TestCgroupMetrics.java:47)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1589)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.RuntimeException: Test failed for - memory:getMemoryUsage, expected [23031517184], got [22767202304]&lt;br/&gt;
&lt;br/&gt;
A similar failure in this test was previously resolved:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8229284&quot; title=&quot;[TESTBUG] jdk/internal/platform/cgroup/TestCgroupMetrics.java fails for - memory:getMemoryUsage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8229284&quot;&gt;&lt;strike&gt;JDK-8229284&lt;/strike&gt;&lt;/a&gt; [TESTBUG] jdk/internal/platform/cgroup/TestCgroupMetrics.java fails for - memory:getMemoryUsage</description>
                <environment></environment>
        <key id="5081387">JDK-8292206</key>
            <summary>TestCgroupMetrics.java fails as getMemoryUsage() is lower than expected</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="iklam">Ioi Lam</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>CPU23_04-defer-SQE-OK</label>
                            <label>CPU23_04-defer-approved</label>
                            <label>containers</label>
                            <label>intermittent</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>tier5</label>
                    </labels>
                <created>Wed, 10 Aug 2022 11:39:38 -0700</created>
                <updated>Fri, 11 Jul 2025 19:52:57 -0700</updated>
                            <resolved>Thu, 22 Dec 2022 12:52:13 -0800</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17.0.7-oracle</version>
                    <version>19</version>
                    <version>20</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                <comments>
                            <comment id="14579788" author="roboduke" created="Mon, 8 May 2023 07:30:26 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/1868&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/1868&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-08 14:21:22 +0000</comment>
                            <comment id="14579785" author="roboduke" created="Mon, 8 May 2023 07:24:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1332&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1332&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-08 14:14:32 +0000</comment>
                            <comment id="14579776" author="goetz" created="Mon, 8 May 2023 07:18:45 -0700"  >Fix request [11u,17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 11.0.20-oracle,17.0.8-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Tests pass. SAP nightly testing passed.</comment>
                            <comment id="14547511" author="dukebot" created="Thu, 22 Dec 2022 12:52:12 -0800"  >Changeset: 6ccee839&lt;br/&gt;
Author:    Ioi Lam &amp;lt;&lt;a href=&apos;mailto:iklam@openjdk.org&apos;&gt;iklam@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2022-12-22 20:50:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6ccee839580fd9dc4cd4941b44dbbe3105202561&quot;&gt;https://git.openjdk.org/jdk/commit/6ccee839580fd9dc4cd4941b44dbbe3105202561&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14546775" author="sgehwolf" created="Tue, 20 Dec 2022 02:47:54 -0800"  >&amp;nbsp;jdk.test.lib.containers.cgroup.MetricsTester is being used in two different scenarios: 1) TestCgroupMetrics (outside a container) 2) TestSystemMetrics (from within a container - with a 256mb mem limit). So the analysis isn&amp;#39;t entirely correct.</comment>
                            <comment id="14546690" author="roboduke" created="Mon, 19 Dec 2022 16:11:53 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11734&quot;&gt;https://git.openjdk.org/jdk/pull/11734&lt;/a&gt;&lt;br/&gt;
Date: 2022-12-20 00:03:25 +0000</comment>
                            <comment id="14546675" author="iklam" created="Mon, 19 Dec 2022 15:10:00 -0800"  >This particular scenario is fundamentally wrong.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/ba942c24e8894f4422870fb53253f5946dc4f0d1/test/lib/jdk/test/lib/containers/cgroup/MetricsTesterCgroupV1.java#L530-L557&quot;&gt;https://github.com/openjdk/jdk/blob/ba942c24e8894f4422870fb53253f5946dc4f0d1/test/lib/jdk/test/lib/containers/cgroup/MetricsTesterCgroupV1.java#L530-L557&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The jdk.internal.platform.Metrics.getMemoryUsage() API returns the the &amp;quot;memory.current&amp;quot; metric&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git/tree/Documentation/admin-guide/cgroup-v2.rst&quot;&gt;https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git/tree/Documentation/admin-guide/cgroup-v2.rst&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memory.current: The total amount of memory currently being used by the cgroup and its descendants.&lt;br/&gt;
&lt;br/&gt;
This test scenario is executed in a regular Java program, outside of any containers (in fact it&amp;#39;s executed inside a jtreg agent thread)&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: Test failed for - memory:getMemoryUsage, expected [23031517184], got [22767202304]&lt;br/&gt;
at jdk.test.lib.containers.cgroup.CgroupMetricsTester.fail(CgroupMetricsTester.java:71)&lt;br/&gt;
at jdk.test.lib.containers.cgroup.MetricsTesterCgroupV1.fail(MetricsTesterCgroupV1.java:188)&lt;br/&gt;
at jdk.test.lib.containers.cgroup.MetricsTesterCgroupV1.testMemoryUsage(MetricsTesterCgroupV1.java:555)&lt;br/&gt;
at jdk.test.lib.containers.cgroup.MetricsTester.testAll(MetricsTester.java:62)&lt;br/&gt;
at TestCgroupMetrics.main(TestCgroupMetrics.java:47)&lt;br/&gt;
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
at java.base/java.lang.Thread.run(Thread.java:1589)&lt;br/&gt;
&lt;br/&gt;
So &amp;quot;memory.current&amp;quot; returns the total usage of all programs executed by the current Linux user, including all other jtreg test cases that may be currently allocating and freeing memory. That&amp;#39;s why we see such a high number:  22767202304 is over 22GB!&lt;br/&gt;
&lt;br/&gt;
Under this circumstance, it&amp;#39;s simple impossible to make Metrics.getMemoryUsage() to return any predictable value.</comment>
                            <comment id="14546324" author="iklam" created="Sun, 18 Dec 2022 21:59:00 -0800"  >We already have sanity test for the getMemoryUsage() API:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/ba942c24e8894f4422870fb53253f5946dc4f0d1/test/lib/jdk/test/lib/containers/cgroup/MetricsTesterCgroupV1.java#L237-L241&quot;&gt;https://github.com/openjdk/jdk/blob/ba942c24e8894f4422870fb53253f5946dc4f0d1/test/lib/jdk/test/lib/containers/cgroup/MetricsTesterCgroupV1.java#L237-L241&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oldVal = metrics.getMemoryUsage();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;newVal = getLongValueFromFile(Controller.MEMORY, &amp;quot;memory.usage_in_bytes&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fail(Controller.MEMORY, &amp;quot;memory.usage_in_bytes&amp;quot;, oldVal, newVal);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t think it&amp;#39;s possible to write a test to cause metrics.getMemoryUsage() to reliably return a value that&amp;#39;s larger (or smaller) than one previously observed. Java heap allocations may cause collections which might release memory back to the OS (the exact behavior depends on the collector and the OS).&lt;br/&gt;
&lt;br/&gt;
Even [~ibereziuk] the suggestion above may not work, as the container may overcommit and use more RAM that on the system.&lt;br/&gt;
&lt;br/&gt;
So I think the MetricsTesterCgroupV1::testMemoryUsage() and MetricsTesterCgroupV2::testMemoryUsage() should be removed.</comment>
                            <comment id="14542263" author="JIRAUSER20002" created="Fri, 2 Dec 2022 07:42:53 -0800"  >Indeed, part of TestCgroupMetrics.java test which fails intermittently. The test needs to be improved. There is a ticket &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8298030&quot;&gt;https://bugs.openjdk.org/browse/JDK-8298030&lt;/a&gt; .&lt;br/&gt;
Better to disable the problematic part of the test until the test is improved.</comment>
                            <comment id="14533248" author="dcubed" created="Sat, 29 Oct 2022 19:54:09 -0700"  >Here&amp;#39;s log file snippet from the jdk-20+22-1572-tier5 sighting:&lt;br/&gt;
&lt;br/&gt;
jdk/internal/platform/cgroup/TestCgroupMetrics.java&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(8/309)----------&lt;br/&gt;
command: main TestCgroupMetrics&lt;br/&gt;
reason: User specified action: run main TestCgroupMetrics &lt;br/&gt;
started: Sat Oct 29 18:51:23 UTC 2022&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 6&lt;br/&gt;
Additional exports to unnamed modules from @modules: java.base/jdk.internal.platform&lt;br/&gt;
finished: Sat Oct 29 18:51:25 UTC 2022&lt;br/&gt;
elapsed time (seconds): 1.683&lt;br/&gt;
----------configuration:(15/1955)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------System.err:(14/960)----------&lt;br/&gt;
java.lang.RuntimeException: Test failed for - memory:getMemoryUsage, expected [23282388992], got [22777573376]&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.CgroupMetricsTester.fail(CgroupMetricsTester.java:71)&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.MetricsTesterCgroupV1.fail(MetricsTesterCgroupV1.java:188)&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.MetricsTesterCgroupV1.testMemoryUsage(MetricsTesterCgroupV1.java:555)&lt;br/&gt;
	at jdk.test.lib.containers.cgroup.MetricsTester.testAll(MetricsTester.java:62)&lt;br/&gt;
	at TestCgroupMetrics.main(TestCgroupMetrics.java:47)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.RuntimeException: Test failed for - memory:getMemoryUsage, expected [23282388992], got [22777573376]</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5095272">JDK-8303426</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095557">JDK-8303641</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5096050">JDK-8304046</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100597">JDK-8307825</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100599">JDK-8307827</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5088798">JDK-8298030</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5088797">JDK-8298029</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                                        </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4997630">JDK-8229284</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2y84j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17314"><![CDATA[b04]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>