<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:27:18 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8288936] Wrong lock ordering writing G1HeapRegionTypeChange JFR event</title>
                <link>https://bugs.openjdk.org/browse/JDK-8288936</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When writing a G1HeapRegionTypeChange JFR event the following assertion can be triggered:&lt;br/&gt;
assert(false) failed: Attempting to acquire lock JfrMsg_lock/nosafepoint-3 out of order with lock FreeList_lock/service-1 -- possible deadlock&lt;br/&gt;
&lt;br/&gt;
The associated stack trace is on Windows looks like this:&lt;br/&gt;
V  [jvm.dll+0xe486d3]  os::platform_print_native_stack+0x63  (os_windows_x86.cpp:235)&lt;br/&gt;
V  [jvm.dll+0x1140ae8]  VMError::report+0x1238  (vmError.cpp:835)&lt;br/&gt;
V  [jvm.dll+0x114334e]  VMError::report_and_die+0x6ce  (vmError.cpp:1683)&lt;br/&gt;
V  [jvm.dll+0x11439b1]  VMError::report_and_die+0x81  (vmError.cpp:1468)&lt;br/&gt;
V  [jvm.dll+0x60a39d]  report_vm_error+0x9d  (debug.cpp:284)&lt;br/&gt;
V  [jvm.dll+0xdd7ba7]  Mutex::check_rank+0x427  (mutex.cpp:444)&lt;br/&gt;
V  [jvm.dll+0xdd81e4]  Mutex::try_lock_inner+0x44  (mutex.cpp:170)&lt;br/&gt;
V  [jvm.dll+0xdd8025]  Mutex::try_lock+0x15  (mutex.cpp:182)&lt;br/&gt;
V  [jvm.dll+0x9de60f]  JfrMonitorTryLock::JfrMonitorTryLock+0x3f  (jfrTryLock.hpp:59)&lt;br/&gt;
V  [jvm.dll+0x9ddfb6]  JfrPostBox::asynchronous_post+0x66  (jfrPostBox.cpp:107)&lt;br/&gt;
V  [jvm.dll+0x9dddb1]  JfrPostBox::post+0x61  (jfrPostBox.cpp:82)&lt;br/&gt;
V  [jvm.dll+0x9e8a1d]  JfrStorage::register_full+0xed  (jfrStorage.cpp:284)&lt;br/&gt;
V  [jvm.dll+0x9ed8fb]  JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt;::register_full+0x2b  (jfrMemorySpace.inline.hpp:301)&lt;br/&gt;
V  [jvm.dll+0x9ea228]  JfrMspaceRetrieval&amp;lt;JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt; &amp;gt;::acquire&amp;lt;StopOnNullCondition&amp;lt;JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt; &amp;gt; &amp;gt;+0x108  (jfrMemorySpaceRetrieval.hpp:59)&lt;br/&gt;
V  [jvm.dll+0x9ebfe7]  JfrMspaceRetrieval&amp;lt;JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt; &amp;gt;::acquire+0x87  (jfrMemorySpaceRetrieval.hpp:43)&lt;br/&gt;
V  [jvm.dll+0x9ebeaa]  JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt;::acquire+0x3a  (jfrMemorySpace.inline.hpp:241)&lt;br/&gt;
V  [jvm.dll+0x9eae78]  mspace_acquire_live&amp;lt;JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt; &amp;gt;+0x38  (jfrMemorySpace.inline.hpp:422)&lt;br/&gt;
V  [jvm.dll+0x9eaf11]  mspace_acquire_live_with_retry&amp;lt;JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt; &amp;gt;+0x91  (jfrMemorySpace.inline.hpp:428)&lt;br/&gt;
V  [jvm.dll+0x9e9388]  acquire_promotion_buffer+0x78  (jfrStorage.cpp:178)&lt;br/&gt;
V  [jvm.dll+0x9e7788]  JfrStorage::flush_regular_buffer+0x148  (jfrStorage.cpp:244)&lt;br/&gt;
V  [jvm.dll+0x9e78d8]  JfrStorage::flush_regular+0x58  (jfrStorage.cpp:400)&lt;br/&gt;
V  [jvm.dll+0x9e8d49]  JfrStorage::flush+0xe9  (jfrStorage.cpp:388)&lt;br/&gt;
V  [jvm.dll+0x9ab9e2]  JfrFlush::JfrFlush+0x52  (jfrFlush.cpp:35)&lt;br/&gt;
V  [jvm.dll+0x2d2e83]  Adapter&amp;lt;JfrFlush&amp;gt;::flush+0x73  (jfrStorageAdapter.hpp:84)&lt;br/&gt;
V  [jvm.dll+0x2d224e]  StorageHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj&amp;gt;::accommodate+0x2e  (jfrStorageHost.inline.hpp:66)&lt;br/&gt;
V  [jvm.dll+0x2d2c13]  WriterHost&amp;lt;EncoderHost&amp;lt;BigEndianEncoderImpl,BigEndianEncoderImpl&amp;gt;,EncoderHost&amp;lt;Varint128EncoderImpl,BigEndianEncoderImpl&amp;gt;,MemoryWriterHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj,ExclusiveAccessAssert&amp;gt; &amp;gt;::ensure_size+0x53  (jfrWriterHost.inline.hpp:169)&lt;br/&gt;
V  [jvm.dll+0x2d18c2]  WriterHost&amp;lt;EncoderHost&amp;lt;BigEndianEncoderImpl,BigEndianEncoderImpl&amp;gt;,EncoderHost&amp;lt;Varint128EncoderImpl,BigEndianEncoderImpl&amp;gt;,MemoryWriterHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj,ExclusiveAccessAssert&amp;gt; &amp;gt;::write&amp;lt;unsigned __int64&amp;gt;+0x92  (jfrWriterHost.inline.hpp:77)&lt;br/&gt;
V  [jvm.dll+0x2d1923]  WriterHost&amp;lt;EncoderHost&amp;lt;BigEndianEncoderImpl,BigEndianEncoderImpl&amp;gt;,EncoderHost&amp;lt;Varint128EncoderImpl,BigEndianEncoderImpl&amp;gt;,MemoryWriterHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj,ExclusiveAccessAssert&amp;gt; &amp;gt;::write&amp;lt;unsigned __int64&amp;gt;+0x23  (jfrWriterHost.inline.hpp:182)&lt;br/&gt;
V  [jvm.dll+0x925733]  EventG1HeapRegionTypeChange::writeData&amp;lt;EventWriterHost&amp;lt;EncoderHost&amp;lt;BigEndianEncoderImpl,BigEndianEncoderImpl&amp;gt;,EncoderHost&amp;lt;Varint128EncoderImpl,BigEndianEncoderImpl&amp;gt;,MemoryWriterHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj,ExclusiveAccessAssert&amp;gt; &amp;gt; &amp;gt;+0x33  (jfrEventClasses.hpp:5368)&lt;br/&gt;
V  [jvm.dll+0x925ff8]  JfrEvent&amp;lt;EventG1HeapRegionTypeChange&amp;gt;::write_sized_event+0x148  (jfrEvent.hpp:250)&lt;br/&gt;
V  [jvm.dll+0x925e57]  JfrEvent&amp;lt;EventG1HeapRegionTypeChange&amp;gt;::write_event+0xa7  (jfrEvent.hpp:219)&lt;br/&gt;
V  [jvm.dll+0x925968]  JfrEvent&amp;lt;EventG1HeapRegionTypeChange&amp;gt;::commit+0x68  (jfrEvent.hpp:93)&lt;br/&gt;
V  [jvm.dll+0x9256d4]  HeapRegionTracer::send_region_type_change+0xb4  (heapRegionTracer.cpp:43)&lt;br/&gt;
V  [jvm.dll+0x913c0b]  HeapRegion::report_region_type_change+0x5b  (heapRegion.cpp:273)&lt;br/&gt;
V  [jvm.dll+0x914248]  HeapRegion::set_survivor+0x18  (heapRegion.cpp:170)&lt;br/&gt;
V  [jvm.dll+0x80f62f]  G1CollectedHeap::new_gc_alloc_region+0xef  (g1CollectedHeap.cpp:3273)&lt;br/&gt;
V  [jvm.dll+0x7e8024]  G1GCAllocRegion::allocate_new_region+0x84  (g1AllocRegion.cpp:351)&lt;br/&gt;
V  [jvm.dll+0x7e6bf2]  G1AllocRegion::new_alloc_region_and_allocate+0x172  (g1AllocRegion.cpp:139)&lt;br/&gt;
V  [jvm.dll+0x7ebb0c]  G1AllocRegion::attempt_allocation_using_new_region+0x3c  (g1AllocRegion.inline.hpp:106)&lt;br/&gt;
V  [jvm.dll+0x7ebabe]  G1AllocRegion::attempt_allocation_locked+0x5e  (g1AllocRegion.inline.hpp:100)&lt;br/&gt;
V  [jvm.dll+0x7e9073]  G1Allocator::survivor_attempt_allocation+0xe3  (g1Allocator.cpp:255)&lt;br/&gt;
V  [jvm.dll+0x7e9bd7]  G1Allocator::par_allocate_during_gc+0x57  (g1Allocator.cpp:230)&lt;br/&gt;
V  [jvm.dll+0x7e9afc]  G1Allocator::par_allocate_during_gc+0x4c  (g1Allocator.cpp:216)&lt;br/&gt;
V  [jvm.dll+0x7ea32e]  G1PLABAllocator::allocate_direct_or_new_plab+0x22e  (g1Allocator.cpp:362)&lt;br/&gt;
V  [jvm.dll+0x86f0a2]  G1ParScanThreadState::allocate_copy_slow+0x72  (g1ParScanThreadState.cpp:403)&lt;br/&gt;
V  [jvm.dll+0x86f361]  G1ParScanThreadState::do_copy_to_survivor_space+0x151  (g1ParScanThreadState.cpp:468)&lt;br/&gt;
V  [jvm.dll+0x870ce7]  G1ParScanThreadState::do_oop_evac&amp;lt;enum narrowOop&amp;gt;+0x147  (g1ParScanThreadState.cpp:211)&lt;br/&gt;
V  [jvm.dll+0x86f815]  G1ParScanThreadState::dispatch_task+0x45  (g1ParScanThreadState.cpp:289)&lt;br/&gt;
V  [jvm.dll+0x86fbfa]  G1ParScanThreadState::trim_queue_to_threshold+0x8a  (g1ParScanThreadState.cpp:311)&lt;br/&gt;
V  [jvm.dll+0x86c7fe]  G1ParScanThreadState::trim_queue_partially+0x3e  (g1ParScanThreadState.inline.hpp:54)&lt;br/&gt;
V  [jvm.dll+0x8965b9]  G1ScanHRForRegionClosure::scan_memregion+0x149  (g1RemSet.cpp:797)&lt;br/&gt;
V  [jvm.dll+0x893120]  G1ScanHRForRegionClosure::do_claimed_block+0x1b0  (g1RemSet.cpp:817)&lt;br/&gt;
V  [jvm.dll+0x892e24]  G1ScanHRForRegionClosure::do_card_block+0x54  (g1RemSet.cpp:825)&lt;br/&gt;
V  [jvm.dll+0x8963a6]  G1ScanHRForRegionClosure::scan_heap_roots+0x216  (g1RemSet.cpp:857)&lt;br/&gt;
V  [jvm.dll+0x893e27]  G1ScanHRForRegionClosure::do_heap_region+0xe7  (g1RemSet.cpp:902)&lt;br/&gt;
V  [jvm.dll+0x894e5e]  G1RemSetScanState::iterate_dirty_regions_from+0xae  (g1RemSet.cpp:420)&lt;br/&gt;
V  [jvm.dll+0x87fce6]  G1RemSet::scan_heap_roots+0x76  (g1RemSet.cpp:923)&lt;br/&gt;
V  [jvm.dll+0x8ad25c]  G1EvacuateRegionsTask::scan_roots+0x6c  (g1YoungCollector.cpp:667)&lt;br/&gt;
V  [jvm.dll+0x8ad5c5]  G1EvacuateRegionsBaseTask::work+0x95  (g1YoungCollector.cpp:653)&lt;br/&gt;
V  [jvm.dll+0x118cf46]  WorkerTaskDispatcher::worker_run_task+0x76  (workerThread.cpp:72)&lt;br/&gt;
V  [jvm.dll+0x118d4a0]  WorkerThread::run+0x30  (workerThread.cpp:164)&lt;br/&gt;
V  [jvm.dll+0x10a374c]  Thread::call_run+0x15c  (thread.cpp:365)&lt;br/&gt;
V  [jvm.dll+0xe40db8]  thread_native_entry+0x108  (os_windows.cpp:545)&lt;br/&gt;
C  [ucrtbase.dll+0x21bb2]&lt;br/&gt;
C  [KERNEL32.DLL+0x17034]&lt;br/&gt;
C  [ntdll.dll+0x52651]&lt;br/&gt;
&lt;br/&gt;
The problem can be reproduced with a debug version of the VM with the following command line:&lt;br/&gt;
java -XX:StartFlightRecording=settings=g1-heap-region-change.jfc,flush-interval=1h -Xmx1G -Xms128M  -XX:+UseG1GC examples.Allocator&lt;br/&gt;
&lt;br/&gt;
with the following settings for the g1-heap-region-change.jfc file:&lt;br/&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;br/&gt;
&amp;lt;configuration version=&amp;quot;2.0&amp;quot; label=&amp;quot;GC History Simulation&amp;quot; description=&amp;quot;Should include events anaolg to our GC history file.&amp;quot; provider=&amp;quot;Oracle&amp;quot;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;lt;event name=&amp;quot;jdk.G1HeapRegionTypeChange&amp;quot;&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;setting name=&amp;quot;enabled&amp;quot;&amp;gt;true&amp;lt;/setting&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;lt;/event&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&amp;lt;/configuration&amp;gt;&lt;br/&gt;
&lt;br/&gt;
and this Allocator code:&lt;br/&gt;
package examples;&lt;br/&gt;
&lt;br/&gt;
public class Allocator {&lt;br/&gt;
&lt;br/&gt;
	public static void main(String[] args) {&lt;br/&gt;
		long maxMem = 1024 * 1024 * 768;&lt;br/&gt;
		long minMem = 1024 * 1024 * 64;&lt;br/&gt;
		int maxOverwrite = 24;&lt;br/&gt;
		int chunkSize = 1024 * 10;&lt;br/&gt;
		byte[][] roots = new byte[1 + (int) (maxMem / chunkSize)][];&lt;br/&gt;
		long used = 0;&lt;br/&gt;
		int pos = 0;&lt;br/&gt;
&lt;br/&gt;
		while (true) {&lt;br/&gt;
			int overwriteCount = (int) (Math.random() * maxOverwrite);&lt;br/&gt;
&lt;br/&gt;
			while (used &amp;lt; maxMem) {&lt;br/&gt;
				for (int i = 0; i &amp;lt;= overwriteCount; ++i) {&lt;br/&gt;
					roots[pos] = new byte[chunkSize];&lt;br/&gt;
				}&lt;br/&gt;
				&lt;br/&gt;
				pos += 1;&lt;br/&gt;
				used += chunkSize;&lt;br/&gt;
			}&lt;br/&gt;
			&lt;br/&gt;
			long targetUse = minMem + (long) ((maxMem - minMem) * Math.random());&lt;br/&gt;
&lt;br/&gt;
			while (used &amp;gt; targetUse) {&lt;br/&gt;
				pos -= 1;&lt;br/&gt;
				roots[pos] = null;&lt;br/&gt;
				used -= chunkSize;&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;br/&gt;
}&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5077601">JDK-8288936</key>
            <summary>Wrong lock ordering writing G1HeapRegionTypeChange JFR event</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mgronlun">Markus Gr&#246;nlund</assignee>
                                    <reporter username="rschmelter">Ralf Schmelter</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>gc-g1</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jfr</label>
                            <label>zgc</label>
                    </labels>
                <created>Tue, 21 Jun 2022 23:01:21 -0700</created>
                <updated>Thu, 4 Apr 2024 13:53:11 -0700</updated>
                            <resolved>Wed, 9 Aug 2023 06:35:58 -0700</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14662269" author="roboduke" created="Tue, 2 Apr 2024 14:01:10 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/437&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/437&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-02 20:56:00 +0000</comment>
                            <comment id="14662264" author="goetz" created="Tue, 2 Apr 2024 13:52:36 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.4-oracle.&lt;br/&gt;
Low to medium risk. Fiddles with locking, but only for jfr. Also it is well hung, but no test.&lt;br/&gt;
Clean backport.&lt;br/&gt;
SAP nightly testing passed.</comment>
                            <comment id="14603191" author="mgronlun" created="Thu, 10 Aug 2023 04:50:31 -0700"  >It looks like the lock ordering problem with the FreeList_lock relative to the JfrMsg_lock goes back to JDK11. Back then, they were both ranked &amp;quot;leaf&amp;quot;.</comment>
                            <comment id="14603133" author="shade" created="Thu, 10 Aug 2023 01:26:52 -0700"  >Which JDK versions it affects? The last change to JfrMsg_lock ordering I see is &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8266936&quot; title=&quot;Add a finalization JFR event&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8266936&quot;&gt;&lt;strike&gt;JDK-8266936&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14602958" author="dukebot" created="Wed, 9 Aug 2023 06:35:53 -0700"  >Changeset: 0eb0997a&lt;br/&gt;
Author:    Markus Gr&amp;#xF6;nlund &amp;lt;&lt;a href=&apos;mailto:mgronlun@openjdk.org&apos;&gt;mgronlun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-09 13:34:04 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0eb0997ae4f81314b764241e69dae5c698dbb6c6&quot;&gt;https://git.openjdk.org/jdk/commit/0eb0997ae4f81314b764241e69dae5c698dbb6c6&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14601922" author="roboduke" created="Fri, 4 Aug 2023 05:22:49 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15155&quot;&gt;https://git.openjdk.org/jdk/pull/15155&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-04 12:17:27 +0000</comment>
                            <comment id="14601921" author="mgronlun" created="Fri, 4 Aug 2023 05:12:33 -0700"  >Also ZGC has run into lock ordering problems:&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000009347e00000,0x0000009347f00000]&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [jvm.dll+0xc548d1]  os::win32::platform_print_native_stack+0x101  (os_windows_x86.cpp:236)&lt;br/&gt;
V  [jvm.dll+0xef257c]  VMError::report+0x146c  (vmError.cpp:991)&lt;br/&gt;
V  [jvm.dll+0xef4975]  VMError::report_and_die+0x645  (vmError.cpp:1797)&lt;br/&gt;
V  [jvm.dll+0xef5084]  VMError::report_and_die+0x64  (vmError.cpp:1562)&lt;br/&gt;
V  [jvm.dll+0x53eabb]  report_vm_error+0x5b  (debug.cpp:191)&lt;br/&gt;
V  [jvm.dll+0xbf031d]  Mutex::check_rank+0x22d  (mutex.cpp:447)&lt;br/&gt;
V  [jvm.dll+0xbf0f9f]  Mutex::try_lock+0x2f  (mutex.cpp:182)&lt;br/&gt;
V  [jvm.dll+0x82e5eb]  JfrPostBox::post+0xab  (jfrPostBox.cpp:81)&lt;br/&gt;
V  [jvm.dll+0x839296]  JfrStorage::register_full+0x126  (jfrStorage.cpp:282)&lt;br/&gt;
V  [jvm.dll+0x835891]  JfrMspaceRetrieval&amp;lt;JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt; &amp;gt;::acquire&amp;lt;StopOnNullCondition&amp;lt;JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt; &amp;gt; &amp;gt;+0xc1  (jfrMemorySpaceRetrieval.hpp:59)&lt;br/&gt;
V  [jvm.dll+0x835e00]  mspace_acquire_live_with_retry&amp;lt;JfrMemorySpace&amp;lt;JfrStorage,JfrMspaceRetrieval,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,JfrLinkedList&amp;lt;JfrBuffer,JfrCHeapObj&amp;gt;,0&amp;gt; &amp;gt;+0x90  (jfrMemorySpace.inline.hpp:434)&lt;br/&gt;
V  [jvm.dll+0x8380e4]  JfrStorage::flush_regular_buffer+0xe4  (jfrStorage.cpp:244)&lt;br/&gt;
V  [jvm.dll+0x837e3e]  JfrStorage::flush_regular+0x8e  (jfrStorage.cpp:400)&lt;br/&gt;
V  [jvm.dll+0x837cf5]  JfrStorage::flush+0x195  (jfrStorage.cpp:388)&lt;br/&gt;
V  [jvm.dll+0x800fe4]  JfrFlush::JfrFlush+0x34  (jfrFlush.cpp:35)&lt;br/&gt;
V  [jvm.dll+0x22af99]  Adapter&amp;lt;JfrFlush&amp;gt;::flush+0x49  (jfrStorageAdapter.hpp:84)&lt;br/&gt;
V  [jvm.dll+0x22a761]  StorageHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj&amp;gt;::accommodate+0x31  (jfrStorageHost.inline.hpp:66)&lt;br/&gt;
V  [jvm.dll+0x22aecb]  WriterHost&amp;lt;EncoderHost&amp;lt;BigEndianEncoderImpl,BigEndianEncoderImpl&amp;gt;,EncoderHost&amp;lt;Varint128EncoderImpl,BigEndianEncoderImpl&amp;gt;,MemoryWriterHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj,ExclusiveAccessAssert&amp;gt; &amp;gt;::ensure_size+0x3b  (jfrWriterHost.inline.hpp:171)&lt;br/&gt;
V  [jvm.dll+0x22a6d6]  WriterHost&amp;lt;EncoderHost&amp;lt;BigEndianEncoderImpl,BigEndianEncoderImpl&amp;gt;,EncoderHost&amp;lt;Varint128EncoderImpl,BigEndianEncoderImpl&amp;gt;,MemoryWriterHost&amp;lt;Adapter&amp;lt;JfrFlush&amp;gt;,StackObj,ExclusiveAccessAssert&amp;gt; &amp;gt;::write&amp;lt;__int64&amp;gt;+0x26  (jfrWriterHost.inline.hpp:183)&lt;br/&gt;
V  [jvm.dll+0xf739b6]  JfrEvent&amp;lt;EventZPageAllocation&amp;gt;::write_sized_event+0x206  (jfrEvent.hpp:241)&lt;br/&gt;
V  [jvm.dll+0xf73356]  JfrEvent&amp;lt;EventZPageAllocation&amp;gt;::write_event+0x166  (jfrEvent.hpp:217)&lt;br/&gt;
V  [jvm.dll+0xf7149f]  XPageAllocator::alloc_page+0x60f  (xPageAllocator.cpp:697)&lt;br/&gt;
V  [jvm.dll+0xf532d7]  XHeap::alloc_page+0x27  (xHeap.cpp:174)&lt;br/&gt;
V  [jvm.dll+0xf6f98e]  XObjectAllocator::alloc_page+0x4e  (xObjectAllocator.cpp:72)&lt;br/&gt;
V  [jvm.dll+0xf6f82c]  XObjectAllocator::alloc_object_in_shared_page+0x6c  (xObjectAllocator.cpp:102)&lt;br/&gt;
V  [jvm.dll+0xf6f4b5]  XObjectAllocator::alloc_object+0x65  (xObjectAllocator.cpp:170)&lt;br/&gt;
V  [jvm.dll+0xf6f6de]  XObjectAllocator::alloc_object_for_relocation+0x2e  (xObjectAllocator.cpp:181)&lt;br/&gt;
V  [jvm.dll+0xf7c0f1]  relocate_object_inner+0xd1  (xRelocate.cpp:68)&lt;br/&gt;
V  [jvm.dll+0xf7bf95]  XRelocate::relocate_object+0x55  (xRelocate.cpp:100)&lt;br/&gt;
V  [jvm.dll+0xf45456]  XBarrier::relocate+0xc6  (xBarrier.cpp:111)&lt;br/&gt;
V  [jvm.dll+0xf4555c]  XBarrier::relocate_or_mark+0x2c  (xBarrier.cpp:115)&lt;br/&gt;
V  [jvm.dll+0xf6ced3]  XNMethodOopClosure::do_oop+0x253  (xNMethod.cpp:247)&lt;br/&gt;
V  [jvm.dll+0xf6d55a]  XNMethod::nmethod_oops_do_inner+0xaa  (xNMethod.cpp:228)&lt;br/&gt;
V  [jvm.dll+0xf6d414]  XNMethod::nmethod_oops_barrier+0x24  (xNMethod.cpp:259)&lt;br/&gt;
V  [jvm.dll+0xf4cc41]  XBarrierSetNMethod::nmethod_entry_barrier+0xa1  (xBarrierSetNMethod.cpp:63)&lt;br/&gt;
V  [jvm.dll+0xf80568]  XOnStackCodeBlobClosure::do_code_blob+0x38  (xStackWatermark.cpp:43)&lt;br/&gt;
V  [jvm.dll+0x62c2e8]  frame::oops_code_blob_do+0x1b8  (frame.cpp:984)&lt;br/&gt;
V  [jvm.dll+0xf80817]  XStackWatermark::process+0x67  (xStackWatermark.cpp:99)&lt;br/&gt;
V  [jvm.dll+0xd69435]  StackWatermarkFramesIterator::process_one+0x165  (stackWatermark.cpp:104)&lt;br/&gt;
V  [jvm.dll+0xd69838]  StackWatermark::start_processing_impl+0xd8  (stackWatermark.cpp:218)&lt;br/&gt;
V  [jvm.dll+0xd68c3c]  StackWatermark::on_safepoint+0x5c  (stackWatermark.cpp:313)&lt;br/&gt;
V  [jvm.dll+0xd17db6]  SafepointMechanism::process+0x56  (safepointMechanism.cpp:159)&lt;br/&gt;
V  [jvm.dll+0x31f866]  SafepointMechanism::process_if_requested_with_exit_check+0x36  (safepointMechanism.inline.hpp:89)&lt;br/&gt;
V  [jvm.dll+0x7de327]  JavaThread::check_special_condition_for_native_trans+0x67  (javaThread.cpp:1234)</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5126006">JDK-8329518</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126229">JDK-8329707</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5121005">JDK-8326092</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2xkwr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>