<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:42:21 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8323274] C2: array load may float above range check</title>
                <link>https://bugs.openjdk.org/browse/JDK-8323274</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Attached test case run with:&lt;br/&gt;
&lt;br/&gt;
java -XX:-TieredCompilation -XX:-BackgroundCompilation TestArrayAccessAboveRCAfterSplitIf&lt;br/&gt;
&lt;br/&gt;
fails with:&lt;br/&gt;
&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007fd5d9056204, pid=2781800, tid=2781801&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (slowdebug build 23-internal-adhoc.roland.jdk-jdk2)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 23-internal-adhoc.roland.jdk-jdk2, mixed mode, compressed oops, compressed class ptrs, serial gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 13 c2 TestArrayAccessAboveRCAfterSplitIf.test([I[IIIZ)I (68 bytes) @ 0x00007fd5d9056204 [0x00007fd5d90561e0+0x0000000000000024]&lt;br/&gt;
&lt;br/&gt;
In that case, split if inserts a Region between a range check and a dependent array load. The array load becomes dependent on some unrelated condition after the Region is later optimized out. That unrelated condition is subsumed by a dominating identical condition and the array load floats above the range check.&lt;br/&gt;
&lt;br/&gt;
I expect some other transformation can cause similar failures.</description>
                <environment></environment>
        <key id="5118403">JDK-8323274</key>
            <summary>C2: array load may float above range check</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="roland">Roland Westrelin</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22-defer-request</label>
                            <label>jdk22-defer-yes</label>
                            <label>oracle-triage-23</label>
                    </labels>
                <created>Tue, 9 Jan 2024 03:02:24 -0800</created>
                <updated>Thu, 18 Jul 2024 01:19:04 -0700</updated>
                            <resolved>Thu, 22 Feb 2024 03:09:06 -0800</resolved>
                                    <version>12</version>
                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14681862" author="roboduke" created="Sat, 15 Jun 2024 01:07:49 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Recognized as clean and tier 1-4 have passed.</comment>
                            <comment id="14681755" author="roboduke" created="Fri, 14 Jun 2024 08:37:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/727&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/727&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-14 15:28:23 +0000</comment>
                            <comment id="14651545" author="dukebot" created="Thu, 22 Feb 2024 03:09:04 -0800"  >Changeset: 4406915e&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-02-22 11:07:13 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4406915ebce4266b3eb4a238382fff3c2c1d1739&quot;&gt;https://git.openjdk.org/jdk/commit/4406915ebce4266b3eb4a238382fff3c2c1d1739&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14644862" author="roboduke" created="Tue, 30 Jan 2024 09:17:24 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17635&quot;&gt;https://git.openjdk.org/jdk/pull/17635&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-30 16:50:08 +0000</comment>
                            <comment id="14643421" author="roland" created="Wed, 24 Jan 2024 04:42:22 -0800"  >One more, this time with partial peeling:&lt;br/&gt;
&lt;br/&gt;
$ java -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:-TieredCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterPartialPeeling::test -XX:CompileCommand=quiet TestArrayAccessAboveRCAfterPartialPeeling&lt;br/&gt;
[0.027s][warning][cds] The shared archive file was created by a different version or build of HotSpot&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f9724732152, pid=1908567, tid=1908568&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (slowdebug build 23-internal-adhoc.roland.jdk-jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 23-internal-adhoc.roland.jdk-jdk, mixed mode, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 1 c2 TestArrayAccessAboveRCAfterPartialPeeling.test([IIZI)I (78 bytes) @ 0x00007f9724732152 [0x00007f9724732060+0x00000000000000f2]&lt;br/&gt;
</comment>
                            <comment id="14639792" author="roland" created="Fri, 12 Jan 2024 03:46:09 -0800"  >One more, this time when an arraycopy is turned into a series of loads/stores:&lt;br/&gt;
&lt;br/&gt;
$ java -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:-TieredCompilation TestArrayAccessAboveRCForArrayCopyLoad&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f87ec734427, pid=3456036, tid=3456037&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (slowdebug build 23-internal-adhoc.roland.jdk-jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 23-internal-adhoc.roland.jdk-jdk, mixed mode, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 12 c2 TestArrayAccessAboveRCForArrayCopyLoad.test([II[IIZ)V (34 bytes) @ 0x00007f87ec734427 [0x00007f87ec734400+0x0000000000000027]&lt;br/&gt;
</comment>
                            <comment id="14639772" author="thartmann" created="Fri, 12 Jan 2024 02:36:31 -0800"  >Deferral Request:&lt;br/&gt;
Old issue (not a regression) with complex fix that won&amp;#39;t be ready in time for JDK 22 and then needs some time to stabilize.</comment>
                            <comment id="14639765" author="thartmann" created="Fri, 12 Jan 2024 02:13:46 -0800"  >Great work coming up with these tests, [~roland]!&lt;br/&gt;
&lt;br/&gt;
Build search results:&lt;br/&gt;
- TestArrayAccessAboveRCAfterUnswitching reproduces since JDK 12&lt;br/&gt;
- TestArrayAccessAboveRCForArrayCopyLoad reproduces since JDK 12 b14, maybe triggered by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8210887&quot; title=&quot;Tweak C2 gc api for arraycopy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8210887&quot;&gt;&lt;strike&gt;JDK-8210887&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
- TestArrayAccessAboveRCAfterSplitIf points to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8264649&quot; title=&quot;runtime/InternalApi/ThreadCpuTimesDeadlock.java crash in fastdebug C2 with -XX:-UseTLAB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8264649&quot;&gt;&lt;strike&gt;JDK-8264649&lt;/strike&gt;&lt;/a&gt; in JDK 17 b18 but that most likely just triggered it.&lt;br/&gt;
- TestArrayAccessAboveRCAfterSinking reproduces since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8274074&quot; title=&quot;SIGFPE with C2 compiled code with -XX:+StressGCM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8274074&quot;&gt;&lt;strike&gt;JDK-8274074&lt;/strike&gt;&lt;/a&gt; in JDK 18 b17&lt;br/&gt;
&lt;br/&gt;
ILW = Crash in C2 compiled code because load floats above range check (result not observable), reproducible with targeted tests, -XX:-SplitIfBlocks or disable C2 compilation of affected method = HMM = P2</comment>
                            <comment id="14639125" author="roland" created="Wed, 10 Jan 2024 08:38:35 -0800"  >One more similar failure. This time when a load is sunk out of loop, the load becomes dependent on a condition that&amp;#39;s not the range check and can float above the range check:&lt;br/&gt;
&lt;br/&gt;
$ java -XX:-UseOnStackReplacement -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterSinking::test -XX:CompileCommand=quiet TestArrayAccessAboveRCAfterSinking&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f0014731eb3, pid=3095331, tid=3095332&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (slowdebug build 23-internal-adhoc.roland.jdk-jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 23-internal-adhoc.roland.jdk-jdk, mixed mode, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 1 c2 TestArrayAccessAboveRCAfterSinking.test([Z[IIZI)I (83 bytes) @ 0x00007f0014731eb3 [0x00007f0014731e80+0x0000000000000033]&lt;br/&gt;
</comment>
                            <comment id="14639085" author="roland" created="Wed, 10 Jan 2024 06:33:14 -0800"  >Second test case crashes when run with StressGCM:&lt;br/&gt;
$ for i in `seq 100`; do java -XX:-UseOnStackReplacement -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+PrintCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test -XX:CompileCommand=quiet -XX:+StressGCM TestArrayAccessAboveRCAfterUnswitching || break; done&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
100    1    b        TestArrayAccessAboveRCAfterUnswitching::test (102 bytes)&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007fecf8c28313, pid=2998992, tid=2998993&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (23.0) (fastdebug build 23-internal-adhoc.roland.jdk-jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 23-internal-adhoc.roland.jdk-jdk, mixed mode, sharing, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# J 1 c2 TestArrayAccessAboveRCAfterUnswitching.test([I[ZI)I (102 bytes) @ 0x00007fecf8c28313 [0x00007fecf8c282e0+0x0000000000000033]&lt;br/&gt;
&lt;br/&gt;
In that case, a loop is unswitched and an array load in the loop body, that has only a single use out of loop, ends up with control set to a Region that merges early exit conditions from several copies of the loop. All loop copies but one become unreachable, the last loop copy looses its back edge and the array load ends up control dependent on what was the loop early exit. That test is then replaced by a dominating identical test. That causes the array load to float above the range check.&lt;br/&gt;
&lt;br/&gt;
Similar issues must exist with all transformations that clone a loop body.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131985">JDK-8334370</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131751">JDK-8334176</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5114404">JDK-8319793</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134625">JDK-8336729</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5120361">JDK-8324976</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108002" name="TestArrayAccessAboveRCAfterPartialPeeling.java" size="2568" author="roland" created="Wed, 24 Jan 2024 04:42:41 -0800"/>
                            <attachment id="107845" name="TestArrayAccessAboveRCAfterSinking.java" size="1629" author="roland" created="Wed, 10 Jan 2024 08:36:57 -0800"/>
                            <attachment id="107829" name="TestArrayAccessAboveRCAfterSplitIf.java" size="1680" author="roland" created="Tue, 9 Jan 2024 03:02:22 -0800"/>
                            <attachment id="107843" name="TestArrayAccessAboveRCAfterUnswitching.java" size="1929" author="roland" created="Wed, 10 Jan 2024 06:27:57 -0800"/>
                            <attachment id="107873" name="TestArrayAccessAboveRCForArrayCopyLoad.java" size="686" author="roland" created="Fri, 12 Jan 2024 03:45:21 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34h2j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>