<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 16:45:50 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8302320] AsyncGetCallTrace obtains too few frames in sanity test</title>
                <link>https://bugs.openjdk.org/browse/JDK-8302320</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>AsyncGetCallTrace returns only 3 frames in the sanity test, while GetStackTrace returns 11. The GetStackTrace trace conforms to the actual source code.&lt;br/&gt;
&lt;br/&gt;
GetStackTrace returns a stack trace like the following:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
Frame 0: Native frame Lprofiling/sanity/ASGSTBaseTest;.checkAsyncGetStackTraceCall()Z&lt;br/&gt;
Frame 1: Java frame   Lprofiling/sanity/ASGSTBaseTest;.main([Ljava/lang/String;)V: 0&lt;br/&gt;
Frame 2: Java frame   Ljava/lang/invoke/LambdaForm$DMH.0x0000000801002000;.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)V: 10&lt;br/&gt;
Frame 3: Java frame   Ljava/lang/invoke/LambdaForm$MH.0x0000000801003400;.invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: 33&lt;br/&gt;
Frame 4: Java frame   Ljava/lang/invoke/Invokers$Holder;.invokeExact_MT(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: 20&lt;br/&gt;
Frame 5: Java frame   Ljdk/internal/reflect/DirectMethodHandleAccessor;.invokeImpl(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;: 55&lt;br/&gt;
Frame 6: Java frame   Ljdk/internal/reflect/DirectMethodHandleAccessor;.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;: 23&lt;br/&gt;
Frame 7: Java frame   Ljava/lang/reflect/Method;.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;: 102&lt;br/&gt;
Frame 8: Java frame   Lcom/sun/javatest/regtest/agent/MainWrapper$MainThread;.run()V: 134&lt;br/&gt;
Frame 9: Java frame   Ljava/lang/Thread;.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V: 5&lt;br/&gt;
Frame 10: Java frame   Ljava/lang/Thread;.run()V: 19&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
AsyncGetCallTrace returns:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
Frame 0: Native frame Lprofiling/sanity/ASGSTBaseTest;.checkAsyncGetStackTraceCall()Z&lt;br/&gt;
Frame 1: Java frame   Lprofiling/sanity/ASGSTBaseTest;.main([Ljava/lang/String;)V: 0&lt;br/&gt;
Frame 2: Java frame   Ljava/lang/invoke/LambdaForm$DMH.0x0000000801002000;.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)V: 10&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
This is related to a bug in `frame::is_safe_for_sender` which is already fixed on PPC (&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8209996&quot;&gt;https://bugs.openjdk.org/browse/JDK-8209996&lt;/a&gt;) but is still present on x86, albeit only for AsyncGetCallTrace and not for JFR.&lt;br/&gt;
&lt;br/&gt;
The issue itself first appeared with the implementation of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8271820&quot; title=&quot;Implementation of JEP 416: Reimplement Core Reflection with Method Handle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8271820&quot;&gt;&lt;strike&gt;JDK-8271820&lt;/strike&gt;&lt;/a&gt; which altered the implementation of Java reflection which is used by the JTREG test runner. So it might affect other code that uses reflection heavily.&lt;br/&gt;
&lt;br/&gt;
This test error occurs when checking for the length of the returned traces in the sanity test (see &lt;a href=&quot;https://github.com/parttimenerd/jdk/commit/98fe63f42f5a3d5ec9fd151b034dfeb3ef767afd)&quot;&gt;https://github.com/parttimenerd/jdk/commit/98fe63f42f5a3d5ec9fd151b034dfeb3ef767afd)&lt;/a&gt;. </description>
                <environment></environment>
        <key id="5093966">JDK-8302320</key>
            <summary>AsyncGetCallTrace obtains too few frames in sanity test</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbechberger">Johannes Bechberger</assignee>
                                    <reporter username="jbechberger">Johannes Bechberger</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                    </labels>
                <created>Mon, 13 Feb 2023 05:26:35 -0800</created>
                <updated>Thu, 5 Dec 2024 04:43:08 -0800</updated>
                            <resolved>Tue, 21 Feb 2023 06:34:54 -0800</resolved>
                                    <version>18</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14564982" author="JIRAUSER20001" created="Tue, 7 Mar 2023 00:09:17 -0800"  >Fix Request (17u):&lt;br/&gt;
Fixes a bug in ASGCT and JFR related to interpreted frames.&lt;br/&gt;
Tested using SAPs nightly tests. Applies clean.</comment>
                            <comment id="14564604" author="roboduke" created="Mon, 6 Mar 2023 00:20:05 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1197&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1197&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-06 08:12:47 +0000</comment>
                            <comment id="14564603" author="roboduke" created="Mon, 6 Mar 2023 00:07:37 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u/pull/366&quot;&gt;https://git.openjdk.org/jdk17u/pull/366&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-06 07:58:36 +0000</comment>
                            <comment id="14562698" author="dcubed" created="Fri, 24 Feb 2023 07:37:29 -0800"  >This fix is integrated in jdk-21+11-869.</comment>
                            <comment id="14561687" author="dukebot" created="Tue, 21 Feb 2023 06:34:53 -0800"  >Changeset: db483a38&lt;br/&gt;
Author:    Johannes Bechberger &amp;lt;&lt;a href=&apos;mailto:johannes.bechberger@sap.com&apos;&gt;johannes.bechberger@sap.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Jorn Vernee &amp;lt;&lt;a href=&apos;mailto:jvernee@openjdk.org&apos;&gt;jvernee@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-02-21 14:33:02 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/db483a38a815f85bd9668749674b5f0f6e4b27b4&quot;&gt;https://git.openjdk.org/jdk/commit/db483a38a815f85bd9668749674b5f0f6e4b27b4&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14560614" author="JIRAUSER20001" created="Thu, 16 Feb 2023 02:23:48 -0800"  >The error is also reproducible with a self-contained test case and JFR (&lt;a href=&quot;https://gist.github.com/parttimenerd/502251b67d3e42baad17419442a72c39):&quot;&gt;https://gist.github.com/parttimenerd/502251b67d3e42baad17419442a72c39):&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
```java&lt;br/&gt;
import java.lang.reflect.InvocationTargetException;&lt;br/&gt;
import java.lang.reflect.Method;&lt;br/&gt;
&lt;br/&gt;
public class Main {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Class&amp;lt;?&amp;gt; klass = Main.class;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Method mainMethod = klass.getMethod(&amp;quot;main&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mainMethod.invoke(null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;javaLoop();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void javaLoop() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long start = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (start + 3000 &amp;gt; System.currentTimeMillis());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
```</comment>
                            <comment id="14559528" author="roboduke" created="Mon, 13 Feb 2023 06:48:00 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12535&quot;&gt;https://git.openjdk.org/jdk/pull/12535&lt;/a&gt;&lt;br/&gt;
Date: 2023-02-13 14:39:00 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5096304">JDK-8304253</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5104899">JDK-8311566</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5094964">JDK-8303168</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4970909">JDK-8209996</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="21802">18</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30cln:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="369"><![CDATA[svc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>