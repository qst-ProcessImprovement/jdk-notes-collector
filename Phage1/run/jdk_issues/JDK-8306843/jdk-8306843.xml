<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 18:54:58 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8306843] JVMTI tag map extremely slow after JDK-8292741</title>
                <link>https://bugs.openjdk.org/browse/JDK-8306843</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
21-ea build 21-ea+19-1566&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
JVMTI operations related to tags are unusably slow now. Some timing data for tagging and iterating 10_000_000 objects:&lt;br/&gt;
&lt;br/&gt;
19 build 19.0.2+7-44&lt;br/&gt;
&lt;br/&gt;
setTag: 1969 ms&lt;br/&gt;
getTag: 743 ms&lt;br/&gt;
iterate tagged: 437 ms&lt;br/&gt;
iterate all: 499 ms&lt;br/&gt;
&lt;br/&gt;
20 build 20.0.1+9-29&lt;br/&gt;
&lt;br/&gt;
setTag: 2852 ms&lt;br/&gt;
getTag: 1851 ms&lt;br/&gt;
iterate tagged: 1496 ms&lt;br/&gt;
iterate all: 1585 ms&lt;br/&gt;
&lt;br/&gt;
21-ea build 21-ea+19-1566&lt;br/&gt;
&lt;br/&gt;
setTag: 4135765 ms&lt;br/&gt;
getTag: 4118573 ms&lt;br/&gt;
iterate tagged: 9287657 ms&lt;br/&gt;
iterate all: 9495863 ms&lt;br/&gt;
&lt;br/&gt;
JVMTI tag map already got up to 3 times slower in JDK 20, probably due to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8256072&quot; title=&quot;Eliminate JVMTI tagmap rehashing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8256072&quot;&gt;&lt;strike&gt;JDK-8256072&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
When reverting the &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8292741&quot; title=&quot;Convert JvmtiTagMapTable to ResourceHashtable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8292741&quot;&gt;&lt;strike&gt;JDK-8292741&lt;/strike&gt;&lt;/a&gt; changes, the timings are similar to JDK-20.&lt;br/&gt;
&lt;br/&gt;
A fast (optimally concurrent) tag map is extremely important for profilers and other kind of JVMTI agents.&lt;br/&gt;
&lt;br/&gt;
REGRESSION : Last worked in version 20.0.1&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
With the attached sources and JAVA_HOME set to the JDK to be tested:&lt;br/&gt;
&lt;br/&gt;
g++ -shared -I$JAVA_HOME/include -I$JAVA_HOME/include/linux -fPIC TagMapTest.cpp -o libTagMapTest.so &lt;br/&gt;
&lt;br/&gt;
$JAVA_HOME/bin/javac TagMapTest.java &lt;br/&gt;
&lt;br/&gt;
LD_LIBRARY_PATH=. $JAVA_HOME/bin/java -agentlib:TagMapTest TagMapTest&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Timings like in JDK 19 or at least JDK 20.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
Extremely slow timings&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
TagMapTest.cpp -----------------------------------------------&lt;br/&gt;
#include &amp;lt;jvmti.h&amp;gt;&lt;br/&gt;
#include &amp;lt;cstdlib&amp;gt;&lt;br/&gt;
#include &amp;lt;cstring&amp;gt;&lt;br/&gt;
&lt;br/&gt;
namespace {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jlong nextTag = 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jvmtiEnv *jvmti = nullptr;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void checkJvmti(int code, const char* message) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (code != JVMTI_ERROR_NONE) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&amp;quot;Error %s: %d\n&amp;quot;, message, code);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;abort();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jvmtiIterationControl JNICALL heapObjectCallback(jlong class_tag, jlong size, jlong* tag_ptr, void* user_data) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (*tag_ptr == 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*tag_ptr = nextTag++;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JVMTI_ITERATION_CONTINUE;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
extern &amp;quot;C&amp;quot; JNIEXPORT void JNICALL Java_TagMapTest_setTag(JNIEnv* jni_env, jclass clazz, jobject object) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkJvmti(jvmti-&amp;gt;SetTag(object, nextTag++), &amp;quot;could not set tag&amp;quot;);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
extern &amp;quot;C&amp;quot; JNIEXPORT jlong JNICALL Java_TagMapTest_getTag(JNIEnv* jni_env, jclass clazz, jobject object) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jlong tag;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkJvmti(jvmti-&amp;gt;GetTag(object, &amp;amp;tag), &amp;quot;could not get tag&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return tag;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
extern &amp;quot;C&amp;quot; JNIEXPORT void JNICALL Java_TagMapTest_iterate(JNIEnv* jni_env, jclass clazz, jboolean tagged) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkJvmti(jvmti-&amp;gt;IterateOverHeap(tagged ? JVMTI_HEAP_OBJECT_TAGGED : JVMTI_HEAP_OBJECT_EITHER, &amp;amp;heapObjectCallback, nullptr), &amp;quot;could not iterate&amp;quot;);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
extern &amp;quot;C&amp;quot; JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *vm, char *options, void *reserved) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (vm-&amp;gt;GetEnv(reinterpret_cast&amp;lt;void **&amp;gt;(&amp;amp;jvmti), JVMTI_VERSION) != JNI_OK || !jvmti) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&amp;quot;Could not initialize JVMTI\n&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;abort();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jvmtiCapabilities capabilities;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(&amp;amp;capabilities, 0, sizeof(capabilities));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;capabilities.can_tag_objects = 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkJvmti(jvmti-&amp;gt;AddCapabilities(&amp;amp;capabilities), &amp;quot;adding capabilities&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&amp;quot;Loaded agent\n&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fflush(stdout);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return JVMTI_ERROR_NONE;&lt;br/&gt;
}&lt;br/&gt;
-------------------------------------------------&lt;br/&gt;
TagMapTest.java -------------------------------&lt;br/&gt;
import java.util.ArrayList;&lt;br/&gt;
import java.util.List;&lt;br/&gt;
import java.util.concurrent.TimeUnit;&lt;br/&gt;
&lt;br/&gt;
public class TagMapTest {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final List&amp;lt;TagMapTest&amp;gt; items = new ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static native void setTag(Object object);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static native long getTag(Object object);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static native void iterate(boolean tagged);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.loadLibrary(&amp;quot;TagMapTest&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; 10_000_000; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;items.add(new TagMapTest());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long startTime = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (TagMapTest item : items) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setTag(item);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;setTag: &amp;quot; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime) + &amp;quot; ms&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;startTime = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (TagMapTest item : items) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getTag(item);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;getTag: &amp;quot; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime) + &amp;quot; ms&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;startTime = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iterate(true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;iterate tagged: &amp;quot; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime) + &amp;quot; ms&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;startTime = System.nanoTime();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iterate(false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;iterate all: &amp;quot; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime) + &amp;quot; ms&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------------------------------------------&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5099426">JDK-8306843</key>
            <summary>JVMTI tag map extremely slow after JDK-8292741</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="coleenp">Coleen Phillimore</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>capbug</label>
                            <label>regression</label>
                    </labels>
                <created>Tue, 25 Apr 2023 03:29:54 -0700</created>
                <updated>Mon, 26 Jun 2023 06:38:01 -0700</updated>
                            <resolved>Wed, 10 May 2023 05:33:44 -0700</resolved>
                                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14580527" author="dukebot" created="Wed, 10 May 2023 05:33:42 -0700"  >Changeset: 4251b562&lt;br/&gt;
Author:    Coleen Phillimore &amp;lt;&lt;a href=&apos;mailto:coleenp@openjdk.org&apos;&gt;coleenp@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-10 12:32:06 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4251b56214a6af6c307a473c7ba13482ad3109e2&quot;&gt;https://git.openjdk.org/jdk/commit/4251b56214a6af6c307a473c7ba13482ad3109e2&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14579244" author="roboduke" created="Thu, 4 May 2023 15:37:30 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13818&quot;&gt;https://git.openjdk.org/jdk/pull/13818&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-04 22:32:36 +0000</comment>
                            <comment id="14579151" author="coleenp" created="Thu, 4 May 2023 10:38:45 -0700"  >Fixing resizing to match what the old hashtable did and adding entries at the head if known not to exist gets the performance numbers equivalent on a shared machine to JDK 20:&lt;br/&gt;
&lt;br/&gt;
JDK 20:&lt;br/&gt;
Loaded agent&lt;br/&gt;
[0.365s][info][jvmti,table] JvmtiTagMap table resized to 76831&lt;br/&gt;
[0.548s][info][jvmti,table] JvmtiTagMap table resized to 1228891&lt;br/&gt;
[4.073s][info][jvmti,table] JvmtiTagMap table resized to 19660831&lt;br/&gt;
setTag: 5444 ms&lt;br/&gt;
getTag: 3535 ms&lt;br/&gt;
iterate tagged: 2520 ms&lt;br/&gt;
iterate all: 2554 ms&lt;br/&gt;
&lt;br/&gt;
JDK 21 with patch:&lt;br/&gt;
Loaded agent&lt;br/&gt;
[0.372s][info][jvmti,table] JvmtiTagMap table resized to 76831 for 6042 entries max bucket 0&lt;br/&gt;
[0.598s][info][jvmti,table] JvmtiTagMap table resized to 1228891 for 460986 entries max bucket 0&lt;br/&gt;
[4.862s][info][jvmti,table] JvmtiTagMap table resized to 19660831 for 7373346 entries max bucket 0&lt;br/&gt;
setTag: 5632 ms&lt;br/&gt;
getTag: 3389 ms&lt;br/&gt;
iterate tagged: 2593 ms&lt;br/&gt;
iterate all: 2683 ms&lt;br/&gt;
&lt;br/&gt;
The table is unusable for a large number of entries otherwise.</comment>
                            <comment id="14578380" author="coleenp" created="Tue, 2 May 2023 10:56:54 -0700"  >There&amp;#39;s a couple of bugs with this hashtable conversion.  It looks up tags twice per SetTag and it doesn&amp;#39;t resize, so 10 million tags will be overwhelming to it.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5100319">JDK-8307623</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i319kj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>