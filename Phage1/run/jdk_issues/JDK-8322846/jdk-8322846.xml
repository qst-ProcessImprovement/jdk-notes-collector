<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 11:56:13 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8322846] Running with -Djdk.tracePinnedThreads set can hang</title>
                <link>https://bugs.openjdk.org/browse/JDK-8322846</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>-Djdk.tracePinnedThreads dates from early development in the loom repo to identify pinned threads. It has several issues and will eventually be removed (in favour of JFR of events). Several hangs have been reported when running with this system property set. The &amp;quot;hangs&amp;quot; stem from the onPinned method executing while the virtual thread is in a transition state (typically parking). If the virtual parks while printing the stack trace then it works like a nested park where the thread state is never restored. Contention on the System.out can also lead to deadlock when there are platform and pinned virtual threads printing to System.out around the same time.&lt;br/&gt;
&lt;br/&gt;
This JBS issue tracks some short term changes to the implementation to avoid the hangs that have been reported when running with this system property set. Specifically, it only attempts to print the stack trace when System.out&amp;#39;s lock can be acquired without blocking, and restoring the thread state after printing.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5117918">JDK-8322846</key>
            <summary>Running with -Djdk.tracePinnedThreads set can hang</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="alanb">Alan Bateman</assignee>
                                    <reporter username="alanb">Alan Bateman</reporter>
                        <labels>
                            <label>CPU24_07-critical-SQE-OK</label>
                            <label>CPU24_07-critical-approved</label>
                            <label>amazon-interest</label>
                            <label>bugdb_36264286</label>
                            <label>hgupdate-sync</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>loom</label>
                    </labels>
                <created>Tue, 2 Jan 2024 04:19:52 -0800</created>
                <updated>Mon, 8 Jul 2024 10:25:31 -0700</updated>
                            <resolved>Sat, 6 Jan 2024 10:26:43 -0800</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14653419" author="roboduke" created="Thu, 29 Feb 2024 00:48:27 -0800"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Fixes the hang when using a routine diagnostic option. Applies cleanly. New test reliably fails without the fix. All other tests are passing. Risk is medium-low, as it affects the diagnostic path that is not enabled by default.</comment>
                            <comment id="14653232" author="roboduke" created="Wed, 28 Feb 2024 09:41:05 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/270&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/270&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-19 18:58:09 +0000</comment>
                            <comment id="14650529" author="shade" created="Mon, 19 Feb 2024 09:27:52 -0800"  >Thanks! I was able to confirm locally that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8315373&quot; title=&quot;Change VirtualThread to unmount after freezing, re-mount before thawing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8315373&quot;&gt;&lt;strike&gt;JDK-8315373&lt;/strike&gt;&lt;/a&gt; makes the test clean. I think that was the change that reworked where run/continue/yield is done.</comment>
                            <comment id="14641262" author="alanb" created="Wed, 17 Jan 2024 10:45:39 -0800"  >[~shade] In JDK 21, the continuation runs/continues and the yielding is done in the context of the carrier. Since JDK 22 it is done in the context of the virtual thread. There&amp;#39;s were issues with JVMTI and hiding frames that forced the approach that was in JDK 19-21. So the ClassCastException isn&amp;#39;t surprising here as the onPinned callback runs in the context of the carrier. If the changes are going into JDK 21u then the change to VirtualThread.onPinned is a one line change to add the &amp;quot;reason&amp;quot; parameter.</comment>
                            <comment id="14641209" author="shade" created="Wed, 17 Jan 2024 08:14:30 -0800"  >Note for JDK 21 backports, the test is failing when applied to current jdk21u-dev:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
% CONF=macosx-aarch64-server-fastdebug make images test TEST=java/lang/Thread/virtual/TracePinnedThreads.java&lt;br/&gt;
...&lt;br/&gt;
STARTED    TracePinnedThreads::testPinnedCausedByNativeMethod &amp;#39;testPinnedCausedByNativeMethod()&amp;#39;&lt;br/&gt;
java.lang.ClassCastException: class jdk.internal.misc.CarrierThread cannot be cast to class java.lang.VirtualThread (jdk.internal.misc.CarrierThread and java.lang.VirtualThread are in module java.base of loader &amp;#39;bootstrap&amp;#39;)&lt;br/&gt;
	at java.base/java.lang.VirtualThread$VThreadContinuation.onPinned(VirtualThread.java:183)&lt;br/&gt;
	at java.base/jdk.internal.vm.Continuation.onPinned0(Continuation.java:393)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.parkNanos(VirtualThread.java:629)&lt;br/&gt;
	at java.base/java.lang.System$2.parkVirtualThread(System.java:2652)&lt;br/&gt;
	at java.base/jdk.internal.misc.VirtualThreads.park(VirtualThreads.java:67)&lt;br/&gt;
	at java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:408)&lt;br/&gt;
	at TracePinnedThreads.park(TracePinnedThreads.java:52)&lt;br/&gt;
	at TracePinnedThreads.invokePark(Native Method)&lt;br/&gt;
	at TracePinnedThreads.lambda$testPinnedCausedByNativeMethod$1(TracePinnedThreads.java:81)&lt;br/&gt;
	at jdk.test.lib.thread.VThreadRunner.lambda$run$0(VThreadRunner.java:71)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:317)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
Passes well in current mainline. There are lots of changes between jdk21u-dev and current mainline, and one of them must be missing. It is a bit weird that we have `Thread.currentThread()` as `CarrierThread`, when we are clearly running from `VirtualThread.run`.</comment>
                            <comment id="14640228" author="roboduke" created="Mon, 15 Jan 2024 09:57:46 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22/pull/71&quot;&gt;https://git.openjdk.org/jdk22/pull/71&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-13 18:06:11 +0000</comment>
                            <comment id="14637885" author="dukebot" created="Sat, 6 Jan 2024 10:26:42 -0800"  >Changeset: faa9c690&lt;br/&gt;
Author:    Alan Bateman &amp;lt;&lt;a href=&apos;mailto:alanb@openjdk.org&apos;&gt;alanb@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-01-06 18:24:28 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/faa9c6909dda635eb008b9dada6e06fca47c17d6&quot;&gt;https://git.openjdk.org/jdk/commit/faa9c6909dda635eb008b9dada6e06fca47c17d6&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14636800" author="roboduke" created="Tue, 2 Jan 2024 07:24:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17221&quot;&gt;https://git.openjdk.org/jdk/pull/17221&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-02 13:53:39 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5118884">JDK-8323697</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5119672">JDK-8324388</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5122796">JDK-8327024</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5128569">JDK-8331594</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5129066">JDK-8331968</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5120224">JDK-8325521</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5114848">JDK-8320202</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5124210">JDK-8329140</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34e2r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="190"><![CDATA[java.lang]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>