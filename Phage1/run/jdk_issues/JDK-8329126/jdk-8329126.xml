<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:54:47 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8329126] No native wrappers generated anymore with -XX:-TieredCompilation after JDK-8251462</title>
                <link>https://bugs.openjdk.org/browse/JDK-8329126</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Since [&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8251462&quot; title=&quot;Simplify compilation policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8251462&quot;&gt;&lt;strike&gt;JDK-8251462&lt;/strike&gt;&lt;/a&gt;: Simplify compilation policy](&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8251462),&quot;&gt;https://bugs.openjdk.org/browse/JDK-8251462),&lt;/a&gt; introduced in JDK 17, no native wrappers are generated any more if running with `-XX:-TieredCompilation` (i.e. native methods are not compiled any more).&lt;br/&gt;
&lt;br/&gt;
The attached JMH benchmark demonstrate that native method calls became twice as expensive with JDK 17:&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static native void emptyStaticNativeMethod();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Benchmark&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void baseline() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Benchmark&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void staticMethodCallingStatic() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;emptyStaticMethod();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Benchmark&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void staticMethodCallingStaticNative() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;emptyStaticNativeMethod();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Benchmark&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Fork(jvmArgsAppend = &amp;quot;-XX:-TieredCompilation&amp;quot;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void staticMethodCallingStaticNativeNoTiered() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;emptyStaticNativeMethod();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Benchmark&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Fork(jvmArgsAppend = &amp;quot;-XX:+PreferInterpreterNativeStubs&amp;quot;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void staticMethodCallingStaticNativeIntStub() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;emptyStaticNativeMethod();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
JDK 11&lt;br/&gt;
======&lt;br/&gt;
```&lt;br/&gt;
Benchmark                                           Mode  Cnt   Score   Error  Units&lt;br/&gt;
NativeCall.baseline                                 avgt    5   0.390 &amp;#xB1; 0.016  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStatic                avgt    5   1.693 &amp;#xB1; 0.053  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStaticNative          avgt    5  10.287 &amp;#xB1; 0.754  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStaticNativeNoTiered  avgt    5   9.966 &amp;#xB1; 0.248  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStaticNativeIntStub   avgt    5  20.384 &amp;#xB1; 0.444  ns/op&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
JDK 17 &amp;amp; 21&lt;br/&gt;
===========&lt;br/&gt;
```&lt;br/&gt;
Benchmark                                           Mode  Cnt   Score   Error  Units&lt;br/&gt;
NativeCall.baseline                                 avgt    5   0.390 &amp;#xB1; 0.017  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStatic                avgt    5   1.852 &amp;#xB1; 0.272  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStaticNative          avgt    5  10.648 &amp;#xB1; 0.661  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStaticNativeNoTiered  avgt    5  20.657 &amp;#xB1; 1.084  ns/op&lt;br/&gt;
NativeCall.staticMethodCallingStaticNativeIntStub   avgt    5  22.429 &amp;#xB1; 0.991  ns/op&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The issue can bee seen if we run with `-XX:+PrintCompilation -XX:+PrintInlining`. With JDK 11 we get the following output for `-XX:+TieredCompilation`:&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;172  111    b  3       io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ 0   io.simonis.NativeCall::emptyStaticNativeMethod (0 bytes)   native method&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;172  112     n 0       io.simonis.NativeCall::emptyStaticNativeMethod (native)   (static)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;173  113    b  4       io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ 0   io.simonis.NativeCall::emptyStaticNativeMethod (0 bytes)   native method&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;173  111       3       io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)   made not entrant&lt;br/&gt;
```&lt;br/&gt;
As you can see, the native wrapper for `NativeCall::emptyStaticNativeMethod()` gets compiled with compiled id 112. If we run with `-XX:-TieredCompilation`:&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;117    5    b        io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ 0   io.simonis.NativeCall::emptyStaticNativeMethod (0 bytes)   native method&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;117    6     n       io.simonis.NativeCall::emptyStaticNativeMethod (native)   (static)&lt;br/&gt;
```&lt;br/&gt;
There&amp;#39;s still a native wrapper created with compile id 6.&lt;br/&gt;
&lt;br/&gt;
With JDK 17 and later, the `-XX:+PrintCompilation` output looks similar for the default `-XX:+TieredCompilation` case:&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;56   26    b  3       io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ 0   io.simonis.NativeCall::emptyStaticNativeMethod (0 bytes)   native method&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;56   27     n 0       io.simonis.NativeCall::emptyStaticNativeMethod (native)   (static)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;56   28    b  4       io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ 0   io.simonis.NativeCall::emptyStaticNativeMethod (0 bytes)   native method&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;56   26       3       io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)   made not entrant&lt;br/&gt;
```&lt;br/&gt;
But with `-XX:-TieredCompilation`, we don&amp;#39;t generate the native wrapper any more:&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;58    5    b        io.simonis.NativeCall::staticMethodCallingStaticNative (4 bytes)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ 0   io.simonis.NativeCall::emptyStaticNativeMethod (0 bytes)   native method&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
Which basically means that we&amp;#39;re always invoking the native method through the interpreter stub.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5125322">JDK-8329126</key>
            <summary>No native wrappers generated anymore with -XX:-TieredCompilation after JDK-8251462</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="simonis">Volker Simonis</assignee>
                                    <reporter username="simonis">Volker Simonis</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>google-interest</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>performance</label>
                    </labels>
                <created>Tue, 26 Mar 2024 12:05:27 -0700</created>
                <updated>Wed, 7 Aug 2024 19:04:50 -0700</updated>
                            <resolved>Sat, 30 Mar 2024 05:49:50 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14696811" author="manc" created="Wed, 7 Aug 2024 19:04:39 -0700"  >Thank you ~simonis for finding this bug and fixing this! We also noticed CPU regression with JDK 21 due to this bug.</comment>
                            <comment id="14678918" author="roboduke" created="Tue, 4 Jun 2024 13:10:11 -0700"  >[jdk17u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 17.0.12-oracle. Applies cleanly. Tier 1-4 have passed.</comment>
                            <comment id="14678494" author="roboduke" created="Mon, 3 Jun 2024 14:07:29 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2529&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2529&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-03 21:02:26 +0000</comment>
                            <comment id="14677968" author="roboduke" created="Sat, 1 Jun 2024 02:02:28 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.5-oracle. Applies cleanly and tier 1-4 have passed.</comment>
                            <comment id="14677863" author="roboduke" created="Fri, 31 May 2024 08:58:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/635&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/635&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-31 15:49:36 +0000</comment>
                            <comment id="14663446" author="simonis" created="Sun, 7 Apr 2024 01:40:34 -0700"  >Notice that because Critical JNI Natives are only available from the compiled native wrappers, this bug basically disables Critical JNI Natives (i.e. `-XX:+CriticalJNINatives`) when running with `-XX:-TieredCompilation` in JDK 17. Critical JNI Natives have been removed in JDK 18.</comment>
                            <comment id="14661583" author="dukebot" created="Sat, 30 Mar 2024 05:49:49 -0700"  >Changeset: f2e5808b&lt;br/&gt;
Author:    Volker Simonis &amp;lt;&lt;a href=&apos;mailto:simonis@openjdk.org&apos;&gt;simonis@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-30 12:47:51 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f2e5808b46a3da6920dd56688c877ee0e2795de6&quot;&gt;https://git.openjdk.org/jdk/commit/f2e5808b46a3da6920dd56688c877ee0e2795de6&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14660727" author="thartmann" created="Tue, 26 Mar 2024 23:41:18 -0700"  >Good catch, [~simonis]!&lt;br/&gt;
&lt;br/&gt;
ILW = Performance regression for native calls, with -XX:-TieredCompilation, no workaround but enable TieredCompilation = MMH = P3</comment>
                            <comment id="14660677" author="roboduke" created="Tue, 26 Mar 2024 15:42:59 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18496&quot;&gt;https://git.openjdk.org/jdk/pull/18496&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-26 19:14:23 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5130358">JDK-8332966</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130363">JDK-8332971</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130870">JDK-8333413</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131105">JDK-8333627</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5132975">JDK-8335266</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5027310">JDK-8251462</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108757" name="NativeCall.java" size="1608" author="simonis" created="Tue, 26 Mar 2024 12:05:22 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35n0j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>