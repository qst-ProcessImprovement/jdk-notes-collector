<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:04:52 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8292275] javac does not emit SYNTHETIC and MANDATED flags for parameters by default</title>
                <link>https://bugs.openjdk.org/browse/JDK-8292275</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Chapter 13.1 in the JLS mentions:&lt;br/&gt;
11. A construct emitted by a Java compiler must be marked as synthetic if it does not correspond to a construct declared explicitly or implicitly in source code, unless the emitted construct is a class initialization method &lt;br/&gt;
and&lt;br/&gt;
12. A construct emitted by a Java compiler must be marked as mandated if it corresponds to a formal parameter declared implicitly in source code&lt;br/&gt;
&lt;br/&gt;
For parameters, this information is stored in the MethodParameters attribute. However, this attribute is only emitted when compiling with the -parameters flag or if the method is a canonical record constructor.&lt;br/&gt;
&lt;br/&gt;
This behavior can be observed by either looking at the produced class files using javap, or by using the Parameter#isImplicit()/isSynthetic() methods.&lt;br/&gt;
&lt;br/&gt;
Additional context: &lt;a href=&quot;https://mail.openjdk.org/pipermail/compiler-dev/2022-May/019783.html&quot;&gt;https://mail.openjdk.org/pipermail/compiler-dev/2022-May/019783.html&lt;/a&gt; and &lt;a href=&quot;https://mail.openjdk.org/pipermail/compiler-dev/2022-June/019924.html&quot;&gt;https://mail.openjdk.org/pipermail/compiler-dev/2022-June/019924.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m able to provide a fix for this.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Compile the code below with javac without -parameters flag.&lt;br/&gt;
Run the code with java A.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$Inner&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class A&lt;br/&gt;
parameter.isImplicit() = true&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$1&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class A&lt;br/&gt;
parameter.isImplicit() = true&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: valueOf&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class java.lang.String&lt;br/&gt;
parameter.isImplicit() = true&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$R&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = int&lt;br/&gt;
parameter.isImplicit() = true&lt;br/&gt;
Parameter at position 1&lt;br/&gt;
parameter.getType() = float&lt;br/&gt;
parameter.isImplicit() = true&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$E&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class java.lang.String&lt;br/&gt;
parameter.isSynthetic() = true&lt;br/&gt;
Parameter at position 1&lt;br/&gt;
parameter.getType() = int&lt;br/&gt;
parameter.isSynthetic() = true&lt;br/&gt;
----------&lt;br/&gt;
ACTUAL -&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$Inner&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class A&lt;br/&gt;
parameter.isImplicit() = false&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$1&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class A&lt;br/&gt;
parameter.isImplicit() = false&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: valueOf&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class java.lang.String&lt;br/&gt;
parameter.isImplicit() = false&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$R&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = int&lt;br/&gt;
parameter.isImplicit() = false&lt;br/&gt;
Parameter at position 1&lt;br/&gt;
parameter.getType() = float&lt;br/&gt;
parameter.isImplicit() = false&lt;br/&gt;
----------&lt;br/&gt;
----------&lt;br/&gt;
Executable: A$E&lt;br/&gt;
Parameter at position 0&lt;br/&gt;
parameter.getType() = class java.lang.String&lt;br/&gt;
parameter.isSynthetic() = false&lt;br/&gt;
Parameter at position 1&lt;br/&gt;
parameter.getType() = int&lt;br/&gt;
parameter.isSynthetic() = false&lt;br/&gt;
----------&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import java.lang.reflect.Executable;&lt;br/&gt;
import java.lang.reflect.Parameter;&lt;br/&gt;
&lt;br/&gt;
public class A {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// implicit&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(Inner.class.getDeclaredConstructors()[0], true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(A.class.getDeclaredField(&amp;quot;anon&amp;quot;).get(new A()).getClass().getDeclaredConstructors()[0], true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(E.class.getDeclaredMethod(&amp;quot;valueOf&amp;quot;, String.class), true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(R.class.getDeclaredConstructors()[0], true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// synthetic&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(E.class.getDeclaredConstructors()[0], false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;static void print(Executable executable, boolean implicit) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;----------&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Executable: &amp;quot; + executable.getName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Parameter[] parameters = executable.getParameters();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; parameters.length; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Parameter parameter = parameters[i];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Parameter at position &amp;quot; + i);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;parameter.getType() = &amp;quot; + parameter.getType());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (implicit) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;parameter.isImplicit() = &amp;quot; + parameter.isImplicit());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;parameter.isSynthetic() = &amp;quot; + parameter.isSynthetic());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;----------&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;class Inner {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Inner() {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Inner anon = new Inner() {};&lt;br/&gt;
&amp;nbsp;&amp;nbsp;enum E {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;record R(int a, float b) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public R {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Use the -parameters flag for compilation (does not work for the record ctor).&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5081204">JDK-8292275</key>
            <summary>javac does not emit SYNTHETIC and MANDATED flags for parameters by default</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jwaters">Julian Waters</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcsad</label>
                            <label>release-note=yes</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 8 Aug 2022 11:26:25 -0700</created>
                <updated>Fri, 18 Jul 2025 10:48:22 -0700</updated>
                            <resolved>Sun, 30 Apr 2023 00:37:26 -0700</resolved>
                                    <version>18</version>
                                    <fixVersion>21</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>8</watches>
                                                                                                                                                            <comments>
                            <comment id="14668804" author="JIRAUSER20802" created="Mon, 29 Apr 2024 04:01:02 -0700"  >[~cstein] it seems like this could be fixed by backporting &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8058322&quot; title=&quot; Zero name_index item of MethodParameters attribute cause MalformedParameterException.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8058322&quot;&gt;&lt;strike&gt;JDK-8058322&lt;/strike&gt;&lt;/a&gt; to jdk8. WDYT?</comment>
                            <comment id="14668792" author="cstein" created="Mon, 29 Apr 2024 03:16:44 -0700"  >This change led to a regression JUnit 5.11.0-M1 in Java 8. Note that JUnit 5.11 is built with JDK 21 and `--release 8`.&lt;br/&gt;
&lt;br/&gt;
Find details at &lt;a href=&quot;https://github.com/junit-team/junit5/issues/3797&quot;&gt;https://github.com/junit-team/junit5/issues/3797&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The work-around is to also pass `-parameters` to the compiler arguments to have non-empty names.</comment>
                            <comment id="14577815" author="dukebot" created="Sun, 30 Apr 2023 00:37:25 -0700"  >Changeset: b3dbf28b&lt;br/&gt;
Author:    Hannes Greule &amp;lt;&lt;a href=&apos;mailto:SirYwell@users.noreply.github.com&apos;&gt;SirYwell@users.noreply.github.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Julian Waters &amp;lt;&lt;a href=&apos;mailto:jwaters@openjdk.org&apos;&gt;jwaters@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-04-30 07:34:09 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b3dbf28bc0614bee2f7137af95389134155c9511&quot;&gt;https://git.openjdk.org/jdk/commit/b3dbf28bc0614bee2f7137af95389134155c9511&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14517606" author="roboduke" created="Fri, 12 Aug 2022 13:22:37 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/9862&quot;&gt;https://git.openjdk.org/jdk/pull/9862&lt;/a&gt;&lt;br/&gt;
Date: 2022-08-12 19:54:59 +0000</comment>
                            <comment id="14517448" author="adev" created="Thu, 11 Aug 2022 23:24:21 -0700"  >Oddity is observed in Parameter#isImplicit() method. As per its documentation, it returns true if the parameter is implicitly&lt;br/&gt;
declared in source code.&lt;br/&gt;
&lt;br/&gt;
The attached reproducer however outputs parameter.isImplicit() = false &lt;br/&gt;
&lt;br/&gt;
Additional context provided by the submitter:&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.org/pipermail/compiler-dev/2022-May/019783.html&quot;&gt;https://mail.openjdk.org/pipermail/compiler-dev/2022-May/019783.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.org/pipermail/compiler-dev/2022-June/019924.html&quot;&gt;https://mail.openjdk.org/pipermail/compiler-dev/2022-June/019924.html&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="5097019">JDK-8304837</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5081711">JDK-8292467</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="4216642">JDK-5087240</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4217119">JDK-6520205</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5071548">JDK-8284333</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4975577">JDK-8213329</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5116959">JDK-8322040</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4894822">JDK-8162501</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4216642">JDK-5087240</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100884">JDK-8308050</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5115047">JDK-8320575</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140143">JDK-8341145</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5111936">JDK-8317731</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5026477">JDK-8250919</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5165114">JDK-8362626</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="100387" name="A.java" size="1399" author="adev" created="Thu, 11 Aug 2022 22:33:33 -0700"/>
                    </attachments>
                <subtasks>
                                              <subtask id="5101354">JDK-8308450</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2y70b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17412"><![CDATA[b21]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="212"><![CDATA[javac]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>