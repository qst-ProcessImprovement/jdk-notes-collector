<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 10:10:25 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8314580] PhaseIdealLoop::transform_long_range_checks fails with assert &quot;was tested before&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8314580</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>This code crashes the JVM:&lt;br/&gt;
&lt;br/&gt;
public class CrashExample {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final VarHandle byteHandle = MethodHandles.memorySegmentViewVarHandle(ValueLayout.JAVA_BYTE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final long len = 100;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final byte CR = (byte) &amp;#39;\r&amp;#39;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final byte LF = (byte) &amp;#39;\n&amp;#39;;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(int round = 0; round &amp;lt; 1000; round++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try(Arena arena = Arena.ofConfined()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MemorySegment memorySegment = arena.allocateArray(ValueLayout.JAVA_BYTE, len);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(int i = 0; i &amp;lt; 100000; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int index = i % 99;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byteHandle.set(memorySegment, index, CR);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byteHandle.set(memorySegment, index + 1, LF);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[] bytes = readUntil(memorySegment, CR, LF);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static byte[] readUntil(MemorySegment segment, byte... separators) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(long cur = 0; cur &amp;lt;= segment.byteSize() - separators.length; cur++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(matches(segment, cur, separators)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return segment.asSlice(0, cur).toArray(ValueLayout.JAVA_BYTE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static boolean matches(MemorySegment m, long offset, byte[] bytes) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(int index = 0; index &amp;lt; bytes.length; index++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((byte) byteHandle.get(m, offset + index) != bytes[index]) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/oracle/jdk/open/src/hotspot/share/opto/loopnode.cpp:1269), pid=1045773, tid=1045790&lt;br/&gt;
#  assert(ok) failed: inconsistent: was tested before&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0) (fastdebug build 22-internal-2023-08-07-1346088.tobias...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 22-internal-2023-08-07-1346088.tobias..., mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1292fe2]  PhaseIdealLoop::transform_long_range_checks(int, Node_List const&amp;amp;, Node*, Node*, Node*, Node*, LoopNode*)+0x1272&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    752  589 % !   4       CrashExample::main @ 29 (136 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f072267e000,0x00007f072277f000],  sp=0x00007f0722779b20,  free space=1006k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x1292fe2]  PhaseIdealLoop::transform_long_range_checks(int, Node_List const&amp;amp;, Node*, Node*, Node*, Node*, LoopNode*)+0x1272  (loopnode.cpp:1269)&lt;br/&gt;
V  [libjvm.so+0x129862e]  PhaseIdealLoop::create_loop_nest(IdealLoopTree*, Node_List&amp;amp;)+0xf4e  (loopnode.cpp:1047)&lt;br/&gt;
V  [libjvm.so+0x126f388]  IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;amp;)+0x318  (loopTransform.cpp:3602)&lt;br/&gt;
V  [libjvm.so+0x126f6b7]  IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;amp;)+0x117  (loopTransform.cpp:3726)&lt;br/&gt;
V  [libjvm.so+0x126f5d3]  IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;amp;)+0x33  (loopTransform.cpp:3710)&lt;br/&gt;
V  [libjvm.so+0x129d6d7]  PhaseIdealLoop::build_and_optimize()+0xca7  (loopnode.cpp:4604)&lt;br/&gt;
V  [libjvm.so+0x9eff5e]  PhaseIdealLoop::optimize(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x3ce  (loopnode.hpp:1114)&lt;br/&gt;
V  [libjvm.so+0x9ec9ef]  Compile::Optimize()+0xdaf  (compile.cpp:2166)&lt;br/&gt;
V  [libjvm.so+0x9eed10]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1b60  (compile.cpp:850)&lt;br/&gt;
V  [libjvm.so+0x84a5db]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x13b  (c2compiler.cpp:119)&lt;br/&gt;
V  [libjvm.so+0x9fac37]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x977  (compileBroker.cpp:2276)&lt;br/&gt;
V  [libjvm.so+0x9fb978]  CompileBroker::compiler_thread_loop()+0x5f8  (compileBroker.cpp:1944)&lt;br/&gt;
V  [libjvm.so+0xeb883c]  JavaThread::thread_main_inner()+0xcc  (javaThread.cpp:720)&lt;br/&gt;
V  [libjvm.so+0x179b04a]  Thread::call_run()+0xba  (thread.cpp:217)&lt;br/&gt;
V  [libjvm.so+0x1499d01]  thread_native_entry(Thread*)+0x121  (os_linux.cpp:783)&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f3f941154b7, pid=1045889, tid=1045906&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0) (build 22-internal-2023-08-09-1155514.tobias...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (22-internal-2023-08-09-1155514.tobias..., mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x4084b7]  AddNode::IdealIL(PhaseGVN*, bool, BasicType)+0x37&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    405  632 % !   4       CrashExample::main @ 29 (136 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f3f65eff000,0x00007f3f66000000],  sp=0x00007f3f65ffb7e0,  free space=1009k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x4084b7]  AddNode::IdealIL(PhaseGVN*, bool, BasicType)+0x37  (addnode.cpp:265)&lt;br/&gt;
V  [libjvm.so+0xd11bde]  PhaseIterGVN::transform_old(Node*)+0x9e  (phaseX.cpp:667)&lt;br/&gt;
V  [libjvm.so+0xd0db09]  PhaseIterGVN::optimize()+0xf9  (phaseX.cpp:1045)&lt;br/&gt;
V  [libjvm.so+0x6445af]  Compile::Optimize()+0x151f  (loopnode.hpp:1199)&lt;br/&gt;
V  [libjvm.so+0x6456c2]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0xed2  (compile.cpp:850)&lt;br/&gt;
V  [libjvm.so+0x574079]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x159  (c2compiler.cpp:119)&lt;br/&gt;
V  [libjvm.so+0x64b2fe]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa9e  (compileBroker.cpp:2276)&lt;br/&gt;
V  [libjvm.so+0x64e558]  CompileBroker::compiler_thread_loop()+0x698  (compileBroker.cpp:1944)&lt;br/&gt;
V  [libjvm.so+0x8f8038]  JavaThread::thread_main_inner() [clone .part.0]+0xb8  (javaThread.cpp:720)&lt;br/&gt;
V  [libjvm.so+0xe9aa18]  Thread::call_run()+0xa8  (thread.cpp:217)&lt;br/&gt;
V  [libjvm.so+0xcbfaaa]  thread_native_entry(Thread*)+0xda  (os_linux.cpp:783)</description>
                <environment></environment>
        <key id="5108382">JDK-8314580</key>
            <summary>PhaseIdealLoop::transform_long_range_checks fails with assert &quot;was tested before&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="mcimadamore">Maurizio Cimadamore</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>c2-loopopts</label>
                            <label>foreign-memaccess+abi</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-17</label>
                            <label>oracle-triage-22</label>
                    </labels>
                <created>Fri, 18 Aug 2023 07:11:32 -0700</created>
                <updated>Tue, 9 Jan 2024 10:12:38 -0800</updated>
                            <resolved>Mon, 4 Sep 2023 08:20:27 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14623432" author="roboduke" created="Thu, 2 Nov 2023 09:50:24 -0700"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Clean backport to improve C2 stability. Applies cleanly. Testing passed.</comment>
                            <comment id="14623052" author="roboduke" created="Wed, 1 Nov 2023 09:58:50 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/316&quot;&gt;https://git.openjdk.org/jdk21u/pull/316&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-01 16:53:00 +0000</comment>
                            <comment id="14608715" author="dukebot" created="Mon, 4 Sep 2023 08:20:26 -0700"  >Changeset: 9def4538&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-04 15:18:39 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/9def4538ab5456d689fd289bdef66fd1655773bc&quot;&gt;https://git.openjdk.org/jdk/commit/9def4538ab5456d689fd289bdef66fd1655773bc&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14606311" author="roboduke" created="Thu, 24 Aug 2023 01:01:26 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15411&quot;&gt;https://git.openjdk.org/jdk/pull/15411&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-24 07:57:34 +0000</comment>
                            <comment id="14605203" author="thartmann" created="Sun, 20 Aug 2023 23:31:55 -0700"  >Looks like an issue with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8259609&quot; title=&quot;C2: optimize long range checks in long counted loops&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8259609&quot;&gt;&lt;strike&gt;JDK-8259609&lt;/strike&gt;&lt;/a&gt;, we hit an assert in debug. I attached the test and hs_err file.&lt;br/&gt;
&lt;br/&gt;
ILW = Assert/crash during C2 compilation, reproducible with preview feature, no workaround but disabled compilation of affected method = HLM = P3</comment>
                            <comment id="14604997" author="mcimadamore" created="Fri, 18 Aug 2023 07:13:00 -0700"  >A dump can be found here:&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.org/pipermail/panama-dev/attachments/20230818/66bd174d/hs_err_pid5133-0001.log&quot;&gt;https://mail.openjdk.org/pipermail/panama-dev/attachments/20230818/66bd174d/hs_err_pid5133-0001.log&lt;/a&gt;</comment>
                            <comment id="14604996" author="mcimadamore" created="Fri, 18 Aug 2023 07:12:20 -0700"  >This fails with:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007fb978353e7b, pid=460689, tid=460729&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (22.0) (build 22-internal-adhoc.maurizio.dev)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (22-internal-adhoc.maurizio.dev, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x42fe7b]  AddNode::IdealIL(PhaseGVN*, bool, BasicType)+0x3b&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /w/misc/panama-test/MemAccess/core.460689)&lt;br/&gt;
```</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5114323">JDK-8319723</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5118491">JDK-8323359</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5039147">JDK-8259609</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="105175" name="CrashExample.java" size="1562" author="thartmann" created="Sun, 20 Aug 2023 22:56:38 -0700"/>
                            <attachment id="105176" name="hs_err_pid1045773.log" size="83341" author="thartmann" created="Sun, 20 Aug 2023 22:57:27 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32sjn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>