<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 19:08:41 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8307331] Correctly update line maps when class redefine rewrites bytecodes</title>
                <link>https://bugs.openjdk.org/browse/JDK-8307331</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Class VM_RedefineClasses sometimes modifies the *new* bytecode it is presented. This can occur when the the old and new class&amp;#39;s constant pools differ. VM_RedefineClasses constructs a merged constant pool, supplementing all the entries found in the old class bytecode with all extra, distinct entries found in the new bytecode. This may relocate some of the new entries, necessitating rewrites to pool indices  appearing as operands in the newly supplied method bytecode. &lt;br/&gt;
&lt;br/&gt;
Normally, the rewritten operations occupy the same number of bytes as the original. However, in the case of an some operations the updated index for the merged pool may no longer fit into 8 bits and require use of  an alternative operation that allows a 16 bit index, for example an ldc may need to be replaced with a ldc_w. In such cases this requires adjustment of all offsets that reference later operations.&lt;br/&gt;
&lt;br/&gt;
Class VM_RedefineClasses correctly adjust all offsets in the method bytecode and also includes logic to update offsets in the line number table. However, it fails to adjust line numbers correctly when more than one such change is required. Each adjustment is applied independently to a new copy the method&amp;#39;s original line number table. What is needed is for them to be applied cumulatively to a single new copy.&lt;br/&gt;
&lt;br/&gt;
This problem can manifest as a JVM forced exit when debugging via JDWP. If a debugger hot swaps a class that requires several replacements and then places a line break which targets a bytecode operation that follows the first modified bytecode then the JDWP agent will use an invalid line map to identify the first bytecode instruction for the line, the location at which it expects to temporarily swap the actual, correct bytecode with a breakpoint pseudo-bytecode. Since this location can be off by one (or more) the agent may end up overwriting a bytecode instruction operand rather than a proper instruction. In many cases this mistake be caught as a verify error, leading to a forced exit, but it is also possible that the program will continue to execute valid yet incorrect bytecode.</description>
                <environment></environment>
        <key id="5099992">JDK-8307331</key>
            <summary>Correctly update line maps when class redefine rewrites bytecodes</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="adinn">Andrew Dinn</assignee>
                                    <reporter username="adinn">Andrew Dinn</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                    </labels>
                <created>Wed, 3 May 2023 01:16:54 -0700</created>
                <updated>Mon, 24 Jul 2023 21:40:42 -0700</updated>
                            <resolved>Fri, 5 May 2023 00:52:46 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14580153" author="adinn" created="Tue, 9 May 2023 03:47:21 -0700"  >Fix Request 17u&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
Backporting this patch is desirable because it avoids a possible JVM crash when debugging an application. The error it fixes may equally serve to correct invalid reporting of source line numbers when an agent has been used to transform bytecode.&lt;br/&gt;
&lt;br/&gt;
The risk is low for several reasons:&lt;br/&gt;
1. The circumstances in which the error occurs are rare i.e. only after bytecode is rewritten by an agent or a debugger hot swap and only then in circumstances where a constant pool change causes a pool index for a constant value to switch from &amp;lt; 256 to &amp;gt;= 256.&lt;br/&gt;
2. Adjustments to line numbers almost always have only &amp;#39;cosmetic&amp;#39; significance for application and JDK runtime code (whereas, by contrast, incorrect values can easily lead to debugger crashes)&lt;br/&gt;
3. The change is very strictly localized to a few lines of the serviceability code that deal with adjusting line number tables during class redefinition.&lt;br/&gt;
&lt;br/&gt;
I have run tier1 tests with the patch without seeing any errors. I have also verified that the patch fixes the hand-driven test case that was used to diagnose the problem.</comment>
                            <comment id="14579312" author="roboduke" created="Fri, 5 May 2023 01:44:29 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1324&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1324&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-05 08:38:53 +0000</comment>
                            <comment id="14579300" author="dukebot" created="Fri, 5 May 2023 00:52:43 -0700"  >Changeset: f94f9577&lt;br/&gt;
Author:    Andrew Dinn &amp;lt;&lt;a href=&apos;mailto:adinn@openjdk.org&apos;&gt;adinn@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-05 07:50:21 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f94f957734355fe112e861d1f2f0b49df20f6b66&quot;&gt;https://git.openjdk.org/jdk/commit/f94f957734355fe112e861d1f2f0b49df20f6b66&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14578997" author="roboduke" created="Thu, 4 May 2023 02:31:25 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13795&quot;&gt;https://git.openjdk.org/jdk/pull/13795&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-04 09:26:33 +0000</comment>
                            <comment id="14578678" author="adinn" created="Wed, 3 May 2023 01:18:35 -0700"  >A reproducer and analysis of the problem are available here&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=2183436&quot;&gt;https://bugzilla.redhat.com/show_bug.cgi?id=2183436&lt;/a&gt;&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5100573">JDK-8307805</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5104942">JDK-8311608</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31d2b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17415"><![CDATA[b22]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>