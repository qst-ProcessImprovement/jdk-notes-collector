<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:44:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8252255] Blurry rendering of SwingNode with HiDPI scaling in JavaFX</title>
                <link>https://bugs.openjdk.org/browse/JDK-8252255</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
&lt;a href=&quot;https://stackoverflow.com/q/63444771/59087&quot;&gt;https://stackoverflow.com/q/63444771/59087&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The text rendering on Windows is blurry. When running in a JFrame, not wrapped by a SwingNode, but still part of the same application shown in the video, the quality of the text is flawless. The screen capture shows the application&amp;#39;s main window (bottom), which includes the SwingNode along with the aforementioned JFrame (top). You may have to zoom into the straight edge of the letters to see the reason for the blur. It looks to be an half-pixel offset issue, which is strange because there is no blur in other scenarios.&lt;br/&gt;
&lt;br/&gt;
See the StackOverflow question for more details and screen captures that illustrate the problem, plus additional sample code from other people.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
1. Create a new project with a dependency on FlyingSaucer (there may be simpler ways to reproduce the issue).&lt;br/&gt;
2. Run the executable test case.&lt;br/&gt;
3. Adjust the scrollbars until the text appears.&lt;br/&gt;
4. Use a third-party tool to zoom into the letters (e.g., Greenshot).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
The text appears crisp.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
The text appears blurry.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import javafx.application.Application;&lt;br/&gt;
import javafx.application.Platform;&lt;br/&gt;
import javafx.embed.swing.SwingNode;&lt;br/&gt;
import javafx.scene.Scene;&lt;br/&gt;
import javafx.scene.control.SplitPane;&lt;br/&gt;
import javafx.stage.Stage;&lt;br/&gt;
import org.jsoup.Jsoup;&lt;br/&gt;
import org.jsoup.helper.W3CDom;&lt;br/&gt;
import org.xhtmlrenderer.simple.XHTMLPanel;&lt;br/&gt;
&lt;br/&gt;
import javax.swing.*;&lt;br/&gt;
&lt;br/&gt;
import static javax.swing.SwingUtilities.invokeLater;&lt;br/&gt;
import static javax.swing.UIManager.getSystemLookAndFeelClassName;&lt;br/&gt;
import static javax.swing.UIManager.setLookAndFeel;&lt;br/&gt;
&lt;br/&gt;
public class FlyingSourceTest extends Application {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;private final static String HTML = &amp;quot;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;&amp;gt;&amp;lt;style type=&amp;#39;text/css&amp;#39;&amp;gt;body{font-family:serif; background-color: &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;#fff; color:#454545;}&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;p style=\&amp;quot;font-size: &amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;300px\&amp;quot;&amp;gt;TEST&amp;lt;/p&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static void main( String[] args ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Application.launch( args );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Override&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public void start( Stage primaryStage ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;invokeLater( () -&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setLookAndFeel( getSystemLookAndFeelClassName() );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch( Exception ignored ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;primaryStage.setTitle( &amp;quot;Hello World!&amp;quot; );&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final var renderer = new XHTMLPanel();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;renderer.getSharedContext().getTextRenderer().setSmoothingThreshold( 0 );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;renderer.setDocument( new W3CDom().fromJsoup( Jsoup.parse( HTML ) ) );&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final var swingNode = new SwingNode();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;swingNode.setContent( new JScrollPane( renderer ) );&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final var root = new SplitPane( swingNode, swingNode );&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ----------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Here be dragons? Using a StackPane, instead of a SplitPane, works.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ----------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//StackPane root = new StackPane();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//root.getChildren().add( mSwingNode );&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Platform.runLater( () -&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;primaryStage.setScene( new Scene( root, 300, 250 ) );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;primaryStage.show();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Could not find one at this time, although investigation is on-going.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5028153">JDK-8252255</key>
            <summary>Blurry rendering of SwingNode with HiDPI scaling in JavaFX</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="psadhukhan">Prasanta Sadhukhan</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcspn</label>
                            <label>reproducer-yes</label>
                            <label>sn_136</label>
                            <label>sn_137</label>
                            <label>sn_138</label>
                            <label>sn_139</label>
                            <label>webbug</label>
                    </labels>
                <created>Thu, 20 Aug 2020 09:11:18 -0700</created>
                <updated>Mon, 13 Mar 2023 10:44:41 -0700</updated>
                            <resolved>Tue, 7 Mar 2023 22:58:04 -0800</resolved>
                                    <version>11</version>
                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14565230" author="dukebot" created="Tue, 7 Mar 2023 22:58:02 -0800"  >Changeset: 09d469e5&lt;br/&gt;
Author:    Prasanta Sadhukhan &amp;lt;&lt;a href=&apos;mailto:psadhukhan@openjdk.org&apos;&gt;psadhukhan@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-08 06:55:17 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/09d469e5adb235ebe43aee459f40ea324ebceb0f&quot;&gt;https://git.openjdk.org/jdk/commit/09d469e5adb235ebe43aee459f40ea324ebceb0f&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14564556" author="psadhukhan" created="Sun, 5 Mar 2023 19:02:57 -0800"  >I am not sure &amp;quot;bug first showed up in JDK 11&amp;quot; is correct. As per this commit,&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jfx/commit/f0c9b3581cf0ad0239eaeb358fc24cfa6e5e0b4d#diff-5cd546020fef77c5a38be3a5a47b4edf0b16d9f34569e5aa3d58abae690b5666R234&quot;&gt;https://github.com/openjdk/jfx/commit/f0c9b3581cf0ad0239eaeb358fc24cfa6e5e0b4d#diff-5cd546020fef77c5a38be3a5a47b4edf0b16d9f34569e5aa3d58abae690b5666R234&lt;/a&gt;&lt;br/&gt;
done for &amp;quot;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8094235&quot; title=&quot;[SwingNode]: support high DPI displays&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8094235&quot;&gt;&lt;strike&gt;RT-32597&lt;/strike&gt;&lt;/a&gt;: [SwingNode]: support high DPI displays &amp;quot;&lt;br/&gt;
the code to use the int version is present even before, which would have caused the same issue (as I think I saw in jdk9 too) so I think &amp;quot;Affects version&amp;quot; should mention jdk9&lt;br/&gt;
&lt;br/&gt;
I guess it probably would not have manifested in jdk8 as I guess JDK at that time relied on &lt;br/&gt;
&amp;quot;sun.java2d.dpiaware&amp;quot; property making OS taking care of scaling but from jdk9 JDK takes care of scaling, so it probably started to manifest from that version.</comment>
                            <comment id="14564486" author="kcr" created="Fri, 3 Mar 2023 14:16:02 -0800"  >Also, I just double-checked using SimpleSwingNodeTest (where the blurriness is easier to see), and I can see that this bug first showed up in JDK 11, which makes sense, since that is when the jdk.unsupported.desktop module was added.</comment>
                            <comment id="14564485" author="kcr" created="Fri, 3 Mar 2023 14:06:43 -0800"  >Since the bug turned out to be in the Swing interop support in the jdk.unsupported.desktop module, I am changing the category / subcategory to client-libs/javax.swing (and changing the version numbers to match JDK versions)</comment>
                            <comment id="14564303" author="roboduke" created="Fri, 3 Mar 2023 00:13:46 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12848&quot;&gt;https://git.openjdk.org/jdk/pull/12848&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-03 08:07:12 +0000</comment>
                            <comment id="14564255" author="kcr" created="Thu, 2 Mar 2023 16:52:48 -0800"  >The proposed fix looks good to me too. I&amp;#39;ll do more testing with the PR is submitted.</comment>
                            <comment id="14563254" author="psadhukhan" created="Mon, 27 Feb 2023 19:23:25 -0800"  >There was an obvious mistake(?) in determining scale factor in refactored Swing interop code. Here, &lt;a href=&quot;https://github.com/openjdk/jfx/blob/master/modules/javafx.swing/src/main/java/com/sun/javafx/embed/swing/newimpl/SwingNodeInteropN.java#L131-L135&quot;&gt;https://github.com/openjdk/jfx/blob/master/modules/javafx.swing/src/main/java/com/sun/javafx/embed/swing/newimpl/SwingNodeInteropN.java#L131-L135&lt;/a&gt;&lt;br/&gt;
it calls JLightweightFrame.notifyDisplayChanged(int) as LightweightFrameWrapper did not support notifyDisplayChanged(double, double) API so scalefactor of 1.25 is being passed as 1.0.&lt;br/&gt;
&lt;br/&gt;
I rectified that by adding&lt;br/&gt;
&lt;br/&gt;
public void notifyDisplayChanged(final double scaleFactorX, double scaleFactorY) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (lwFrame != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lwFrame.notifyDisplayChanged(scaleFactorX, scaleFactorY);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
in jdk.unsupported.desktop/share/classes/jdk/swing/interop/LightweightFrameWrapper.java&lt;br/&gt;
&lt;br/&gt;
but it does not solve the issue in SimpleSwingNode but BlurrySwingNode seems to have an effect&lt;br/&gt;
&lt;br/&gt;
Attached is the label-fix-image.png...It looks fine to my eyes apparently</comment>
                            <comment id="14562459" author="psadhukhan" created="Thu, 23 Feb 2023 07:10:57 -0800"  >I think it&amp;#39;s reproducible in openjfx9 too...attached jfx9 screenshot...&lt;br/&gt;
In that case, I think it never worked before..</comment>
                            <comment id="14562439" author="kcr" created="Thu, 23 Feb 2023 04:59:37 -0800"  >Yes, I see that it does reproduce using JavaFX 11.&lt;br/&gt;
&lt;br/&gt;
In the BlurrySwingNode test, I can see the blurriness most noticeably in the &amp;quot;B&amp;quot; of &amp;quot;LABEL&amp;quot; (compared to the JavaFX Label above it), but other letters also are blurry. It might be easier to see with a program that draws the same text in both labels.&lt;br/&gt;
&lt;br/&gt;
It is even more noticeable in the SimpleSwingNodeTest example attached to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8298798&quot; title=&quot;Swing text displayed in a JavaFX SwingNode is blurry on HiDPI system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8298798&quot;&gt;&lt;strike&gt;JDK-8298798&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
</comment>
                            <comment id="14562373" author="psadhukhan" created="Wed, 22 Feb 2023 20:01:02 -0800"  >I downloaded openjfx11 from gluonhq site and I think blurriness is seen there too as per my testing..</comment>
                            <comment id="14562366" author="psadhukhan" created="Wed, 22 Feb 2023 19:19:27 -0800"  >OK. I see only &amp;quot;openjfx14&amp;quot; is mentioned in &amp;quot;Affects version&amp;quot;, is it then a regression as I guess JDK added hidpi support in jdk9?&lt;br/&gt;
&amp;nbsp;not sure when hidpi support was added in FX&lt;br/&gt;
From where to download openjfx11 or earlier to test?&lt;br/&gt;
&lt;br/&gt;
Also, is there an easy way to find the blurriness? ie where to see, which character to see? &lt;br/&gt;
It seems fine to me (and even to Ajit) at normal size...  zooming in &amp;quot;A&amp;quot; we see 2 graded lines in bad and 1 line in good font..&lt;br/&gt;
&lt;br/&gt;
&amp;gt; So this is likely a SwingNode bug or a bug in Swing / Java2D.&lt;br/&gt;
It was mentioned it could be Swing bug so wanted to confirm it was not..</comment>
                            <comment id="14562095" author="kcr" created="Wed, 22 Feb 2023 09:43:27 -0800"  >Yes, this is specific to SwingNode, so the category of javafx/swing is correct.&lt;br/&gt;
&lt;br/&gt;
A Swing JLabel in a JFrame renders fine. A JavaFX Label in a JavaFX Stage also render fine.</comment>
                            <comment id="14561904" author="psadhukhan" created="Wed, 22 Feb 2023 00:10:47 -0800"  >Hi [~kcr]&lt;br/&gt;
&lt;br/&gt;
I tried a standalone swing testcase SwingLabel.java which shows a JLabel (running with -Dsun.java2d.uiScale=1.25) and have attached SwingLabel.png&lt;br/&gt;
&lt;br/&gt;
I think Swing does not have this blurry font issue, so it seems to be a SwingNode only issue.&lt;br/&gt;
Do you agree?&lt;br/&gt;
</comment>
                            <comment id="14552491" author="kcr" created="Wed, 18 Jan 2023 10:46:02 -0800"  >See &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8298798&quot; title=&quot;Swing text displayed in a JavaFX SwingNode is blurry on HiDPI system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8298798&quot;&gt;&lt;strike&gt;JDK-8298798&lt;/strike&gt;&lt;/a&gt; (which I just closed as a duplicate) for an additional test program that shows this bug.</comment>
                            <comment id="14365913" author="kcr" created="Sat, 29 Aug 2020 07:03:10 -0700"  >This doesn&amp;#39;t look related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8211294&quot; title=&quot;ScrollPane content is blurry with 125% scaling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8211294&quot;&gt;&lt;strike&gt;JDK-8211294&lt;/strike&gt;&lt;/a&gt;, nor does it require a SplitPane to reproduce it. A simple JLabel in SwingNode inside any root pane (e.g., a StackPane or VBox) will be blurry when run on a Windows 10 system with 125% HiDPI scaling. A similar FX Label is not blurry. So this is likely a SwingNode bug or a bug in Swing / Java2D.&lt;br/&gt;
&lt;br/&gt;
I have attached a simplified program, BlurrySwingNode, which will reproduce this.</comment>
                            <comment id="14364750" author="kcr" created="Mon, 24 Aug 2020 06:26:15 -0700"  >This might be related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8211294&quot; title=&quot;ScrollPane content is blurry with 125% scaling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8211294&quot;&gt;&lt;strike&gt;JDK-8211294&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14364737" author="kcr" created="Mon, 24 Aug 2020 05:16:34 -0700"  >I have attached a test program that was posted to the openjfx-dev list here:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.java.net/pipermail/openjfx-dev/2020-August/027368.html&quot;&gt;https://mail.openjdk.java.net/pipermail/openjfx-dev/2020-August/027368.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
To reproduce, run the attached test program on Windows 10 with 125% scaling. See the attached image for results.&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5089715">JDK-8298798</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4972896">JDK-8211294</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="89991" name="BlurrySwingNode.java" size="1637" author="kcr" created="Sat, 29 Aug 2020 07:03:58 -0700"/>
                            <attachment id="89934" name="BlurrySwingNode.png" size="48616" author="kcr" created="Mon, 24 Aug 2020 05:13:33 -0700"/>
                            <attachment id="89990" name="BlurrySwingNode2.png" size="47205" author="kcr" created="Sat, 29 Aug 2020 07:03:25 -0700"/>
                            <attachment id="89933" name="FlyingSourceTest.java" size="2132" author="kcr" created="Mon, 24 Aug 2020 05:13:19 -0700"/>
                            <attachment id="102745" name="SwinLabel.png" size="19297" author="psadhukhan" created="Tue, 21 Feb 2023 23:10:21 -0800"/>
                            <attachment id="102744" name="SwingLabel.java" size="497" author="psadhukhan" created="Tue, 21 Feb 2023 23:10:03 -0800"/>
                            <attachment id="102763" name="fx11label.png" size="47531" author="psadhukhan" created="Wed, 22 Feb 2023 20:02:00 -0800"/>
                            <attachment id="102768" name="fx9label.png" size="33338" author="psadhukhan" created="Thu, 23 Feb 2023 07:09:56 -0800"/>
                            <attachment id="102816" name="label-fix-image.png" size="36327" author="psadhukhan" created="Mon, 27 Feb 2023 19:22:52 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17006"><![CDATA[windows_7]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2p8gz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17339"><![CDATA[b13]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="206"><![CDATA[javax.swing]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>