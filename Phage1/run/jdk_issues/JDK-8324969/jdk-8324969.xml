<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:45:07 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8324969] C2: prevent elimination of unbalanced coarsened locking regions</title>
                <link>https://bugs.openjdk.org/browse/JDK-8324969</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (17.0.11) (fastdebug build 17.0.11-internal+0-adhoc.user.jdk17u-dev)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 17.0.11-internal+0-adhoc.user.jdk17u-dev, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Running the following test case with the fastdebug version of jdk17u-dev results in a crash without any additional options. This situation occurs approximately once in every 10 executions.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
java Test&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Runs normally and finishes within one second.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
[0.375s][error][monitorinflation] ERROR: ObjectMonitor::exit(): thread=0x00007fc98c029930 is exiting an ObjectMonitor it does not own.&lt;br/&gt;
[0.376s][error][monitorinflation] The imbalance is possibly caused by JNI locking.&lt;br/&gt;
[0.376s][error][monitorinflation] (ObjectMonitor*) 0x00007fc98c6a48e0 = {&lt;br/&gt;
[0.376s][error][monitorinflation]   _header = 0x0000007f63425a01&lt;br/&gt;
[0.376s][error][monitorinflation]   _object = 0x0000000101f19200&lt;br/&gt;
[0.376s][error][monitorinflation]   _pad_buf0 = {&lt;br/&gt;
[0.376s][error][monitorinflation]     [0] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.376s][error][monitorinflation]     ...&lt;br/&gt;
[0.376s][error][monitorinflation]     [47] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.376s][error][monitorinflation]   }&lt;br/&gt;
[0.376s][error][monitorinflation]   _owner = 0x0000000000000000&lt;br/&gt;
[0.376s][error][monitorinflation]   _previous_owner_tid = 0&lt;br/&gt;
[0.376s][error][monitorinflation]   _pad_buf1 = {&lt;br/&gt;
[0.376s][error][monitorinflation]     [0] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.376s][error][monitorinflation]     ...&lt;br/&gt;
[0.376s][error][monitorinflation]     [47] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.376s][error][monitorinflation]   }&lt;br/&gt;
[0.376s][error][monitorinflation]   _next_om = 0x00007fc8e8000fd0&lt;br/&gt;
[0.376s][error][monitorinflation]   _recursions = 0&lt;br/&gt;
[0.376s][error][monitorinflation]   _EntryList = 0x0000000000000000&lt;br/&gt;
[0.376s][error][monitorinflation]   _cxq = 0x0000000000000000&lt;br/&gt;
[0.376s][error][monitorinflation]   _succ = 0x0000000000000000&lt;br/&gt;
[0.376s][error][monitorinflation]   _Responsible = 0x0000000000000000&lt;br/&gt;
[0.376s][error][monitorinflation]   _Spinner = 0&lt;br/&gt;
[0.376s][error][monitorinflation]   _SpinDuration = 5000&lt;br/&gt;
[0.376s][error][monitorinflation]   _contentions = 0&lt;br/&gt;
[0.376s][error][monitorinflation]   _WaitSet = 0x0000000000000000&lt;br/&gt;
[0.376s][error][monitorinflation]   _waiters = 0&lt;br/&gt;
[0.376s][error][monitorinflation]   _WaitSetLock = 0&lt;br/&gt;
[0.376s][error][monitorinflation] }&lt;br/&gt;
# To suppress the following error report, specify this argument&lt;br/&gt;
# after -XX: or in .hotspotrc:  SuppressErrorAt=/objectMonitor.cpp:1158&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/data/user/jdk17u-dev/src/hotspot/share/runtime/objectMonitor.cpp:1158), pid=17712, tid=17713&lt;br/&gt;
#  assert(false) failed: Non-balanced monitor enter/exit!&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (17.0.11) (fastdebug build 17.0.11-internal+0-adhoc.xiezf.jdk17u-dev)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 17.0.11-internal+0-adhoc.xiezf.jdk17u-dev, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x138952f]  ObjectMonitor::exit(JavaThread*, bool)+0x54f&lt;br/&gt;
#&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /data/user/proj/toreport/Test2887_01_22_13_20_15/reduce/hs_err_pid17712.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
class Test {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;public static final int N = 256;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;public long instanceCount;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;static short sFld = 32330;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;static void vMeth() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;short[] sArr = new short[N];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;long lMeth(int i11, long l) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i12;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (i12 = 1; 204 &amp;gt; i12; ++i12)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vMeth();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long meth_res = i11;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return meth_res;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;static synchronized int method47(int var1, int var2) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return var1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;static synchronized int method71(int var) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return var;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;boolean bMeth(int i2, int i3) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i4;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;synchronized (Test.class) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i7 = 4;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i8;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (i4 = 5; i4 &amp;lt; 118; i4++)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (i8 = 1; i8 &amp;lt; 5; i8++)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;switch (63) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case 63:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int var18 = 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (var18 &amp;lt; 20000)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var18++;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case 64:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;switch (48) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case 48:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sFld = (short) lMeth(i7, instanceCount);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case 50:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int var27 = 2; var27 &amp;lt; 8; var27 += 2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int var28 = 1;;) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int var29 = method47(var27, var28);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int var30 = var27 + method71(var28);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long meth_res = i3;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return meth_res &amp;gt; 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;void mainTest(String[] strArr1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i1 = -9;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; 1000; ++i) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (bMeth(6, i1))&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] strArr) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Test _instance = new Test();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_instance.mainTest(strArr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : often&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5120040">JDK-8324969</key>
            <summary>C2: prevent elimination of unbalanced coarsened locking regions</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kvn">Vladimir Kozlov</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>dcsrs</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Thu, 25 Jan 2024 01:32:07 -0800</created>
                <updated>Mon, 17 Jun 2024 23:33:55 -0700</updated>
                            <resolved>Wed, 28 Feb 2024 08:06:12 -0800</resolved>
                                    <version>17.0.10</version>
                    <version>21</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14681289" author="roboduke" created="Thu, 13 Jun 2024 00:56:17 -0700"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
Should get backported for parity with 21.0.25-oracle. It is recognized as clean backport and tier 1-4 have passed.</comment>
                            <comment id="14680873" author="roboduke" created="Wed, 12 Jun 2024 04:00:21 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/700&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/700&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-12 10:19:55 +0000</comment>
                            <comment id="14653210" author="dukebot" created="Wed, 28 Feb 2024 08:06:07 -0800"  >Changeset: b938a5c9&lt;br/&gt;
Author:    Vladimir Kozlov &amp;lt;&lt;a href=&apos;mailto:kvn@openjdk.org&apos;&gt;kvn@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-02-28 16:04:47 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b938a5c9edd53821a52b43a8e342b76adb341a3f&quot;&gt;https://git.openjdk.org/jdk/commit/b938a5c9edd53821a52b43a8e342b76adb341a3f&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14651992" author="kvn" created="Sat, 24 Feb 2024 20:40:22 -0800"  >Performance testing finished. I don&amp;#39;t see anything alarming.</comment>
                            <comment id="14650998" author="kvn" created="Tue, 20 Feb 2024 20:11:04 -0800"  >Got failure because after loop unroll we can find again coarsened locks in Unbalanced locking regions.&lt;br/&gt;
</comment>
                            <comment id="14646370" author="roboduke" created="Sat, 3 Feb 2024 13:59:33 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17697&quot;&gt;https://git.openjdk.org/jdk/pull/17697&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-03 21:56:25 +0000</comment>
                            <comment id="14646335" author="kvn" created="Fri, 2 Feb 2024 16:25:44 -0800"  >I attached simplified test.</comment>
                            <comment id="14645225" author="thartmann" created="Tue, 30 Jan 2024 23:53:03 -0800"  >ILW = Same as &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322743&quot; title=&quot;C2: prevent lock region elimination in OSR compilation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322743&quot;&gt;&lt;strike&gt;JDK-8322743&lt;/strike&gt;&lt;/a&gt; = P3</comment>
                            <comment id="14645022" author="thartmann" created="Tue, 30 Jan 2024 22:57:02 -0800"  >With JDK 23 I&amp;#39;m hitting (fails since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8286957&quot; title=&quot;Held monitor count&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8286957&quot;&gt;&lt;strike&gt;JDK-8286957&lt;/strike&gt;&lt;/a&gt; in JDK 20):&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/workspace/open/src/hotspot/share/runtime/javaThread.cpp:1953), pid=339206, tid=339207&lt;br/&gt;
#  assert(_held_monitor_count &amp;gt;= 0) failed: Must always be greater than 0: -45185988&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (23.0+4) (fastdebug build 23-ea+4-173)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 23-ea+4-173, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xebbedc]  JavaThread::inc_held_monitor_count(long, bool)+0x8c&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007fa818ee8000,0x00007fa818fe9000],  sp=0x00007fa818fe7c20,  free space=1023k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xebbedc]  JavaThread::inc_held_monitor_count(long, bool)+0x8c  (javaThread.cpp:1953)&lt;br/&gt;
V  [libjvm.so+0x173ae0a]  ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*)+0xba&lt;br/&gt;
V  [libjvm.so+0xec0855]  JavaThread::exit(bool, JavaThread::ExitType)+0x405&lt;br/&gt;
V  [libjvm.so+0xf9416a]  jni_DetachCurrentThread+0xda&lt;br/&gt;
C  [libjli.so+0x4a1f]  JavaMain+0xdef&lt;br/&gt;
C  [libjli.so+0x7ca9]  ThreadJavaMain+0x9&lt;br/&gt;
&lt;br/&gt;
The proposed fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8324174&quot; title=&quot;assert(m-&amp;gt;is_entered(current)) failed: invariant&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8324174&quot;&gt;&lt;strike&gt;JDK-8324174&lt;/strike&gt;&lt;/a&gt; does not seem to fix the issue.</comment>
                            <comment id="14645020" author="kvn" created="Tue, 30 Jan 2024 22:51:51 -0800"  >No, it is not &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8324174&quot; title=&quot;assert(m-&amp;gt;is_entered(current)) failed: invariant&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8324174&quot;&gt;&lt;strike&gt;JDK-8324174&lt;/strike&gt;&lt;/a&gt; and not &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322743&quot; title=&quot;C2: prevent lock region elimination in OSR compilation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322743&quot;&gt;&lt;strike&gt;JDK-8322743&lt;/strike&gt;&lt;/a&gt;. I tested both fixes and test still fail. With JDK 23 the assert is different (we have monitors count now):&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/Users/vkozlov/work/leyden/src/hotspot/share/runtime/javaThread.cpp:1961), pid=24650, tid=7939&lt;br/&gt;
#  assert(_held_monitor_count &amp;gt;= 0) failed: Must always be greater than 0: -450192&lt;br/&gt;
&lt;br/&gt;
Test passed with -XX:-EliminateNestedLocks. &lt;br/&gt;
&lt;br/&gt;
Looking on -XX:+PrintEliminatedLocks show that C2 eliminates one Nested lock but there is not corresponding unlock:&lt;br/&gt;
=== Coarsened 1 unlocks and 1 locks&lt;br/&gt;
=== Coarsened 1 unlocks and 1 locks&lt;br/&gt;
=== Coarsened 1 unlocks and 1 locks&lt;br/&gt;
++++ Eliminated: 729 Unlock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 722 Unlock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 708 Lock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 699 Lock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 670 Unlock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 663 Unlock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 649 Lock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 475 Lock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 460 Unlock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 446 Lock &amp;#39;Coarsened&amp;#39;&lt;br/&gt;
++++ Eliminated: 640 Lock &amp;#39;Nested&amp;#39;&lt;br/&gt;
&lt;br/&gt;
Running with -Xbatch test passed and eliminate locks do not have `Nested` eliminated.</comment>
                            <comment id="14644992" author="dholmes" created="Tue, 30 Jan 2024 20:56:38 -0800"  >This seems similar to a number of compiler issues related to escape-analysis and lock-elision where deopt is not locking things properly. e.g. &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8324174&quot; title=&quot;assert(m-&amp;gt;is_entered(current)) failed: invariant&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8324174&quot;&gt;&lt;strike&gt;JDK-8324174&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14644000" author="rsurianaraya" created="Fri, 26 Jan 2024 04:29:06 -0800"  >With fast debug issue is intermittent.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
# ./fastdebug/bin/java -showversion Test&lt;br/&gt;
java version &amp;quot;17.0.11-ea&amp;quot; 2024-04-16 LTS&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 17.0.11-ea+2-LTS-178)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 17.0.11-ea+2-LTS-178, mixed mode, sharing)&lt;br/&gt;
&lt;br/&gt;
# ./fastdebug/bin/java -showversion Test&lt;br/&gt;
java version &amp;quot;17.0.11-ea&amp;quot; 2024-04-16 LTS&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 17.0.11-ea+2-LTS-178)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 17.0.11-ea+2-LTS-178, mixed mode, sharing)&lt;br/&gt;
[0.265s][error][monitorinflation] ERROR: ObjectMonitor::exit(): thread=0x00007f4540027bd0 is exiting an ObjectMonitor it does not own.&lt;br/&gt;
[0.265s][error][monitorinflation] The imbalance is possibly caused by JNI locking.&lt;br/&gt;
[0.265s][error][monitorinflation] (ObjectMonitor*) 0x00007f45401870e0 = {&lt;br/&gt;
[0.265s][error][monitorinflation]   _header = 0x0000002c7b84de09&lt;br/&gt;
[0.265s][error][monitorinflation]   _object = 0x00000000c79704c8&lt;br/&gt;
[0.265s][error][monitorinflation]   _pad_buf0 = {&lt;br/&gt;
[0.265s][error][monitorinflation]     [0] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.265s][error][monitorinflation]     ...&lt;br/&gt;
[0.265s][error][monitorinflation]     [47] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.265s][error][monitorinflation]   }&lt;br/&gt;
[0.265s][error][monitorinflation]   _owner = 0x0000000000000000&lt;br/&gt;
[0.265s][error][monitorinflation]   _previous_owner_tid = 0&lt;br/&gt;
[0.265s][error][monitorinflation]   _pad_buf1 = {&lt;br/&gt;
[0.265s][error][monitorinflation]     [0] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.265s][error][monitorinflation]     ...&lt;br/&gt;
[0.265s][error][monitorinflation]     [47] = &amp;#39;\0&amp;#39;&lt;br/&gt;
[0.265s][error][monitorinflation]   }&lt;br/&gt;
[0.265s][error][monitorinflation]   _next_om = 0x00007f44d8000e50&lt;br/&gt;
[0.265s][error][monitorinflation]   _recursions = 0&lt;br/&gt;
[0.265s][error][monitorinflation]   _EntryList = 0x0000000000000000&lt;br/&gt;
[0.265s][error][monitorinflation]   _cxq = 0x0000000000000000&lt;br/&gt;
[0.265s][error][monitorinflation]   _succ = 0x0000000000000000&lt;br/&gt;
[0.265s][error][monitorinflation]   _Responsible = 0x0000000000000000&lt;br/&gt;
[0.265s][error][monitorinflation]   _Spinner = 0&lt;br/&gt;
[0.265s][error][monitorinflation]   _SpinDuration = 0&lt;br/&gt;
[0.265s][error][monitorinflation]   _contentions = 0&lt;br/&gt;
[0.265s][error][monitorinflation]   _WaitSet = 0x0000000000000000&lt;br/&gt;
[0.265s][error][monitorinflation]   _waiters = 0&lt;br/&gt;
[0.265s][error][monitorinflation]   _WaitSetLock = 0&lt;br/&gt;
[0.265s][error][monitorinflation] }&lt;br/&gt;
# To suppress the following error report, specify this argument&lt;br/&gt;
# after -XX: or in .hotspotrc:  SuppressErrorAt=/objectMonitor.cpp:1171&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/0db9c48f-6638-40d0-9a4b-bd9cc7533eb8-S9871/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/f91d9a46-974d-4557-9d6c-a78a6ab54a5f/runs/13c30673-1462-4e78-9ca1-2c9854a3a18a/workspace/open/src/hotspot/share/runtime/objectMonitor.cpp:1171), pid=4047, tid=4048&lt;br/&gt;
#  assert(false) failed: Non-balanced monitor enter/exit!&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (17.0.11+2) (fastdebug build 17.0.11-ea+2-LTS-178)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 17.0.11-ea+2-LTS-178, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, serial gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1583fb5]  ObjectMonitor::exit(JavaThread*, bool)+0x615&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/libexec/abrt-hook-ccpp %s %c %p %u %g %t e %P %I %h&amp;quot; (or dumping to /webbug/core.4047)&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /webbug/hs_err_pid4047.log&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
Aborted (core dumped)&lt;br/&gt;
&lt;br/&gt;
# ./fastdebug/bin/java -showversion Test (no Crash)&lt;br/&gt;
java version &amp;quot;17.0.11-ea&amp;quot; 2024-04-16 LTS&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 17.0.11-ea+2-LTS-178)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 17.0.11-ea+2-LTS-178, mixed mode, sharing)&lt;br/&gt;
# &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
# ./fastdebug/bin/java -showversion -XX:SuppressErrorAt=/objectMonitor.cpp:1171 Test (No crash)&lt;br/&gt;
java version &amp;quot;17.0.11-ea&amp;quot; 2024-04-16 LTS&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 17.0.11-ea+2-LTS-178)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 17.0.11-ea+2-LTS-178, mixed mode, sharing)&lt;br/&gt;
# ./fastdebug/bin/java -showversion -XX:SuppressErrorAt=/objectMonitor.cpp:1171 Test&lt;br/&gt;
java version &amp;quot;17.0.11-ea&amp;quot; 2024-04-16 LTS&lt;br/&gt;
Java(TM) SE Runtime Environment (fastdebug build 17.0.11-ea+2-LTS-178)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (fastdebug build 17.0.11-ea+2-LTS-178, mixed mode, sharing)&lt;br/&gt;
# &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Need to confirm if there is a too restrictive assertion ?&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5131637">JDK-8334071</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5131786">JDK-8334209</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5075178">JDK-8286957</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5132042">JDK-8334421</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108133" name="TestNestedLocksElimination.java" size="2253" author="kvn" created="Fri, 2 Feb 2024 16:25:29 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i34r6b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17349"><![CDATA[b12]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>