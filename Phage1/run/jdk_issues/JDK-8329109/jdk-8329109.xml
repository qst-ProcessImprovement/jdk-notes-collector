<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 12:15:34 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8329109] Threads::print_on() tries to print CPU time for terminated GC threads</title>
                <link>https://bugs.openjdk.org/browse/JDK-8329109</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>In Threads::print_on() PrintOnClosure is applied to the GC threads:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/da8a095a19c90e7ee2b45fab9b533a1092887023/src/hotspot/share/runtime/threads.cpp#L1340&quot;&gt;https://github.com/openjdk/jdk/blob/da8a095a19c90e7ee2b45fab9b533a1092887023/src/hotspot/share/runtime/threads.cpp#L1340&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
This is problematic if the GC thread has terminated because Thread::print_on() attempts to retrieve and print the CPU time. This can crash if the thread has terminated.&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007fd987694580, pid=32024, tid=32074&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment SapMachine (17.0.10+7) (build 17.0.10+7-LTS)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM SapMachine (17.0.10+7-LTS, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# C  [libpthread.so.0+0xf580]  pthread_getcpuclockid+0x0&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/opt/dynatrace/oneagent/agent/rdp -p %p -P %P -c %c -e %e -s %s&amp;quot; (or dumping to /app/tomcat_trunk.20240320003323/core.32024)&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://github.com/SAP/SapMachine/issues/new&quot;&gt;https://github.com/SAP/SapMachine/issues/new&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
Current thread (0x00007fd98277b6a0):  VMThread &amp;quot;VM Thread&amp;quot; [stack: 0x00007fd948a9a000,0x00007fd948b9a000] [id=32074]&lt;br/&gt;
Stack: [0x00007fd948a9a000,0x00007fd948b9a000],  sp=0x00007fd948b98778,  free space=1017k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
C  [libpthread.so.0+0xf580]  pthread_getcpuclockid+0x0&lt;br/&gt;
V  [libjvm.so+0xe65d05]  Thread::print_on(outputStream*, bool) const+0x45&lt;br/&gt;
V  [libjvm.so+0xbf79f7]  NamedThread::print_on(outputStream*) const+0x57&lt;br/&gt;
V  [libjvm.so+0xe6e7d1]  PrintOnClosure::do_thread(Thread*)+0x21&lt;br/&gt;
V  [libjvm.so+0x6ebf96]  G1CollectedHeap::gc_threads_do(ThreadClosure*) const+0x26&lt;br/&gt;
V  [libjvm.so+0xe6a6e9]  Threads::print_on(outputStream*, bool, bool, bool, bool)+0x469&lt;br/&gt;
V  [libjvm.so+0xefa60c]  VM_Operation::evaluate()+0xec&lt;br/&gt;
V  [libjvm.so+0xefbee8]  VMThread::evaluate_operation(VM_Operation*)+0xb8&lt;br/&gt;
V  [libjvm.so+0xefc3d4]  VMThread::inner_execute(VM_Operation*)+0x1d4&lt;br/&gt;
V  [libjvm.so+0xefc6bf]  VMThread::run()+0xbf&lt;br/&gt;
V  [libjvm.so+0xe6b6c8]  Thread::call_run()+0xa8&lt;br/&gt;
V  [libjvm.so+0xc29461]  thread_native_entry(Thread*)+0xe1&lt;br/&gt;
&lt;br/&gt;
Other Threads:&lt;br/&gt;
=&amp;gt;0x00007fd98277b6a0 VMThread &amp;quot;VM Thread&amp;quot; [stack: 0x00007fd948a9a000,0x00007fd948b9a000] [id=32074]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd85851c390 Thread &amp;quot;vitals sampler thread&amp;quot; [stack: 0x00007fd8ccc27000,0x00007fd8ccd27000] [id=32740]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd9816c48f0 GCTaskThread &amp;quot;GC Thread#0&amp;quot; [stack: 0x00007fd9490a0000,0x00007fd9491a0000] [id=32067]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd958005840 GCTaskThread &amp;quot;GC Thread#1&amp;quot; [stack: 0x00007fd94809a000,0x00007fd94819a000] [id=32120]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd958005ed0 GCTaskThread &amp;quot;GC Thread#2&amp;quot; [stack: 0x00007fd8cda3c000,0x00007fd8cdb3c000] [id=32121]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd9580066e0 GCTaskThread &amp;quot;GC Thread#3&amp;quot; [stack: 0x00007fd8cd93b000,0x00007fd8cda3b000] [id=32122]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd958006fe0 GCTaskThread &amp;quot;GC Thread#4&amp;quot; [stack: 0x00007fd8cd83a000,0x00007fd8cd93a000] [id=32123]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd9580078e0 GCTaskThread &amp;quot;GC Thread#5&amp;quot; [stack: 0x00007fd8cd739000,0x00007fd8cd839000] [id=32124]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd9580083a0 GCTaskThread &amp;quot;GC Thread#6&amp;quot; [stack: 0x00007fd8cd638000,0x00007fd8cd738000] [id=32125]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd958008e60 GCTaskThread &amp;quot;GC Thread#7&amp;quot; [stack: 0x00007fd8cd537000,0x00007fd8cd637000] [id=32126]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd9816cbc00 ConcurrentGCThread &amp;quot;G1 Main Marker&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd9816ccbb0 ConcurrentGCThread &amp;quot;G1 Conc#0&amp;quot; [stack: 0x00007fd948e9e000,0x00007fd948f9e000] [id=32069]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd982535c50 ConcurrentGCThread &amp;quot;G1 Refine#0&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd8b8001a10 ConcurrentGCThread &amp;quot;G1 Refine#1&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd820002850 ConcurrentGCThread &amp;quot;G1 Refine#2&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd81c000f40 ConcurrentGCThread &amp;quot;G1 Refine#3&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd8a4008a00 ConcurrentGCThread &amp;quot;G1 Refine#4&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd8b0021ee0 ConcurrentGCThread &amp;quot;G1 Refine#5&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd8ac4f4ad0 ConcurrentGCThread &amp;quot;G1 Refine#6&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd8bc001670 ConcurrentGCThread &amp;quot;G1 Refine#7&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd982536b90 ConcurrentGCThread &amp;quot;G1 Service&amp;quot; terminated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;0x00007fd98276b8e0 ConcurrentGCThread &amp;quot;StringDedupProcessor&amp;quot; terminated&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5125297">JDK-8329109</key>
            <summary>Threads::print_on() tries to print CPU time for terminated GC threads</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rrich">Richard Reingruber</assignee>
                                    <reporter username="rrich">Richard Reingruber</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-SQE-ok</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>threads</label>
                    </labels>
                <created>Tue, 26 Mar 2024 08:53:31 -0700</created>
                <updated>Fri, 24 Jan 2025 00:44:11 -0800</updated>
                            <resolved>Thu, 4 Apr 2024 23:28:10 -0700</resolved>
                                    <version>17</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                <comments>
                            <comment id="14688256" author="mbaesken" created="Tue, 9 Jul 2024 04:46:06 -0700"  >jdk17u-dev backport request&lt;br/&gt;
I would like to have the fix in jdk17u-dev as well, because the issue (potential crash) is present there too.  The backport is not fully clean but fits in well and is low risk.</comment>
                            <comment id="14688230" author="roboduke" created="Tue, 9 Jul 2024 03:35:53 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2698&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2698&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-09 10:29:44 +0000</comment>
                            <comment id="14674384" author="roboduke" created="Sun, 19 May 2024 19:51:42 -0700"  >[jdk22u-fix-request] Approval Request from Liang Mao&lt;br/&gt;
Clean backport of fixing crash on Threads::print_on() . Risk is very low.</comment>
                            <comment id="14674380" author="roboduke" created="Sun, 19 May 2024 19:46:35 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/215&quot;&gt;https://git.openjdk.org/jdk22u/pull/215&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-20 02:42:16 +0000</comment>
                            <comment id="14674154" author="roboduke" created="Fri, 17 May 2024 02:11:10 -0700"  >[jdk21u-fix-request] Approval Request from Liang Mao&lt;br/&gt;
Clean backport of fixing crash on Threads::print_on() . Risk is very low.</comment>
                            <comment id="14674153" author="roboduke" created="Fri, 17 May 2024 02:11:08 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/585&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/585&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-17 09:05:54 +0000</comment>
                            <comment id="14663066" author="dukebot" created="Thu, 4 Apr 2024 23:28:09 -0700"  >Changeset: c1cfb43d&lt;br/&gt;
Author:    Richard Reingruber &amp;lt;&lt;a href=&apos;mailto:rrich@openjdk.org&apos;&gt;rrich@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-05 06:27:08 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/c1cfb43d8de8d0eed01b9bb6aa1202dc7cbff007&quot;&gt;https://git.openjdk.org/jdk/commit/c1cfb43d8de8d0eed01b9bb6aa1202dc7cbff007&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14661172" author="roboduke" created="Thu, 28 Mar 2024 00:39:36 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18518&quot;&gt;https://git.openjdk.org/jdk/pull/18518&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-27 16:09:46 +0000</comment>
                            <comment id="14661171" author="rrich" created="Thu, 28 Mar 2024 00:35:53 -0700"  >&amp;gt; I don&amp;#39;t think locked_or_safepoint works because GC threads run concurrently with safepoints and so may still terminate. &lt;br/&gt;
&lt;br/&gt;
That&amp;#39;s clear. I didn&amp;#39;t assume that the safepoint synchronizes with GC threads.&lt;br/&gt;
It is the NonJavaThread list and its iterators. Non-java threads wait for in progress iterations when about to terminate [1].&lt;br/&gt;
&lt;br/&gt;
Let&amp;#39;s use the PR for discussions of the proposed fix.&lt;br/&gt;
&lt;br/&gt;
[1] NonJavaThread::remove_from_the_list()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/openjdk/jdk/blob/47f33a59eaaffc74881fcc9e29d13ff9b2538c2a/src/hotspot/share/runtime/nonJavaThread.cpp#L97-L102&quot;&gt;https://github.com/openjdk/jdk/blob/47f33a59eaaffc74881fcc9e29d13ff9b2538c2a/src/hotspot/share/runtime/nonJavaThread.cpp#L97-L102&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14661133" author="dholmes" created="Wed, 27 Mar 2024 19:46:44 -0700"  >I would have expected the solution to &amp;quot;simply&amp;quot; be that in:&lt;br/&gt;
&lt;br/&gt;
void G1CollectedHeap::gc_threads_do(ThreadClosure* tc) const {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;workers()-&amp;gt;threads_do(tc);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;tc-&amp;gt;do_thread(_cm_thread);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_cm-&amp;gt;threads_do(tc);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;_cr-&amp;gt;threads_do(tc);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;tc-&amp;gt;do_thread(_service_thread);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
which ever `threads_do` involves a potentially terminating thread would have some kind of guard to prevent that e.g. acquiring Threads_lock. I don&amp;#39;t think locked_or_safepoint works because GC threads run concurrently with safepoints and so may still terminate.&lt;br/&gt;
&lt;br/&gt;
Of course other GCs may have the same issue.</comment>
                            <comment id="14661030" author="dcubed" created="Wed, 27 Mar 2024 10:03:55 -0700"  >This RFE is relevant to this bug:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8202090&quot; title=&quot;evolve ThreadList to protect non-JavaThreads in addition to JavaThreads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8202090&quot;&gt;&lt;strike&gt;JDK-8202090&lt;/strike&gt;&lt;/a&gt; evolve ThreadList to protect non-JavaThreads in addition to JavaThreads</comment>
                            <comment id="14661010" author="rrich" created="Wed, 27 Mar 2024 09:12:28 -0700"  >Would it be ok to delegate to Threads::threads_do() if at a safepoint? Terminated threads wouldn&amp;#39;t be printed then (thread list iterators prevent this). Draft: &lt;a href=&quot;https://github.com/openjdk/jdk/pull/18518&quot;&gt;https://github.com/openjdk/jdk/pull/18518&lt;/a&gt;</comment>
                            <comment id="14660667" author="dholmes" created="Tue, 26 Mar 2024 14:46:19 -0700"  >I&amp;#39;m not familiar with the details of GC thread lifecycle (I didn&amp;#39;t think they terminated), but it seems G1CollectedHeap::gc_threads_do needs to make allowances for this.</comment>
                            <comment id="14660602" author="mseledtsov" created="Tue, 26 Mar 2024 11:06:41 -0700"  >RT Triage: transferring this to GC because GC threads are involved in the crash</comment>
                            <comment id="14660556" author="rrich" created="Tue, 26 Mar 2024 09:19:44 -0700"  >Could we retrieve the CPU time iff we find the thread with a NonJavaThread::Iterator?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5130142">JDK-8332787</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5130148">JDK-8332793</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5133890">JDK-8336079</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5142359">JDK-8342955</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="4966616">JDK-8206954</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4965221">JDK-8205878</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5036975">JDK-8258027</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4958646">JDK-8202090</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35muz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>