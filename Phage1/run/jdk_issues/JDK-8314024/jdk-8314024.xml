<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:50:17 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8314024] SIGSEGV in PhaseIdealLoop::build_loop_late_post_work due to bad immediate dominator info</title>
                <link>https://bugs.openjdk.org/browse/JDK-8314024</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
OS X + Linux&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
JitRex creates bytecode in a pre-stackmaps manner. In some cases, this bytecode can crash the JVM. &lt;br/&gt;
&lt;br/&gt;
Example provided later in this form.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Adjust the path to Java in repro.sh to point to 17.0.8 (and possibly others as well).&lt;br/&gt;
Run ./repro.sh&lt;br/&gt;
JVM will crash - #  SIGSEGV (0xb) at pc=0x00000001064e5c10, pid=96307, tid=25347&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
JVM should not crash, and executes the bytecode to perform regex matching.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
JVM crashes: &lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00000001064e5c10, pid=96307, tid=25347&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
Requires jitrex 0.1.20.jar &lt;br/&gt;
I&amp;#39;ve also uploaded the .tgz file here: &lt;a href=&quot;https://filetransfer.io/data-package/rM9xhQMu#link&quot;&gt;https://filetransfer.io/data-package/rM9xhQMu#link&lt;/a&gt;&lt;br/&gt;
It should contain 3 files&lt;br/&gt;
* jitrex&lt;br/&gt;
* repro.sh&lt;br/&gt;
* ReproSimple.java&lt;br/&gt;
&lt;br/&gt;
--------- .sh file --------&lt;br/&gt;
#!/bin/bash&lt;br/&gt;
&lt;br/&gt;
set -e&lt;br/&gt;
&lt;br/&gt;
LIBS=jitrex-0.1.20.jar&lt;br/&gt;
&lt;br/&gt;
# ADJUST THIS:&lt;br/&gt;
JAVA_BIN=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/bin&lt;br/&gt;
&lt;br/&gt;
JAVA_FLAGS=&amp;quot;-Xms2G -Xmx4G -Xss1M -Xlog:jit*=debug:file=./jit_humio.log:time,tags:filecount=5,filesize=1024000&amp;quot;&lt;br/&gt;
&lt;br/&gt;
javac -classpath ${LIBS} ReproSimple.java&lt;br/&gt;
${JAVA_BIN}/java  -classpath .:${LIBS} ${JAVA_FLAGS} ReproSimple&lt;br/&gt;
&lt;br/&gt;
------ Java File --------&lt;br/&gt;
&lt;br/&gt;
import com.humio.jitrex.*;&lt;br/&gt;
&lt;br/&gt;
import java.nio.ByteBuffer;&lt;br/&gt;
import java.nio.charset.StandardCharsets;&lt;br/&gt;
&lt;br/&gt;
public class ReproSimple {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final static String regexPattern = &amp;quot;(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}),(\\S+),(\\S+),(\\S+),(\\S+),(\\S+),(\\S+),(\\S+),(\\S+),(\\S+),(\\S+),(.*)&amp;quot;;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws InterruptedException {&lt;br/&gt;
	System.out.println(&amp;quot;Starting&amp;quot;);&lt;br/&gt;
	work();&lt;br/&gt;
	System.out.println(&amp;quot;Ended&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static void work() {&lt;br/&gt;
	String[] haystack = new String[] {&lt;br/&gt;
	    &amp;quot;2023-10-01 01:23:46,warn,maccle,Something happened.&amp;quot;,&lt;br/&gt;
	    &amp;quot;&amp;quot;,&lt;br/&gt;
	    &amp;quot;0&amp;quot;.repeat(50)&lt;br/&gt;
	};&lt;br/&gt;
&lt;br/&gt;
	long sum = 0;&lt;br/&gt;
	for (int iter=1; iter&amp;lt;=100; iter++) {&lt;br/&gt;
	    System.out.print(&amp;quot;(&amp;quot;+iter+&amp;quot;)&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
	    Pattern p = Pattern.compile(regexPattern, 0);&lt;br/&gt;
	    Matcher m = p.matcher(&amp;quot;&amp;quot;);&lt;br/&gt;
	    &lt;br/&gt;
	    for (int k=0; k&amp;lt;haystack.length; k++) {&lt;br/&gt;
		for (int i=0; i &amp;lt; 1 * 1000 ; i++) {&lt;br/&gt;
		    m.reset(CharSeq.fromString(haystack[k]));&lt;br/&gt;
		    if (m.find()) {&lt;br/&gt;
			sum += m.start() + m.end();&lt;br/&gt;
		    }&lt;br/&gt;
		}&lt;br/&gt;
	    }&lt;br/&gt;
	}&lt;br/&gt;
	if (sum&amp;lt;0) System.out.println(sum);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static class CharSeq implements CharSequence {&lt;br/&gt;
	ByteBuffer buf;&lt;br/&gt;
	int start, end;&lt;br/&gt;
&lt;br/&gt;
	public static CharSeq fromString(String s) {&lt;br/&gt;
	    CharSeq r = new CharSeq();&lt;br/&gt;
	    r.buf = ByteBuffer.wrap(s.getBytes(StandardCharsets.ISO_8859_1));&lt;br/&gt;
	    r.start = 0;&lt;br/&gt;
	    r.end = r.buf.limit();&lt;br/&gt;
	    return r;&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
	public int length() { return end - start; }&lt;br/&gt;
&lt;br/&gt;
	public char charAt(int index) {&lt;br/&gt;
	    if (index &amp;lt; 0 || start + index &amp;gt;= end) throw new IndexOutOfBoundsException(&amp;quot;&amp;quot; + index);&lt;br/&gt;
	    return (char)(buf.get(start + index) &amp;amp; 0xFF);&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
	public CharSequence subSequence(int start, int end) {&lt;br/&gt;
	    throw new UnsupportedOperationException();&lt;br/&gt;
	}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5107545">JDK-8314024</key>
            <summary>SIGSEGV in PhaseIdealLoop::build_loop_late_post_work due to bad immediate dominator info</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>azul-interest</label>
                            <label>c2</label>
                            <label>dcsswa</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-22</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 7 Aug 2023 01:57:49 -0700</created>
                <updated>Wed, 16 Oct 2024 04:43:26 -0700</updated>
                            <resolved>Wed, 30 Aug 2023 00:54:11 -0700</resolved>
                                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14608295" author="roboduke" created="Fri, 1 Sep 2023 02:01:00 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/124&quot;&gt;https://git.openjdk.org/jdk21u/pull/124&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-01 08:53:11 +0000</comment>
                            <comment id="14608258" author="JIRAUSER20522" created="Thu, 31 Aug 2023 23:54:01 -0700"  >Fix request (17u, 21u):&lt;br/&gt;
The fix should be backported, because the issue is reproducible in both jdk17 and jdk21 by test/hotspot/jtreg/compiler/loopopts/TestNodeSunkFromPreLoop.java without the fix.&lt;br/&gt;
Clean backport, no tier1 regressions, all GHA test passed.</comment>
                            <comment id="14608061" author="roboduke" created="Thu, 31 Aug 2023 07:20:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1714&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1714&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-31 14:13:35 +0000</comment>
                            <comment id="14607562" author="dukebot" created="Wed, 30 Aug 2023 00:54:08 -0700"  >Changeset: ed1ea5fe&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-30 07:52:05 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ed1ea5fe7c6fad03ca96e7dece2127eab21a608a&quot;&gt;https://git.openjdk.org/jdk/commit/ed1ea5fe7c6fad03ca96e7dece2127eab21a608a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14606067" author="roboduke" created="Wed, 23 Aug 2023 02:26:57 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15399&quot;&gt;https://git.openjdk.org/jdk/pull/15399&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-23 09:15:38 +0000</comment>
                            <comment id="14602956" author="thartmann" created="Wed, 9 Aug 2023 06:22:57 -0700"  >Roland, could you please have a look?</comment>
                            <comment id="14602949" author="thartmann" created="Wed, 9 Aug 2023 05:59:51 -0700"  >I can reproduce this only with release builds and I think that&amp;#39;s just due to different timing. I narrowed it down to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8280799&quot; title=&quot;&#1057;2: assert(false) failed: cyclic dependency prevents range check elimination&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8280799&quot;&gt;&lt;strike&gt;JDK-8280799&lt;/strike&gt;&lt;/a&gt; in JDK 19. The fix was backported to 11u and 17u.&lt;br/&gt;
&lt;br/&gt;
The problem is that &amp;#39;n&amp;#39; is NULL in &amp;#39;idom_no_update&amp;#39;. In fastdebug, we would hit the &amp;quot;Bad immediate dominator info.&amp;quot; assert. I verified this by enabling it in product:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (loopnode.hpp:1140), pid=292462, tid=292476&lt;br/&gt;
#  guarantee(n != nullptr) failed: Bad immediate dominator info.&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (22.0) (build 22-internal-2023-08-09-1155514.tobias...)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (22-internal-2023-08-09-1155514.tobias..., mixed mode, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0xb95489]  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)+0x7c9&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:    395   57 %           com.humio.jitrex.jvm.R_tmp_102_424e046f_2__28_5cd_7b4_7d_2d_5cd_7b2_7d_2d_5cd_7b2_7d_20_5cd_7b2_7d_3a_5cd_7b2_2e_2e_2e::nextMatchInt @ 64 (3539 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f52eb93b000,0x00007f52eba3c000],  sp=0x00007f52eba37550,  free space=1009k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0xb95489]  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)+0x7c9  (loopnode.hpp:1140)&lt;br/&gt;
V  [libjvm.so+0xb95620]  PhaseIdealLoop::build_loop_late(VectorSet&amp;amp;, Node_List&amp;amp;, Node_Stack&amp;amp;)+0x170  (loopnode.cpp:6007)&lt;br/&gt;
V  [libjvm.so+0xb95f30]  PhaseIdealLoop::build_and_optimize()+0x750  (loopnode.cpp:4468)&lt;br/&gt;
V  [libjvm.so+0x643cc9]  Compile::Optimize()+0xc39  (loopnode.hpp:1114)&lt;br/&gt;
V  [libjvm.so+0x6456c2]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0xed2  (compile.cpp:850)&lt;br/&gt;
V  [libjvm.so+0x574079]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x159  (c2compiler.cpp:119)&lt;br/&gt;
V  [libjvm.so+0x64b2fe]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xa9e  (compileBroker.cpp:2276)&lt;br/&gt;
V  [libjvm.so+0x64e558]  CompileBroker::compiler_thread_loop()+0x698  (compileBroker.cpp:1944)&lt;br/&gt;
V  [libjvm.so+0x8f8038]  JavaThread::thread_main_inner() [clone .part.0]+0xb8  (javaThread.cpp:720)&lt;br/&gt;
V  [libjvm.so+0xe9aa18]  Thread::call_run()+0xa8  (thread.cpp:217)&lt;br/&gt;
V  [libjvm.so+0xcbfaaa]  thread_native_entry(Thread*)+0xda  (os_linux.cpp:783)&lt;br/&gt;
&lt;br/&gt;
Might be similar to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8268261&quot; title=&quot;C2: assert(n != __null) failed: Bad immediate dominator info.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8268261&quot;&gt;&lt;strike&gt;JDK-8268261&lt;/strike&gt;&lt;/a&gt;, &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8262017&quot; title=&quot;C2: assert(n != __null) failed: Bad immediate dominator info.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8262017&quot;&gt;&lt;strike&gt;JDK-8262017&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
ILW = Crash during C2 compilation, reproducible with framework that generates bytecode, no workaround but disable compilation of affected method(s) = HMM = P2</comment>
                            <comment id="14602904" author="sswsharm" created="Wed, 9 Aug 2023 03:31:09 -0700"  >Issue is reproduced.&lt;br/&gt;
Crash is observed.&lt;br/&gt;
&lt;br/&gt;
OS: MacOS (x64)&lt;br/&gt;
JDK 17.0.8: Fail&lt;br/&gt;
JDK 20.0.2: Fail&lt;br/&gt;
JDK 21 ea:Fail&lt;br/&gt;
JDK 22 ea: Fail&lt;br/&gt;
&lt;br/&gt;
ILW = issue in GA build, reproducible with single test , no workaround available =  MLM = P4&lt;br/&gt;
&lt;br/&gt;
Moving it to dev team for further analysis</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5109838">JDK-8315861</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5109592">JDK-8315643</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5110465">JDK-8316404</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5067227">JDK-8280799</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5109907">JDK-8315920</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5141635">JDK-8342330</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="105057" name="hs_err_pid69614.log" size="196541" author="sswsharm" created="Wed, 9 Aug 2023 03:08:00 -0700"/>
                            <attachment id="105058" name="replay_pid69614.log" size="181118" author="sswsharm" created="Wed, 9 Aug 2023 03:08:07 -0700"/>
                            <attachment id="105056" name="repro.tgz" size="226129" author="sswsharm" created="Wed, 9 Aug 2023 03:07:47 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32ndn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17339"><![CDATA[b13]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>