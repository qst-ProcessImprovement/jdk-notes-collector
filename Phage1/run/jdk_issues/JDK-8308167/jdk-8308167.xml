<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:00:29 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8308167] SequencedMap::firstEntry throws NPE when first entry has null key or value</title>
                <link>https://bugs.openjdk.org/browse/JDK-8308167</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Observed that SequencedMap:firstEntry() throws NullPointerEx when the map entry has null key or null value.&lt;br/&gt;
&lt;br/&gt;
Example  : the following code snippet throws NPEx.&lt;br/&gt;
======== ( When key is null ) &lt;br/&gt;
SequencedMap&amp;lt;String, String&amp;gt; sequencedMap = new LinkedHashMap&amp;lt;&amp;gt;();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sequencedMap.put(null, &amp;quot;v1&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sequencedMap.firstEntry();&lt;br/&gt;
&lt;br/&gt;
======== (When value is null )&lt;br/&gt;
SequencedMap&amp;lt;String, String&amp;gt; sequencedMap = new LinkedHashMap&amp;lt;&amp;gt;();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sequencedMap.put(&amp;quot;k&amp;quot;, null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sequencedMap.firstEntry();&lt;br/&gt;
&lt;br/&gt;
=====&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5101004">JDK-8308167</key>
            <summary>SequencedMap::firstEntry throws NPE when first entry has null key or value</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="smarks">Stuart Marks</assignee>
                                    <reporter username="kganapureddy">Krushnareddy Ganapureddy</reporter>
                        <labels>
                            <label>conformance</label>
                            <label>tck-red-21</label>
                    </labels>
                <created>Tue, 16 May 2023 01:21:54 -0700</created>
                <updated>Tue, 18 Jul 2023 08:18:08 -0700</updated>
                            <resolved>Mon, 5 Jun 2023 17:21:52 -0700</resolved>
                                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14587201" author="dukebot" created="Mon, 5 Jun 2023 17:21:51 -0700"  >Changeset: 6d155a47&lt;br/&gt;
Author:    Stuart Marks &amp;lt;&lt;a href=&apos;mailto:smarks@openjdk.org&apos;&gt;smarks@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-06-06 00:19:50 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6d155a47f13ff80cf7a9de363fc5ae2943b6603a&quot;&gt;https://git.openjdk.org/jdk/commit/6d155a47f13ff80cf7a9de363fc5ae2943b6603a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14586523" author="roboduke" created="Thu, 1 Jun 2023 23:40:35 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/14278&quot;&gt;https://git.openjdk.org/jdk/pull/14278&lt;/a&gt;&lt;br/&gt;
Date: 2023-06-02 01:12:32 +0000</comment>
                            <comment id="14586490" author="smarks" created="Thu, 1 Jun 2023 18:06:35 -0700"  >The same NPE pathology occurs with firstEntry(), lastEntry(), pollFirstEntry(), and pollLastEntry(). Added tests for those methods when a key or value is null.&lt;br/&gt;
&lt;br/&gt;
Briefly, these methods need to create new Map.Entry instances that are disconnected from the underlying Map. The existing code used the Map.entry() API (which returns a KeyValueHolder) but that&amp;#39;s wrong, since it disallows nulls. Retrofitting KeyValueHolder to allow nulls is complicated. AbstractMap.SimpleImmutableEntry is the obvious alternative but it&amp;#39;s serializable, and I wanted to avoid increasing the serialization footprint of the platform.&lt;br/&gt;
&lt;br/&gt;
Instead, I created a new internal class NullableKeyValueHolder as a Map.Entry implementation that accommodates nullable keys and values. See comments in the new class for additional rationale. This could probably be merged with KeyValueHolder at some point, but modifying the specifications would make this easier.&lt;br/&gt;
&lt;br/&gt;
src/java.base/share/classes/jdk/internal/util/NullableKeyValueHolder.java&lt;br/&gt;
</comment>
                            <comment id="14581994" author="smarks" created="Tue, 16 May 2023 11:25:55 -0700"  >Various default methods in SequencedMap use Map.Entry.copyOf, which internally uses KeyValueHolder. However, that class rejects nulls for key and value. Retrofitting it to allow nulls (even internally) is a bit problematic because it spoils the @Stable annotations on the fields, which require a non-null initialization to be effective. An alternative is to use AbstractMap.SimpleImmutableEntry. However, that&amp;#39;s serializable! As annoying as it seems, it may be necessary to have a third class, similar to KeyValueHolder, which doesn&amp;#39;t have stable fields (but which might be value-based) and which isn&amp;#39;t serializable. In addition, its equals() and hashCode() methods would need to be null-safe.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5067281">JDK-8280836</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31jb7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17357"><![CDATA[b26]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="669"><![CDATA[java.util:collections]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>