<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:33:20 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8303861] Error handling step timeouts should never be blocked by OnError and others</title>
                <link>https://bugs.openjdk.org/browse/JDK-8303861</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Fatal error handling is subject to several timeouts:&lt;br/&gt;
- a global timeout (controlled via ErrorLogTimeout)&lt;br/&gt;
- local error reporting step timeouts.&lt;br/&gt;
&lt;br/&gt;
The latter aims to &amp;quot;give the JVM a kick&amp;quot; if it gets stuck in one particular place during error reporting. This prevents one error reporting step from hogging all the time allotted to error reporting under ErrorLogTimeout.&lt;br/&gt;
&lt;br/&gt;
There are three situations where atm we suppress the global error timeout:&lt;br/&gt;
- if the JVM is embedded and the launcher has its abort hook installed. Obviously, that must be allowed to run.&lt;br/&gt;
- if the user specified one or more OnError commands to run, and these did not yet run. These must have a chance to run unmolested.&lt;br/&gt;
- if the user (typically developer) specified ShowMessageBoxOnError, and the error box has not yet been shown&lt;br/&gt;
&lt;br/&gt;
There is a bug though, that also prevents the step timeout from firing if either condition is true. That is plain wrong.&lt;br/&gt;
&lt;br/&gt;
In addition to that, the test interval WatcherThread uses to check for timeouts should be decreased. It sits at 1 second, which is too coarse-grained.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5095829">JDK-8303861</key>
            <summary>Error handling step timeouts should never be blocked by OnError and others</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stuefe">Thomas Stuefe</assignee>
                                    <reporter username="stuefe">Thomas Stuefe</reporter>
                        <labels>
                            <label>azul-interest</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>redhat-interest</label>
                    </labels>
                <created>Wed, 8 Mar 2023 21:30:01 -0800</created>
                <updated>Sun, 11 Jun 2023 21:41:18 -0700</updated>
                            <resolved>Tue, 14 Mar 2023 08:52:41 -0700</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14581210" author="mbaesken" created="Fri, 12 May 2023 06:18:16 -0700"  >Seems there is a fix now for 11u-dev  TimeoutInErrorHandlingTest.java : &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8307811&quot;&gt;https://bugs.openjdk.org/browse/JDK-8307811&lt;/a&gt;</comment>
                            <comment id="14581206" author="mbaesken" created="Fri, 12 May 2023 06:14:34 -0700"  >Looks like 11u-dev backport misses the  &amp;quot;public static final int ERROR_LOG_TIMEOUT = 16;&amp;quot;&lt;br/&gt;
from jdk17u-dev  version of TimeoutInErrorHandlingTest.java :  &lt;a href=&quot;https://github.com/openjdk/jdk17u-dev/pull/1211/files&quot;&gt;https://github.com/openjdk/jdk17u-dev/pull/1211/files&lt;/a&gt;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;[~apavlyutkin]  , [~phh]  please file a new issue , add the variable  or just use &amp;quot;-XX:ErrorLogTimeout=16&amp;quot; in the test coding .</comment>
                            <comment id="14580406" author="goetz" created="Tue, 9 May 2023 23:17:40 -0700"  >[11u]&lt;br/&gt;
[~apavlyutkin] are you sure you ran the test? I see compile errors in our CI tonight:&lt;br/&gt;
test/hotspot/jtreg/runtime/ErrorHandling/TimeoutInErrorHandlingTest.java:99: error: cannot find symbol&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;-XX:ErrorLogTimeout=&amp;quot; + ERROR_LOG_TIMEOUT,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;br/&gt;
&amp;nbsp;&amp;nbsp;symbol:   variable ERROR_LOG_TIMEOUT&lt;br/&gt;
&amp;nbsp;&amp;nbsp;location: class TimeoutInErrorHandlingTest&lt;br/&gt;
1 error&lt;br/&gt;
result: Failed. Compilation failed: Compilation failed</comment>
                            <comment id="14579595" author="JIRAUSER19830" created="Sat, 6 May 2023 23:15:18 -0700"  >Fix request (11u)&lt;br/&gt;
&lt;br/&gt;
The patch fixes error reporting timeout processing for the case when a user specifies OnError hook. Before the patch in this case JVM just ignored timeout and therefore WatcherThread could not break malloc() deadlock in error reporting routine.&lt;br/&gt;
&lt;br/&gt;
The only change compared with 17 concerns on void WatcherThread::run() function that lives in thread.cpp for 11 but in nonJavaThread.cpp for 17&lt;br/&gt;
&lt;br/&gt;
Verification/regression (amd64/LTS20.04): test/hotspot/jtreg/runtime/ErrorHandling (includes updated test)</comment>
                            <comment id="14579337" author="roboduke" created="Fri, 5 May 2023 03:35:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/1856&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/1856&lt;/a&gt;&lt;br/&gt;
Date: 2023-05-05 10:24:07 +0000</comment>
                            <comment id="14568731" author="JIRAUSER19830" created="Wed, 22 Mar 2023 02:53:10 -0700"  >Fix request (17u)&lt;br/&gt;
&lt;br/&gt;
The patch fixes error reporting timeout processing for the case when a user specifies OnError hook. Before the patch in this case JVM just ignored timeout and therefore WatcherThread could not break malloc() deadlock in error reporting routine.&lt;br/&gt;
&lt;br/&gt;
If fact original patch applied without a scratch but there is a little conflict in the baselines, so the backport is not clean.&lt;br/&gt;
&lt;br/&gt;
Verification/regression (amd64/LTS20.04): test/hotspot/jtreg/runtime/ErrorHandling (includes updated test)</comment>
                            <comment id="14568468" author="roboduke" created="Tue, 21 Mar 2023 03:03:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1211&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1211&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-21 09:53:49 +0000</comment>
                            <comment id="14567719" author="stuefe" created="Fri, 17 Mar 2023 03:19:56 -0700"  >[~apavlyutkin] You were expecting, in your example, the OnError script to be interrupted? If so, that should not happen. This patch did not change the desired behavior that OnError scripts should run uninterrupted. This patch just makes sure that if we hang during hs-err file writing, we will not hang forever. We may still hang outside of hs-err file writing (though that is pretty rare) and we may hang in the OnError script. The former should be fixed separately, the latter works, for now, as intended. </comment>
                            <comment id="14567651" author="JIRAUSER19830" created="Thu, 16 Mar 2023 20:22:16 -0700"  >The customer tested the changes over zulu11 and found they work pretty well, so I&amp;#39;m going to backport the changes to 17 and 11. Thank you&lt;br/&gt;
&lt;br/&gt;
Update: intriguing, my backport on zulu11 works fine, but original patch and backport to 17 does not, I use &lt;br/&gt;
&lt;br/&gt;
./build/linux-x86_64-server-release/images/jdk/bin/java -XX:ErrorLogTimeout=5 -XX:OnError=&amp;#39;sleep 1;sleep 10;sleep 60&amp;#39; ./C.java&lt;br/&gt;
&lt;br/&gt;
and it does not break OnError script. It seems there is not active step in 17+. END() macro in 11 does nothing so _step_start_time stays non-zero, but in 17 END clears the time. Looks like we have additionally enclose onError processing with STEP/END macro</comment>
                            <comment id="14566799" author="dukebot" created="Tue, 14 Mar 2023 08:52:39 -0700"  >Changeset: a00f5d24&lt;br/&gt;
Author:    Thomas Stuefe &amp;lt;&lt;a href=&apos;mailto:stuefe@openjdk.org&apos;&gt;stuefe@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-14 15:51:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a00f5d24d3824e3ab84208401a967efe0e7bf88e&quot;&gt;https://git.openjdk.org/jdk/commit/a00f5d24d3824e3ab84208401a967efe0e7bf88e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14565451" author="roboduke" created="Wed, 8 Mar 2023 22:22:36 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/12936&quot;&gt;https://git.openjdk.org/jdk/pull/12936&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-09 06:12:02 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5100098">JDK-8307430</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5100491">JDK-8307762</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5102620">JDK-8309559</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5102622">JDK-8309561</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5093664">JDK-8302073</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5100580">JDK-8307811</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5095830">JDK-8303862</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4902454">JDK-8166944</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5093664">JDK-8302073</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30o3f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>