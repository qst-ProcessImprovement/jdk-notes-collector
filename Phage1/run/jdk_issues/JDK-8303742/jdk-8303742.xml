<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 17:30:41 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8303742] CompletableFuture.orTimeout leaks if the future completes exceptionally</title>
                <link>https://bugs.openjdk.org/browse/JDK-8303742</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
This issue appears to be in all versions of CompletableFuture&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
CompletableFuture.orTimeout schedules a delayed task which is used to exceptionally complete the future with a TimeoutException if it has not otherwise completed before the timeout expires. If the future completes before the timeout the delayed task is canceled and removed from the delayed executors queue. The bug is that this only occurs if the future was completed non-exceptionally, when completed exceptionally the delayed task is not cancelled and its memory is thus retained until the timeout even though it will no longer serve any purpose. Given that timeouts should be significantly longer than expected completion times this leak could be non-negligible if exceptional completions occur frequently.&lt;br/&gt;
&lt;br/&gt;
The issue is in CompletableFuture.Canceller.accept, which has the following check:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ex == null &amp;amp;&amp;amp; f != null &amp;amp;&amp;amp; !f.isDone())&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f.cancel(false);&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;ex==null&amp;quot; appears to be a premature optimization and is the cause of the leak.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Create timeout based CompletableFutures in a loop and complete them exceptionally.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Should run forever with periodic GC but no OOME.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (true) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new CompletableFuture&amp;lt;&amp;gt;().orTimeout(1, TimeUnit.HOURS).completeExceptionally(new Exception());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
don&amp;#39;t use orTimeout :(&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5095630">JDK-8303742</key>
            <summary>CompletableFuture.orTimeout leaks if the future completes exceptionally</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vklang">Viktor Klang</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>additional-information-received</label>
                            <label>dcsaw</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 6 Mar 2023 15:34:23 -0800</created>
                <updated>Mon, 11 Nov 2024 12:48:23 -0800</updated>
                            <resolved>Mon, 20 Mar 2023 06:58:30 -0700</resolved>
                                    <version>18</version>
                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14716508" author="roboduke" created="Thu, 24 Oct 2024 11:16:39 -0700"  >[jdk17u-fix-request] Approval Request from Ben Taylor&lt;br/&gt;
Clean backport of a patch to prevent CompleteableFuture.orTimeout from leaking when a ScheduledFutureTask exits exceptionally. Passes the included test as well as jtreg tier 1 locally on linux x86_64</comment>
                            <comment id="14716271" author="roboduke" created="Wed, 23 Oct 2024 15:20:52 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3000&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3000&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-23 22:14:19 +0000</comment>
                            <comment id="14568094" author="dukebot" created="Mon, 20 Mar 2023 06:58:29 -0700"  >Changeset: ded6a813&lt;br/&gt;
Author:    Viktor Klang &amp;lt;&lt;a href=&apos;mailto:viktor.klang@oracle.com&apos;&gt;viktor.klang@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Jaikiran Pai &amp;lt;&lt;a href=&apos;mailto:jpai@openjdk.org&apos;&gt;jpai@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-03-20 13:55:47 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ded6a8131970ac2f7ae59716769e6f6bae3b809a&quot;&gt;https://git.openjdk.org/jdk/commit/ded6a8131970ac2f7ae59716769e6f6bae3b809a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14567473" author="roboduke" created="Thu, 16 Mar 2023 07:01:17 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13059&quot;&gt;https://git.openjdk.org/jdk/pull/13059&lt;/a&gt;&lt;br/&gt;
Date: 2023-03-16 13:37:10 +0000</comment>
                            <comment id="14566633" author="pnarayanaswa" created="Mon, 13 Mar 2023 22:23:13 -0700"  >Additional Information from submitter&lt;br/&gt;
=============================&lt;br/&gt;
I&amp;#39;d contended that System.gc() will not resolve the problem. The &amp;quot;leaked&amp;quot; tasks are not yet garbage, they are sitting in a delayed queue needlessly awaiting their timeout to expire so they can &amp;quot;do nothing&amp;quot;.  To put it another way if running the garbage collector was a solution, then the issue wouldn&amp;#39;t happen in the first place and the GC would be able to clean these out, but the issue is that they cannot become garbage.</comment>
                            <comment id="14565021" author="tongwan" created="Tue, 7 Mar 2023 03:59:20 -0800"  >By using System.gc(), the problem will be resolved.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5143579">JDK-8343954</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5096697">JDK-8304557</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102909" name="Main.java" size="323" author="tongwan" created="Tue, 7 Mar 2023 03:58:34 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30mvf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17352"><![CDATA[b15]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="215"><![CDATA[java.util.concurrent]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>