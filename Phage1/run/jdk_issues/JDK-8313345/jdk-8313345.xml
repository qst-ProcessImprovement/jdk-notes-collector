<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 09:46:45 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8313345] SuperWord fails due to CMove without matching Bool pack</title>
                <link>https://bugs.openjdk.org/browse/JDK-8313345</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>After &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306302&quot; title=&quot;C2 Superword fix: use VectorMaskCmp and VectorBlend instead of CMoveVF/D&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8306302&quot;&gt;&lt;strike&gt;JDK-8306302&lt;/strike&gt;&lt;/a&gt;, I&amp;#39;m encountering crashes on certain aarch64 systems:&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
# &amp;#xA0;Internal Error (../../src/hotspot/share/opto/superword.cpp:2788), pid=2695887, tid=2695905&lt;br/&gt;
# &amp;#xA0;assert(p_bol != nullptr) failed: CMove must have matching Bool pack&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (21.0.1) (slowdebug build 21.0.1-testing-builds.shipilev.net-openjdk-jdk21-b1-20230723)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 21.0.1-testing-builds.shipilev.net-openjdk-jdk21-b1-20230723, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V &amp;#xA0;[libjvm.so+0x14dc6ac] &amp;#xA0;SuperWord::output()+0xea8&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /home/ubuntu/mc/debug_server/core.2695887)&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
# &amp;#xA0; &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
--------------- &amp;#xA0;S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: -Xmx8G -Xms4G -XX:PrintIdealGraphLevel=3 -XX:PrintIdealGraphFile=superword_crash.xml paper.jar --nogui&lt;br/&gt;
&lt;br/&gt;
Host: sirywell-vps, AArch64, 4 cores, 23G, Ubuntu 20.04.6 LTS&lt;br/&gt;
Time: Wed Jul 26 19:30:34 2023 UTC elapsed time: 379.393956 seconds (0d 0h 6m 19s)&lt;br/&gt;
&lt;br/&gt;
--------------- &amp;#xA0;T H R E A D &amp;#xA0;---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000ffff1849a7b0): &amp;#xA0;JavaThread &amp;quot;C2 CompilerThread1&amp;quot; daemon [_thread_in_native, id=2695905, stack(0x0000ffff49d92000,0x0000ffff49f90000) (2040K)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2: 379394 12918 &amp;#xA0; &amp;#xA0; &amp;#xA0; 4 &amp;#xA0; &amp;#xA0; &amp;#xA0; net.minecraft.world.level.levelgen.DensityFunctions$PureTransformer::fillArray (40 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000ffff49d92000,0x0000ffff49f90000], &amp;#xA0;sp=0x0000ffff49f8a530, &amp;#xA0;free space=2017k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x14dc6ac] &amp;#xA0;SuperWord::output()+0xea8 &amp;#xA0;(superword.cpp:2788)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x14d427c] &amp;#xA0;SuperWord::SLP_extract()+0x358 &amp;#xA0;(superword.cpp:667)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x14d2934] &amp;#xA0;SuperWord::transform_loop(IdealLoopTree*, bool)+0x51c &amp;#xA0;(superword.cpp:178)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x10ceae0] &amp;#xA0;PhaseIdealLoop::build_and_optimize()+0x1724 &amp;#xA0;(loopnode.cpp:4661)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8eba44] &amp;#xA0;PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x148 &amp;#xA0;(loopnode.hpp:1124)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8ebc40] &amp;#xA0;PhaseIdealLoop::optimize(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x28 &amp;#xA0;(loopnode.hpp:1203)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8dc140] &amp;#xA0;Compile::optimize_loops(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x8c &amp;#xA0;(compile.cpp:2156)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8dce94] &amp;#xA0;Compile::Optimize()+0xbb4 &amp;#xA0;(compile.cpp:2386)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8d6348] &amp;#xA0;Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1138 &amp;#xA0;(compile.cpp:842)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x798278] &amp;#xA0;C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x14c &amp;#xA0;(c2compiler.cpp:118)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8f8388] &amp;#xA0;CompileBroker::invoke_compiler_on_method(CompileTask*)+0x768 &amp;#xA0;(compileBroker.cpp:2265)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x8f71c8] &amp;#xA0;CompileBroker::compiler_thread_loop()+0x3c4 &amp;#xA0;(compileBroker.cpp:1944)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x91c968] &amp;#xA0;CompilerThread::thread_entry(JavaThread*, JavaThread*)+0xa4 &amp;#xA0;(compilerThread.cpp:58)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xd7bea8] &amp;#xA0;JavaThread::thread_main_inner()+0x174 &amp;#xA0;(javaThread.cpp:719)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xd7bd28] &amp;#xA0;JavaThread::run()+0x1e4 &amp;#xA0;(javaThread.cpp:704)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x1548cb4] &amp;#xA0;Thread::call_run()+0x1c4 &amp;#xA0;(thread.cpp:217)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x1258b84] &amp;#xA0;thread_native_entry(Thread*)+0x194 &amp;#xA0;(os_linux.cpp:778)&lt;br/&gt;
C &amp;#xA0;[libpthread.so.0+0x7624] &amp;#xA0;start_thread+0x184&lt;br/&gt;
&lt;br/&gt;
I was able to reproduce this on OCI Ampere A1 Compute instances as well as on a Raspberry Pi 4 model B. It does not crash on Apple M1.&lt;br/&gt;
&lt;br/&gt;
While the crash above comes from a slowdebug build, normal builds (manually built from master at that point) fail with a SIGSEGV:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
# &amp;#xA0;SIGSEGV (0xb) at pc=0x0000ffff9847664c, pid=674132, tid=674405&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (22.0) (build 22-internal-adhoc.ubuntu.jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (22-internal-adhoc.ubuntu.jdk, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V &amp;#xA0;[libjvm.so+0xd5664c] &amp;#xA0;SuperWord::vector_opd(Node_List*, int)+0x24&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E&amp;quot; (or dumping to /home/ubuntu/mc/debug_server/core.674132)&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
# &amp;#xA0; &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
--------------- &amp;#xA0;S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: -Xmx8G -Xms4G -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Daikars.new.flags=true -Dusing.aikars.flags=&lt;a href=&quot;https://mcflags.emc.gs&quot;&gt;https://mcflags.emc.gs&lt;/a&gt; -Djava.net.preferIPv4Stack=true -XX:NativeMemoryTracking=summary paper.jar --nogui&lt;br/&gt;
&lt;br/&gt;
Host: AArch64, 4 cores, 23G, Ubuntu 20.04.6 LTS&lt;br/&gt;
Time: Sun Jul 23 07:26:29 2023 UTC elapsed time: 23.546695 seconds (0d 0h 0m 23s)&lt;br/&gt;
&lt;br/&gt;
--------------- &amp;#xA0;T H R E A D &amp;#xA0;---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000ffff207811d0): &amp;#xA0;JavaThread &amp;quot;C2 CompilerThread1&amp;quot; daemon [_thread_in_native, id=674405, stack(0x0000ffff601bf000,0x0000ffff603bd000) (2040K)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2: &amp;#xA0;23546 11581 % &amp;#xA0; &amp;#xA0; 4 &amp;#xA0; &amp;#xA0; &amp;#xA0; net.minecraft.world.level.levelgen.DensityFunctions$p::a @ 15 (40 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000ffff601bf000,0x0000ffff603bd000], &amp;#xA0;sp=0x0000ffff603b7fc0, &amp;#xA0;free space=2019k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xd5664c] &amp;#xA0;SuperWord::vector_opd(Node_List*, int)+0x24 &amp;#xA0;(superword.cpp:2873)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xd5f528] &amp;#xA0;SuperWord::output()+0xd88 &amp;#xA0;(superword.cpp:2652)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xa87f70] &amp;#xA0;PhaseIdealLoop::build_and_optimize()+0xe40 &amp;#xA0;(loopnode.cpp:4656)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x5be40c] &amp;#xA0;Compile::Optimize()+0x994 &amp;#xA0;(loopnode.hpp:1114)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x5bf90c] &amp;#xA0;Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0xbcc &amp;#xA0;(compile.cpp:850)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x4f5a48] &amp;#xA0;C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0xe0 &amp;#xA0;(c2compiler.cpp:119)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x5c505c] &amp;#xA0;CompileBroker::invoke_compiler_on_method(CompileTask*)+0x9b4 &amp;#xA0;(compileBroker.cpp:2265)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x5c7e0c] &amp;#xA0;CompileBroker::compiler_thread_loop()+0x57c &amp;#xA0;(compileBroker.cpp:1944)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0x829234] &amp;#xA0;JavaThread::thread_main_inner() [clone .part.0]+0xa4 &amp;#xA0;(javaThread.cpp:720)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xda6a60] &amp;#xA0;Thread::call_run()+0xa8 &amp;#xA0;(thread.cpp:217)&lt;br/&gt;
V &amp;#xA0;[libjvm.so+0xb97384] &amp;#xA0;thread_native_entry(Thread*)+0xdc &amp;#xA0;(os_linux.cpp:783)&lt;br/&gt;
C &amp;#xA0;[libpthread.so.0+0x7624] &amp;#xA0;start_thread+0x184&lt;br/&gt;
&lt;br/&gt;
siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x0000000000000010&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I sadly don&amp;#39;t have a proper reproducer other than starting up a fresh minecraft server. My previous attempts weren&amp;#39;t successful. I&amp;#39;ll attach IGV graphs from the method that failed to compile (fillArray.xml).&lt;br/&gt;
&lt;br/&gt;
Let me know if there is more information I can provide.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5106930">JDK-8313345</key>
            <summary>SuperWord fails due to CMove without matching Bool pack</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thartmann">Tobias Hartmann</assignee>
                                    <reporter username="hgreule">Hannes Greule</reporter>
                        <labels>
                            <label>c2</label>
                            <label>c2-superword</label>
                            <label>hgupdate-sync</label>
                            <label>jdk21-fix-request</label>
                            <label>jdk21-fix-yes</label>
                            <label>oracle-triage-17</label>
                            <label>oracle-triage-22</label>
                            <label>regression</label>
                    </labels>
                <created>Fri, 28 Jul 2023 10:56:57 -0700</created>
                <updated>Thu, 24 Aug 2023 02:08:11 -0700</updated>
                            <resolved>Tue, 8 Aug 2023 22:17:53 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14602808" author="roboduke" created="Tue, 8 Aug 2023 22:33:19 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21/pull/168&quot;&gt;https://git.openjdk.org/jdk21/pull/168&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-09 05:28:42 +0000</comment>
                            <comment id="14602806" author="dukebot" created="Tue, 8 Aug 2023 22:17:52 -0700"  >Changeset: d3b578f1&lt;br/&gt;
Author:    Tobias Hartmann &amp;lt;&lt;a href=&apos;mailto:thartmann@openjdk.org&apos;&gt;thartmann@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-09 05:16:02 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/d3b578f1c9d296ce8f99c70069df886e9f2dbef9&quot;&gt;https://git.openjdk.org/jdk/commit/d3b578f1c9d296ce8f99c70069df886e9f2dbef9&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14602771" author="kvn" created="Tue, 8 Aug 2023 15:39:08 -0700"  >Fix Request for JDK 21 approved.</comment>
                            <comment id="14602644" author="thartmann" created="Tue, 8 Aug 2023 07:45:03 -0700"  >Fix Request (JDK 21):&lt;br/&gt;
This patch fixes a regression in C2&amp;#39;s superword analysis in JDK 21 that leads to a VM crash. Since it occurs with Minecraft, it&amp;#39;s likely to also affect other Java applications. The fix is low risk because it&amp;#39;s a simple bailout from the superword optimization. Tested up to tier6 + stress jobs (still running).</comment>
                            <comment id="14602549" author="roboduke" created="Tue, 8 Aug 2023 03:54:58 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15189&quot;&gt;https://git.openjdk.org/jdk/pull/15189&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-08 10:50:19 +0000</comment>
                            <comment id="14602548" author="thartmann" created="Tue, 8 Aug 2023 03:53:46 -0700"  >Workaround: -XX:ConditionalMoveLimit=0</comment>
                            <comment id="14602540" author="thartmann" created="Tue, 8 Aug 2023 03:25:09 -0700"  >I can reproduce the issue on AArch64 without any flags. On x64, we bail out in PhaseIdealLoop::conditional_move because the cost computed via Matcher::float_cmove_cost() is always set to ConditionalMoveLimit:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/055b4b426cbc56d97e82219f3dd3aba1ebf977e4/src/hotspot/cpu/x86/matcher_x86.hpp#L81&quot;&gt;https://github.com/openjdk/jdk/blob/055b4b426cbc56d97e82219f3dd3aba1ebf977e4/src/hotspot/cpu/x86/matcher_x86.hpp#L81&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
But on AArch64, it&amp;#39;s set to 0:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/055b4b426cbc56d97e82219f3dd3aba1ebf977e4/src/hotspot/cpu/aarch64/matcher_aarch64.hpp#L70&quot;&gt;https://github.com/openjdk/jdk/blob/055b4b426cbc56d97e82219f3dd3aba1ebf977e4/src/hotspot/cpu/aarch64/matcher_aarch64.hpp#L70&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
We can avoid the bailout on x64 by using -XX:+UseCMoveUnconditionally.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll send out a fix for review shortly. We need to get this in before RC on Thursday.</comment>
                            <comment id="14602173" author="thartmann" created="Sun, 6 Aug 2023 23:54:22 -0700"  >&amp;gt; The reason it only ran on Aarch64 machines for you is that there the flags &amp;quot;-XX:+UseVectorCmov -XX:+UseCMoveUnconditionally&amp;quot; are set by default.&lt;br/&gt;
&lt;br/&gt;
[~epeter] Both flags are off by default on all platforms, right?</comment>
                            <comment id="14602161" author="chagedorn" created="Sun, 6 Aug 2023 23:23:32 -0700"  >ILW = Crash in superword, observed with Minecraft server, use -XX:-UseSuperWord = HMM = P2</comment>
                            <comment id="14602160" author="chagedorn" created="Sun, 6 Aug 2023 23:15:16 -0700"  >[~hgreule] great work to extract a reproducer, thanks!</comment>
                            <comment id="14602081" author="JIRAUSER19821" created="Sun, 6 Aug 2023 07:14:37 -0700"  >I simplified the reproducer a bit more:&lt;br/&gt;
&lt;br/&gt;
./java -XX:CompileCommand=PrintCompilation,Reproducer2*::* -XX:CompileCommand=CompileOnly,Reproducer2*::fill -XX:-TieredCompilation -Xbatch -XX:+UseVectorCmov -XX:+UseCMoveUnconditionally -XX:+TraceSuperWord -XX:+TraceLoopOpts -XX:+PrintInlining Reproducer2.java</comment>
                            <comment id="14602044" author="JIRAUSER19821" created="Fri, 4 Aug 2023 16:25:12 -0700"  >./java -XX:CompileCommand=PrintCompilation,Reproducer*::* -XX:CompileCommand=CompileOnly,Reproducer*::fill -XX:-TieredCompilation -Xbatch -XX:+UseVectorCmov -XX:+UseCMoveUnconditionally -XX:+TraceSuperWord Reproducer.java&lt;br/&gt;
&lt;br/&gt;
It looks like the CMove merges the results of the mapSingle methods. We have two Records that implement the Fill interface. The two implementations are inlined bimorphically with a If/Region. The created diamond is then CMoved.&lt;br/&gt;
&lt;br/&gt;
We have a CmpP and Bool outside the loop that determines all CMoveD inside the loop. The CmpP compares the class of the record, and decides which inlined implementation of mapSingle to choose.</comment>
                            <comment id="14602043" author="JIRAUSER19821" created="Fri, 4 Aug 2023 16:00:46 -0700"  >[~hgreule] Thanks very much for the reproducer. I get the same failure on my x64 machine:&lt;br/&gt;
&lt;br/&gt;
./java -XX:CompileCommand=PrintCompilation,*::* -XX:+UseVectorCmov -XX:+UseCMoveUnconditionally Reproducer.java&lt;br/&gt;
&lt;br/&gt;
The reason it only ran on Aarch64 machines for you is that there the flags &amp;quot;-XX:+UseVectorCmov -XX:+UseCMoveUnconditionally&amp;quot; are set by default.&lt;br/&gt;
&lt;br/&gt;
Yes, I don&amp;#39;t need the flag output for  -XX:+TraceSuperWord, I can debug it myself. Thanks again for the work it took for the reproducer, that is a big help!</comment>
                            <comment id="14601963" author="JIRAUSER20802" created="Fri, 4 Aug 2023 09:50:55 -0700"  >[~epeter] I assume the -XX:+TraceSuperWord output from the original isn&amp;#39;t needed anymore? Please let me know if you need further information.</comment>
                            <comment id="14601962" author="JIRAUSER20802" created="Fri, 4 Aug 2023 09:49:45 -0700"  >Good news! I spent another few hours and actually got a reproducer! I attached the Reproducer.java file. This file reliably causes a JVM crash on the mentioned versions/platforms for me.</comment>
                            <comment id="14601784" author="JIRAUSER19821" created="Thu, 3 Aug 2023 16:05:40 -0700"  >[~hgreule] Could you run this with &amp;quot;-XX:+TraceSuperWord&amp;quot;? The log may get very long, so not sure if that is feasible.&lt;br/&gt;
&lt;br/&gt;
In the &amp;quot;fillArray.xml&amp;quot; I found this partial jasm code:&lt;br/&gt;
&lt;br/&gt;
0 fast_aload_0&lt;br/&gt;
1 invokeinterface&lt;br/&gt;
6 aload_1&lt;br/&gt;
7 aload_2&lt;br/&gt;
8 invokeinterface&lt;br/&gt;
13 iconst_0&lt;br/&gt;
14 istore_3&lt;br/&gt;
15 iload_3&lt;br/&gt;
16 aload_1&lt;br/&gt;
17 arraylength&lt;br/&gt;
18 if_icmpge&lt;br/&gt;
21 aload_1&lt;br/&gt;
22 iload_3&lt;br/&gt;
23 fast_aload_0&lt;br/&gt;
24 aload_1&lt;br/&gt;
25 iload_3&lt;br/&gt;
26 daload&lt;br/&gt;
27 invokeinterface&lt;br/&gt;
32 dastore&lt;br/&gt;
33 iinc&lt;br/&gt;
36 goto&lt;br/&gt;
39 return&lt;br/&gt;
&lt;br/&gt;
Is there a chance we could extract more details? For example it would be interesting to see what &amp;quot;27 invokeinterface&amp;quot; calls.</comment>
                            <comment id="14601783" author="JIRAUSER19821" created="Thu, 3 Aug 2023 15:59:29 -0700"  >I&amp;#39;m trying to guess a reproducer. So far no result. But I found this instead: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8313720&quot; title=&quot;C2 SuperWord: wrong result with -XX:+UseVectorCmov -XX:+UseCMoveUnconditionally&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8313720&quot;&gt;&lt;strike&gt;JDK-8313720&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14601665" author="JIRAUSER20802" created="Thu, 3 Aug 2023 06:16:29 -0700"  >I&amp;#39;m not experienced with the replay compilation, so I can&amp;#39;t be of any help there. If you want to run a Minecraft server to reproduce the issue, you need to:&lt;br/&gt;
1. Create a directory you want to work in.&lt;br/&gt;
2. Visit &lt;a href=&quot;https://www.minecraft.net/en-us/download/server&quot;&gt;https://www.minecraft.net/en-us/download/server&lt;/a&gt; and download the server jar into the directory created in step 1.&lt;br/&gt;
3. You need a file &amp;quot;eula.txt&amp;quot; in the same directory, with the content &amp;quot;eula=true&amp;quot; to agree to the eula (&lt;a href=&quot;https://www.minecraft.net/en-us/eula&quot;&gt;https://www.minecraft.net/en-us/eula&lt;/a&gt;).&lt;br/&gt;
4. Run the server jar with &amp;quot;java -jar server.jar&amp;quot;.&lt;br/&gt;
5. The server should start now and crash after a while (it might take multiple minutes when using a slowdebug build to get to the point where it crashes)&lt;br/&gt;
&lt;br/&gt;
Note 1: If you want to rerun the server, you first have to delete the &amp;quot;world&amp;quot; directory that was created before. Otherwise, the relevant code won&amp;#39;t be called during the startup.&lt;br/&gt;
Note 2: The crash in that case might differ from my crashes to some extent due to obfuscation (dhe$p::a instead of net.minecraft.world.level.levelgen.DensityFunctions$p::a).&lt;br/&gt;
Note 3: As this seems to be heavily CPU specific, here is the /proc/cpuinfo (omitted the other identical cores) of the OCI instance:&lt;br/&gt;
processor       : 0&lt;br/&gt;
BogoMIPS        : 50.00&lt;br/&gt;
Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm lrcpc dcpop asimddp ssbs&lt;br/&gt;
CPU implementer : 0x41&lt;br/&gt;
CPU architecture: 8&lt;br/&gt;
CPU variant     : 0x3&lt;br/&gt;
CPU part        : 0xd0c&lt;br/&gt;
CPU revision    : 1&lt;br/&gt;
&lt;br/&gt;
as well as  the Raspberry Pi:&lt;br/&gt;
&lt;br/&gt;
processor       : 0&lt;br/&gt;
BogoMIPS        : 108.00&lt;br/&gt;
Features        : fp asimd evtstrm crc32 cpuid&lt;br/&gt;
CPU implementer : 0x41&lt;br/&gt;
CPU architecture: 8&lt;br/&gt;
CPU variant     : 0x0&lt;br/&gt;
CPU part        : 0xd08&lt;br/&gt;
CPU revision    : 3&lt;br/&gt;
&lt;br/&gt;
If there is any other way I can help, please let me know.</comment>
                            <comment id="14601631" author="chagedorn" created="Thu, 3 Aug 2023 04:53:28 -0700"  >I was not able to reproduce this with replay compilation due to other failures during replay compilation. [~hgreule] could you share the steps you tried to reliably reproduce this?</comment>
                            <comment id="14601444" author="JIRAUSER20802" created="Wed, 2 Aug 2023 11:43:56 -0700"  >Officially, the Minecraft server software is only provided obfuscated. If you want to dig through (decompiled, remapped) code, there are several tools, e.g. &lt;a href=&quot;https://github.com/PaperMC/mache&quot;&gt;https://github.com/PaperMC/mache&lt;/a&gt; (this seems to work for me), or &lt;a href=&quot;https://github.com/SpongePowered/VanillaGradle&quot;&gt;https://github.com/SpongePowered/VanillaGradle&lt;/a&gt; (I didn&amp;#39;t get that running). &lt;br/&gt;
&lt;br/&gt;
That&amp;#39;s all far from perfect, but I still wasn&amp;#39;t successful trying to reduce the code to something smaller that can be shared easily.</comment>
                            <comment id="14601396" author="thartmann" created="Wed, 2 Aug 2023 07:07:15 -0700"  >Thanks. I would also need the net/minecraft/world/level/levelgen/DensityFunctions class. Is that publicly available somewhere?</comment>
                            <comment id="14601134" author="thartmann" created="Wed, 2 Aug 2023 03:47:30 -0700"  >[~hgreule] could you please share the hs_err* and replay_pid* files?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5107692">JDK-8313999</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5108207">JDK-8314429</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5098743">JDK-8306302</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="105019" name="Reproducer.java" size="1145" author="hgreule" created="Fri, 4 Aug 2023 09:48:01 -0700"/>
                            <attachment id="105022" name="Reproducer2.java" size="722" author="epeter" created="Sun, 6 Aug 2023 07:13:58 -0700"/>
                            <attachment id="104902" name="fillArray.xml" size="1316475" author="hgreule" created="Fri, 28 Jul 2023 10:33:02 -0700"/>
                            <attachment id="104939" name="hs_err_pid2695887.log" size="227809" author="hgreule" created="Wed, 2 Aug 2023 06:40:03 -0700"/>
                            <attachment id="104940" name="replay_pid2695887.log" size="2034408" author="hgreule" created="Wed, 2 Aug 2023 06:40:25 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17695"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32jkz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>