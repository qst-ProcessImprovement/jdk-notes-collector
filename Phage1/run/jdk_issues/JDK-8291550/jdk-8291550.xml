<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 14:03:10 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8291550] RISC-V: jdk uses misaligned memory access when AvoidUnalignedAccess enabled</title>
                <link>https://bugs.openjdk.org/browse/JDK-8291550</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I have tried riscv builds of jdk on risc-v core ( running on fpga) without misaligned memory access support and without misaligned access emulation support in m-mode.&lt;br/&gt;
I have seen few errors ( SIG_ILL, ILL_ILLTRP), first one is in MacroAssembler::stop()&lt;br/&gt;
&lt;br/&gt;
void MacroAssembler::stop(const char* msg) {&lt;br/&gt;
&amp;nbsp;BLOCK_COMMENT(msg);&lt;br/&gt;
&amp;nbsp;illegal_instruction(Assembler::csr::time);&lt;br/&gt;
&amp;nbsp;emit_int64((uintptr_t)msg);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
the issue happens in inlined emit_int64. it&amp;#39;s code:&lt;br/&gt;
&amp;nbsp;void emit_int64( int64_t x)  { *((int64_t*) end()) = x; set_end(end() + sizeof(int64_t)); }&lt;br/&gt;
&lt;br/&gt;
but the end() pointer is shared between multiple methods, like emit_int32, emit_int8, and non of them cares about natural type alignment, for example:&lt;br/&gt;
&amp;nbsp;void emit_int32(int32_t x) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;address curr = end();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;*((int32_t*) curr) = x;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;set_end(curr + sizeof(int32_t));&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;void emit_int8(int8_t x1) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;address curr = end();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;*((int8_t*)  curr++) = x1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;set_end(curr);&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
I have worked around this issue by replacing one emit_int64 by two emit_int32 ( on lower and upper parts of msg ptr). It allowed me to pass this error, then next one appeared. &lt;br/&gt;
In templateInterpreter, in code generated for putStatic:&lt;br/&gt;
it has multiple entrance headers ( for stack setup) and one of them uses misaligned access ( lhu a3, 1(s6); it loads 16-bit value from address s6+1; where s6 is a pointer with even value).&lt;br/&gt;
&lt;br/&gt;
0x3f89d033c0:  ff8a0a13          addi          s4,s4,-8&lt;br/&gt;
0x3f89d033c4:  00aa3023          sd            a0,0(s4)&lt;br/&gt;
0x3f89d033c8:  0380006f          j             56                              # 0x3f89d03400&lt;br/&gt;
0x3f89d033cc:  ff8a0a13          addi          s4,s4,-8&lt;br/&gt;
0x3f89d033d0:  00aa2027          fsw           fa0,0(s4)&lt;br/&gt;
0x3f89d033d4:  02c0006f          j             44                              # 0x3f89d03400&lt;br/&gt;
0x3f89d033d8:  ff0a0a13          addi          s4,s4,-16&lt;br/&gt;
0x3f89d033dc:  00aa3027          fsd           fa0,0(s4)&lt;br/&gt;
0x3f89d033e0:  0200006f          j             32                              # 0x3f89d03400&lt;br/&gt;
0x3f89d033e4:  ff0a0a13          addi          s4,s4,-16&lt;br/&gt;
0x3f89d033e8:  000a3423          sd            zero,8(s4)&lt;br/&gt;
0x3f89d033ec:  00aa3023          sd            a0,0(s4)&lt;br/&gt;
0x3f89d033f0:  0100006f          j             16                              # 0x3f89d03400&lt;br/&gt;
0x3f89d033f4:  ff8a0a13          addi          s4,s4,-8&lt;br/&gt;
0x3f89d033f8:  0005053b          addw          a0,a0,zero&lt;br/&gt;
0x3f89d033fc:  00aa3023          sd            a0,0(s4)&lt;br/&gt;
0x3f89d03400:  001b5683          lhu           a3,1(s6). &amp;lt;&#8212; MISALLIGNED ACCESS&lt;br/&gt;
0x3f89d03404:  00569613          slli          a2,a3,5&lt;br/&gt;
0x3f89d03408:  00cd0633          add           a2,s10,a2&lt;br/&gt;
0x3f89d0340c:  02860493          addi          s1,a2,40&lt;br/&gt;
0x3f89d03410:  00048493          mv            s1,s1&lt;br/&gt;
0x3f89d03414:  0ff0000f          fence         iorw,iorw&lt;br/&gt;
0x3f89d03418:  0004e483          lwu           s1,0(s1)&lt;br/&gt;
0x3f89d0341c:  0af0000f          fence         ir,iorw</description>
                <environment>&lt;p&gt;risc-v cpu core without misaligned memory access support&lt;/p&gt;</environment>
        <key id="5080590">JDK-8291550</key>
            <summary>RISC-V: jdk uses misaligned memory access when AvoidUnalignedAccess enabled</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vkempik">Vladimir Kempik</assignee>
                                    <reporter username="vkempik">Vladimir Kempik</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>oracle-triage-20</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Fri, 29 Jul 2022 03:08:43 -0700</created>
                <updated>Fri, 24 Jan 2025 04:47:35 -0800</updated>
                            <resolved>Sat, 13 May 2023 23:57:38 -0700</resolved>
                                    <version>19</version>
                    <version>20</version>
                    <version>21</version>
                                    <fixVersion>21</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14616477" author="roboduke" created="Fri, 6 Oct 2023 07:45:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/1852&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/1852&lt;/a&gt;&lt;br/&gt;
Date: 2023-10-06 12:22:20 +0000</comment>
                            <comment id="14616461" author="omikhaltcova" created="Fri, 6 Oct 2023 06:35:09 -0700"  >Fix request (17u) - will label after testing completed&lt;br/&gt;
&lt;br/&gt;
This described issue is observed on jdk17u as well. The patch is not clean, it required adoptation to jdk17u, but the difference with the original one is not significant. All manual changes were described in PR. Tested with tier1 on a RISC-V HiFive board successfully.</comment>
                            <comment id="14581384" author="dukebot" created="Sat, 13 May 2023 23:57:36 -0700"  >Changeset: 37093441&lt;br/&gt;
Author:    Vladimir Kempik &amp;lt;&lt;a href=&apos;mailto:vkempik@openjdk.org&apos;&gt;vkempik@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-05-14 06:56:03 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/37093441661c26f333aac00d16aea00c3341d314&quot;&gt;https://git.openjdk.org/jdk/commit/37093441661c26f333aac00d16aea00c3341d314&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14576718" author="roboduke" created="Tue, 25 Apr 2023 08:47:20 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/13645&quot;&gt;https://git.openjdk.org/jdk/pull/13645&lt;/a&gt;&lt;br/&gt;
Date: 2023-04-25 15:37:30 +0000</comment>
                            <comment id="14576699" author="vkempik" created="Tue, 25 Apr 2023 08:30:26 -0700"  >8305056 fixes issues in shared code, this bug is risc-v specific</comment>
                            <comment id="14514542" author="vkempik" created="Mon, 1 Aug 2022 13:27:07 -0700"  >why do you think so ?&lt;br/&gt;
Openjdk on riscv has option - AvoidUnalignedAccess which is enabled by default, and still jdk is not avoiding it properly.</comment>
                            <comment id="14514256" author="JIRAUSER19817" created="Sun, 31 Jul 2022 19:23:56 -0700"  >I suggest changing the title to &amp;quot;Unaligned accesses are undefined behaviours&amp;quot; and making the issue not specific to riscv</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5111939">JDK-8317702</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5097266">JDK-8305056</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5147778">JDK-8347489</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5102447">JDK-8309405</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="20300"><![CDATA[riscv]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2y38r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17433"><![CDATA[b23]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>