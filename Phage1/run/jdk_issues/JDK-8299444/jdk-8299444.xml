<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 15:17:48 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299444] java.util.Set.copyOf allocates needlessly for empty input collections</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299444</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>For non ImmutableCollections.AbstractImmutableSets the current copyOf-method allocates both a HashSet and subsequently an empty array when the input collection is empty.&lt;br/&gt;
&lt;br/&gt;
A check for isEmpty and returning the empty immutable Set should be just fine and avoid needless allocations.</description>
                <environment></environment>
        <key id="5090517">JDK-8299444</key>
            <summary>java.util.Set.copyOf allocates needlessly for empty input collections</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vklang">Viktor Klang</assignee>
                                    <reporter username="vklang">Viktor Klang</reporter>
                        <labels>
                            <label>noreg-hard</label>
                            <label>noreg-perf</label>
                    </labels>
                <created>Mon, 2 Jan 2023 02:24:36 -0800</created>
                <updated>Wed, 1 Feb 2023 22:46:41 -0800</updated>
                            <resolved>Thu, 26 Jan 2023 10:17:09 -0800</resolved>
                                                    <fixVersion>21</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14554779" author="dukebot" created="Thu, 26 Jan 2023 10:17:05 -0800"  >Changeset: a2a77033&lt;br/&gt;
Author:    Viktor Klang &amp;lt;&lt;a href=&apos;mailto:viktor.klang@oracle.com&apos;&gt;viktor.klang@oracle.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Stuart Marks &amp;lt;&lt;a href=&apos;mailto:smarks@openjdk.org&apos;&gt;smarks@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-01-26 18:15:56 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a2a7703370caf07afd88b5cfe44e1a78eed699e9&quot;&gt;https://git.openjdk.org/jdk/commit/a2a7703370caf07afd88b5cfe44e1a78eed699e9&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14548761" author="smarks" created="Wed, 4 Jan 2023 11:27:52 -0800"  >[~vklang] OK, thanks for considering the 1-case. I still think there is a possibility here, but I agree that handling the empty case is simple and correct.</comment>
                            <comment id="14548691" author="roboduke" created="Wed, 4 Jan 2023 06:52:20 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/11847&quot;&gt;https://git.openjdk.org/jdk/pull/11847&lt;/a&gt;&lt;br/&gt;
Date: 2023-01-04 14:41:20 +0000</comment>
                            <comment id="14548644" author="JIRAUSER20508" created="Wed, 4 Jan 2023 03:23:17 -0800"  >[~smarks]&lt;br/&gt;
&lt;br/&gt;
Thinking about this a bit more I think that it is not worth basing it off of toArray() as it could contain nulls when `array.length &amp;gt; 0`, which leads me to think that this is the smallest, correct, change is likely to be:&lt;br/&gt;
&lt;br/&gt;
static &amp;lt;E&amp;gt; Set&amp;lt;E&amp;gt; copyOf(Collection&amp;lt;? extends E&amp;gt; coll) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (coll instanceof ImmutableCollections.AbstractImmutableSet) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (Set&amp;lt;E&amp;gt;)coll;&lt;br/&gt;
+        } else if (coll.isEmpty()) {&lt;br/&gt;
+            return Set.of();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (Set&amp;lt;E&amp;gt;)Set.of(new HashSet&amp;lt;&amp;gt;(coll).toArray());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}</comment>
                            <comment id="14548625" author="JIRAUSER20508" created="Wed, 4 Jan 2023 02:39:14 -0800"  >[~smarks]&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll propose a fix which tries to be as optimal as possible for the 0..1 case.</comment>
                            <comment id="14548536" author="smarks" created="Tue, 3 Jan 2023 16:10:38 -0800"  >It might also be possible to have a special case if the argument has size 1. This could be done in a single method by calling arg.toArray(), which gets the size and contents at the same time. For the size zero and one cases this might result in an unnecessary array allocation, but it might be worth it to provide a faster path to the optimized zero- and one-sized set implementations.</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zrbf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17337"><![CDATA[b08]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="669"><![CDATA[java.util:collections]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>