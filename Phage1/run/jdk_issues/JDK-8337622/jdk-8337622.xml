<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Tue Sep 30 13:17:24 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8337622] IllegalArgumentException in java.lang.reflect.Field.get</title>
                <link>https://bugs.openjdk.org/browse/JDK-8337622</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>I am seeing errors like the following testing JDK 23 that do not occur with JDK 22.&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
Caused by: java.lang.IllegalArgumentException: Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class&lt;br/&gt;
	at java.base/jdk.internal.reflect.MethodHandleFieldAccessorImpl.newGetIllegalArgumentException(MethodHandleFieldAccessorImpl.java:86)&lt;br/&gt;
	at java.base/jdk.internal.reflect.MethodHandleObjectFieldAccessorImpl.get(MethodHandleObjectFieldAccessorImpl.java:61)&lt;br/&gt;
	at java.base/java.lang.reflect.Field.get(Field.java:444)&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
The symptoms look similar to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8301663&quot;&gt;https://bugs.openjdk.org/browse/JDK-8301663&lt;/a&gt; which was fixed in JDK 20, but testing the repro from that bug shows a regression between JDK 22 and JDK 23:&lt;br/&gt;
&lt;br/&gt;
import java.lang.reflect.Field;&lt;br/&gt;
public class C {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int count = 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; 100_000; ++i) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Field f = Class.class.getDeclaredField(&amp;quot;componentType&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f.setAccessible(true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object val = f.get(Runnable.class);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (IllegalArgumentException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count += 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(count);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
java -fullversion&lt;br/&gt;
openjdk full version &amp;quot;22.0.2+9-70&amp;quot;&lt;br/&gt;
java --add-opens java.base/java.lang=ALL-UNNAMED C&lt;br/&gt;
0&lt;br/&gt;
&lt;br/&gt;
java -fullversion&lt;br/&gt;
openjdk full version &amp;quot;23-ea+34-2361&amp;quot;&lt;br/&gt;
java --add-opens java.base/java.lang=ALL-UNNAMED C&lt;br/&gt;
18499</description>
                <environment></environment>
        <key id="5135713">JDK-8337622</key>
            <summary>IllegalArgumentException in java.lang.reflect.Field.get</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="coleenp">Coleen Phillimore</assignee>
                                    <reporter username="cushon">Liam Miller-Cushon</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>classloading</label>
                            <label>google-interest</label>
                            <label>jdk21u-critical-request</label>
                            <label>jdk21u-critical-yes</label>
                            <label>jdk23u-fix-SQE-ok</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>regression</label>
                    </labels>
                <created>Wed, 31 Jul 2024 17:36:10 -0700</created>
                <updated>Thu, 17 Oct 2024 10:55:55 -0700</updated>
                            <resolved>Mon, 12 Aug 2024 10:57:42 -0700</resolved>
                                    <version>21.0.5</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                                                                                                            <comments>
                            <comment id="14713152" author="roboduke" created="Tue, 15 Oct 2024 10:57:11 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/179&quot;&gt;https://git.openjdk.org/jdk23u/pull/179&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-15 17:49:38 +0000</comment>
                            <comment id="14713150" author="roboduke" created="Tue, 15 Oct 2024 10:54:17 -0700"  >[jdk23u-fix-request] Approval Request from Calvin Cheung&lt;br/&gt;
Clean backport. Fix was in JDK 24 and 21u. It should be in JDK 23u as well.</comment>
                            <comment id="14705221" author="coleenp" created="Mon, 16 Sep 2024 05:11:17 -0700"  >Yes, this should be backported to JDK 23 also because &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8333542&quot; title=&quot;Breakpoint in parallel code does not work&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8333542&quot;&gt;&lt;strike&gt;JDK-8333542&lt;/strike&gt;&lt;/a&gt; was backported to JDK 23.</comment>
                            <comment id="14705012" author="clanger" created="Sun, 15 Sep 2024 23:11:26 -0700"  >Why is this not backported to JDK23?</comment>
                            <comment id="14705013" author="clanger" created="Sun, 15 Sep 2024 23:11:26 -0700"  >Why is this not backported to JDK23?</comment>
                            <comment id="14704950" author="roboduke" created="Sat, 14 Sep 2024 12:56:11 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/454&quot;&gt;https://git.openjdk.org/jdk21u/pull/454&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-14 19:51:14 +0000</comment>
                            <comment id="14704949" author="goetz" created="Sat, 14 Sep 2024 12:50:44 -0700"  >Critical fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I want to backport this to 21.0.5 as we backported &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8333542&quot; title=&quot;Breakpoint in parallel code does not work&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8333542&quot;&gt;&lt;strike&gt;JDK-8333542&lt;/strike&gt;&lt;/a&gt; to this release, too.  The test reproduces the error well, so I think it is better to add this late then to go without fixing this.&lt;br/&gt;
Medium risk as it is a simple change but in a central component. &lt;br/&gt;
Clean backport. &lt;br/&gt;
Test passes and fails without the fix. SAP nightly testing passed.&lt;br/&gt;
</comment>
                            <comment id="14704948" author="goetz" created="Sat, 14 Sep 2024 12:34:22 -0700"  >[~coffeys], [~ccheung], shoudn&amp;#39;t this go to 23, too?</comment>
                            <comment id="14697672" author="dukebot" created="Mon, 12 Aug 2024 10:57:41 -0700"  >Changeset: 41e31d6b&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Coleen Phillimore &amp;lt;&lt;a href=&apos;mailto:coleenp@openjdk.org&apos;&gt;coleenp@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-08-12 17:56:46 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/41e31d6b0ae00d70b6fb20c89318fde2bc605edb&quot;&gt;https://git.openjdk.org/jdk/commit/41e31d6b0ae00d70b6fb20c89318fde2bc605edb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14696803" author="coleenp" created="Wed, 7 Aug 2024 16:17:37 -0700"  >ILW = M (test failure/exception not crash) L (Field.get() of this field not likely) L (workaround: don&amp;#39;t get this field for non-array types) = P4</comment>
                            <comment id="14696760" author="roboduke" created="Wed, 7 Aug 2024 11:38:55 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20498&quot;&gt;https://git.openjdk.org/jdk/pull/20498&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-07 18:32:18 +0000</comment>
                            <comment id="14696459" author="coleenp" created="Tue, 6 Aug 2024 19:59:24 -0700"  >&amp;gt; That said, why do we use this field for the init lock? I would (naively?) have expected the init lock to be an oop field in instanceKlass, not a field of the mirror. EDIT: I guess to save space.&lt;br/&gt;
&lt;br/&gt;
Yes, back then we cared about the space so we reused this oop field.  The fix is to give it its own injected field.  It&amp;#39;s a field in the mirror and not the InstanceKlass to save having another GC root.&lt;br/&gt;
&lt;br/&gt;
Thank you for commenting on this bug.  I didn&amp;#39;t know if this is something Java programmers do and expect to work.  I agree then it shouldn&amp;#39;t be a P2.  I asked for it to be deferred from fixing in JDK 23, but if we ILW it to MLL then it&amp;#39;s a P4.  It is a regression though.</comment>
                            <comment id="14696402" author="coleenp" created="Tue, 6 Aug 2024 13:42:51 -0700"  >Defer Request:  This problem exists in JDK 11 and 17 also, but in JDK 20 caused an IllegalArgumentException because of the new reflection.  The bug is a regression because we backed out a fix that also fixed this problem in order to fix JVMTI.  The additional fix for this is relatively small, but may have other unintended consequences.  The likelihood of someone reflecting on the componentType field for a Class and not an array where it would have a valid value seems small.</comment>
                            <comment id="14696401" author="coleenp" created="Tue, 6 Aug 2024 13:33:15 -0700"  >JDK 11 and 17 don&amp;#39;t throw IllegalArgumentException although they do print the value of the componentType field as an array, which is the type of the internal lock:&lt;br/&gt;
&lt;br/&gt;
java --add-opens java.base/java.lang=ALL-UNNAMED ComponentTypeFieldTest &lt;br/&gt;
val is [&lt;a href=&apos;mailto:I@27c170f0&apos;&gt;I@27c170f0&lt;/a&gt;&lt;br/&gt;
0&lt;br/&gt;
&lt;br/&gt;
In JDK 20, from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8301663&quot; title=&quot;java.lang.reflect.Field.get(Runnable.class) throws IllegalArgumentException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8301663&quot;&gt;&lt;strike&gt;JDK-8301663&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;br/&gt;
&amp;gt; The `componentType` of Runnable.class is an int array and hence ClassCastException was thrown when VarHandle is used to get the field value.&lt;br/&gt;
</comment>
                            <comment id="14696400" author="coleenp" created="Tue, 6 Aug 2024 13:26:50 -0700"  >This is broken in JDK 11 and 17 also.  The VM shared the componentType field with an internal class initialization field that it used for locking.  I had to put this internal lock back because we need to hold the lock for JVMTI class prepare events. We should release note this for JDK 23.&lt;br/&gt;
&lt;br/&gt;
We can backport a simple fix, and fix in JDK 23.01 if it&amp;#39;s important enough.</comment>
                            <comment id="14696372" author="lfoltan" created="Tue, 6 Aug 2024 11:14:05 -0700"  >RT Triage: ILW = HML = P2</comment>
                            <comment id="14695054" author="JIRAUSER20213" created="Thu, 1 Aug 2024 00:49:06 -0700"  >Given the bisect, I suspect this is hotspot related so moving component to &amp;quot;hotspot&amp;quot;.  Let me know if this is not correct.</comment>
                            <comment id="14694988" author="cushon" created="Wed, 31 Jul 2024 18:24:01 -0700"  >This bisects to the fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8333542&quot;&gt;https://bugs.openjdk.org/browse/JDK-8333542&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Discussion in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8333542&quot;&gt;https://bugs.openjdk.org/browse/JDK-8333542&lt;/a&gt; mentions &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8288064,&quot;&gt;https://bugs.openjdk.org/browse/JDK-8288064,&lt;/a&gt; which fixed the original report of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8301663&quot;&gt;https://bugs.openjdk.org/browse/JDK-8301663&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5137974">JDK-8339337</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139258">JDK-8340281</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139331">JDK-8340350</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5141118">JDK-8341872</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5140323">JDK-8341343</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5131012">JDK-8333542</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5093034">JDK-8301663</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5136275">JDK-8337956</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37ej7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>